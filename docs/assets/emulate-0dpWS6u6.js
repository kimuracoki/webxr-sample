var RC=Object.defineProperty;var CC=(n,e,t)=>e in n?RC(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t;var Ge=(n,e,t)=>CC(n,typeof e!="symbol"?e+"":e,t);import{P as PC,g as LC,S as IC,c as DC,o as ss,a as tx,r as pl,E as Rn,V as Qe,M as bo,Q as un,b as nx,d as NC,O as zT,L as BT,B as HT,F as VT,e as GT,G as ca,f as UC,h as $i,i as Hn,C as Pd,j as Ld,k as ym,T as ix,l as OC,m as Bl,_ as qf}from"./index-DHiFYHBw.js";function FC(n,e,t){if(!(e instanceof globalThis.MouseEvent))return t.set(0,0);const{width:i,height:r,top:s,left:l}=n.getBoundingClientRect(),c=e.clientX-l,u=e.clientY-s;return t.set(c/i*2-1,-(u/r)*2+1)}function kC(n,e,t,i){return zC(n,typeof e=="function"?e:()=>e,t,FC.bind(null,n),n.setPointerCapture.bind(n),n.releasePointerCapture.bind(n),{pointerTypePrefix:"screen-",...i})}function zC(n,e,t,i,r,s,l={}){const c=(l==null?void 0:l.forwardPointerCapture)??!0,u=new Map,d=l.pointerTypePrefix??"forward-",h=(D,V)=>{let R=u.get(D.pointerId);return R!=null||(R=new PC(LC(),`${d}${D.pointerType}`,D.pointerState,new IC((T,O)=>(i(T,O),e()),l),e,void 0,c?r.bind(null,D.pointerId):void 0,c?s.bind(null,D.pointerId):void 0,l),V!="move"&&V!="wheel"&&(R.setIntersection(R.computeIntersection("pointer",t,D)),R.commit(D,!1)),u.set(D.pointerId,R)),R},m=new Map,p=new Map,x=[],y=[],S=(D,V,R)=>{switch(D){case"move":R.move(t,V);return;case"wheel":R.wheel(t,V);return;case"cancel":R.cancel(V);return;case"down":if(!gS(V))return;R.down(V);return;case"up":if(!gS(V))return;R.up(V);return;case"exit":p.delete(R),m.delete(R),R.exit(V);return}},v=(D,V)=>{const R=h(V,D);D==="move"&&p.set(R,V),D==="wheel"&&m.set(R,V),l.batchEvents??!0?y.push({type:D,event:V}):S(D,V,R)},g=v.bind(null,"move"),P=v.bind(null,"cancel"),w=v.bind(null,"down"),C=v.bind(null,"up"),z=v.bind(null,"wheel"),L=v.bind(null,"exit");return n.addEventListener("pointermove",g),n.addEventListener("pointercancel",P),n.addEventListener("pointerdown",w),n.addEventListener("pointerup",C),n.addEventListener("wheel",z),n.addEventListener("pointerleave",L),{destroy(){n.removeEventListener("pointermove",g),n.removeEventListener("pointercancel",P),n.removeEventListener("pointerdown",w),n.removeEventListener("pointerup",C),n.removeEventListener("wheel",z),n.removeEventListener("pointerleave",L),p.clear(),m.clear()},update(){const D=y.length;for(let V=0;V<D;V++){const{type:R,event:T}=y[V],O=h(T,R);if(R==="move"&&(x.push(O),p.get(O)!=T)){O.emitMove(T);continue}if(R==="wheel"&&m.get(O)!=T){O.emitWheel(T);continue}S(R,T,O)}if(y.length=0,l.intersectEveryFrame??!1)for(const[V,R]of p.entries())x.includes(V)||V.move(t,R);x.length=0}}}function gS(n){return n.button!=null}const BC=n=>n;function HC(n,e=BC){const t=ss.useSyncExternalStore(n.subscribe,()=>e(n.getState()),()=>e(n.getInitialState()));return ss.useDebugValue(t),t}const vS=n=>{const e=DC(n),t=i=>HC(e,i);return Object.assign(t,e),t},rx=n=>n?vS(n):vS;var WT=1e-6,Xi=typeof Float32Array<"u"?Float32Array:Array;Math.hypot||(Math.hypot=function(){for(var n=0,e=arguments.length;e--;)n+=arguments[e]*arguments[e];return Math.sqrt(n)});function VC(){var n=new Xi(9);return Xi!=Float32Array&&(n[1]=0,n[2]=0,n[3]=0,n[5]=0,n[6]=0,n[7]=0),n[0]=1,n[4]=1,n[8]=1,n}function ii(){var n=new Xi(16);return Xi!=Float32Array&&(n[1]=0,n[2]=0,n[3]=0,n[4]=0,n[6]=0,n[7]=0,n[8]=0,n[9]=0,n[11]=0,n[12]=0,n[13]=0,n[14]=0),n[0]=1,n[5]=1,n[10]=1,n[15]=1,n}function GC(n){var e=new Xi(16);return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],e}function $T(n,e){return n[0]=e[0],n[1]=e[1],n[2]=e[2],n[3]=e[3],n[4]=e[4],n[5]=e[5],n[6]=e[6],n[7]=e[7],n[8]=e[8],n[9]=e[9],n[10]=e[10],n[11]=e[11],n[12]=e[12],n[13]=e[13],n[14]=e[14],n[15]=e[15],n}function WC(n){return n[0]=1,n[1]=0,n[2]=0,n[3]=0,n[4]=0,n[5]=1,n[6]=0,n[7]=0,n[8]=0,n[9]=0,n[10]=1,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,n}function XT(n,e){var t=e[0],i=e[1],r=e[2],s=e[3],l=e[4],c=e[5],u=e[6],d=e[7],h=e[8],m=e[9],p=e[10],x=e[11],y=e[12],S=e[13],v=e[14],g=e[15],P=t*c-i*l,w=t*u-r*l,C=t*d-s*l,z=i*u-r*c,L=i*d-s*c,D=r*d-s*u,V=h*S-m*y,R=h*v-p*y,T=h*g-x*y,O=m*v-p*S,Z=m*g-x*S,W=p*g-x*v,K=P*W-w*Z+C*O+z*T-L*R+D*V;return K?(K=1/K,n[0]=(c*W-u*Z+d*O)*K,n[1]=(r*Z-i*W-s*O)*K,n[2]=(S*D-v*L+g*z)*K,n[3]=(p*L-m*D-x*z)*K,n[4]=(u*T-l*W-d*R)*K,n[5]=(t*W-r*T+s*R)*K,n[6]=(v*C-y*D-g*w)*K,n[7]=(h*D-p*C+x*w)*K,n[8]=(l*Z-c*T+d*V)*K,n[9]=(i*T-t*Z-s*V)*K,n[10]=(y*L-S*C+g*P)*K,n[11]=(m*C-h*L-x*P)*K,n[12]=(c*R-l*O-u*V)*K,n[13]=(t*O-i*R+r*V)*K,n[14]=(S*w-y*z-v*P)*K,n[15]=(h*z-m*w+p*P)*K,n):null}function Km(n,e,t){var i=e[0],r=e[1],s=e[2],l=e[3],c=e[4],u=e[5],d=e[6],h=e[7],m=e[8],p=e[9],x=e[10],y=e[11],S=e[12],v=e[13],g=e[14],P=e[15],w=t[0],C=t[1],z=t[2],L=t[3];return n[0]=w*i+C*c+z*m+L*S,n[1]=w*r+C*u+z*p+L*v,n[2]=w*s+C*d+z*x+L*g,n[3]=w*l+C*h+z*y+L*P,w=t[4],C=t[5],z=t[6],L=t[7],n[4]=w*i+C*c+z*m+L*S,n[5]=w*r+C*u+z*p+L*v,n[6]=w*s+C*d+z*x+L*g,n[7]=w*l+C*h+z*y+L*P,w=t[8],C=t[9],z=t[10],L=t[11],n[8]=w*i+C*c+z*m+L*S,n[9]=w*r+C*u+z*p+L*v,n[10]=w*s+C*d+z*x+L*g,n[11]=w*l+C*h+z*y+L*P,w=t[12],C=t[13],z=t[14],L=t[15],n[12]=w*i+C*c+z*m+L*S,n[13]=w*r+C*u+z*p+L*v,n[14]=w*s+C*d+z*x+L*g,n[15]=w*l+C*h+z*y+L*P,n}function Lu(n,e){return n[0]=1,n[1]=0,n[2]=0,n[3]=0,n[4]=0,n[5]=1,n[6]=0,n[7]=0,n[8]=0,n[9]=0,n[10]=1,n[11]=0,n[12]=e[0],n[13]=e[1],n[14]=e[2],n[15]=1,n}function _S(n,e,t){var i=t[0],r=t[1],s=t[2],l=Math.hypot(i,r,s),c,u,d;return l<WT?null:(l=1/l,i*=l,r*=l,s*=l,c=Math.sin(e),u=Math.cos(e),d=1-u,n[0]=i*i*d+u,n[1]=r*i*d+s*c,n[2]=s*i*d-r*c,n[3]=0,n[4]=i*r*d-s*c,n[5]=r*r*d+u,n[6]=s*r*d+i*c,n[7]=0,n[8]=i*s*d+r*c,n[9]=r*s*d-i*c,n[10]=s*s*d+u,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,n)}function Hd(n,e,t){var i=e[0],r=e[1],s=e[2],l=e[3],c=i+i,u=r+r,d=s+s,h=i*c,m=i*u,p=i*d,x=r*u,y=r*d,S=s*d,v=l*c,g=l*u,P=l*d;return n[0]=1-(x+S),n[1]=m+P,n[2]=p-g,n[3]=0,n[4]=m-P,n[5]=1-(h+S),n[6]=y+v,n[7]=0,n[8]=p+g,n[9]=y-v,n[10]=1-(h+x),n[11]=0,n[12]=t[0],n[13]=t[1],n[14]=t[2],n[15]=1,n}function Id(n,e){return n[0]=e[12],n[1]=e[13],n[2]=e[14],n}function n_(n,e){var t=e[0],i=e[1],r=e[2],s=e[4],l=e[5],c=e[6],u=e[8],d=e[9],h=e[10];return n[0]=Math.hypot(t,i,r),n[1]=Math.hypot(s,l,c),n[2]=Math.hypot(u,d,h),n}function Sm(n,e){var t=new Xi(3);n_(t,e);var i=1/t[0],r=1/t[1],s=1/t[2],l=e[0]*i,c=e[1]*r,u=e[2]*s,d=e[4]*i,h=e[5]*r,m=e[6]*s,p=e[8]*i,x=e[9]*r,y=e[10]*s,S=l+h+y,v=0;return S>0?(v=Math.sqrt(S+1)*2,n[3]=.25*v,n[0]=(m-x)/v,n[1]=(p-u)/v,n[2]=(c-d)/v):l>h&&l>y?(v=Math.sqrt(1+l-h-y)*2,n[3]=(m-x)/v,n[0]=.25*v,n[1]=(c+d)/v,n[2]=(p+u)/v):h>y?(v=Math.sqrt(1+h-l-y)*2,n[3]=(p-u)/v,n[0]=(c+d)/v,n[1]=.25*v,n[2]=(m+x)/v):(v=Math.sqrt(1+y-l-h)*2,n[3]=(c-d)/v,n[0]=(p+u)/v,n[1]=(m+x)/v,n[2]=.25*v),n}function $C(n,e,t,i){var r=e[0],s=e[1],l=e[2],c=e[3],u=r+r,d=s+s,h=l+l,m=r*u,p=r*d,x=r*h,y=s*d,S=s*h,v=l*h,g=c*u,P=c*d,w=c*h,C=i[0],z=i[1],L=i[2];return n[0]=(1-(y+v))*C,n[1]=(p+w)*C,n[2]=(x-P)*C,n[3]=0,n[4]=(p-w)*z,n[5]=(1-(m+v))*z,n[6]=(S+g)*z,n[7]=0,n[8]=(x+P)*L,n[9]=(S-g)*L,n[10]=(1-(m+y))*L,n[11]=0,n[12]=t[0],n[13]=t[1],n[14]=t[2],n[15]=1,n}function XC(n,e,t,i,r){var s=1/Math.tan(e/2),l;return n[0]=s/t,n[1]=0,n[2]=0,n[3]=0,n[4]=0,n[5]=s,n[6]=0,n[7]=0,n[8]=0,n[9]=0,n[11]=-1,n[12]=0,n[13]=0,n[15]=0,r!=null&&r!==1/0?(l=1/(i-r),n[10]=(r+i)*l,n[14]=2*r*i*l):(n[10]=-1,n[14]=-2*i),n}var xS=XC;function ni(){var n=new Xi(3);return Xi!=Float32Array&&(n[0]=0,n[1]=0,n[2]=0),n}function qC(n){var e=n[0],t=n[1],i=n[2];return Math.hypot(e,t,i)}function ts(n,e,t){var i=new Xi(3);return i[0]=n,i[1]=e,i[2]=t,i}function t1(n,e){return n[0]=e[0],n[1]=e[1],n[2]=e[2],n}function _d(n,e,t,i){return n[0]=e,n[1]=t,n[2]=i,n}function jC(n,e,t){return n[0]=e[0]+t[0],n[1]=e[1]+t[1],n[2]=e[2]+t[2],n}function qT(n,e){var t=e[0],i=e[1],r=e[2],s=t*t+i*i+r*r;return s>0&&(s=1/Math.sqrt(s)),n[0]=e[0]*s,n[1]=e[1]*s,n[2]=e[2]*s,n}function jT(n,e){return n[0]*e[0]+n[1]*e[1]+n[2]*e[2]}function rm(n,e,t){var i=e[0],r=e[1],s=e[2],l=t[0],c=t[1],u=t[2];return n[0]=r*u-s*c,n[1]=s*l-i*u,n[2]=i*c-r*l,n}function i_(n,e,t,i){var r=e[0],s=e[1],l=e[2];return n[0]=r+i*(t[0]-r),n[1]=s+i*(t[1]-s),n[2]=l+i*(t[2]-l),n}function YC(n,e,t){var i=t[0],r=t[1],s=t[2],l=t[3],c=e[0],u=e[1],d=e[2],h=r*d-s*u,m=s*c-i*d,p=i*u-r*c,x=r*p-s*m,y=s*h-i*p,S=i*m-r*h,v=l*2;return h*=v,m*=v,p*=v,x*=2,y*=2,S*=2,n[0]=c+h+x,n[1]=u+m+y,n[2]=d+p+S,n}var KC=qC;(function(){var n=ni();return function(e,t,i,r,s,l){var c,u;for(t||(t=3),i||(i=0),r?u=Math.min(r*t+i,e.length):u=e.length,c=i;c<u;c+=t)n[0]=e[c],n[1]=e[c+1],n[2]=e[c+2],s(n,n,l),e[c]=n[0],e[c+1]=n[1],e[c+2]=n[2];return e}})();function r_(){var n=new Xi(4);return Xi!=Float32Array&&(n[0]=0,n[1]=0,n[2]=0,n[3]=0),n}function ZC(n,e,t,i){var r=new Xi(4);return r[0]=n,r[1]=e,r[2]=t,r[3]=i,r}function QC(n,e){return n[0]=e[0],n[1]=e[1],n[2]=e[2],n[3]=e[3],n}function s_(n,e,t,i,r){return n[0]=e,n[1]=t,n[2]=i,n[3]=r,n}function JC(n,e){var t=e[0],i=e[1],r=e[2],s=e[3],l=t*t+i*i+r*r+s*s;return l>0&&(l=1/Math.sqrt(l)),n[0]=t*l,n[1]=i*l,n[2]=r*l,n[3]=s*l,n}function yS(n,e,t){var i=e[0],r=e[1],s=e[2],l=e[3];return n[0]=t[0]*i+t[4]*r+t[8]*s+t[12]*l,n[1]=t[1]*i+t[5]*r+t[9]*s+t[13]*l,n[2]=t[2]*i+t[6]*r+t[10]*s+t[14]*l,n[3]=t[3]*i+t[7]*r+t[11]*s+t[15]*l,n}(function(){var n=r_();return function(e,t,i,r,s,l){var c,u;for(t||(t=4),i||(i=0),r?u=Math.min(r*t+i,e.length):u=e.length,c=i;c<u;c+=t)n[0]=e[c],n[1]=e[c+1],n[2]=e[c+2],n[3]=e[c+3],s(n,n,l),e[c]=n[0],e[c+1]=n[1],e[c+2]=n[2],e[c+3]=n[3];return e}})();function ns(){var n=new Xi(4);return Xi!=Float32Array&&(n[0]=0,n[1]=0,n[2]=0),n[3]=1,n}function YT(n,e,t){t=t*.5;var i=Math.sin(t);return n[0]=i*e[0],n[1]=i*e[1],n[2]=i*e[2],n[3]=Math.cos(t),n}function e5(n,e,t){var i=e[0],r=e[1],s=e[2],l=e[3],c=t[0],u=t[1],d=t[2],h=t[3];return n[0]=i*h+l*c+r*d-s*u,n[1]=r*h+l*u+s*c-i*d,n[2]=s*h+l*d+i*u-r*c,n[3]=l*h-i*c-r*u-s*d,n}function Td(n,e,t,i){var r=e[0],s=e[1],l=e[2],c=e[3],u=t[0],d=t[1],h=t[2],m=t[3],p,x,y,S,v;return x=r*u+s*d+l*h+c*m,x<0&&(x=-x,u=-u,d=-d,h=-h,m=-m),1-x>WT?(p=Math.acos(x),y=Math.sin(p),S=Math.sin((1-i)*p)/y,v=Math.sin(i*p)/y):(S=1-i,v=i),n[0]=S*r+v*u,n[1]=S*s+v*d,n[2]=S*l+v*h,n[3]=S*c+v*m,n}function t5(n,e){return n[0]=-e[0],n[1]=-e[1],n[2]=-e[2],n[3]=e[3],n}function n5(n,e){var t=e[0]+e[4]+e[8],i;if(t>0)i=Math.sqrt(t+1),n[3]=.5*i,i=.5/i,n[0]=(e[5]-e[7])*i,n[1]=(e[6]-e[2])*i,n[2]=(e[1]-e[3])*i;else{var r=0;e[4]>e[0]&&(r=1),e[8]>e[r*3+r]&&(r=2);var s=(r+1)%3,l=(r+2)%3;i=Math.sqrt(e[r*3+r]-e[s*3+s]-e[l*3+l]+1),n[r]=.5*i,i=.5/i,n[3]=(e[s*3+l]-e[l*3+s])*i,n[s]=(e[s*3+r]+e[r*3+s])*i,n[l]=(e[l*3+r]+e[r*3+l])*i}return n}var Mm=ZC,n1=QC,SS=s_,Zm=JC;(function(){var n=ni(),e=ts(1,0,0),t=ts(0,1,0);return function(i,r,s){var l=jT(r,s);return l<-.999999?(rm(n,e,r),KC(n)<1e-6&&rm(n,t,r),qT(n,n),YT(i,n,Math.PI),i):l>.999999?(i[0]=0,i[1]=0,i[2]=0,i[3]=1,i):(rm(n,r,s),i[0]=n[0],i[1]=n[1],i[2]=n[2],i[3]=1+l,Zm(i,i))}})();(function(){var n=ns(),e=ns();return function(t,i,r,s,l,c){return Td(n,i,l,c),Td(e,r,s,c),Td(t,n,e,2*c*(1-c)),t}})();(function(){var n=VC();return function(e,t,i,r){return n[0]=i[0],n[3]=i[1],n[6]=i[2],n[1]=r[0],n[4]=r[1],n[7]=r[2],n[2]=-t[0],n[5]=-t[1],n[8]=-t[2],Zm(e,n5(e,n))}})();const zt=Symbol("@iwer/action-player"),Er=Symbol("@iwer/xr-anchor"),i1=Symbol("@iwer/xr-controller"),Ue=Symbol("@iwer/xr-device"),$o=Symbol("@iwer/xr-hand-input"),bn=Symbol("@iwer/xr-tracked-input"),Kt=Symbol("@iwer/xr-frame"),Mt=Symbol("@iwer/gamepad"),wr=Symbol("@iwer/xr-system"),ka=Symbol("@iwer/xr-input-source"),to=Symbol("@iwer/xr-webgl-layer"),io=Symbol("@iwer/xr-mesh"),ro=Symbol("@iwer/xr-plane"),MS=Symbol("@iwer/xr-joint-pose"),jf=Symbol("@iwer/xr-pose"),ES=Symbol("@iwer/xr-viewer-pose"),Qi=Symbol("@iwer/xr-rigid-transform"),Yf=Symbol("@iwer/xr-render-state"),fe=Symbol("@iwer/xr-session"),Tl=Symbol("@iwer/xr-joint-space"),so=Symbol("@iwer/xr-reference-space"),kn=Symbol("@iwer/xr-space"),cl=Symbol("@iwer/xr-view"),Kf=Symbol("@iwer/xr-viewport"),Ji=Symbol("@iwer/xr-ray"),ia=Symbol("@iwer/xr-hit-test");class Pn extends EventTarget{constructor(e,t){super(),this[kn]={parentSpace:e,offsetMatrix:t?GC(t):ii(),emulated:!0}}}class i5 extends Pn{constructor(){super(void 0,ii())}}class Iu{static updateOffsetPosition(e,t){const i=e[kn].offsetMatrix;Lu(i,t)}static updateOffsetQuaternion(e,t){const i=e[kn].offsetMatrix,r=ni();Id(r,i),Hd(i,t,r)}static updateOffsetMatrix(e,t){const i=e[kn].offsetMatrix;$T(i,t)}static calculateGlobalOffsetMatrix(e,t=ii()){const i=e[kn].parentSpace?Iu.calculateGlobalOffsetMatrix(e[kn].parentSpace):ii();return Km(t,i,e[kn].offsetMatrix),t}}let Al=class KT{constructor(e=0,t=0,i=0){this.vec3=ts(e,t,i),this.tempVec3=ni()}get x(){return this.vec3[0]}set x(e){this.vec3[0]=e}get y(){return this.vec3[1]}set y(e){this.vec3[1]=e}get z(){return this.vec3[2]}set z(e){this.vec3[2]=e}set(e,t,i){return _d(this.vec3,e,t,i),this}clone(){return new KT(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}normalize(){return t1(this.tempVec3,this.vec3),qT(this.vec3,this.tempVec3),this}add(e){return t1(this.tempVec3,this.vec3),jC(this.vec3,this.tempVec3,e.vec3),this}applyQuaternion(e){return t1(this.tempVec3,this.vec3),YC(this.vec3,this.tempVec3,e.quat),this}},Ad=class ZT{constructor(e=0,t=0,i=0,r=1){this.quat=Mm(e,t,i,r),this.tempQuat=ns()}get x(){return this.quat[0]}set x(e){this.quat[0]=e}get y(){return this.quat[1]}set y(e){this.quat[1]=e}get z(){return this.quat[2]}set z(e){this.quat[2]=e}get w(){return this.quat[3]}set w(e){this.quat[3]=e}set(e,t,i,r){return SS(this.quat,e,t,i,r),this}clone(){return new ZT(this.x,this.y,this.z,this.w)}copy(e){return SS(this.quat,e.x,e.y,e.z,e.w),this}normalize(){return n1(this.tempQuat,this.quat),Zm(this.quat,this.tempQuat),this}invert(){return n1(this.tempQuat,this.quat),t5(this.quat,this.tempQuat),this}multiply(e){return n1(this.tempQuat,this.quat),e5(this.quat,this.tempQuat,e.quat),this}setFromAxisAngle(e,t){return YT(this.quat,e.vec3,t),this}};var Dd;(function(n){n.None="",n.Standard="standard",n.XRStandard="xr-standard"})(Dd||(Dd={}));class QT{constructor(e,t){this[Mt]={type:e,eventTrigger:t,pressed:!1,touched:!1,value:0,lastFrameValue:0,pendingValue:null}}get pressed(){return this[Mt].type==="manual"?this[Mt].pressed:this[Mt].value>0}get touched(){return this[Mt].type==="manual"?this[Mt].touched:this[Mt].touched||this.pressed}get value(){return this[Mt].value}}class r5{constructor(){this.pressed=!1,this.touched=!1,this.value=0}}class sx{constructor(e,t="",i=-1){this[Mt]={id:t,index:i,connected:!1,timestamp:performance.now(),mapping:e.mapping,buttonsMap:{},buttonsSequence:[],axesMap:{},axesSequence:[],hapticActuators:[]},e.buttons.forEach(r=>{var s;r===null?this[Mt].buttonsSequence.push(null):(this[Mt].buttonsSequence.push(r.id),this[Mt].buttonsMap[r.id]=new QT(r.type,(s=r.eventTrigger)!==null&&s!==void 0?s:null))}),e.axes.forEach(r=>{r===null?this[Mt].axesSequence.push(null):(this[Mt].axesSequence.push(r.id+r.type),this[Mt].axesMap[r.id]||(this[Mt].axesMap[r.id]={x:0,y:0}))})}get id(){return this[Mt].id}get index(){return this[Mt].index}get connected(){return this[Mt].connected}get timestamp(){return this[Mt].timestamp}get mapping(){return this[Mt].mapping}get axes(){const e=[];return this[Mt].axesSequence.forEach(t=>{if(t===null)e.push(null);else{const i=t.substring(0,t.length-6),r=t.substring(t.length-6);e.push(r==="y-axis"?this[Mt].axesMap[i].y:this[Mt].axesMap[i].x)}}),e}get buttons(){return this[Mt].buttonsSequence.map(e=>e===null?new r5:this[Mt].buttonsMap[e])}get hapticActuators(){return this[Mt].hapticActuators}get vibrationActuator(){return null}}var ar;(function(n){n.None="none",n.Left="left",n.Right="right"})(ar||(ar={}));var Em;(function(n){n.Gaze="gaze",n.TrackedPointer="tracked-pointer",n.Screen="screen",n.TransientPointer="transient-pointer"})(Em||(Em={}));class s5 extends Array{}class Qm{constructor(e,t,i,r,s,l,c){this[ka]={handedness:e,targetRayMode:t,targetRaySpace:r,gripSpace:l,profiles:i,gamepad:s,hand:c}}get handedness(){return this[ka].handedness}get targetRayMode(){return this[ka].targetRayMode}get targetRaySpace(){return this[ka].targetRaySpace}get gripSpace(){return this[ka].gripSpace}get profiles(){return this[ka].profiles}get gamepad(){return this[ka].gamepad}get hand(){return this[ka].hand}}class sm extends Event{constructor(e,t){if(super(e,t),!t.frame)throw new Error("XRInputSourceEventInit.frame is required");if(!t.inputSource)throw new Error("XRInputSourceEventInit.inputSource is required");this.frame=t.frame,this.inputSource=t.inputSource}}const wS={[ar.Left]:{position:new Al(-.25,1.5,-.4),quaternion:new Ad},[ar.Right]:{position:new Al(.25,1.5,-.4),quaternion:new Ad},[ar.None]:{position:new Al(.25,1.5,-.4),quaternion:new Ad}};class JT{constructor(e){this[bn]={inputSource:e,position:wS[e.handedness].position.clone(),quaternion:wS[e.handedness].quaternion.clone(),connected:!0,lastFrameConnected:!1,inputSourceChanged:!0}}get position(){return this[bn].position}get quaternion(){return this[bn].quaternion}get inputSource(){return this[bn].inputSource}get connected(){return this[bn].connected}set connected(e){this[bn].connected=e,this[bn].inputSource.gamepad[Mt].connected=e}onFrameStart(e){const t=this[bn].inputSource.targetRaySpace;Hd(t[kn].offsetMatrix,this[bn].quaternion.quat,this[bn].position.vec3);const i=e.session;this[bn].inputSource.gamepad.buttons.forEach(r=>{r instanceof QT&&(r[Mt].lastFrameValue=r[Mt].value,r[Mt].pendingValue!=null&&(r[Mt].value=r[Mt].pendingValue,r[Mt].pendingValue=null),r[Mt].eventTrigger!=null&&(r[Mt].lastFrameValue===0&&r[Mt].value>0?(i.dispatchEvent(new sm(r[Mt].eventTrigger,{frame:e,inputSource:this[bn].inputSource})),i.dispatchEvent(new sm(r[Mt].eventTrigger+"start",{frame:e,inputSource:this[bn].inputSource}))):r[Mt].lastFrameValue>0&&r[Mt].value===0&&i.dispatchEvent(new sm(r[Mt].eventTrigger+"end",{frame:e,inputSource:this[bn].inputSource}))))}),this[bn].inputSourceChanged=this.connected!==this[bn].lastFrameConnected,this[bn].lastFrameConnected=this.connected}}class a5 extends JT{constructor(e,t,i){if(!e.layout[t])throw new DOMException("Handedness not supported","InvalidStateError");const r=new Pn(i),s=e.layout[t].gripOffsetMatrix?new Pn(r,e.layout[t].gripOffsetMatrix):void 0,l=[e.profileId,...e.fallbackProfileIds],c=new Qm(t,Em.TrackedPointer,l,r,new sx(e.layout[t].gamepad),s);super(c),this[i1]={profileId:e.profileId,gamepadConfig:e.layout[t].gamepad}}get gamepadConfig(){return this[i1].gamepadConfig}get profileId(){return this[i1].profileId}updateButtonValue(e,t){if(t>1||t<0){console.warn(`Out-of-range value ${t} provided for button ${e}.`);return}const i=this[bn].inputSource.gamepad[Mt].buttonsMap[e];if(i){if(i[Mt].type==="binary"&&t!=1&&t!=0){console.warn(`Non-binary value ${t} provided for binary button ${e}.`);return}i[Mt].pendingValue=t}else console.warn(`Current controller does not have button ${e}.`)}updateButtonTouch(e,t){const i=this[bn].inputSource.gamepad[Mt].buttonsMap[e];i?i[Mt].touched=t:console.warn(`Current controller does not have button ${e}.`)}updateAxis(e,t,i){if(i>1||i<-1){console.warn(`Out-of-range value ${i} provided for ${e} axes.`);return}const r=this[bn].inputSource.gamepad[Mt].axesMap[e];r?t==="x-axis"?r.x=i:t==="y-axis"&&(r.y=i):console.warn(`Current controller does not have ${e} axes.`)}updateAxes(e,t,i){if(t>1||t<-1||i>1||i<-1){console.warn(`Out-of-range value x:${t}, y:${i} provided for ${e} axes.`);return}const r=this[bn].inputSource.gamepad[Mt].axesMap[e];r?(r.x=t,r.y=i):console.warn(`Current controller does not have ${e} axes.`)}}class o5{constructor(e,t,i,r,s){this[io]={nativeMesh:e,frame:void 0,meshSpace:t,vertices:i,indices:r,lastChangedTime:performance.now(),semanticLabel:s}}get meshSpace(){return this[io].meshSpace}get vertices(){return this[io].vertices}get indices(){return this[io].indices}get lastChangedTime(){return this[io].lastChangedTime}get semanticLabel(){return this[io].semanticLabel}}class l5 extends Set{}class c5{constructor(e,t,i,r){this.transform=e,this.vertices=t,this.indices=i,this.semanticLabel=r}}var Ht;(function(n){n.Desk="desk",n.Couch="couch",n.Floor="floor",n.Ceiling="ceiling",n.Wall="wall",n.Door="door",n.Window="window",n.Table="table",n.Shelf="shelf",n.Bed="bed",n.Screen="screen",n.Lamp="lamp",n.Plant="plant",n.WallArt="wall art",n.GlobalMesh="global mesh",n.Other="other"})(Ht||(Ht={}));var vi;(function(n){n.Horizontal="horizontal",n.Vertical="vertical"})(vi||(vi={}));const u5={[Ht.Desk]:vi.Horizontal,[Ht.Couch]:vi.Horizontal,[Ht.Floor]:vi.Horizontal,[Ht.Ceiling]:vi.Horizontal,[Ht.Wall]:vi.Vertical,[Ht.Door]:vi.Vertical,[Ht.Window]:vi.Vertical,[Ht.Table]:vi.Horizontal,[Ht.Shelf]:vi.Horizontal,[Ht.Bed]:vi.Horizontal,[Ht.Screen]:vi.Horizontal,[Ht.Lamp]:vi.Horizontal,[Ht.Plant]:vi.Horizontal,[Ht.WallArt]:vi.Vertical};class f5{constructor(e,t,i,r){this[ro]={nativePlane:e,frame:void 0,planeSpace:t,polygon:i,lastChangedTime:performance.now(),semanticLabel:r,orientation:r?u5[r]:void 0}}get planeSpace(){return this[ro].planeSpace}get polygon(){return this[ro].polygon}get orientation(){return this[ro].orientation}get lastChangedTime(){return this[ro].lastChangedTime}get semanticLabel(){return this[ro].semanticLabel}}class d5 extends Set{}class h5{constructor(e,t,i){this.transform=e,this.polygon=t,this.semanticLabel=i}}class eA{constructor(e,t){this[Er]={anchorSpace:e,session:t,deleted:!1},t[fe].trackedAnchors.add(this)}get anchorSpace(){if(this[Er].deleted)throw new DOMException("XRAnchor has already been deleted.","InvalidStateError");return this[Er].anchorSpace}requestPersistentHandle(){return new Promise((e,t)=>{if(this[Er].deleted)t(new DOMException("XRAnchor has already been deleted.","InvalidStateError"));else{const i=this[Er].session[fe].persistentAnchors;for(const[s,l]of i.entries())if(l===this){e(s);return}const r=crypto.randomUUID();tA.createPersistentAnchor(this[Er].session,this,r),e(r)}})}delete(){this[Er].deleted||(this[Er].anchorSpace=null,this[Er].deleted=!0,this[Er].session[fe].trackedAnchors.delete(this))}}class TS extends Set{}const r1="@immersive-web-emulation-runtime/persistent-anchors";class tA{static recoverPersistentAnchorsFromStorage(e){const t=JSON.parse(localStorage.getItem(r1)||"{}");Object.entries(t).forEach(([i,r])=>{const s=e[fe].device[Ue].globalSpace,l=new Pn(s,r),c=new eA(l,e);e[fe].persistentAnchors.set(i,c)})}static createPersistentAnchor(e,t,i){e[fe].trackedAnchors.add(t),e[fe].persistentAnchors.set(i,t);const r=JSON.parse(localStorage.getItem(r1)||"{}");r[i]=Array.from(t[Er].anchorSpace[kn].offsetMatrix),localStorage.setItem(r1,JSON.stringify(r))}}class wm{constructor(e=0,t=0,i=0,r=1){this.x=e,this.y=t,this.z=i,this.w=r,Object.freeze(this)}static fromPoint(e){return new wm(e.x,e.y,e.z,e.w)}matrixTransform(e){return new wm}toJSON(){return{x:this.x,y:this.y,z:this.z,w:this.w}}}const Qh=typeof globalThis.DOMPointReadOnly<"u"?globalThis.DOMPointReadOnly:wm;class Hl{constructor(e,t){const i=ts(0,0,0),r=ns();this[Qi]={matrix:ii(),position:e?ts(e.x,e.y,e.z):i,orientation:t?Zm(ns(),Mm(t.x,t.y,t.z,t.w)):r,inverse:null},this.updateMatrix()}updateMatrix(){Hd(this[Qi].matrix,this[Qi].orientation,this[Qi].position)}get matrix(){return this[Qi].matrix}get position(){const e=this[Qi].position;return new Qh(e[0],e[1],e[2],1)}get orientation(){const e=this[Qi].orientation;return new Qh(e[0],e[1],e[2],e[3])}get inverse(){if(!this[Qi].inverse){const e=ii();if(!XT(e,this[Qi].matrix))throw new Error("Matrix is not invertible.");let t=ni();Id(t,e);let i=ns();Sm(i,e),this[Qi].inverse=new Hl(new Qh(t[0],t[1],t[2],1),new Qh(i[0],i[1],i[2],i[3])),this[Qi].inverse[Qi].inverse=this}return this[Qi].inverse}}let AS=class{constructor(e=0,t=0,i=0,r=1){this.x=e,this.y=t,this.z=i,this.w=r}};class p5{constructor(e,t){const i={x:0,y:0,z:0,w:1},r={x:0,y:0,z:-1,w:0};if(e instanceof Hl){const c=e.matrix,u=s_(r_(),i.x,i.y,i.z,i.w),d=s_(r_(),r.x,r.y,r.z,r.w);yS(u,u,c),yS(d,d,c),i.x=u[0],i.y=u[1],i.z=u[2],i.w=u[3],r.x=d[0],r.y=d[1],r.z=d[2],r.w=d[3]}else if(e&&(i.x=e.x,i.y=e.y,i.z=e.z,i.w=e.w),t){if(t.x===0&&t.y===0&&t.z===0||t.w!==1)throw new DOMException("Invalid direction value to construct XRRay","TypeError");r.x=t.x,r.y=t.y,r.z=t.z,r.w=t.w}const s=Math.sqrt(r.x*r.x+r.y*r.y+r.z*r.z)||1;r.x=r.x/s,r.y=r.y/s,r.z=r.z/s,this[Ji]={origin:new AS(i.x,i.y,i.z,i.w),direction:new AS(r.x,r.y,r.z,r.w),matrix:null}}get origin(){return this[Ji].origin}get direction(){return this[Ji].direction}get matrix(){if(this[Ji].matrix)return this[Ji].matrix;const e=_d(ni(),0,0,-1),t=_d(ni(),this[Ji].origin.x,this[Ji].origin.y,this[Ji].origin.z),i=_d(ni(),this[Ji].direction.x,this[Ji].direction.y,this[Ji].direction.z),r=rm(ni(),i,e),s=jT(i,e),l=ii();s>-1&&s<1?_S(l,Math.acos(s),r):s===-1?_S(l,Math.acos(s),_d(ni(),1,0,0)):WC(l);const c=Lu(ii(),t),u=Km(ii(),c,l);return this[Ji].matrix=new Float32Array(u),this[Ji].matrix}}class m5{constructor(e,t){var i;this[ia]={session:e,space:t.space,offsetRay:(i=t.offsetRay)!==null&&i!==void 0?i:new p5}}cancel(){this[ia].session[fe].hitTestSources.delete(this)}}class g5{constructor(e,t){this[ia]={frame:e,offsetSpace:t}}getPose(e){return this[ia].frame.getPose(this[ia].offsetSpace,e)}createAnchor(){return this[ia].frame.createAnchor(new Hl,this[ia].offsetSpace)}}class nA extends Event{constructor(e,t){if(super(e,t),!t.session)throw new Error("XRInputSourcesChangeEventInit.session is required");if(!t.added)throw new Error("XRInputSourcesChangeEventInit.added is required");if(!t.removed)throw new Error("XRInputSourcesChangeEventInit.removed is required");this.session=t.session,this.added=t.added,this.removed=t.removed}}var iA,ei;(function(n){n.Viewer="viewer",n.Local="local",n.LocalFloor="local-floor",n.BoundedFloor="bounded-floor",n.Unbounded="unbounded"})(ei||(ei={}));class Il extends Pn{constructor(e,t,i){super(t,i),this[iA]={type:null,onreset:()=>{}},this[so].type=e}get onreset(){var e;return(e=this[so].onreset)!==null&&e!==void 0?e:()=>{}}set onreset(e){this[so].onreset&&this.removeEventListener("reset",this[so].onreset),this[so].onreset=e,e&&this.addEventListener("reset",e)}getOffsetReferenceSpace(e){return new Il(this[so].type,this,e)}}iA=so;class a_{constructor(e={},t){this[Yf]={depthNear:e.depthNear||(t==null?void 0:t.depthNear)||.1,depthFar:e.depthFar||(t==null?void 0:t.depthFar)||1e3,inlineVerticalFieldOfView:e.inlineVerticalFieldOfView||(t==null?void 0:t.inlineVerticalFieldOfView)||null,baseLayer:e.baseLayer||(t==null?void 0:t.baseLayer)||null}}get depthNear(){return this[Yf].depthNear}get depthFar(){return this[Yf].depthFar}get inlineVerticalFieldOfView(){return this[Yf].inlineVerticalFieldOfView}get baseLayer(){return this[Yf].baseLayer}}class Tm extends Event{constructor(e,t){if(super(e,t),!t.session)throw new Error("XRSessionEventInit.session is required");this.session=t.session}}var _n;(function(n){n.None="none",n.Left="left",n.Right="right"})(_n||(_n={}));class rA{constructor(e,t,i,r){this[cl]={eye:e,projectionMatrix:t,transform:i,recommendedViewportScale:null,requestedViewportScale:1,session:r}}get eye(){return this[cl].eye}get projectionMatrix(){return this[cl].projectionMatrix}get transform(){return this[cl].transform}get recommendedViewportScale(){return this[cl].recommendedViewportScale}requestViewportScale(e){if(e===null||e<=0||e>1){console.warn("Invalid scale value. Scale must be > 0 and <= 1.");return}this[cl].requestedViewportScale=e}}class Jm{constructor(e,t=!1,i=void 0,r=void 0){this[jf]={transform:e,emulatedPosition:t,linearVelocity:i,angularVelocity:r}}get transform(){return this[jf].transform}get emulatedPosition(){return this[jf].emulatedPosition}get linearVelocity(){return this[jf].linearVelocity}get angularVelocity(){return this[jf].angularVelocity}}class sA extends Jm{constructor(e,t,i=!1,r=void 0,s=void 0){super(e,i,r,s),this[MS]={radius:t}}get radius(){return this[MS].radius}}class aA extends Jm{constructor(e,t,i=!1,r=void 0,s=void 0){super(e,i,r,s),this[ES]={views:Object.freeze(t)}}get views(){return this[ES].views}}const bS=ii(),RS=ii(),CS=ii(),PS=(n,e,t)=>{Iu.calculateGlobalOffsetMatrix(e,bS),Iu.calculateGlobalOffsetMatrix(t,RS),XT(CS,RS),Km(n,CS,bS)};class oA{constructor(e,t,i,r,s){this[Kt]={session:e,id:t,active:i,animationFrame:r,predictedDisplayTime:s,tempMat4:ii(),detectedPlanes:new d5,detectedMeshes:new l5,trackedAnchors:e[fe].frameTrackedAnchors,hitTestResultsMap:new Map}}get session(){return this[Kt].session}get predictedDisplayTime(){return this[Kt].predictedDisplayTime}getPose(e,t){if(!this[Kt].active)throw new DOMException("XRFrame access outside the callback that produced it is invalid.","InvalidStateError");PS(this[Kt].tempMat4,e,t);const i=ni();Id(i,this[Kt].tempMat4);const r=ns();return Sm(r,this[Kt].tempMat4),new Jm(new Hl({x:i[0],y:i[1],z:i[2],w:1},{x:r[0],y:r[1],z:r[2],w:r[3]}),e[kn].emulated)}getViewerPose(e){if(!this[Kt].animationFrame)throw new DOMException("getViewerPose can only be called on XRFrame objects passed to XRSession.requestAnimationFrame callbacks.","InvalidStateError");const t=this[Kt].session,i=t[fe].device,r=this.getPose(i.viewerSpace,e),s=t[fe].mode==="inline"?[_n.None]:[_n.Left,_n.Right],l=[];return s.forEach(c=>{const u=i.viewSpaces[c],d=this.getPose(u,e),h=t[fe].getProjectionMatrix(c),m=new rA(c,new Float32Array(h),d.transform,t);l.push(m)}),new aA(r.transform,l,!1)}getJointPose(e,t){const i=this.getPose(e,t),r=e[Tl].radius;return new sA(i.transform,r,!1)}fillJointRadii(e,t){if(e=Array.from(e),!this[Kt].active)throw new DOMException("XRFrame access outside the callback that produced it is invalid.","InvalidStateError");if(e.length>t.length)throw new DOMException("The length of jointSpaces is larger than the number of elements in radii","TypeError");let i=!0;for(let r=0;r<e.length;r++)e[r][Tl].radius?t[r]=e[r][Tl].radius:(t[r]=NaN,i=!1);return i}fillPoses(e,t,i){if(e=Array.from(e),!this[Kt].active)throw new DOMException("XRFrame access outside the callback that produced it is invalid.","InvalidStateError");if(e.length*16>i.length)throw new DOMException("The length of spaces multiplied by 16 is larger than the number of elements in transforms","TypeError");return e.forEach((r,s)=>{PS(this[Kt].tempMat4,r,t);for(let l=0;l<16;l++)i[s*16+l]=this[Kt].tempMat4[l]}),!0}get detectedPlanes(){if(!this[Kt].active)throw new DOMException("XRFrame access outside the callback that produced it is invalid.","InvalidStateError");return this[Kt].detectedPlanes}get detectedMeshes(){if(!this[Kt].active)throw new DOMException("XRFrame access outside the callback that produced it is invalid.","InvalidStateError");return this[Kt].detectedMeshes}get trackedAnchors(){if(!this[Kt].active)throw new DOMException("XRFrame access outside the callback that produced it is invalid.","InvalidStateError");return this[Kt].trackedAnchors}createAnchor(e,t){return new Promise((i,r)=>{if(!this[Kt].active)r(new DOMException("XRFrame access outside the callback that produced it is invalid.","InvalidStateError"));else{const s=this[Kt].session[fe].device[Ue].globalSpace,l=new Pn(t,e.matrix),c=Iu.calculateGlobalOffsetMatrix(l),u=new Pn(s,c),d=new eA(u,this[Kt].session);this[Kt].session[fe].trackedAnchors.add(d),this[Kt].session[fe].newAnchors.set(d,{resolve:i,reject:r})}})}getHitTestResults(e){if(this[Kt].active){if(this[Kt].hitTestResultsMap.has(e))return[...this[Kt].hitTestResultsMap.get(e)];throw new DOMException("Requested hit test results are not available for current frame.","InvalidStateError")}else throw new DOMException("XRFrame access outside the callback that produced it is invalid.","InvalidStateError")}}var as;(function(n){n.Opaque="opaque",n.AlphaBlend="alpha-blend",n.Additive="additive"})(as||(as={}));var Du;(function(n){n.ScreenSpace="screen-space",n.WorldSpace="world-space"})(Du||(Du={}));class ax extends EventTarget{constructor(e,t,i){super(),this[fe]={device:e,mode:t,renderState:new a_,pendingRenderState:null,enabledFeatures:i,isSystemKeyboardSupported:!1,ended:!1,projectionMatrices:{[_n.Left]:ii(),[_n.Right]:ii(),[_n.None]:ii()},getProjectionMatrix:r=>this[fe].projectionMatrices[r],referenceSpaceIsSupported:r=>{if(!this[fe].enabledFeatures.includes(r))return!1;switch(r){case ei.Viewer:return!0;case ei.Local:case ei.LocalFloor:case ei.BoundedFloor:case ei.Unbounded:return this[fe].mode!="inline"}},frameHandle:0,frameCallbacks:[],currentFrameCallbacks:null,onDeviceFrame:()=>{if(this[fe].ended)return;this[fe].deviceFrameHandle=globalThis.requestAnimationFrame(this[fe].onDeviceFrame),this[fe].pendingRenderState!=null&&(this[fe].renderState=this[fe].pendingRenderState,this[fe].pendingRenderState=null,this[fe].device[Ue].onBaseLayerSet(this[fe].renderState.baseLayer));const r=this[fe].renderState.baseLayer;if(r===null)return;const s=r.context,l=s.canvas;if(this[fe].mode!="inline"){const v=s.getParameter(s.COLOR_CLEAR_VALUE),g=s.getParameter(s.DEPTH_CLEAR_VALUE),P=s.getParameter(s.STENCIL_CLEAR_VALUE);s.clearColor(0,0,0,0),s.clearDepth(1),s.clearStencil(0),s.clear(s.DEPTH_BUFFER_BIT|s.COLOR_BUFFER_BIT|s.STENCIL_BUFFER_BIT),s.clearColor(v[0],v[1],v[2],v[3]),s.clearDepth(g),s.clearStencil(P)}const{depthNear:c,depthFar:u}=this[fe].renderState,{width:d,height:h}=l;if(this[fe].mode!=="inline"){const v=d*(this[fe].device.stereoEnabled?.5:1)/h;xS(this[fe].projectionMatrices[_n.Left],this[fe].device.fovy,v,c,u),$T(this[fe].projectionMatrices[_n.Right],this[fe].projectionMatrices[_n.Left])}else{const v=d/h;xS(this[fe].projectionMatrices[_n.None],this[fe].renderState.inlineVerticalFieldOfView,v,c,u)}const m=new oA(this,this[fe].frameHandle,!0,!0,performance.now()),p=performance.now(),x=this[fe].device[Ue].devui;if(x&&x.render(p),this[fe].mode==="immersive-ar"){const v=this[fe].device[Ue].sem;v&&v.render(p)}this[fe].enabledFeatures.includes("anchors")&&this[fe].updateTrackedAnchors(),this[fe].enabledFeatures.includes("plane-detection")&&this[fe].updateTrackedPlanes(m),this[fe].enabledFeatures.includes("mesh-detection")&&this[fe].updateTrackedMeshes(m),this[fe].enabledFeatures.includes("hit-test")&&this[fe].computeHitTestResults(m),this[fe].device[Ue].onFrameStart(m),this[fe].updateActiveInputSources();const y=this[fe].currentFrameCallbacks=this[fe].frameCallbacks;this[fe].frameCallbacks=[];const S=performance.now();for(let v=0;v<y.length;v++)try{y[v].cancelled||y[v].callback(S,m)}catch(g){console.error(g)}this[fe].currentFrameCallbacks=null,m[Kt].active=!1},nominalFrameRate:e.internalNominalFrameRate,referenceSpaces:[],inputSourceArray:[],activeInputSources:[],updateActiveInputSources:()=>{const r=this[fe].enabledFeatures.includes("hand-tracking"),s=this[fe].activeInputSources,l=this[fe].device.inputSources.filter(d=>!d.hand||r),c=l.filter(d=>!s.includes(d)),u=s.filter(d=>!l.includes(d));this[fe].activeInputSources=l,(c.length>0||u.length>0)&&this.dispatchEvent(new nA("inputsourceschange",{session:this,added:c,removed:u}))},trackedAnchors:new TS,persistentAnchors:new Map,newAnchors:new Map,frameTrackedAnchors:new TS,updateTrackedAnchors:()=>{this[fe].enabledFeatures.includes("anchors")&&(this[fe].frameTrackedAnchors.clear(),Array.from(this[fe].trackedAnchors).forEach(r=>{if(r[Er].deleted){if(this[fe].trackedAnchors.delete(r),this[fe].newAnchors.has(r)){const{reject:s}=this[fe].newAnchors.get(r);s(new DOMException("Anchor is no longer tracked","InvalidStateError"))}}else if(this[fe].frameTrackedAnchors.add(r),this[fe].newAnchors.has(r)){const{resolve:s}=this[fe].newAnchors.get(r);s(r),this[fe].newAnchors.delete(r)}}))},trackedPlanes:new Map,updateTrackedPlanes:r=>{const s=this[fe].device[Ue].sem;if(!s)return;Array.from(this[fe].trackedPlanes.keys()).forEach(c=>{s.trackedPlanes.has(c)||this[fe].trackedPlanes.delete(c)}),s.trackedPlanes.forEach(c=>{let u=this[fe].trackedPlanes.get(c);if(!u){const d=new Pn(this[fe].device[Ue].globalSpace,c.transform.matrix);u=new f5(c,d,c.polygon,c.semanticLabel),this[fe].trackedPlanes.set(c,u)}u[ro].lastChangedTime=r.predictedDisplayTime,u[ro].frame=r,r[Kt].detectedPlanes.add(u)})},trackedMeshes:new Map,updateTrackedMeshes:r=>{const s=this[fe].device[Ue].sem;if(!s)return;Array.from(this[fe].trackedMeshes.keys()).forEach(c=>{s.trackedMeshes.has(c)||this[fe].trackedMeshes.delete(c)}),s.trackedMeshes.forEach(c=>{let u=this[fe].trackedMeshes.get(c);if(!u){const d=new Pn(this[fe].device[Ue].globalSpace,c.transform.matrix);u=new o5(c,d,c.vertices,c.indices,c.semanticLabel),this[fe].trackedMeshes.set(c,u)}u[io].lastChangedTime=r.predictedDisplayTime,u[io].frame=r,r[Kt].detectedMeshes.add(u)})},hitTestSources:new Set,computeHitTestResults:r=>{const s=this[fe].device[Ue].sem;if(!s)return;const l=this[fe].device[Ue].globalSpace;this[fe].hitTestSources.forEach(c=>{const u=c[ia].space,d=Iu.calculateGlobalOffsetMatrix(u),h=c[ia].offsetRay.matrix,m=ii();Km(m,d,h);const p=[];s.computeHitTestResults(m).forEach(x=>{const y=new Pn(l,x),S=new g5(r,y);p.push(S)}),r[Kt].hitTestResultsMap.set(c,p)})},onend:null,oninputsourceschange:null,onselect:null,onselectstart:null,onselectend:null,onsqueeze:null,onsqueezestart:null,onsqueezeend:null,onvisibilitychange:null,onframeratechange:null},tA.recoverPersistentAnchorsFromStorage(this),this[fe].onDeviceFrame()}get visibilityState(){return this[fe].device.visibilityState}get frameRate(){return this[fe].nominalFrameRate}get supportedFrameRates(){return new Float32Array(this[fe].device.supportedFrameRates)}get renderState(){return this[fe].renderState}get inputSources(){return this[fe].inputSourceArray.length=0,!this[fe].ended&&this[fe].mode!=="inline"&&this[fe].inputSourceArray.push(...this[fe].activeInputSources),this[fe].inputSourceArray}get enabledFeatures(){return this[fe].enabledFeatures}get isSystemKeyboardSupported(){return this[fe].isSystemKeyboardSupported}get environmentBlendMode(){var e;return(e=this[fe].device[Ue].environmentBlendModes[this[fe].mode])!==null&&e!==void 0?e:as.Opaque}get interactionMode(){return this[fe].device[Ue].interactionMode}updateRenderState(e={}){var t,i,r,s;if(this[fe].ended)throw new DOMException("XRSession has already ended.","InvalidStateError");if(e.baseLayer&&e.baseLayer[to].session!==this)throw new DOMException("Base layer was created by a different XRSession","InvalidStateError");if(e.inlineVerticalFieldOfView!=null&&this[fe].mode!=="inline")throw new DOMException("InlineVerticalFieldOfView must not be set for an immersive session","InvalidStateError");const l={baseLayer:e.baseLayer||((t=this[fe].pendingRenderState)===null||t===void 0?void 0:t.baseLayer)||void 0,depthFar:e.depthFar||((i=this[fe].pendingRenderState)===null||i===void 0?void 0:i.depthFar)||void 0,depthNear:e.depthNear||((r=this[fe].pendingRenderState)===null||r===void 0?void 0:r.depthNear)||void 0,inlineVerticalFieldOfView:e.inlineVerticalFieldOfView||((s=this[fe].pendingRenderState)===null||s===void 0?void 0:s.inlineVerticalFieldOfView)||void 0};this[fe].pendingRenderState=new a_(l,this[fe].renderState)}async updateTargetFrameRate(e){return new Promise((t,i)=>{this[fe].ended?i(new DOMException("XRSession has already ended.","InvalidStateError")):this[fe].device.supportedFrameRates.includes(e)?(this[fe].nominalFrameRate===e?console.log("Requested frame rate is the same as the current nominal frame rate, no update made"):(this[fe].nominalFrameRate=e,this.dispatchEvent(new Tm("frameratechange",{session:this})),console.log(`Nominal frame rate updated to ${e}`)),t()):i(new DOMException("Requested frame rate not supported.","InvalidStateError"))})}async requestReferenceSpace(e){return new Promise((t,i)=>{if(this[fe].ended||!this[fe].referenceSpaceIsSupported(e)){i(new DOMException("The requested reference space type is not supported.","NotSupportedError"));return}let r;switch(e){case ei.Viewer:r=this[fe].device.viewerSpace;break;case ei.Local:r=new Il(e,this[fe].device[Ue].globalSpace,this[fe].device.viewerSpace[kn].offsetMatrix);break;case ei.LocalFloor:case ei.BoundedFloor:case ei.Unbounded:r=new Il(e,this[fe].device[Ue].globalSpace);break}this[fe].referenceSpaces.push(r),t(r)})}requestAnimationFrame(e){if(this[fe].ended)return 0;const t=++this[fe].frameHandle;return this[fe].frameCallbacks.push({handle:t,callback:e,cancelled:!1}),t}cancelAnimationFrame(e){let t=this[fe].frameCallbacks,i=t.findIndex(r=>r&&r.handle===e);i>-1&&(t[i].cancelled=!0,t.splice(i,1)),t=this[fe].currentFrameCallbacks,t&&(i=t.findIndex(r=>r&&r.handle===e),i>-1&&(t[i].cancelled=!0))}async end(){return new Promise((e,t)=>{this[fe].ended||this[fe].deviceFrameHandle===null?t(new DOMException("XRSession has already ended.","InvalidStateError")):(globalThis.cancelAnimationFrame(this[fe].deviceFrameHandle),this[fe].device[Ue].onSessionEnd(),this.dispatchEvent(new Tm("end",{session:this})),e())})}get persistentAnchors(){return Array.from(this[fe].persistentAnchors.keys())}restorePersistentAnchor(e){return new Promise((t,i)=>{if(!this[fe].persistentAnchors.has(e))i(new DOMException(`Persistent anchor with uuid ${e} not found.`,"InvalidStateError"));else if(this[fe].ended)i(new DOMException("XRSession has already ended.","InvalidStateError"));else{const r=this[fe].persistentAnchors.get(e);this[fe].newAnchors.has(r)?i(new DOMException(`Multiple concurrent attempts detected to restore the anchor with UUID: ${e}.`,"InvalidStateError")):(this[fe].trackedAnchors.add(r),this[fe].newAnchors.set(r,{resolve:t,reject:i}))}})}deletePersistentAnchor(e){return new Promise((t,i)=>{if(!this[fe].persistentAnchors.has(e))i(new DOMException(`Persistent anchor with uuid ${e} not found.`,"InvalidStateError"));else{const r=this[fe].persistentAnchors.get(e);this[fe].persistentAnchors.delete(e),r.delete(),t(void 0)}})}requestHitTestSource(e){return new Promise((t,i)=>{if(!this[fe].enabledFeatures.includes("hit-test"))i(new DOMException('WebXR feature "hit-test" is not supported by current session',"NotSupportedError"));else if(this[fe].ended)i(new DOMException("XRSession has already ended.","InvalidStateError"));else if(!this[fe].device[Ue].sem)i(new DOMException("Synthethic Environment Module required for emulating hit-test","OperationError"));else{const r=new m5(this,e);this[fe].hitTestSources.add(r),t(r)}})}get onend(){var e;return(e=this[fe].onend)!==null&&e!==void 0?e:()=>{}}set onend(e){this[fe].onend&&this.removeEventListener("end",this[fe].onend),this[fe].onend=e,e&&this.addEventListener("end",e)}get oninputsourceschange(){var e;return(e=this[fe].oninputsourceschange)!==null&&e!==void 0?e:()=>{}}set oninputsourceschange(e){this[fe].oninputsourceschange&&this.removeEventListener("inputsourceschange",this[fe].oninputsourceschange),this[fe].oninputsourceschange=e,e&&this.addEventListener("inputsourceschange",e)}get onselect(){var e;return(e=this[fe].onselect)!==null&&e!==void 0?e:()=>{}}set onselect(e){this[fe].onselect&&this.removeEventListener("select",this[fe].onselect),this[fe].onselect=e,e&&this.addEventListener("select",e)}get onselectstart(){var e;return(e=this[fe].onselectstart)!==null&&e!==void 0?e:()=>{}}set onselectstart(e){this[fe].onselectstart&&this.removeEventListener("selectstart",this[fe].onselectstart),this[fe].onselectstart=e,e&&this.addEventListener("selectstart",e)}get onselectend(){var e;return(e=this[fe].onselectend)!==null&&e!==void 0?e:()=>{}}set onselectend(e){this[fe].onselectend&&this.removeEventListener("selectend",this[fe].onselectend),this[fe].onselectend=e,e&&this.addEventListener("selectend",e)}get onsqueeze(){var e;return(e=this[fe].onsqueeze)!==null&&e!==void 0?e:()=>{}}set onsqueeze(e){this[fe].onsqueeze&&this.removeEventListener("squeeze",this[fe].onsqueeze),this[fe].onsqueeze=e,e&&this.addEventListener("squeeze",e)}get onsqueezestart(){var e;return(e=this[fe].onsqueezestart)!==null&&e!==void 0?e:()=>{}}set onsqueezestart(e){this[fe].onsqueezestart&&this.removeEventListener("squeezestart",this[fe].onsqueezestart),this[fe].onsqueezestart=e,e&&this.addEventListener("squeezestart",e)}get onsqueezeend(){var e;return(e=this[fe].onsqueezeend)!==null&&e!==void 0?e:()=>{}}set onsqueezeend(e){this[fe].onsqueezeend&&this.removeEventListener("squeezeend",this[fe].onsqueezeend),this[fe].onsqueezeend=e,e&&this.addEventListener("squeezeend",e)}get onvisibilitychange(){var e;return(e=this[fe].onvisibilitychange)!==null&&e!==void 0?e:()=>{}}set onvisibilitychange(e){this[fe].onvisibilitychange&&this.removeEventListener("visibilitychange",this[fe].onvisibilitychange),this[fe].onvisibilitychange=e,e&&this.addEventListener("visibilitychange",e)}get onframeratechange(){var e;return(e=this[fe].onframeratechange)!==null&&e!==void 0?e:()=>{}}set onframeratechange(e){this[fe].onframeratechange&&this.removeEventListener("frameratechange",this[fe].onframeratechange),this[fe].onframeratechange=e,e&&this.addEventListener("frameratechange",e)}}var Nd;(function(n){n.Wrist="wrist",n.ThumbMetacarpal="thumb-metacarpal",n.ThumbPhalanxProximal="thumb-phalanx-proximal",n.ThumbPhalanxDistal="thumb-phalanx-distal",n.ThumbTip="thumb-tip",n.IndexFingerMetacarpal="index-finger-metacarpal",n.IndexFingerPhalanxProximal="index-finger-phalanx-proximal",n.IndexFingerPhalanxIntermediate="index-finger-phalanx-intermediate",n.IndexFingerPhalanxDistal="index-finger-phalanx-distal",n.IndexFingerTip="index-finger-tip",n.MiddleFingerMetacarpal="middle-finger-metacarpal",n.MiddleFingerPhalanxProximal="middle-finger-phalanx-proximal",n.MiddleFingerPhalanxIntermediate="middle-finger-phalanx-intermediate",n.MiddleFingerPhalanxDistal="middle-finger-phalanx-distal",n.MiddleFingerTip="middle-finger-tip",n.RingFingerMetacarpal="ring-finger-metacarpal",n.RingFingerPhalanxProximal="ring-finger-phalanx-proximal",n.RingFingerPhalanxIntermediate="ring-finger-phalanx-intermediate",n.RingFingerPhalanxDistal="ring-finger-phalanx-distal",n.RingFingerTip="ring-finger-tip",n.PinkyFingerMetacarpal="pinky-finger-metacarpal",n.PinkyFingerPhalanxProximal="pinky-finger-phalanx-proximal",n.PinkyFingerPhalanxIntermediate="pinky-finger-phalanx-intermediate",n.PinkyFingerPhalanxDistal="pinky-finger-phalanx-distal",n.PinkyFingerTip="pinky-finger-tip"})(Nd||(Nd={}));class ox extends Map{}class lx extends Pn{constructor(e,t,i){super(t,i),this[Tl]={jointName:e,radius:0}}get jointName(){return this[Tl].jointName}}const v5={jointTransforms:{wrist:{offsetMatrix:[.9060805439949036,-.1844543218612671,.3807799518108368,0,-.08027800172567368,.8086723685264587,.5827555656433105,0,-.4154181182384491,-.5585917234420776,.7179155349731445,0,-.06867414712905884,-.009423808194696903,.10627774149179459,1],radius:.021460847929120064},"thumb-metacarpal":{offsetMatrix:[-.5012241005897522,-.8650535345077515,-.0213695727288723,0,.7415963411331177,-.4421543478965759,.5045139193534851,0,-.44587990641593933,.23702676594257355,.8631392121315002,0,-.032122574746608734,-.01196830440312624,.07194234430789948,1],radius:.019382517784833908},"thumb-phalanx-proximal":{offsetMatrix:[-.3175753057003021,-.9460570216178894,-.06419729441404343,0,.8958902955055237,-.32153913378715515,.30658137798309326,0,-.3106854259967804,.03984907269477844,.9496771097183228,0,-.017625702545046806,-.01967475935816765,.04387917369604111,1],radius:.01228295173496008},"thumb-phalanx-distal":{offsetMatrix:[-.4944636821746826,-.8691971898078918,.001086252392269671,0,.8307800889015198,-.4722411036491394,.2946045398712158,0,-.25555649399757385,.14657381176948547,.9556186199188232,0,-.007126678712666035,-.021021386608481407,.011786630377173424,1],radius:.009768804535269737},"thumb-tip":{offsetMatrix:[-.4944636821746826,-.8691971898078918,.001086252392269671,0,.8307800889015198,-.4722411036491394,.2946045398712158,0,-.25555649399757385,.14657381176948547,.9556186199188232,0,.0003423091256991029,-.024528030306100845,-.011410919018089771,1],radius:.008768804371356964},"index-finger-metacarpal":{offsetMatrix:[.9060805439949036,-.1844543218612671,.3807799518108368,0,-.08027800172567368,.8086723685264587,.5827555656433105,0,-.4154181182384491,-.5585917234420776,.7179155349731445,0,-.038037415593862534,-.0020236473064869642,.07626739144325256,1],radius:.021228281781077385},"index-finger-phalanx-proximal":{offsetMatrix:[.7986818552017212,-.35985732078552246,.48229536414146423,0,.538311243057251,.7854709625244141,-.30537736415863037,0,-.2689369022846222,.5035246014595032,.8210577368736267,0,-.006869405973702669,.033938243985176086,.04206443578004837,1],radius:.010295259766280651},"index-finger-phalanx-intermediate":{offsetMatrix:[.8285930156707764,-.32672837376594543,.4546217918395996,0,.5577570199966431,.4116027057170868,-.7207564115524292,0,.04836784675717354,.8507823944091797,.5232869386672974,0,.0033306588884443045,.014840902760624886,.010923954658210278,1],radius:.00853810179978609},"index-finger-phalanx-distal":{offsetMatrix:[.8412464261054993,-.35794928669929504,.4051857888698578,0,.5139996409416199,.29711154103279114,-.8046918511390686,0,.16765329241752625,.8852096796035767,.4339304566383362,0,.0021551470272243023,-.0058362227864563465,-.0017938464879989624,1],radius:.007636196445673704},"index-finger-tip":{offsetMatrix:[.8412464261054993,-.35794928669929504,.4051857888698578,0,.5139996409416199,.29711154103279114,-.8046918511390686,0,.16765329241752625,.8852096796035767,.4339304566383362,0,-.00131594471167773,-.025222131982445717,-.012442642822861671,1],radius:.006636196281760931},"middle-finger-metacarpal":{offsetMatrix:[.9060805439949036,-.1844543218612671,.3807799518108368,0,-.08027800172567368,.8086723685264587,.5827555656433105,0,-.4154181182384491,-.5585917234420776,.7179155349731445,0,-.05395089089870453,.003063359996303916,.07402937114238739,1],radius:.021231964230537415},"middle-finger-phalanx-proximal":{offsetMatrix:[.9187911748886108,-.1530158370733261,.36387869715690613,0,.038666240870952606,.9522662162780762,.302808940410614,0,-.3928440511226654,-.26414817571640015,.8808513283729553,0,-.02717282809317112,.04162866622209549,.03678669035434723,1],radius:.01117393933236599},"middle-finger-phalanx-intermediate":{offsetMatrix:[.9228746294975281,-.12856416404247284,.36300456523895264,0,.14524033665657043,.9892153143882751,-.01890045404434204,0,-.3566599190235138,.07016586512327194,.9315956234931946,0,-.01030921470373869,.05296773463487625,-.0010256498353555799,1],radius:.008030958473682404},"middle-finger-phalanx-distal":{offsetMatrix:[.9325166344642639,-.040404170751571655,.35885775089263916,0,.06836572289466858,.995502769947052,-.0655682161450386,0,-.3545948565006256,.08567725121974945,.9310863614082336,0,-.0004833847051486373,.05103470757603645,-.026690717786550522,1],radius:.007629410829395056},"middle-finger-tip":{offsetMatrix:[.9325166344642639,-.040404170751571655,.35885775089263916,0,.06836572289466858,.995502769947052,-.0655682161450386,0,-.3545948565006256,.08567725121974945,.9310863614082336,0,.008158999495208263,.05004044249653816,-.050120558589696884,1],radius:.006629410665482283},"ring-finger-metacarpal":{offsetMatrix:[.9060805439949036,-.1844543218612671,.3807799518108368,0,-.08027800172567368,.8086723685264587,.5827555656433105,0,-.4154181182384491,-.5585917234420776,.7179155349731445,0,-.06732909381389618,.007902119308710098,.07209732383489609,1],radius:.019088275730609894},"ring-finger-phalanx-proximal":{offsetMatrix:[.9391821026802063,-.027994679287075996,.34227466583251953,0,-.18282271921634674,.8029410243034363,.5673282742500305,0,-.2907087206840515,-.5954000353813171,.7489906549453735,0,-.047129884362220764,.03806127607822418,.032147664576768875,1],radius:.00992213748395443},"ring-finger-phalanx-intermediate":{offsetMatrix:[.9249380826950073,.03699534013867378,.3783116042613983,0,-.12898847460746765,.9667453765869141,.2208271026611328,0,-.3575615882873535,-.25304901599884033,.8989526629447937,0,-.03579339757561684,.06127955764532089,.002939916681498289,1],radius:.007611672393977642},"ring-finger-phalanx-distal":{offsetMatrix:[.9001164436340332,.03983335196971893,.4338230490684509,0,-.09662467986345291,.9892624020576477,.10964841395616531,0,-.4247973561286926,-.14061418175697327,.8943013548851013,0,-.026291755959391594,.06800390034914017,-.02094830758869648,1],radius:.007231088820844889},"ring-finger-tip":{offsetMatrix:[.9001164436340332,.03983335196971893,.4338230490684509,0,-.09662467986345291,.9892624020576477,.10964841395616531,0,-.4247973561286926,-.14061418175697327,.8943013548851013,0,-.016345610842108727,.07300511747598648,-.04263874143362045,1],radius:.0062310886569321156},"pinky-finger-metacarpal":{offsetMatrix:[.8769711852073669,.31462907791137695,.36322021484375,0,-.4506046175956726,.801031768321991,.39408499002456665,0,-.16696058213710785,-.5092697143554688,.8442559838294983,0,-.07460174709558487,.0062340241856873035,.06756893545389175,1],radius:.01808827556669712},"pinky-finger-phalanx-proximal":{offsetMatrix:[.9498357176780701,.1553308218717575,.2714462876319885,0,-.3019258379936218,.6817675232887268,.6663586497306824,0,-.08155745267868042,-.7148879170417786,.694466233253479,0,-.06697750836610794,.029482364654541016,.02902858518064022,1],radius:.008483353070914745},"pinky-finger-phalanx-intermediate":{offsetMatrix:[.9214097261428833,.27928245067596436,.2701927423477173,0,-.3670244514942169,.8538867831230164,.36901235580444336,0,-.12765564024448395,-.43917882442474365,.8892839550971985,0,-.06447203457355499,.05144399777054787,.0076942890882492065,1],radius:.0067641944624483585},"pinky-finger-phalanx-distal":{offsetMatrix:[.9038633704185486,.23618005216121674,.3567195236682892,0,-.3532794713973999,.8823202252388,.3109731376171112,0,-.24129553139209747,-.4070987403392792,.8809353709220886,0,-.06187915802001953,.060364335775375366,-.010368337854743004,1],radius:.0064259846694767475},"pinky-finger-tip":{offsetMatrix:[.9038633704185486,.23618005216121674,.3567195236682892,0,-.3532794713973999,.8823202252388,.3109731376171112,0,-.24129553139209747,-.4070987403392792,.8809353709220886,0,-.056796226650476456,.07042007893323898,-.02921444922685623,1],radius:.005425984505563974}},gripOffsetMatrix:[.08027800917625427,-.8086723685264587,-.5827556252479553,0,-.4154181480407715,-.5585916638374329,.7179154753684998,0,-.9060805439949036,.1844543218612671,-.3807799518108368,0,-.038054611533880234,-.002910431008785963,.03720742464065552,1]},_5={jointTransforms:{wrist:{offsetMatrix:[.9340395331382751,-.13936476409435272,.32885703444480896,0,-.005510995630174875,.914999783039093,.40341612696647644,0,-.3571262061595917,-.37861889600753784,.8538784384727478,0,-.05789132043719292,.01670890860259533,.11183350533246994,1],radius:.021460847929120064},"thumb-metacarpal":{offsetMatrix:[.02145560085773468,-.9978390336036682,.0621047280728817,0,.41311800479888916,.06541631370782852,.9083252549171448,0,-.9104245901107788,.006167683284729719,.4136286973953247,0,-.016488194465637207,.012708572670817375,.08862338215112686,1],radius:.019382517784833908},"thumb-phalanx-proximal":{offsetMatrix:[.21270370483398438,-.966137707233429,.14606566727161407,0,.49890995025634766,.2359165996313095,.8339261412620544,0,-.8401462435722351,-.10450579971075058,.5321959853172302,0,.013112368993461132,.012508046813309193,.07517509907484055,1],radius:.01228295173496008},"thumb-phalanx-distal":{offsetMatrix:[.01653280481696129,-.9986647963523865,.048943229019641876,0,.26313456892967224,.051570065319538116,.9633802771568298,0,-.9646173715591431,-.0030490627977997065,.26363563537597656,0,.04150351136922836,.016039609909057617,.05719054117798805,1],radius:.009768804535269737},"thumb-tip":{offsetMatrix:[.01653280481696129,-.9986647963523865,.048943229019641876,0,.26313456892967224,.051570065319538116,.9633802771568298,0,-.9646173715591431,-.0030490627977997065,.26363563537597656,0,.06548332422971725,.01683700829744339,.0516640841960907,1],radius:.008768804371356964},"index-finger-metacarpal":{offsetMatrix:[.9340395331382751,-.13936476409435272,.32885703444480896,0,-.005510995630174875,.914999783039093,.40341612696647644,0,-.3571262061595917,-.37861889600753784,.8538784384727478,0,-.02592567168176174,.019982583820819855,.08479326963424683,1],radius:.021228281781077385},"index-finger-phalanx-proximal":{offsetMatrix:[.9063700437545776,-.21756279468536377,.3621589243412018,0,.0970839336514473,.9415287375450134,.3226419687271118,0,-.41117796301841736,-.2572731077671051,.8744958639144897,0,-.0015709538711234927,.043078210204839706,.034657616168260574,1],radius:.010295259766280651},"index-finger-phalanx-intermediate":{offsetMatrix:[.9159826040267944,-.1651475727558136,.36565208435058594,0,.09755707532167435,.9756820797920227,.1962820291519165,0,-.3891757130622864,-.14411886036396027,.9098196625709534,0,.014023927971720695,.052835866808891296,.0014903299743309617,1],radius:.00853810179978609},"index-finger-phalanx-distal":{offsetMatrix:[.9378057718276978,-.12329639494419098,.3245268166065216,0,.032558172941207886,.9619227051734924,.2713746726512909,0,-.3456292748451233,-.2439306229352951,.9061115384101868,0,.023482320830225945,.05633850023150444,-.020621655508875847,1],radius:.007636196445673704},"index-finger-tip":{offsetMatrix:[.9378057718276978,-.12329639494419098,.3245268166065216,0,.032558172941207886,.9619227051734924,.2713746726512909,0,-.3456292748451233,-.2439306229352951,.9061115384101868,0,.03096788562834263,.06281610578298569,-.040703095495700836,1],radius:.006636196281760931},"middle-finger-metacarpal":{offsetMatrix:[.9340395331382751,-.13936476409435272,.32885703444480896,0,-.005510995630174875,.914999783039093,.40341612696647644,0,-.3571262061595917,-.37861889600753784,.8538784384727478,0,-.04184452444314957,.022474845871329308,.08177298307418823,1],radius:.021231964230537415},"middle-finger-phalanx-proximal":{offsetMatrix:[.9720265865325928,-.08313076198101044,.21966552734375,0,.20477405190467834,.7580050826072693,-.6192700862884521,0,-.11502730846405029,.6469289064407349,.7538246512413025,0,-.022107340395450592,.05035499855875969,.02970452979207039,1],radius:.01117393933236599},"middle-finger-phalanx-intermediate":{offsetMatrix:[.9779140949249268,-.07129573822021484,.19646917283535004,0,.1287083923816681,-.5352076292037964,-.8348574042320251,0,.1646735966205597,.8417060971260071,-.5142109394073486,0,-.017169542610645294,.022584279999136925,-.00265491777099669,1],radius:.008030958473682404},"middle-finger-phalanx-distal":{offsetMatrix:[.9774913787841797,-.19657190144062042,.07661263644695282,0,-.1924918293952942,-.9796126484870911,-.05749811604619026,0,.08635343611240387,.041456472128629684,-.995401918888092,0,-.02170622907578945,-.0006043742760084569,.011511396616697311,1],radius:.007629410829395056},"middle-finger-tip":{offsetMatrix:[.9774913787841797,-.19657190144062042,.07661263644695282,0,-.1924918293952942,-.9796126484870911,-.05749811604619026,0,.08635343611240387,.041456472128629684,-.995401918888092,0,-.02438267692923546,-.0026927536819130182,.03627248480916023,1],radius:.006629410665482283},"ring-finger-metacarpal":{offsetMatrix:[.9340395331382751,-.13936476409435272,.32885703444480896,0,-.005510995630174875,.914999783039093,.40341612696647644,0,-.3571262061595917,-.37861889600753784,.8538784384727478,0,-.05944233387708664,.0264605600386858,.07478221505880356,1],radius:.019088275730609894},"ring-finger-phalanx-proximal":{offsetMatrix:[.9842101335525513,.024470895528793335,.1753024309873581,0,.12200043350458145,.6237703561782837,-.7720272541046143,0,-.12824076414108276,.7812241315841675,.610936164855957,0,-.04249368980526924,.0467497780919075,.027722163125872612,1],radius:.00992213748395443},"ring-finger-phalanx-intermediate":{offsetMatrix:[.9941774606704712,.05949164181947708,.08983955532312393,0,.10504482686519623,-.7208291888237,-.6851072907447815,0,.024001073092222214,.6905553936958313,-.7228817939758301,0,-.0374927744269371,.016285063698887825,.0038980208337306976,1],radius:.007611672393977642},"ring-finger-phalanx-distal":{offsetMatrix:[.9995742440223694,.01638498157262802,.02412819117307663,0,.007813597097992897,-.9474818110466003,.31971633434295654,0,.028100071474909782,-.31939181685447693,-.9472070932388306,0,-.038130562752485275,-.0020653479732573032,.02310742810368538,1],radius:.007231088820844889},"ring-finger-tip":{offsetMatrix:[.9995742440223694,.01638498157262802,.02412819117307663,0,.007813597097992897,-.9474818110466003,.31971633434295654,0,.028100071474909782,-.31939181685447693,-.9472070932388306,0,-.0390593595802784,.004176302347332239,.0466572530567646,1],radius:.0062310886569321156},"pinky-finger-metacarpal":{offsetMatrix:[.9147363901138306,.3458845317363739,.20885537564754486,0,-.3923271894454956,.8839452862739563,.2544005811214447,0,-.09662359952926636,-.3146490156650543,.9442773461341858,0,-.06715242564678192,.024195827543735504,.07137546688318253,1],radius:.01808827556669712},"pinky-finger-phalanx-proximal":{offsetMatrix:[.9613109827041626,.22439135611057281,.15977802872657776,0,.01002211682498455,.5511574745178223,-.8343409299850464,0,-.27528178691864014,.8036624789237976,.5275853276252747,0,-.06273911893367767,.038559623062610626,.028268879279494286,1],radius:.008483353070914745},"pinky-finger-phalanx-intermediate":{offsetMatrix:[.9820972084999084,.18811029195785522,-.00995189044624567,0,.14063723385334015,-.7673450708389282,-.6256227493286133,0,-.12532226741313934,.6130226850509644,-.7800630927085876,0,-.05428232625126839,.013870777562260628,.012061242014169693,1],radius:.0067641944624483585},"pinky-finger-phalanx-distal":{offsetMatrix:[.9744614362716675,.20454788208007812,-.09265263378620148,0,.22429193556308746,-.9065253138542175,.35764020681381226,0,-.010836843401193619,-.3692878782749176,-.9292529225349426,0,-.05173685774207115,.0014194445684552193,.02790539152920246,1],radius:.0064259846694767475},"pinky-finger-tip":{offsetMatrix:[.9744614362716675,.20454788208007812,-.09265263378620148,0,.22429193556308746,-.9065253138542175,.35764020681381226,0,-.010836843401193619,-.3692878782749176,-.9292529225349426,0,-.05098633095622063,.008463085629045963,.048688892275094986,1],radius:.005425984505563974}},gripOffsetMatrix:[.005510995630174875,-.9149997234344482,-.40341615676879883,0,-.3571262061595917,-.37861889600753784,.8538784384727478,0,-.9340395331382751,.13936474919319153,-.32885703444480896,0,-.031803809106349945,.007837686687707901,.04313928261399269,1]},x5={jointTransforms:{wrist:{offsetMatrix:[.9616971015930176,-.13805118203163147,.2368120402097702,0,.0005348679260350764,.8648636937141418,.5020061135292053,0,-.2741127610206604,-.48265108466148376,.8318111300468445,0,-.04913589730858803,.0021463718730956316,.11701996624469757,1],radius:.021460847929120064},"thumb-metacarpal":{offsetMatrix:[-.07536252588033676,-.9959676265716553,-.04867160692811012,0,.5877083539962769,-.08379616588354111,.8047218918800354,0,-.8055551648139954,.032041035592556,.5916536450386047,0,-.010643752291798592,.0006936835707165301,.08736639469861984,1],radius:.019382517784833908},"thumb-phalanx-proximal":{offsetMatrix:[.1374533325433731,-.9904957413673401,.004982374142855406,0,.5534393787384033,.08097179979085922,.8289443850517273,0,-.8214688897132874,-.11118389666080475,.559309184551239,0,.015547193586826324,-.0003480653394944966,.0681300163269043,1],radius:.01228295173496008},"thumb-phalanx-distal":{offsetMatrix:[-.04659227654337883,-.9974699020385742,-.05369402840733528,0,.6812446117401123,-.07104194164276123,.728600800037384,0,-.7305715084075928,-.002631746232509613,.6828309893608093,0,.04330715537071228,.003409178927540779,.0492292083799839,1],radius:.009768804535269737},"thumb-tip":{offsetMatrix:[-.04659227654337883,-.9974699020385742,-.05369402840733528,0,.6812446117401123,-.07104194164276123,.728600800037384,0,-.7305715084075928,-.002631746232509613,.6828309893608093,0,.062003348022699356,.004069602582603693,.03322213143110275,1],radius:.008768804371356964},"index-finger-metacarpal":{offsetMatrix:[.9616971015930176,-.13805118203163147,.2368120402097702,0,.0005348679260350764,.8648636937141418,.5020061135292053,0,-.2741127610206604,-.48265108466148376,.8318111300468445,0,-.02009812369942665,.008770795539021492,.08660387247800827,1],radius:.021228281781077385},"index-finger-phalanx-proximal":{offsetMatrix:[.9001791477203369,-.2598813474178314,.3494834005832672,0,.06073702871799469,.8695210218429565,.490146666765213,0,-.4312632381916046,-.41999316215515137,.7985095381736755,0,-.00017739279428496957,.03890012577176094,.039073407649993896,1],radius:.010295259766280651},"index-finger-phalanx-intermediate":{offsetMatrix:[.9082008600234985,-.20898112654685974,.36262574791908264,0,.11045389622449875,.9553793668746948,.27395179867744446,0,-.40369608998298645,-.20874978601932526,.8907597661018372,0,.01617925800383091,.05482936650514603,.008788082748651505,1],radius:.00853810179978609},"index-finger-phalanx-distal":{offsetMatrix:[.9309692978858948,-.16783711314201355,.32423174381256104,0,.1080828532576561,.9749603867530823,.1943446695804596,0,-.34873148798942566,-.14588497579097748,.9257990717887878,0,.02599053829908371,.059902746230363846,-.012860597111284733,1],radius:.007636196445673704},"index-finger-tip":{offsetMatrix:[.9309692978858948,-.16783711314201355,.32423174381256104,0,.1080828532576561,.9749603867530823,.1943446695804596,0,-.34873148798942566,-.14588497579097748,.9257990717887878,0,.03362493962049484,.06421422213315964,-.033461250364780426,1],radius:.006636196281760931},"middle-finger-metacarpal":{offsetMatrix:[.9616971015930176,-.13805118203163147,.2368120402097702,0,.0005348679260350764,.8648636937141418,.5020061135292053,0,-.2741127610206604,-.48265108466148376,.8318111300468445,0,-.03627845644950867,.011579737067222595,.08550142496824265,1],radius:.021231964230537415},"middle-finger-phalanx-proximal":{offsetMatrix:[.9876697659492493,-.06786545366048813,.1410750150680542,0,-.015095947310328484,.855663537979126,.5173118710517883,0,-.15582047402858734,-.5130629539489746,.8440889716148376,0,-.021259509027004242,.04587256908416748,.03659208118915558,1],radius:.01117393933236599},"middle-finger-phalanx-intermediate":{offsetMatrix:[.988391637802124,-.04354291781783104,.14555205404758453,0,.008894841186702251,.9729899168014526,.23067504167556763,0,-.15166506171226501,-.22670257091522217,.9620829224586487,0,-.014570588245987892,.06789684295654297,.0003578895702958107,1],radius:.008030958473682404},"middle-finger-phalanx-distal":{offsetMatrix:[.9853697419166565,.044260796159505844,.16458062827587128,0,-.0757969319820404,.9787378311157227,.19059516489505768,0,-.1526455283164978,-.20028135180473328,.9677740931510925,0,-.010392282158136368,.07414241135120392,-.026147106662392616,1],radius:.007629410829395056},"middle-finger-tip":{offsetMatrix:[.9853697419166565,.044260796159505844,.16458062827587128,0,-.0757969319820404,.9787378311157227,.19059516489505768,0,-.1526455283164978,-.20028135180473328,.9677740931510925,0,-.0069718430750072,.08024183660745621,-.05014154314994812,1],radius:.006629410665482283},"ring-finger-metacarpal":{offsetMatrix:[.9616971015930176,-.13805118203163147,.2368120402097702,0,.0005348679260350764,.8648636937141418,.5020061135292053,0,-.2741127610206604,-.48265108466148376,.8318111300468445,0,-.05402477830648422,.015797706320881844,.08152295649051666,1],radius:.019088275730609894},"ring-finger-phalanx-proximal":{offsetMatrix:[.9940828680992126,.05735103040933609,.09224652498960495,0,-.10022822767496109,.8116500377655029,.5754809379577637,0,-.041867565363645554,-.5813214182853699,.8125960826873779,0,-.041623555123806,.04171867296099663,.03582974523305893,1],radius:.00992213748395443},"ring-finger-phalanx-intermediate":{offsetMatrix:[.9843675494194031,.12044742703437805,.12850022315979004,0,-.15629759430885315,.9337108135223389,.3221098482608795,0,-.08118485659360886,-.3371586799621582,.937940776348114,0,-.039990875869989395,.06438793987035751,.004141641780734062,1],radius:.007611672393977642},"ring-finger-phalanx-distal":{offsetMatrix:[.9748351573944092,.11857274919748306,.18877571821212769,0,-.15575434267520905,.9681083559989929,.19623035192489624,0,-.15948788821697235,-.22069483995437622,.9622148275375366,0,-.03783353418111801,.07334739714860916,-.020782606676220894,1],radius:.007231088820844889},"ring-finger-tip":{offsetMatrix:[.9748351573944092,.11857274919748306,.18877571821212769,0,-.15575434267520905,.9681083559989929,.19623035192489624,0,-.15948788821697235,-.22069483995437622,.9622148275375366,0,-.03445569798350334,.0802423357963562,-.04392268508672714,1],radius:.0062310886569321156},"pinky-finger-metacarpal":{offsetMatrix:[.9181402921676636,.35625091195106506,.17350243031978607,0,-.39615097641944885,.8352503180503845,.38134080171585083,0,-.009065053425729275,-.41885748505592346,.9080066680908203,0,-.06191859766840935,.013620133511722088,.07850203663110733,1],radius:.01808827556669712},"pinky-finger-phalanx-proximal":{offsetMatrix:[.9714386463165283,.236698180437088,-.016745081171393394,0,-.18462024629116058,.7982627749443054,.5733163952827454,0,.14906984567642212,-.5538501739501953,.8191629648208618,0,-.061502378433942795,.032741155475378036,.03705105185508728,1],radius:.008483353070914745},"pinky-finger-phalanx-intermediate":{offsetMatrix:[.9337416291236877,.35620439052581787,-.03527557849884033,0,-.33203884959220886,.8987522721290588,.28634607791900635,0,.13370157778263092,-.2556603252887726,.9574766755104065,0,-.06608185172080994,.049755651503801346,.011886020191013813,1],radius:.0067641944624483585},"pinky-finger-phalanx-distal":{offsetMatrix:[.9419984817504883,.3303581774234772,.059175245463848114,0,-.33483216166496277,.9130291938781738,.23294763267040253,0,.02292730286717415,-.2392500638961792,.970687210559845,0,-.0687975287437439,.054948460310697556,-.007561664097011089,1],radius:.0064259846694767475},"pinky-finger-tip":{offsetMatrix:[.9419984817504883,.3303581774234772,.059175245463848114,0,-.33483216166496277,.9130291938781738,.23294763267040253,0,.02292730286717415,-.2392500638961792,.970687210559845,0,-.06947512179613113,.0613851435482502,-.028543535619974136,1],radius:.005425984505563974}},gripOffsetMatrix:[-.0005348679260350764,-.8648636937141418,-.5020061135292053,0,-.2741127908229828,-.48265108466148376,.8318111896514893,0,-.9616971015930176,.13805119693279266,-.2368120402097702,0,-.02878567762672901,.0017147823236882687,.04536811262369156,1]},LS={profileId:"oculus-hand",fallbackProfileIds:["generic-hand","generic-hand-select","generic-trigger"],poses:{default:x5,pinch:v5,point:_5}},y5={mapping:Dd.None,buttons:[{id:"pinch",type:"analog",eventTrigger:"select"}],axes:[]},IS=ni(),DS=ns(),NS=ni(),US=ni(),OS=ns(),FS=ni(),kS=ni(),zS=ns(),BS=ni(),HS=(n,e,t,i)=>(Id(IS,e),Sm(DS,e),n_(NS,e),Id(US,t),Sm(OS,t),n_(FS,t),i_(kS,IS,US,i),Td(zS,DS,OS,i),i_(BS,NS,FS,i),$C(n,zS,kS,BS),n),S5=[1,-1,-1,0,-1,1,1,0,-1,1,1,0,-1,1,1,1],M5=n=>{for(let e=0;e<16;e++)n[e]*=S5[e]};class VS extends JT{constructor(e,t,i){if(t!==ar.Left&&t!==ar.Right)throw new DOMException('handedness for XRHandInput must be either "left" or "right"',"InvalidStateError");if(!e.poses.default||!e.poses.pinch)throw new DOMException('"default" and "pinch" hand pose configs are required',"InvalidStateError");const r=new Pn(i),s=new Pn(r),l=[e.profileId,...e.fallbackProfileIds],c=new ox;Object.values(Nd).forEach(d=>{c.set(d,new lx(d,r))});const u=new Qm(t,Em.TrackedPointer,l,r,new sx(y5),s,c);super(u),this[$o]={poseId:"default",poses:e.poses},this.updateHandPose()}get poseId(){return this[$o].poseId}set poseId(e){if(!this[$o].poses[e]){console.warn(`Pose config ${e} not found`);return}this[$o].poseId=e}updateHandPose(){const e=this[$o].poses[this[$o].poseId],t=this[$o].poses.pinch;Object.values(Nd).forEach(i=>{const r=e.jointTransforms[i].offsetMatrix,s=t.jointTransforms[i].offsetMatrix,l=this.inputSource.hand.get(i);HS(l[kn].offsetMatrix,r,s,this.pinchValue),this.inputSource.handedness===ar.Right&&M5(l[kn].offsetMatrix),l[Tl].radius=(1-this.pinchValue)*e.jointTransforms[i].radius+this.pinchValue*t.jointTransforms[i].radius}),e.gripOffsetMatrix&&t.gripOffsetMatrix&&HS(this.inputSource.gripSpace[kn].offsetMatrix,e.gripOffsetMatrix,t.gripOffsetMatrix,this.pinchValue)}get pinchValue(){return this[bn].inputSource.gamepad[Mt].buttonsMap.pinch.value}updatePinchValue(e){if(e>1||e<0){console.warn(`Out-of-range value ${e} provided for pinch`);return}const t=this[bn].inputSource.gamepad[Mt].buttonsMap.pinch;t[Mt].pendingValue=e}onFrameStart(e){super.onFrameStart(e),this.updateHandPose()}}class lA extends EventTarget{}const E5={antialias:!0,depth:!0,stencil:!1,alpha:!0,ignoreDepthValues:!1,framebufferScaleFactor:1};let w5=class extends lA{constructor(e,t,i={}){if(super(),e[fe].ended)throw new DOMException("Session has ended","InvalidStateError");const r={...E5,...i};this[to]={session:e,context:t,antialias:r.antialias}}get context(){return this[to].context}get antialias(){return this[to].antialias}get ignoreDepthValues(){return!0}get framebuffer(){return null}get framebufferWidth(){return this[to].context.drawingBufferWidth}get framebufferHeight(){return this[to].context.drawingBufferHeight}getViewport(e){if(e[cl].session!==this[to].session)throw new DOMException("View's session differs from Layer's session","InvalidStateError");return this[to].session[fe].device[Ue].getViewport(this,e)}static getNativeFramebufferScaleFactor(e){if(!(e instanceof ax))throw new TypeError("getNativeFramebufferScaleFactor must be passed a session.");return e[fe].ended?0:1}};class T5{constructor(e,t,i){const{schema:r,frames:s}=t;if(!s||!r||s.length===0)throw new DOMException("wrong recording format","NotSupportedError");const l=new Il(ei.Viewer,e),c={[_n.Left]:new Pn(l),[_n.Right]:new Pn(l),[_n.None]:new Pn(l)};this[zt]={refSpace:e,inputSources:new Map,inputSchemas:new Map,frames:s,recordedFramePointer:0,startingTimeStamp:s[0][0],endingTimeStamp:s[s.length-1][0],playbackTime:s[0][0],playing:!1,viewerSpace:l,viewSpaces:c,vec3:ni(),quat:ns()},Lu(this[zt].viewSpaces[_n.Left][kn].offsetMatrix,ts(-i/2,0,0)),Lu(this[zt].viewSpaces[_n.Right][kn].offsetMatrix,ts(i/2,0,0)),r.forEach(u=>{const d=u[0],h=u[1];let m;if(h.hasGamepad){const S=[];for(let g=0;g<h.numButtons;g++)S.push({id:g.toString(),type:"manual"});const v=[];for(let g=0;g<h.numAxes;g++)v.push({id:g.toString(),type:"manual"});m=new sx({mapping:h.mapping,buttons:S,axes:v})}const p=new Pn(e);let x;h.hasHand&&(x=new ox,Object.values(Nd).forEach(S=>{x.set(S,new lx(S,p))}));const y=new Qm(h.handedness,h.targetRayMode,h.profiles,p,m,h.hasGrip?new Pn(e):void 0,h.hasHand?x:void 0);this[zt].inputSources.set(d,{active:!1,source:y}),this[zt].inputSchemas.set(d,h)})}play(){this[zt].recordedFramePointer=0,this[zt].playbackTime=this[zt].startingTimeStamp,this[zt].playing=!0,this[zt].actualTimeStamp=performance.now()}stop(){this[zt].playing=!1}get playing(){return this[zt].playing}get viewerSpace(){return this[zt].viewerSpace}get viewSpaces(){return this[zt].viewSpaces}get inputSources(){return Array.from(this[zt].inputSources.values()).filter(e=>e.active).map(e=>e.source)}playFrame(){const e=performance.now(),t=e-this[zt].actualTimeStamp;if(this[zt].actualTimeStamp=e,this[zt].playbackTime+=t,this[zt].playbackTime>this[zt].endingTimeStamp){this.stop();return}for(;this[zt].frames[this[zt].recordedFramePointer+1][0]<this[zt].playbackTime;)this[zt].recordedFramePointer++;const i=this[zt].frames[this[zt].recordedFramePointer],r=this[zt].frames[this[zt].recordedFramePointer+1],s=(this[zt].playbackTime-i[0])/(r[0]-i[0]);this.updateXRSpaceFromMergedFrames(this[zt].viewerSpace,i.slice(1,8),r.slice(1,8),s);const l=new Map;for(let u=8;u<i.length;u++){const{index:d,inputData:h}=this.processRawInputData(i[u]);l.set(d,h)}const c=new Map;for(let u=8;u<r.length;u++){const{index:d,inputData:h}=this.processRawInputData(r[u]);c.set(d,h)}this[zt].inputSources.forEach(u=>{u.active=!1}),c.forEach((u,d)=>{this[zt].inputSources.get(d).active=!0;const h=this[zt].inputSources.get(d).source,m=this[zt].inputSchemas.get(d);this.updateInputSource(h,m,l.has(d)?l.get(d):u,u,s)})}updateInputSource(e,t,i,r,s){if(this.updateXRSpaceFromMergedFrames(e.targetRaySpace,i.targetRayTransform,r.targetRayTransform,s),t.hasGrip&&this.updateXRSpaceFromMergedFrames(e.gripSpace,i.gripTransform,r.gripTransform,s),t.hasHand)for(let l=0;l<25;l++){const c=i.handTransforms.slice(l*8,l*8+7),u=r.handTransforms.slice(l*8,l*8+7),d=i.handTransforms[l*8+7],h=r.handTransforms[l*8+7],m=e.hand.get(t.jointSequence[l]);this.updateXRSpaceFromMergedFrames(m,c,u,s),m[Tl].radius=(h-d)*s+d}if(t.hasGamepad){const l=e.gamepad;r.buttons.forEach((c,u)=>{const d=l.buttons[u];d[Mt].pressed=c[0]===1,d[Mt].touched=c[1]===1;const h=i.buttons[u][2],m=c[2];d[Mt].value=(m-h)*s+h}),r.axes.forEach((c,u)=>{const d=i.axes[u];l[Mt].axesMap[u.toString()].x=(c-d)*s+d})}}updateXRSpaceFromMergedFrames(e,t,i,r){const s=ts(t[0],t[1],t[2]),l=Mm(t[3],t[4],t[5],t[6]),c=ts(i[0],i[1],i[2]),u=Mm(i[3],i[4],i[5],i[6]);i_(this[zt].vec3,s,c,r),Td(this[zt].quat,l,u,r),Hd(e[kn].offsetMatrix,this[zt].quat,this[zt].vec3)}processRawInputData(e){const t=e[0],i=this[zt].inputSchemas.get(t),s={targetRayTransform:e.slice(1,8)};let l=8;if(i.hasGrip&&(s.gripTransform=e[l++]),i.hasHand&&(s.handTransforms=e[l++]),i.hasGamepad){const c=e[l];s.buttons=c.slice(0,i.numButtons),s.axes=c.slice(i.numButtons)}return{index:t,inputData:s}}}const GS="2.0.1";class WS extends Event{constructor(e,t){if(super(e,t),!t.referenceSpace)throw new Error("XRReferenceSpaceEventInit.referenceSpace is required");this.referenceSpace=t.referenceSpace,this.transform=t.transform}}class $S extends EventTarget{constructor(e){super(),this[wr]={device:e,grantSession:({resolve:t,reject:i,mode:r,options:s})=>{if(this[wr].activeSession){i(new DOMException("An active XRSession already exists.","InvalidStateError"));return}const{requiredFeatures:l=[],optionalFeatures:c=[]}=s,{supportedFeatures:u}=this[wr].device;if(!l.every(x=>u.includes(x))){i(new Error("One or more required features are not supported by the device."));return}const h=c.filter(x=>u.includes(x)),m=Array.from(new Set([...l,...h,"viewer","local"])),p=new ax(this[wr].device,r,m);this[wr].activeSession=p,p.addEventListener("end",()=>{this[wr].activeSession=void 0}),t(p)}}}isSessionSupported(e){return new Promise((t,i)=>{t(e==="inline"?!0:this[wr].device.supportedSessionModes.includes(e))})}requestSession(e,t={}){return new Promise((i,r)=>{this.isSessionSupported(e).then(s=>{if(!s){r(new DOMException("The requested XRSession mode is not supported.","NotSupportedError"));return}const l={resolve:i,reject:r,mode:e,options:t};this[wr].grantSession(l)}).catch(r)})}offerSession(e,t={}){return new Promise((i,r)=>{this.isSessionSupported(e).then(s=>{if(!s){r(new DOMException("The requested XRSession mode is not supported.","NotSupportedError"));return}this[wr].offeredSessionConfig={resolve:i,reject:r,mode:e,options:t}}).catch(r)})}}class Jh{constructor(e,t,i,r){this[Kf]={x:e,y:t,width:i,height:r}}get x(){return this[Kf].x}get y(){return this[Kf].y}get width(){return this[Kf].width}get height(){return this[Kf].height}}const Zf={ipd:.063,fovy:Math.PI/2,headsetPosition:new Al(0,1.6,0),headsetQuaternion:new Ad,stereoEnabled:!1},A5=1,b5=2,R5=3,C5=4;class P5{constructor(e,t={}){var i,r,s,l,c,u;this.version=GS;const d=new i5,h=new Il(ei.Viewer,d),m={[_n.Left]:new Pn(h),[_n.Right]:new Pn(h),[_n.None]:new Pn(h)},p=e.controllerConfig,x={};p&&Object.values(ar).forEach(v=>{p.layout[v]&&(x[v]=new a5(p,v,d))});const y={[ar.Left]:new VS(LS,ar.Left,d),[ar.Right]:new VS(LS,ar.Right,d)},S=(i=t.canvasContainer)!==null&&i!==void 0?i:document.createElement("div");S.dataset.webxr_runtime=`Immersive Web Emulation Runtime v${GS}`,S.style.position="fixed",S.style.width="100%",S.style.height="100%",S.style.top="0",S.style.left="0",S.style.display="flex",S.style.justifyContent="center",S.style.alignItems="center",S.style.overflow="hidden",S.style.zIndex="999",this[Ue]={name:e.name,supportedSessionModes:e.supportedSessionModes,supportedFeatures:e.supportedFeatures,supportedFrameRates:e.supportedFrameRates,isSystemKeyboardSupported:e.isSystemKeyboardSupported,internalNominalFrameRate:e.internalNominalFrameRate,environmentBlendModes:e.environmentBlendModes,interactionMode:e.interactionMode,userAgent:e.userAgent,position:(r=t.headsetPosition)!==null&&r!==void 0?r:Zf.headsetPosition.clone(),quaternion:(s=t.headsetQuaternion)!==null&&s!==void 0?s:Zf.headsetQuaternion.clone(),stereoEnabled:(l=t.stereoEnabled)!==null&&l!==void 0?l:Zf.stereoEnabled,ipd:(c=t.ipd)!==null&&c!==void 0?c:Zf.ipd,fovy:(u=t.fovy)!==null&&u!==void 0?u:Zf.fovy,controllers:x,hands:y,primaryInputMode:"controller",pendingReferenceSpaceReset:!1,visibilityState:"visible",pendingVisibilityState:null,xrSystem:null,matrix:ii(),globalSpace:d,viewerSpace:h,viewSpaces:m,canvasContainer:S,getViewport:(v,g)=>{const P=v.context.canvas,{width:w,height:C}=P;switch(g.eye){case _n.None:return new Jh(0,0,w,C);case _n.Left:return new Jh(0,0,this[Ue].stereoEnabled?w/2:w,C);case _n.Right:return new Jh(w/2,0,this[Ue].stereoEnabled?w/2:0,C)}},updateViews:()=>{const v=this[Ue].viewerSpace;Hd(v[kn].offsetMatrix,this[Ue].quaternion.quat,this[Ue].position.vec3),Lu(this[Ue].viewSpaces[_n.Left][kn].offsetMatrix,ts(-this[Ue].ipd/2,0,0)),Lu(this[Ue].viewSpaces[_n.Right][kn].offsetMatrix,ts(this[Ue].ipd/2,0,0))},onBaseLayerSet:v=>{if(!v)return;const g=v.context.canvas;if(g.parentElement!==this[Ue].canvasContainer){const P=this[Ue].devui;if(P){const{devUICanvas:C,devUIContainer:z}=P;C.style.zIndex=R5.toString(),z.style.zIndex=C5.toString(),this[Ue].canvasContainer.appendChild(P.devUICanvas),this[Ue].canvasContainer.appendChild(P.devUIContainer)}const w=this[Ue].sem;w&&(w.environmentCanvas.style.zIndex=A5.toString(),this[Ue].canvasContainer.appendChild(w.environmentCanvas)),this[Ue].canvasData={canvas:g,parent:g.parentElement,width:g.width,height:g.height,zIndex:g.style.zIndex},g.style.zIndex=b5.toString(),this[Ue].canvasContainer.appendChild(g),document.body.appendChild(this[Ue].canvasContainer)}g.width=window.innerWidth,g.height=window.innerHeight},onSessionEnd:()=>{if(this[Ue].canvasData){const{canvas:v,parent:g,width:P,height:w,zIndex:C}=this[Ue].canvasData;v.width=P,v.height=w,v.style.zIndex=C,g?g.appendChild(v):this[Ue].canvasContainer.removeChild(v);const z=this[Ue].devui;z&&(this[Ue].canvasContainer.removeChild(z.devUICanvas),this[Ue].canvasContainer.removeChild(z.devUIContainer));const L=this[Ue].sem;L&&this[Ue].canvasContainer.removeChild(L.environmentCanvas),document.body.removeChild(this[Ue].canvasContainer),this[Ue].canvasData=void 0,window.dispatchEvent(new Event("resize"))}},onFrameStart:v=>{var g;if(!((g=this[Ue].actionPlayer)===null||g===void 0)&&g.playing)this[Ue].actionPlayer.playFrame();else{const P=v.session;this[Ue].updateViews(),this[Ue].pendingVisibilityState&&(this[Ue].visibilityState=this[Ue].pendingVisibilityState,this[Ue].pendingVisibilityState=null,P.dispatchEvent(new Tm("visibilitychange",{session:P}))),this[Ue].visibilityState==="visible"&&this.activeInputs.forEach(w=>{w.onFrameStart(v)}),this[Ue].pendingReferenceSpaceReset&&(P[fe].referenceSpaces.forEach(w=>{switch(w[so].type){case ei.Local:case ei.LocalFloor:case ei.BoundedFloor:case ei.Unbounded:w.dispatchEvent(new WS("reset",{referenceSpace:w}));break}}),this[Ue].pendingReferenceSpaceReset=!1)}this[Ue].updateViews()}},this[Ue].updateViews()}installRuntime(e=globalThis){Object.defineProperty(WebGL2RenderingContext.prototype,"makeXRCompatible",{value:function(){return new Promise((t,i)=>{t(!0)})},configurable:!0}),this[Ue].xrSystem=new $S(this),Object.defineProperty(globalThis.navigator,"xr",{value:this[Ue].xrSystem,configurable:!0}),Object.defineProperty(navigator,"userAgent",{value:this[Ue].userAgent,writable:!1,configurable:!1,enumerable:!0}),e.XRSystem=$S,e.XRSession=ax,e.XRRenderState=a_,e.XRFrame=oA,e.XRSpace=Pn,e.XRReferenceSpace=Il,e.XRJointSpace=lx,e.XRView=rA,e.XRViewport=Jh,e.XRRigidTransform=Hl,e.XRPose=Jm,e.XRViewerPose=aA,e.XRJointPose=sA,e.XRInputSource=Qm,e.XRInputSourceArray=s5,e.XRHand=ox,e.XRLayer=lA,e.XRWebGLLayer=w5,e.XRSessionEvent=Tm,e.XRInputSourceEvent=sm,e.XRInputSourcesChangeEvent=nA,e.XRReferenceSpaceEvent=WS}installDevUI(e){this[Ue].devui=new e(this)}installSEM(e){this[Ue].sem=new e(this)}get supportedSessionModes(){return this[Ue].supportedSessionModes}get supportedFeatures(){return this[Ue].supportedFeatures}get supportedFrameRates(){return this[Ue].supportedFrameRates}get isSystemKeyboardSupported(){return this[Ue].isSystemKeyboardSupported}get internalNominalFrameRate(){return this[Ue].internalNominalFrameRate}get stereoEnabled(){return this[Ue].stereoEnabled}set stereoEnabled(e){this[Ue].stereoEnabled=e}get ipd(){return this[Ue].ipd}set ipd(e){this[Ue].ipd=e}get fovy(){return this[Ue].fovy}set fovy(e){this[Ue].fovy=e}get position(){return this[Ue].position}get quaternion(){return this[Ue].quaternion}get viewerSpace(){var e;return!((e=this[Ue].actionPlayer)===null||e===void 0)&&e.playing?this[Ue].actionPlayer.viewerSpace:this[Ue].viewerSpace}get viewSpaces(){var e;return!((e=this[Ue].actionPlayer)===null||e===void 0)&&e.playing?this[Ue].actionPlayer.viewSpaces:this[Ue].viewSpaces}get controllers(){return this[Ue].controllers}get hands(){return this[Ue].hands}get primaryInputMode(){return this[Ue].primaryInputMode}set primaryInputMode(e){if(e!=="controller"&&e!=="hand"){console.warn('primary input mode can only be "controller" or "hand"');return}this[Ue].primaryInputMode=e}get activeInputs(){return this[Ue].visibilityState!=="visible"?[]:(this[Ue].primaryInputMode==="controller"?Object.values(this[Ue].controllers):Object.values(this[Ue].hands)).filter(t=>t.connected)}get inputSources(){var e;return!((e=this[Ue].actionPlayer)===null||e===void 0)&&e.playing?this[Ue].actionPlayer.inputSources:this.activeInputs.map(t=>t.inputSource)}get canvasContainer(){return this[Ue].canvasContainer}get canvasDimensions(){if(this[Ue].canvasData){const{width:e,height:t}=this[Ue].canvasData.canvas;return{width:e,height:t}}}get activeSession(){var e;return(e=this[Ue].xrSystem)===null||e===void 0?void 0:e[wr].activeSession}get sessionOffered(){var e;return!!(!((e=this[Ue].xrSystem)===null||e===void 0)&&e[wr].offeredSessionConfig)}get name(){return this[Ue].name}grantOfferedSession(){var e;const t=(e=this[Ue].xrSystem)===null||e===void 0?void 0:e[wr];t&&t.offeredSessionConfig&&(t.grantSession(t.offeredSessionConfig),t.offeredSessionConfig=void 0)}recenter(){const e=new Al(-this.position.x,0,-this.position.z),t=new Al(0,0,-1).applyQuaternion(this.quaternion);t.y=0,t.normalize();const i=Math.atan2(t.x,-t.z),r=new Ad().setFromAxisAngle(new Al(0,1,0),i);this.position.add(e),this.quaternion.multiply(r),[...Object.values(this[Ue].controllers),...Object.values(this[Ue].hands)].forEach(s=>{s.position.add(e),s.quaternion.multiply(r),s.position.applyQuaternion(r)}),this[Ue].pendingReferenceSpaceReset=!0}get visibilityState(){return this[Ue].visibilityState}updateVisibilityState(e){if(!Object.values(["visible","visible-blurred","hidden"]).includes(e))throw new DOMException("Invalid XRVisibilityState value","NotSupportedError");e!==this[Ue].visibilityState&&(this[Ue].pendingVisibilityState=e)}createActionPlayer(e,t){return this[Ue].actionPlayer=new T5(e,t,this[Ue].ipd),this[Ue].actionPlayer}get devui(){return this[Ue].devui}get sem(){return this[Ue].sem}}const e0={mapping:Dd.XRStandard,buttons:[{id:"trigger",type:"analog",eventTrigger:"select"},{id:"squeeze",type:"analog",eventTrigger:"squeeze"},null,{id:"thumbstick",type:"binary"},{id:"x-button",type:"binary"},{id:"y-button",type:"binary"},{id:"thumbrest",type:"binary"}],axes:[null,null,{id:"thumbstick",type:"x-axis"},{id:"thumbstick",type:"y-axis"}]},t0={mapping:Dd.XRStandard,buttons:[{id:"trigger",type:"analog",eventTrigger:"select"},{id:"squeeze",type:"analog",eventTrigger:"squeeze"},null,{id:"thumbstick",type:"binary"},{id:"a-button",type:"binary"},{id:"b-button",type:"binary"},{id:"thumbrest",type:"binary"}],axes:[null,null,{id:"thumbstick",type:"x-axis"},{id:"thumbstick",type:"y-axis"}]},L5={profileId:"oculus-touch-v2",fallbackProfileIds:["oculus-touch","generic-trigger-squeeze-thumbstick"],layout:{left:{gamepad:e0,gripOffsetMatrix:[.9925461411476135,4673031295254759e-24,-.12186938524246216,0,.08617470413446426,.7071065306663513,.7018362283706665,0,.0861746296286583,-.70710688829422,.7018358707427979,0,-.003979847766458988,-.01585787907242775,.04964185878634453,1],numHapticActuators:1},right:{gamepad:t0,gripOffsetMatrix:[.9925461411476135,3688163374704345e-23,.12186937034130096,0,-.08617469668388367,.7071066498756409,.7018361687660217,0,-.0861746147274971,-.7071068286895752,.7018359899520874,0,.003979853354394436,-.01585787907242775,.04964182525873184,1],numHapticActuators:1}}},I5={profileId:"oculus-touch-v3",fallbackProfileIds:["oculus-touch","generic-trigger-squeeze-thumbstick"],layout:{left:{gamepad:e0,gripOffsetMatrix:[.9925461411476135,20823669899527886e-24,-.12186937034130096,0,.08617465198040009,.7071067094802856,.701836109161377,0,.08617466688156128,-.7071067690849304,.7018360495567322,0,-.003979838453233242,-.015857907012104988,.04964181408286095,1],numHapticActuators:1},right:{gamepad:t0,gripOffsetMatrix:[.9925461411476135,-8329467959811154e-23,.12186941504478455,0,-.08617465943098068,.7071066498756409,.7018361687660217,0,-.08617471158504486,-.7071068286895752,.7018359303474426,0,.003979798872023821,-.015857888385653496,.049641866236925125,1],numHapticActuators:1}}},D5={profileId:"meta-quest-touch-pro",fallbackProfileIds:["oculus-touch-v2","oculus-touch","generic-trigger-squeeze-thumbstick"],layout:{left:{gamepad:e0,gripOffsetMatrix:[.9925461411476135,-15779937356796836e-24,-.12186935544013977,0,.08617467433214188,.7071067094802856,.701836109161377,0,.0861746296286583,-.7071067690849304,.7018360495567322,0,-.003979836590588093,-.015857847407460213,.049641840159893036,1],numHapticActuators:3},right:{gamepad:t0,gripOffsetMatrix:[.9925461411476135,9267653311439972e-26,.12186937034130096,0,-.08617467433214188,.7071067094802856,.7018361687660217,0,-.08617464452981949,-.7071067690849304,.7018360495567322,0,.003979847766458988,-.01585782691836357,.04964186251163483,1],numHapticActuators:3}}},N5={profileId:"meta-quest-touch-plus",fallbackProfileIds:["oculus-touch-v3","oculus-touch","generic-trigger-squeeze-thumbstick"],layout:{left:{gamepad:e0,gripOffsetMatrix:[.9925461411476135,10736208366779465e-24,-.12186933308839798,0,.08617459982633591,.70710688829422,.7018360495567322,0,.08617466688156128,-.7071067094802856,.7018362283706665,0,-.003979803062975407,-.015857873484492302,.04964187368750572,1],numHapticActuators:1},right:{gamepad:t0,gripOffsetMatrix:[.9925461411476135,-26238110351073374e-24,.12186934053897858,0,-.0861746147274971,.7071067690849304,.7018360495567322,0,-.08617465943098068,-.7071067094802856,.701836109161377,0,.003979838453233242,-.015857869759202003,.04964182525873184,1],numHapticActuators:1}}},U5={name:"Oculus Quest 1",controllerConfig:L5,supportedSessionModes:["inline","immersive-vr","immersive-ar"],supportedFeatures:["viewer","local","local-floor","bounded-floor","unbounded","anchors","plane-detection","hand-tracking"],supportedFrameRates:[72,80,90],isSystemKeyboardSupported:!0,internalNominalFrameRate:72,environmentBlendModes:{"immersive-vr":as.Opaque,"immersive-ar":as.AlphaBlend},interactionMode:Du.WorldSpace,userAgent:"Mozilla/5.0 (X11; Linux x86_64; Quest 1) AppleWebKit/537.36 (KHTML, like Gecko) OculusBrowser/33.0.0.x.x.x Chrome/126.0.6478.122 VR Safari/537.36"},O5={name:"Meta Quest 2",controllerConfig:I5,supportedSessionModes:["inline","immersive-vr","immersive-ar"],supportedFeatures:["viewer","local","local-floor","bounded-floor","unbounded","anchors","plane-detection","mesh-detection","hit-test","hand-tracking"],supportedFrameRates:[72,80,90,120],isSystemKeyboardSupported:!0,internalNominalFrameRate:72,environmentBlendModes:{"immersive-vr":as.Opaque,"immersive-ar":as.AlphaBlend},interactionMode:Du.WorldSpace,userAgent:"Mozilla/5.0 (X11; Linux x86_64; Quest 2) AppleWebKit/537.36 (KHTML, like Gecko) OculusBrowser/33.0.0.x.x.x Chrome/126.0.6478.122 VR Safari/537.36"},F5={name:"Meta Quest Pro",controllerConfig:D5,supportedSessionModes:["inline","immersive-vr","immersive-ar"],supportedFeatures:["viewer","local","local-floor","bounded-floor","unbounded","anchors","plane-detection","mesh-detection","hit-test","hand-tracking"],supportedFrameRates:[72,80,90,120],isSystemKeyboardSupported:!0,internalNominalFrameRate:90,environmentBlendModes:{"immersive-vr":as.Opaque,"immersive-ar":as.AlphaBlend},interactionMode:Du.WorldSpace,userAgent:"Mozilla/5.0 (X11; Linux x86_64; Quest Pro) AppleWebKit/537.36 (KHTML, like Gecko) OculusBrowser/33.0.0.x.x.x Chrome/126.0.6478.122 VR Safari/537.36"},k5={name:"Meta Quest 3",controllerConfig:N5,supportedSessionModes:["inline","immersive-vr","immersive-ar"],supportedFeatures:["viewer","local","local-floor","bounded-floor","unbounded","anchors","plane-detection","mesh-detection","hit-test","hand-tracking","depth-sensing"],supportedFrameRates:[72,80,90,120],isSystemKeyboardSupported:!0,internalNominalFrameRate:90,environmentBlendModes:{"immersive-vr":as.Opaque,"immersive-ar":as.AlphaBlend},interactionMode:Du.WorldSpace,userAgent:"Mozilla/5.0 (X11; Linux x86_64; Quest 3) AppleWebKit/537.36 (KHTML, like Gecko) OculusBrowser/33.0.0.x.x.x Chrome/126.0.6478.122 VR Safari/537.36"};var s1={exports:{}},Qf={},a1={exports:{}},Bt={};/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var XS;function z5(){if(XS)return Bt;XS=1;var n=Symbol.for("react.element"),e=Symbol.for("react.portal"),t=Symbol.for("react.fragment"),i=Symbol.for("react.strict_mode"),r=Symbol.for("react.profiler"),s=Symbol.for("react.provider"),l=Symbol.for("react.context"),c=Symbol.for("react.forward_ref"),u=Symbol.for("react.suspense"),d=Symbol.for("react.memo"),h=Symbol.for("react.lazy"),m=Symbol.iterator;function p(X){return X===null||typeof X!="object"?null:(X=m&&X[m]||X["@@iterator"],typeof X=="function"?X:null)}var x={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},y=Object.assign,S={};function v(X,he,He){this.props=X,this.context=he,this.refs=S,this.updater=He||x}v.prototype.isReactComponent={},v.prototype.setState=function(X,he){if(typeof X!="object"&&typeof X!="function"&&X!=null)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,X,he,"setState")},v.prototype.forceUpdate=function(X){this.updater.enqueueForceUpdate(this,X,"forceUpdate")};function g(){}g.prototype=v.prototype;function P(X,he,He){this.props=X,this.context=he,this.refs=S,this.updater=He||x}var w=P.prototype=new g;w.constructor=P,y(w,v.prototype),w.isPureReactComponent=!0;var C=Array.isArray,z=Object.prototype.hasOwnProperty,L={current:null},D={key:!0,ref:!0,__self:!0,__source:!0};function V(X,he,He){var Y,ie={},xe=null,pe=null;if(he!=null)for(Y in he.ref!==void 0&&(pe=he.ref),he.key!==void 0&&(xe=""+he.key),he)z.call(he,Y)&&!D.hasOwnProperty(Y)&&(ie[Y]=he[Y]);var Oe=arguments.length-2;if(Oe===1)ie.children=He;else if(1<Oe){for(var Ne=Array(Oe),Ye=0;Ye<Oe;Ye++)Ne[Ye]=arguments[Ye+2];ie.children=Ne}if(X&&X.defaultProps)for(Y in Oe=X.defaultProps,Oe)ie[Y]===void 0&&(ie[Y]=Oe[Y]);return{$$typeof:n,type:X,key:xe,ref:pe,props:ie,_owner:L.current}}function R(X,he){return{$$typeof:n,type:X.type,key:he,ref:X.ref,props:X.props,_owner:X._owner}}function T(X){return typeof X=="object"&&X!==null&&X.$$typeof===n}function O(X){var he={"=":"=0",":":"=2"};return"$"+X.replace(/[=:]/g,function(He){return he[He]})}var Z=/\/+/g;function W(X,he){return typeof X=="object"&&X!==null&&X.key!=null?O(""+X.key):he.toString(36)}function K(X,he,He,Y,ie){var xe=typeof X;(xe==="undefined"||xe==="boolean")&&(X=null);var pe=!1;if(X===null)pe=!0;else switch(xe){case"string":case"number":pe=!0;break;case"object":switch(X.$$typeof){case n:case e:pe=!0}}if(pe)return pe=X,ie=ie(pe),X=Y===""?"."+W(pe,0):Y,C(ie)?(He="",X!=null&&(He=X.replace(Z,"$&/")+"/"),K(ie,he,He,"",function(Ye){return Ye})):ie!=null&&(T(ie)&&(ie=R(ie,He+(!ie.key||pe&&pe.key===ie.key?"":(""+ie.key).replace(Z,"$&/")+"/")+X)),he.push(ie)),1;if(pe=0,Y=Y===""?".":Y+":",C(X))for(var Oe=0;Oe<X.length;Oe++){xe=X[Oe];var Ne=Y+W(xe,Oe);pe+=K(xe,he,He,Ne,ie)}else if(Ne=p(X),typeof Ne=="function")for(X=Ne.call(X),Oe=0;!(xe=X.next()).done;)xe=xe.value,Ne=Y+W(xe,Oe++),pe+=K(xe,he,He,Ne,ie);else if(xe==="object")throw he=String(X),Error("Objects are not valid as a React child (found: "+(he==="[object Object]"?"object with keys {"+Object.keys(X).join(", ")+"}":he)+"). If you meant to render a collection of children, use an array instead.");return pe}function ne(X,he,He){if(X==null)return X;var Y=[],ie=0;return K(X,Y,"","",function(xe){return he.call(He,xe,ie++)}),Y}function Q(X){if(X._status===-1){var he=X._result;he=he(),he.then(function(He){(X._status===0||X._status===-1)&&(X._status=1,X._result=He)},function(He){(X._status===0||X._status===-1)&&(X._status=2,X._result=He)}),X._status===-1&&(X._status=0,X._result=he)}if(X._status===1)return X._result.default;throw X._result}var se={current:null},G={transition:null},de={ReactCurrentDispatcher:se,ReactCurrentBatchConfig:G,ReactCurrentOwner:L};function le(){throw Error("act(...) is not supported in production builds of React.")}return Bt.Children={map:ne,forEach:function(X,he,He){ne(X,function(){he.apply(this,arguments)},He)},count:function(X){var he=0;return ne(X,function(){he++}),he},toArray:function(X){return ne(X,function(he){return he})||[]},only:function(X){if(!T(X))throw Error("React.Children.only expected to receive a single React element child.");return X}},Bt.Component=v,Bt.Fragment=t,Bt.Profiler=r,Bt.PureComponent=P,Bt.StrictMode=i,Bt.Suspense=u,Bt.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=de,Bt.act=le,Bt.cloneElement=function(X,he,He){if(X==null)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+X+".");var Y=y({},X.props),ie=X.key,xe=X.ref,pe=X._owner;if(he!=null){if(he.ref!==void 0&&(xe=he.ref,pe=L.current),he.key!==void 0&&(ie=""+he.key),X.type&&X.type.defaultProps)var Oe=X.type.defaultProps;for(Ne in he)z.call(he,Ne)&&!D.hasOwnProperty(Ne)&&(Y[Ne]=he[Ne]===void 0&&Oe!==void 0?Oe[Ne]:he[Ne])}var Ne=arguments.length-2;if(Ne===1)Y.children=He;else if(1<Ne){Oe=Array(Ne);for(var Ye=0;Ye<Ne;Ye++)Oe[Ye]=arguments[Ye+2];Y.children=Oe}return{$$typeof:n,type:X.type,key:ie,ref:xe,props:Y,_owner:pe}},Bt.createContext=function(X){return X={$$typeof:l,_currentValue:X,_currentValue2:X,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null},X.Provider={$$typeof:s,_context:X},X.Consumer=X},Bt.createElement=V,Bt.createFactory=function(X){var he=V.bind(null,X);return he.type=X,he},Bt.createRef=function(){return{current:null}},Bt.forwardRef=function(X){return{$$typeof:c,render:X}},Bt.isValidElement=T,Bt.lazy=function(X){return{$$typeof:h,_payload:{_status:-1,_result:X},_init:Q}},Bt.memo=function(X,he){return{$$typeof:d,type:X,compare:he===void 0?null:he}},Bt.startTransition=function(X){var he=G.transition;G.transition={};try{X()}finally{G.transition=he}},Bt.unstable_act=le,Bt.useCallback=function(X,he){return se.current.useCallback(X,he)},Bt.useContext=function(X){return se.current.useContext(X)},Bt.useDebugValue=function(){},Bt.useDeferredValue=function(X){return se.current.useDeferredValue(X)},Bt.useEffect=function(X,he){return se.current.useEffect(X,he)},Bt.useId=function(){return se.current.useId()},Bt.useImperativeHandle=function(X,he,He){return se.current.useImperativeHandle(X,he,He)},Bt.useInsertionEffect=function(X,he){return se.current.useInsertionEffect(X,he)},Bt.useLayoutEffect=function(X,he){return se.current.useLayoutEffect(X,he)},Bt.useMemo=function(X,he){return se.current.useMemo(X,he)},Bt.useReducer=function(X,he,He){return se.current.useReducer(X,he,He)},Bt.useRef=function(X){return se.current.useRef(X)},Bt.useState=function(X){return se.current.useState(X)},Bt.useSyncExternalStore=function(X,he,He){return se.current.useSyncExternalStore(X,he,He)},Bt.useTransition=function(){return se.current.useTransition()},Bt.version="18.3.1",Bt}var qS;function cx(){return qS||(qS=1,a1.exports=z5()),a1.exports}/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var jS;function B5(){if(jS)return Qf;jS=1;var n=cx(),e=Symbol.for("react.element"),t=Symbol.for("react.fragment"),i=Object.prototype.hasOwnProperty,r=n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,s={key:!0,ref:!0,__self:!0,__source:!0};function l(c,u,d){var h,m={},p=null,x=null;d!==void 0&&(p=""+d),u.key!==void 0&&(p=""+u.key),u.ref!==void 0&&(x=u.ref);for(h in u)i.call(u,h)&&!s.hasOwnProperty(h)&&(m[h]=u[h]);if(c&&c.defaultProps)for(h in u=c.defaultProps,u)m[h]===void 0&&(m[h]=u[h]);return{$$typeof:e,type:c,key:p,ref:x,props:m,_owner:r.current}}return Qf.Fragment=t,Qf.jsx=l,Qf.jsxs=l,Qf}var YS;function H5(){return YS||(YS=1,s1.exports=B5()),s1.exports}var B=H5();const KS=()=>{};let ux={},cA={},uA=null,fA={mark:KS,measure:KS};try{typeof window<"u"&&(ux=window),typeof document<"u"&&(cA=document),typeof MutationObserver<"u"&&(uA=MutationObserver),typeof performance<"u"&&(fA=performance)}catch{}const{userAgent:ZS=""}=ux.navigator||{},xo=ux,xn=cA,QS=uA,ep=fA;xo.document;const pa=!!xn.documentElement&&!!xn.head&&typeof xn.addEventListener=="function"&&typeof xn.createElement=="function",dA=~ZS.indexOf("MSIE")||~ZS.indexOf("Trident/");var Mn="classic",hA="duotone",or="sharp",lr="sharp-duotone",V5=[Mn,hA,or,lr],G5={classic:{900:"fas",400:"far",normal:"far",300:"fal",100:"fat"},sharp:{900:"fass",400:"fasr",300:"fasl",100:"fast"},"sharp-duotone":{900:"fasds"}},JS={kit:{fak:"kit","fa-kit":"kit"},"kit-duotone":{fakd:"kit-duotone","fa-kit-duotone":"kit-duotone"}},W5=["kit"],$5=/fa(s|r|l|t|d|b|k|kd|ss|sr|sl|st|sds)?[\-\ ]/,X5=/Font ?Awesome ?([56 ]*)(Solid|Regular|Light|Thin|Duotone|Brands|Free|Pro|Sharp Duotone|Sharp|Kit)?.*/i,q5={"Font Awesome 5 Free":{900:"fas",400:"far"},"Font Awesome 5 Pro":{900:"fas",400:"far",normal:"far",300:"fal"},"Font Awesome 5 Brands":{400:"fab",normal:"fab"},"Font Awesome 5 Duotone":{900:"fad"}},j5={"Font Awesome 6 Free":{900:"fas",400:"far"},"Font Awesome 6 Pro":{900:"fas",400:"far",normal:"far",300:"fal",100:"fat"},"Font Awesome 6 Brands":{400:"fab",normal:"fab"},"Font Awesome 6 Duotone":{900:"fad"},"Font Awesome 6 Sharp":{900:"fass",400:"fasr",normal:"fasr",300:"fasl",100:"fast"},"Font Awesome 6 Sharp Duotone":{900:"fasds"}},Y5={classic:{"fa-brands":"fab","fa-duotone":"fad","fa-light":"fal","fa-regular":"far","fa-solid":"fas","fa-thin":"fat"},sharp:{"fa-solid":"fass","fa-regular":"fasr","fa-light":"fasl","fa-thin":"fast"},"sharp-duotone":{"fa-solid":"fasds"}},K5={classic:["fas","far","fal","fat"],sharp:["fass","fasr","fasl","fast"],"sharp-duotone":["fasds"]},Z5={classic:{fab:"fa-brands",fad:"fa-duotone",fal:"fa-light",far:"fa-regular",fas:"fa-solid",fat:"fa-thin"},sharp:{fass:"fa-solid",fasr:"fa-regular",fasl:"fa-light",fast:"fa-thin"},"sharp-duotone":{fasds:"fa-solid"}},Q5={classic:{solid:"fas",regular:"far",light:"fal",thin:"fat",duotone:"fad",brands:"fab"},sharp:{solid:"fass",regular:"fasr",light:"fasl",thin:"fast"},"sharp-duotone":{solid:"fasds"}},pA={classic:{fa:"solid",fas:"solid","fa-solid":"solid",far:"regular","fa-regular":"regular",fal:"light","fa-light":"light",fat:"thin","fa-thin":"thin",fad:"duotone","fa-duotone":"duotone",fab:"brands","fa-brands":"brands"},sharp:{fa:"solid",fass:"solid","fa-solid":"solid",fasr:"regular","fa-regular":"regular",fasl:"light","fa-light":"light",fast:"thin","fa-thin":"thin"},"sharp-duotone":{fa:"solid",fasds:"solid","fa-solid":"solid"}},J5=["solid","regular","light","thin","duotone","brands"],mA=[1,2,3,4,5,6,7,8,9,10],eP=mA.concat([11,12,13,14,15,16,17,18,19,20]),xd={GROUP:"duotone-group",SWAP_OPACITY:"swap-opacity",PRIMARY:"primary",SECONDARY:"secondary"},tP=[...Object.keys(K5),...J5,"2xs","xs","sm","lg","xl","2xl","beat","border","fade","beat-fade","bounce","flip-both","flip-horizontal","flip-vertical","flip","fw","inverse","layers-counter","layers-text","layers","li","pull-left","pull-right","pulse","rotate-180","rotate-270","rotate-90","rotate-by","shake","spin-pulse","spin-reverse","spin","stack-1x","stack-2x","stack","ul",xd.GROUP,xd.SWAP_OPACITY,xd.PRIMARY,xd.SECONDARY].concat(mA.map(n=>"".concat(n,"x"))).concat(eP.map(n=>"w-".concat(n))),nP={"Font Awesome Kit":{400:"fak",normal:"fak"},"Font Awesome Kit Duotone":{400:"fakd",normal:"fakd"}},iP={kit:{"fa-kit":"fak"}},rP={kit:{fak:"fa-kit"}},eM={kit:{kit:"fak"},"kit-duotone":{"kit-duotone":"fakd"}};const ua="___FONT_AWESOME___",o_=16,gA="fa",vA="svg-inline--fa",Dl="data-fa-i2svg",l_="data-fa-pseudo-element",sP="data-fa-pseudo-element-pending",fx="data-prefix",dx="data-icon",tM="fontawesome-i2svg",aP="async",oP=["HTML","HEAD","STYLE","SCRIPT"],_A=(()=>{try{return!0}catch{return!1}})(),xA=[Mn,or,lr];function Vd(n){return new Proxy(n,{get(e,t){return t in e?e[t]:e[Mn]}})}const yA={...pA};yA[Mn]={...pA[Mn],...JS.kit,...JS["kit-duotone"]};const bl=Vd(yA),c_={...Q5};c_[Mn]={...c_[Mn],...eM.kit,...eM["kit-duotone"]};const Ud=Vd(c_),u_={...Z5};u_[Mn]={...u_[Mn],...rP.kit};const Rl=Vd(u_),f_={...Y5};f_[Mn]={...f_[Mn],...iP.kit};const lP=Vd(f_),cP=$5,SA="fa-layers-text",uP=X5,fP={...G5};Vd(fP);const dP=["class","data-prefix","data-icon","data-fa-transform","data-fa-mask"],o1=xd,Nu=new Set;Object.keys(Ud[Mn]).map(Nu.add.bind(Nu));Object.keys(Ud[or]).map(Nu.add.bind(Nu));Object.keys(Ud[lr]).map(Nu.add.bind(Nu));const hP=[...W5,...tP],bd=xo.FontAwesomeConfig||{};function pP(n){var e=xn.querySelector("script["+n+"]");if(e)return e.getAttribute(n)}function mP(n){return n===""?!0:n==="false"?!1:n==="true"?!0:n}xn&&typeof xn.querySelector=="function"&&[["data-family-prefix","familyPrefix"],["data-css-prefix","cssPrefix"],["data-family-default","familyDefault"],["data-style-default","styleDefault"],["data-replacement-class","replacementClass"],["data-auto-replace-svg","autoReplaceSvg"],["data-auto-add-css","autoAddCss"],["data-auto-a11y","autoA11y"],["data-search-pseudo-elements","searchPseudoElements"],["data-observe-mutations","observeMutations"],["data-mutate-approach","mutateApproach"],["data-keep-original-source","keepOriginalSource"],["data-measure-performance","measurePerformance"],["data-show-missing-icons","showMissingIcons"]].forEach(e=>{let[t,i]=e;const r=mP(pP(t));r!=null&&(bd[i]=r)});const MA={styleDefault:"solid",familyDefault:"classic",cssPrefix:gA,replacementClass:vA,autoReplaceSvg:!0,autoAddCss:!0,autoA11y:!0,searchPseudoElements:!1,observeMutations:!0,mutateApproach:"async",keepOriginalSource:!0,measurePerformance:!1,showMissingIcons:!0};bd.familyPrefix&&(bd.cssPrefix=bd.familyPrefix);const Uu={...MA,...bd};Uu.autoReplaceSvg||(Uu.observeMutations=!1);const _t={};Object.keys(MA).forEach(n=>{Object.defineProperty(_t,n,{enumerable:!0,set:function(e){Uu[n]=e,Rd.forEach(t=>t(_t))},get:function(){return Uu[n]}})});Object.defineProperty(_t,"familyPrefix",{enumerable:!0,set:function(n){Uu.cssPrefix=n,Rd.forEach(e=>e(_t))},get:function(){return Uu.cssPrefix}});xo.FontAwesomeConfig=_t;const Rd=[];function gP(n){return Rd.push(n),()=>{Rd.splice(Rd.indexOf(n),1)}}const za=o_,Ms={size:16,x:0,y:0,rotate:0,flipX:!1,flipY:!1};function vP(n){if(!n||!pa)return;const e=xn.createElement("style");e.setAttribute("type","text/css"),e.innerHTML=n;const t=xn.head.childNodes;let i=null;for(let r=t.length-1;r>-1;r--){const s=t[r],l=(s.tagName||"").toUpperCase();["STYLE","LINK"].indexOf(l)>-1&&(i=s)}return xn.head.insertBefore(e,i),n}const _P="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";function Od(){let n=12,e="";for(;n-- >0;)e+=_P[Math.random()*62|0];return e}function tf(n){const e=[];for(let t=(n||[]).length>>>0;t--;)e[t]=n[t];return e}function hx(n){return n.classList?tf(n.classList):(n.getAttribute("class")||"").split(" ").filter(e=>e)}function EA(n){return"".concat(n).replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/'/g,"&#39;").replace(/</g,"&lt;").replace(/>/g,"&gt;")}function xP(n){return Object.keys(n||{}).reduce((e,t)=>e+"".concat(t,'="').concat(EA(n[t]),'" '),"").trim()}function n0(n){return Object.keys(n||{}).reduce((e,t)=>e+"".concat(t,": ").concat(n[t].trim(),";"),"")}function px(n){return n.size!==Ms.size||n.x!==Ms.x||n.y!==Ms.y||n.rotate!==Ms.rotate||n.flipX||n.flipY}function yP(n){let{transform:e,containerWidth:t,iconWidth:i}=n;const r={transform:"translate(".concat(t/2," 256)")},s="translate(".concat(e.x*32,", ").concat(e.y*32,") "),l="scale(".concat(e.size/16*(e.flipX?-1:1),", ").concat(e.size/16*(e.flipY?-1:1),") "),c="rotate(".concat(e.rotate," 0 0)"),u={transform:"".concat(s," ").concat(l," ").concat(c)},d={transform:"translate(".concat(i/2*-1," -256)")};return{outer:r,inner:u,path:d}}function SP(n){let{transform:e,width:t=o_,height:i=o_,startCentered:r=!1}=n,s="";return r&&dA?s+="translate(".concat(e.x/za-t/2,"em, ").concat(e.y/za-i/2,"em) "):r?s+="translate(calc(-50% + ".concat(e.x/za,"em), calc(-50% + ").concat(e.y/za,"em)) "):s+="translate(".concat(e.x/za,"em, ").concat(e.y/za,"em) "),s+="scale(".concat(e.size/za*(e.flipX?-1:1),", ").concat(e.size/za*(e.flipY?-1:1),") "),s+="rotate(".concat(e.rotate,"deg) "),s}var MP=`:root, :host {
  --fa-font-solid: normal 900 1em/1 "Font Awesome 6 Free";
  --fa-font-regular: normal 400 1em/1 "Font Awesome 6 Free";
  --fa-font-light: normal 300 1em/1 "Font Awesome 6 Pro";
  --fa-font-thin: normal 100 1em/1 "Font Awesome 6 Pro";
  --fa-font-duotone: normal 900 1em/1 "Font Awesome 6 Duotone";
  --fa-font-brands: normal 400 1em/1 "Font Awesome 6 Brands";
  --fa-font-sharp-solid: normal 900 1em/1 "Font Awesome 6 Sharp";
  --fa-font-sharp-regular: normal 400 1em/1 "Font Awesome 6 Sharp";
  --fa-font-sharp-light: normal 300 1em/1 "Font Awesome 6 Sharp";
  --fa-font-sharp-thin: normal 100 1em/1 "Font Awesome 6 Sharp";
  --fa-font-sharp-duotone-solid: normal 900 1em/1 "Font Awesome 6 Sharp Duotone";
}

svg:not(:root).svg-inline--fa, svg:not(:host).svg-inline--fa {
  overflow: visible;
  box-sizing: content-box;
}

.svg-inline--fa {
  display: var(--fa-display, inline-block);
  height: 1em;
  overflow: visible;
  vertical-align: -0.125em;
}
.svg-inline--fa.fa-2xs {
  vertical-align: 0.1em;
}
.svg-inline--fa.fa-xs {
  vertical-align: 0em;
}
.svg-inline--fa.fa-sm {
  vertical-align: -0.0714285705em;
}
.svg-inline--fa.fa-lg {
  vertical-align: -0.2em;
}
.svg-inline--fa.fa-xl {
  vertical-align: -0.25em;
}
.svg-inline--fa.fa-2xl {
  vertical-align: -0.3125em;
}
.svg-inline--fa.fa-pull-left {
  margin-right: var(--fa-pull-margin, 0.3em);
  width: auto;
}
.svg-inline--fa.fa-pull-right {
  margin-left: var(--fa-pull-margin, 0.3em);
  width: auto;
}
.svg-inline--fa.fa-li {
  width: var(--fa-li-width, 2em);
  top: 0.25em;
}
.svg-inline--fa.fa-fw {
  width: var(--fa-fw-width, 1.25em);
}

.fa-layers svg.svg-inline--fa {
  bottom: 0;
  left: 0;
  margin: auto;
  position: absolute;
  right: 0;
  top: 0;
}

.fa-layers-counter, .fa-layers-text {
  display: inline-block;
  position: absolute;
  text-align: center;
}

.fa-layers {
  display: inline-block;
  height: 1em;
  position: relative;
  text-align: center;
  vertical-align: -0.125em;
  width: 1em;
}
.fa-layers svg.svg-inline--fa {
  transform-origin: center center;
}

.fa-layers-text {
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  transform-origin: center center;
}

.fa-layers-counter {
  background-color: var(--fa-counter-background-color, #ff253a);
  border-radius: var(--fa-counter-border-radius, 1em);
  box-sizing: border-box;
  color: var(--fa-inverse, #fff);
  line-height: var(--fa-counter-line-height, 1);
  max-width: var(--fa-counter-max-width, 5em);
  min-width: var(--fa-counter-min-width, 1.5em);
  overflow: hidden;
  padding: var(--fa-counter-padding, 0.25em 0.5em);
  right: var(--fa-right, 0);
  text-overflow: ellipsis;
  top: var(--fa-top, 0);
  transform: scale(var(--fa-counter-scale, 0.25));
  transform-origin: top right;
}

.fa-layers-bottom-right {
  bottom: var(--fa-bottom, 0);
  right: var(--fa-right, 0);
  top: auto;
  transform: scale(var(--fa-layers-scale, 0.25));
  transform-origin: bottom right;
}

.fa-layers-bottom-left {
  bottom: var(--fa-bottom, 0);
  left: var(--fa-left, 0);
  right: auto;
  top: auto;
  transform: scale(var(--fa-layers-scale, 0.25));
  transform-origin: bottom left;
}

.fa-layers-top-right {
  top: var(--fa-top, 0);
  right: var(--fa-right, 0);
  transform: scale(var(--fa-layers-scale, 0.25));
  transform-origin: top right;
}

.fa-layers-top-left {
  left: var(--fa-left, 0);
  right: auto;
  top: var(--fa-top, 0);
  transform: scale(var(--fa-layers-scale, 0.25));
  transform-origin: top left;
}

.fa-1x {
  font-size: 1em;
}

.fa-2x {
  font-size: 2em;
}

.fa-3x {
  font-size: 3em;
}

.fa-4x {
  font-size: 4em;
}

.fa-5x {
  font-size: 5em;
}

.fa-6x {
  font-size: 6em;
}

.fa-7x {
  font-size: 7em;
}

.fa-8x {
  font-size: 8em;
}

.fa-9x {
  font-size: 9em;
}

.fa-10x {
  font-size: 10em;
}

.fa-2xs {
  font-size: 0.625em;
  line-height: 0.1em;
  vertical-align: 0.225em;
}

.fa-xs {
  font-size: 0.75em;
  line-height: 0.0833333337em;
  vertical-align: 0.125em;
}

.fa-sm {
  font-size: 0.875em;
  line-height: 0.0714285718em;
  vertical-align: 0.0535714295em;
}

.fa-lg {
  font-size: 1.25em;
  line-height: 0.05em;
  vertical-align: -0.075em;
}

.fa-xl {
  font-size: 1.5em;
  line-height: 0.0416666682em;
  vertical-align: -0.125em;
}

.fa-2xl {
  font-size: 2em;
  line-height: 0.03125em;
  vertical-align: -0.1875em;
}

.fa-fw {
  text-align: center;
  width: 1.25em;
}

.fa-ul {
  list-style-type: none;
  margin-left: var(--fa-li-margin, 2.5em);
  padding-left: 0;
}
.fa-ul > li {
  position: relative;
}

.fa-li {
  left: calc(-1 * var(--fa-li-width, 2em));
  position: absolute;
  text-align: center;
  width: var(--fa-li-width, 2em);
  line-height: inherit;
}

.fa-border {
  border-color: var(--fa-border-color, #eee);
  border-radius: var(--fa-border-radius, 0.1em);
  border-style: var(--fa-border-style, solid);
  border-width: var(--fa-border-width, 0.08em);
  padding: var(--fa-border-padding, 0.2em 0.25em 0.15em);
}

.fa-pull-left {
  float: left;
  margin-right: var(--fa-pull-margin, 0.3em);
}

.fa-pull-right {
  float: right;
  margin-left: var(--fa-pull-margin, 0.3em);
}

.fa-beat {
  animation-name: fa-beat;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, ease-in-out);
}

.fa-bounce {
  animation-name: fa-bounce;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.28, 0.84, 0.42, 1));
}

.fa-fade {
  animation-name: fa-fade;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));
}

.fa-beat-fade {
  animation-name: fa-beat-fade;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));
}

.fa-flip {
  animation-name: fa-flip;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, ease-in-out);
}

.fa-shake {
  animation-name: fa-shake;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, linear);
}

.fa-spin {
  animation-name: fa-spin;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 2s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, linear);
}

.fa-spin-reverse {
  --fa-animation-direction: reverse;
}

.fa-pulse,
.fa-spin-pulse {
  animation-name: fa-spin;
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, steps(8));
}

@media (prefers-reduced-motion: reduce) {
  .fa-beat,
.fa-bounce,
.fa-fade,
.fa-beat-fade,
.fa-flip,
.fa-pulse,
.fa-shake,
.fa-spin,
.fa-spin-pulse {
    animation-delay: -1ms;
    animation-duration: 1ms;
    animation-iteration-count: 1;
    transition-delay: 0s;
    transition-duration: 0s;
  }
}
@keyframes fa-beat {
  0%, 90% {
    transform: scale(1);
  }
  45% {
    transform: scale(var(--fa-beat-scale, 1.25));
  }
}
@keyframes fa-bounce {
  0% {
    transform: scale(1, 1) translateY(0);
  }
  10% {
    transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);
  }
  30% {
    transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));
  }
  50% {
    transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);
  }
  57% {
    transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));
  }
  64% {
    transform: scale(1, 1) translateY(0);
  }
  100% {
    transform: scale(1, 1) translateY(0);
  }
}
@keyframes fa-fade {
  50% {
    opacity: var(--fa-fade-opacity, 0.4);
  }
}
@keyframes fa-beat-fade {
  0%, 100% {
    opacity: var(--fa-beat-fade-opacity, 0.4);
    transform: scale(1);
  }
  50% {
    opacity: 1;
    transform: scale(var(--fa-beat-fade-scale, 1.125));
  }
}
@keyframes fa-flip {
  50% {
    transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));
  }
}
@keyframes fa-shake {
  0% {
    transform: rotate(-15deg);
  }
  4% {
    transform: rotate(15deg);
  }
  8%, 24% {
    transform: rotate(-18deg);
  }
  12%, 28% {
    transform: rotate(18deg);
  }
  16% {
    transform: rotate(-22deg);
  }
  20% {
    transform: rotate(22deg);
  }
  32% {
    transform: rotate(-12deg);
  }
  36% {
    transform: rotate(12deg);
  }
  40%, 100% {
    transform: rotate(0deg);
  }
}
@keyframes fa-spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
.fa-rotate-90 {
  transform: rotate(90deg);
}

.fa-rotate-180 {
  transform: rotate(180deg);
}

.fa-rotate-270 {
  transform: rotate(270deg);
}

.fa-flip-horizontal {
  transform: scale(-1, 1);
}

.fa-flip-vertical {
  transform: scale(1, -1);
}

.fa-flip-both,
.fa-flip-horizontal.fa-flip-vertical {
  transform: scale(-1, -1);
}

.fa-rotate-by {
  transform: rotate(var(--fa-rotate-angle, 0));
}

.fa-stack {
  display: inline-block;
  vertical-align: middle;
  height: 2em;
  position: relative;
  width: 2.5em;
}

.fa-stack-1x,
.fa-stack-2x {
  bottom: 0;
  left: 0;
  margin: auto;
  position: absolute;
  right: 0;
  top: 0;
  z-index: var(--fa-stack-z-index, auto);
}

.svg-inline--fa.fa-stack-1x {
  height: 1em;
  width: 1.25em;
}
.svg-inline--fa.fa-stack-2x {
  height: 2em;
  width: 2.5em;
}

.fa-inverse {
  color: var(--fa-inverse, #fff);
}

.sr-only,
.fa-sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.sr-only-focusable:not(:focus),
.fa-sr-only-focusable:not(:focus) {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.svg-inline--fa .fa-primary {
  fill: var(--fa-primary-color, currentColor);
  opacity: var(--fa-primary-opacity, 1);
}

.svg-inline--fa .fa-secondary {
  fill: var(--fa-secondary-color, currentColor);
  opacity: var(--fa-secondary-opacity, 0.4);
}

.svg-inline--fa.fa-swap-opacity .fa-primary {
  opacity: var(--fa-secondary-opacity, 0.4);
}

.svg-inline--fa.fa-swap-opacity .fa-secondary {
  opacity: var(--fa-primary-opacity, 1);
}

.svg-inline--fa mask .fa-primary,
.svg-inline--fa mask .fa-secondary {
  fill: black;
}

.fad.fa-inverse,
.fa-duotone.fa-inverse {
  color: var(--fa-inverse, #fff);
}`;function wA(){const n=gA,e=vA,t=_t.cssPrefix,i=_t.replacementClass;let r=MP;if(t!==n||i!==e){const s=new RegExp("\\.".concat(n,"\\-"),"g"),l=new RegExp("\\--".concat(n,"\\-"),"g"),c=new RegExp("\\.".concat(e),"g");r=r.replace(s,".".concat(t,"-")).replace(l,"--".concat(t,"-")).replace(c,".".concat(i))}return r}let nM=!1;function l1(){_t.autoAddCss&&!nM&&(vP(wA()),nM=!0)}var EP={mixout(){return{dom:{css:wA,insertCss:l1}}},hooks(){return{beforeDOMElementCreation(){l1()},beforeI2svg(){l1()}}}};const fa=xo||{};fa[ua]||(fa[ua]={});fa[ua].styles||(fa[ua].styles={});fa[ua].hooks||(fa[ua].hooks={});fa[ua].shims||(fa[ua].shims=[]);var Es=fa[ua];const TA=[],AA=function(){xn.removeEventListener("DOMContentLoaded",AA),Am=1,TA.map(n=>n())};let Am=!1;pa&&(Am=(xn.documentElement.doScroll?/^loaded|^c/:/^loaded|^i|^c/).test(xn.readyState),Am||xn.addEventListener("DOMContentLoaded",AA));function wP(n){pa&&(Am?setTimeout(n,0):TA.push(n))}function Gd(n){const{tag:e,attributes:t={},children:i=[]}=n;return typeof n=="string"?EA(n):"<".concat(e," ").concat(xP(t),">").concat(i.map(Gd).join(""),"</").concat(e,">")}function iM(n,e,t){if(n&&n[e]&&n[e][t])return{prefix:e,iconName:t,icon:n[e][t]}}var c1=function(e,t,i,r){var s=Object.keys(e),l=s.length,c=t,u,d,h;for(i===void 0?(u=1,h=e[s[0]]):(u=0,h=i);u<l;u++)d=s[u],h=c(h,e[d],d,e);return h};function TP(n){const e=[];let t=0;const i=n.length;for(;t<i;){const r=n.charCodeAt(t++);if(r>=55296&&r<=56319&&t<i){const s=n.charCodeAt(t++);(s&64512)==56320?e.push(((r&1023)<<10)+(s&1023)+65536):(e.push(r),t--)}else e.push(r)}return e}function d_(n){const e=TP(n);return e.length===1?e[0].toString(16):null}function AP(n,e){const t=n.length;let i=n.charCodeAt(e),r;return i>=55296&&i<=56319&&t>e+1&&(r=n.charCodeAt(e+1),r>=56320&&r<=57343)?(i-55296)*1024+r-56320+65536:i}function rM(n){return Object.keys(n).reduce((e,t)=>{const i=n[t];return!!i.icon?e[i.iconName]=i.icon:e[t]=i,e},{})}function h_(n,e){let t=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{};const{skipHooks:i=!1}=t,r=rM(e);typeof Es.hooks.addPack=="function"&&!i?Es.hooks.addPack(n,rM(e)):Es.styles[n]={...Es.styles[n]||{},...r},n==="fas"&&h_("fa",e)}const{styles:ml,shims:bP}=Es,RP={[Mn]:Object.values(Rl[Mn]),[or]:Object.values(Rl[or]),[lr]:Object.values(Rl[lr])};let mx=null,bA={},RA={},CA={},PA={},LA={};const CP={[Mn]:Object.keys(bl[Mn]),[or]:Object.keys(bl[or]),[lr]:Object.keys(bl[lr])};function PP(n){return~hP.indexOf(n)}function LP(n,e){const t=e.split("-"),i=t[0],r=t.slice(1).join("-");return i===n&&r!==""&&!PP(r)?r:null}const IA=()=>{const n=i=>c1(ml,(r,s,l)=>(r[l]=c1(s,i,{}),r),{});bA=n((i,r,s)=>(r[3]&&(i[r[3]]=s),r[2]&&r[2].filter(c=>typeof c=="number").forEach(c=>{i[c.toString(16)]=s}),i)),RA=n((i,r,s)=>(i[s]=s,r[2]&&r[2].filter(c=>typeof c=="string").forEach(c=>{i[c]=s}),i)),LA=n((i,r,s)=>{const l=r[2];return i[s]=s,l.forEach(c=>{i[c]=s}),i});const e="far"in ml||_t.autoFetchSvg,t=c1(bP,(i,r)=>{const s=r[0];let l=r[1];const c=r[2];return l==="far"&&!e&&(l="fas"),typeof s=="string"&&(i.names[s]={prefix:l,iconName:c}),typeof s=="number"&&(i.unicodes[s.toString(16)]={prefix:l,iconName:c}),i},{names:{},unicodes:{}});CA=t.names,PA=t.unicodes,mx=i0(_t.styleDefault,{family:_t.familyDefault})};gP(n=>{mx=i0(n.styleDefault,{family:_t.familyDefault})});IA();function gx(n,e){return(bA[n]||{})[e]}function IP(n,e){return(RA[n]||{})[e]}function co(n,e){return(LA[n]||{})[e]}function DA(n){return CA[n]||{prefix:null,iconName:null}}function DP(n){const e=PA[n],t=gx("fas",n);return e||(t?{prefix:"fas",iconName:t}:null)||{prefix:null,iconName:null}}function yo(){return mx}const vx=()=>({prefix:null,iconName:null,rest:[]});function i0(n){let e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};const{family:t=Mn}=e,i=bl[t][n],r=Ud[t][n]||Ud[t][i],s=n in Es.styles?n:null;return r||s||null}const NP={[Mn]:Object.keys(Rl[Mn]),[or]:Object.keys(Rl[or]),[lr]:Object.keys(Rl[lr])};function r0(n){let e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};const{skipLookups:t=!1}=e,i={[Mn]:"".concat(_t.cssPrefix,"-").concat(Mn),[or]:"".concat(_t.cssPrefix,"-").concat(or),[lr]:"".concat(_t.cssPrefix,"-").concat(lr)};let r=null,s=Mn;const l=V5.filter(u=>u!==hA);l.forEach(u=>{(n.includes(i[u])||n.some(d=>NP[u].includes(d)))&&(s=u)});const c=n.reduce((u,d)=>{const h=LP(_t.cssPrefix,d);if(ml[d]?(d=RP[s].includes(d)?lP[s][d]:d,r=d,u.prefix=d):CP[s].indexOf(d)>-1?(r=d,u.prefix=i0(d,{family:s})):h?u.iconName=h:d!==_t.replacementClass&&!l.some(m=>d===i[m])&&u.rest.push(d),!t&&u.prefix&&u.iconName){const m=r==="fa"?DA(u.iconName):{},p=co(u.prefix,u.iconName);m.prefix&&(r=null),u.iconName=m.iconName||p||u.iconName,u.prefix=m.prefix||u.prefix,u.prefix==="far"&&!ml.far&&ml.fas&&!_t.autoFetchSvg&&(u.prefix="fas")}return u},vx());return(n.includes("fa-brands")||n.includes("fab"))&&(c.prefix="fab"),(n.includes("fa-duotone")||n.includes("fad"))&&(c.prefix="fad"),!c.prefix&&s===or&&(ml.fass||_t.autoFetchSvg)&&(c.prefix="fass",c.iconName=co(c.prefix,c.iconName)||c.iconName),!c.prefix&&s===lr&&(ml.fasds||_t.autoFetchSvg)&&(c.prefix="fasds",c.iconName=co(c.prefix,c.iconName)||c.iconName),(c.prefix==="fa"||r==="fa")&&(c.prefix=yo()||"fas"),c}class UP{constructor(){this.definitions={}}add(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];const r=t.reduce(this._pullDefinitions,{});Object.keys(r).forEach(s=>{this.definitions[s]={...this.definitions[s]||{},...r[s]},h_(s,r[s]);const l=Rl[Mn][s];l&&h_(l,r[s]),IA()})}reset(){this.definitions={}}_pullDefinitions(e,t){const i=t.prefix&&t.iconName&&t.icon?{0:t}:t;return Object.keys(i).map(r=>{const{prefix:s,iconName:l,icon:c}=i[r],u=c[2];e[s]||(e[s]={}),u.length>0&&u.forEach(d=>{typeof d=="string"&&(e[s][d]=c)}),e[s][l]=c}),e}}let sM=[],gu={};const Mu={},OP=Object.keys(Mu);function FP(n,e){let{mixoutsTo:t}=e;return sM=n,gu={},Object.keys(Mu).forEach(i=>{OP.indexOf(i)===-1&&delete Mu[i]}),sM.forEach(i=>{const r=i.mixout?i.mixout():{};if(Object.keys(r).forEach(s=>{typeof r[s]=="function"&&(t[s]=r[s]),typeof r[s]=="object"&&Object.keys(r[s]).forEach(l=>{t[s]||(t[s]={}),t[s][l]=r[s][l]})}),i.hooks){const s=i.hooks();Object.keys(s).forEach(l=>{gu[l]||(gu[l]=[]),gu[l].push(s[l])})}i.provides&&i.provides(Mu)}),t}function p_(n,e){for(var t=arguments.length,i=new Array(t>2?t-2:0),r=2;r<t;r++)i[r-2]=arguments[r];return(gu[n]||[]).forEach(l=>{e=l.apply(null,[e,...i])}),e}function Nl(n){for(var e=arguments.length,t=new Array(e>1?e-1:0),i=1;i<e;i++)t[i-1]=arguments[i];(gu[n]||[]).forEach(s=>{s.apply(null,t)})}function So(){const n=arguments[0],e=Array.prototype.slice.call(arguments,1);return Mu[n]?Mu[n].apply(null,e):void 0}function m_(n){n.prefix==="fa"&&(n.prefix="fas");let{iconName:e}=n;const t=n.prefix||yo();if(e)return e=co(t,e)||e,iM(NA.definitions,t,e)||iM(Es.styles,t,e)}const NA=new UP,kP=()=>{_t.autoReplaceSvg=!1,_t.observeMutations=!1,Nl("noAuto")},zP={i2svg:function(){let n=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};return pa?(Nl("beforeI2svg",n),So("pseudoElements2svg",n),So("i2svg",n)):Promise.reject(new Error("Operation requires a DOM of some kind."))},watch:function(){let n=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};const{autoReplaceSvgRoot:e}=n;_t.autoReplaceSvg===!1&&(_t.autoReplaceSvg=!0),_t.observeMutations=!0,wP(()=>{HP({autoReplaceSvgRoot:e}),Nl("watch",n)})}},BP={icon:n=>{if(n===null)return null;if(typeof n=="object"&&n.prefix&&n.iconName)return{prefix:n.prefix,iconName:co(n.prefix,n.iconName)||n.iconName};if(Array.isArray(n)&&n.length===2){const e=n[1].indexOf("fa-")===0?n[1].slice(3):n[1],t=i0(n[0]);return{prefix:t,iconName:co(t,e)||e}}if(typeof n=="string"&&(n.indexOf("".concat(_t.cssPrefix,"-"))>-1||n.match(cP))){const e=r0(n.split(" "),{skipLookups:!0});return{prefix:e.prefix||yo(),iconName:co(e.prefix,e.iconName)||e.iconName}}if(typeof n=="string"){const e=yo();return{prefix:e,iconName:co(e,n)||n}}}},cr={noAuto:kP,config:_t,dom:zP,parse:BP,library:NA,findIconDefinition:m_,toHtml:Gd},HP=function(){let n=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};const{autoReplaceSvgRoot:e=xn}=n;(Object.keys(Es.styles).length>0||_t.autoFetchSvg)&&pa&&_t.autoReplaceSvg&&cr.dom.i2svg({node:e})};function s0(n,e){return Object.defineProperty(n,"abstract",{get:e}),Object.defineProperty(n,"html",{get:function(){return n.abstract.map(t=>Gd(t))}}),Object.defineProperty(n,"node",{get:function(){if(!pa)return;const t=xn.createElement("div");return t.innerHTML=n.html,t.children}}),n}function VP(n){let{children:e,main:t,mask:i,attributes:r,styles:s,transform:l}=n;if(px(l)&&t.found&&!i.found){const{width:c,height:u}=t,d={x:c/u/2,y:.5};r.style=n0({...s,"transform-origin":"".concat(d.x+l.x/16,"em ").concat(d.y+l.y/16,"em")})}return[{tag:"svg",attributes:r,children:e}]}function GP(n){let{prefix:e,iconName:t,children:i,attributes:r,symbol:s}=n;const l=s===!0?"".concat(e,"-").concat(_t.cssPrefix,"-").concat(t):s;return[{tag:"svg",attributes:{style:"display: none;"},children:[{tag:"symbol",attributes:{...r,id:l},children:i}]}]}function _x(n){const{icons:{main:e,mask:t},prefix:i,iconName:r,transform:s,symbol:l,title:c,maskId:u,titleId:d,extra:h,watchable:m=!1}=n,{width:p,height:x}=t.found?t:e,y=i==="fak",S=[_t.replacementClass,r?"".concat(_t.cssPrefix,"-").concat(r):""].filter(z=>h.classes.indexOf(z)===-1).filter(z=>z!==""||!!z).concat(h.classes).join(" ");let v={children:[],attributes:{...h.attributes,"data-prefix":i,"data-icon":r,class:S,role:h.attributes.role||"img",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 ".concat(p," ").concat(x)}};const g=y&&!~h.classes.indexOf("fa-fw")?{width:"".concat(p/x*16*.0625,"em")}:{};m&&(v.attributes[Dl]=""),c&&(v.children.push({tag:"title",attributes:{id:v.attributes["aria-labelledby"]||"title-".concat(d||Od())},children:[c]}),delete v.attributes.title);const P={...v,prefix:i,iconName:r,main:e,mask:t,maskId:u,transform:s,symbol:l,styles:{...g,...h.styles}},{children:w,attributes:C}=t.found&&e.found?So("generateAbstractMask",P)||{children:[],attributes:{}}:So("generateAbstractIcon",P)||{children:[],attributes:{}};return P.children=w,P.attributes=C,l?GP(P):VP(P)}function aM(n){const{content:e,width:t,height:i,transform:r,title:s,extra:l,watchable:c=!1}=n,u={...l.attributes,...s?{title:s}:{},class:l.classes.join(" ")};c&&(u[Dl]="");const d={...l.styles};px(r)&&(d.transform=SP({transform:r,startCentered:!0,width:t,height:i}),d["-webkit-transform"]=d.transform);const h=n0(d);h.length>0&&(u.style=h);const m=[];return m.push({tag:"span",attributes:u,children:[e]}),s&&m.push({tag:"span",attributes:{class:"sr-only"},children:[s]}),m}function WP(n){const{content:e,title:t,extra:i}=n,r={...i.attributes,...t?{title:t}:{},class:i.classes.join(" ")},s=n0(i.styles);s.length>0&&(r.style=s);const l=[];return l.push({tag:"span",attributes:r,children:[e]}),t&&l.push({tag:"span",attributes:{class:"sr-only"},children:[t]}),l}const{styles:u1}=Es;function g_(n){const e=n[0],t=n[1],[i]=n.slice(4);let r=null;return Array.isArray(i)?r={tag:"g",attributes:{class:"".concat(_t.cssPrefix,"-").concat(o1.GROUP)},children:[{tag:"path",attributes:{class:"".concat(_t.cssPrefix,"-").concat(o1.SECONDARY),fill:"currentColor",d:i[0]}},{tag:"path",attributes:{class:"".concat(_t.cssPrefix,"-").concat(o1.PRIMARY),fill:"currentColor",d:i[1]}}]}:r={tag:"path",attributes:{fill:"currentColor",d:i}},{found:!0,width:e,height:t,icon:r}}const $P={found:!1,width:512,height:512};function XP(n,e){!_A&&!_t.showMissingIcons&&n&&console.error('Icon with name "'.concat(n,'" and prefix "').concat(e,'" is missing.'))}function v_(n,e){let t=e;return e==="fa"&&_t.styleDefault!==null&&(e=yo()),new Promise((i,r)=>{if(t==="fa"){const s=DA(n)||{};n=s.iconName||n,e=s.prefix||e}if(n&&e&&u1[e]&&u1[e][n]){const s=u1[e][n];return i(g_(s))}XP(n,e),i({...$P,icon:_t.showMissingIcons&&n?So("missingIconAbstract")||{}:{}})})}const oM=()=>{},__=_t.measurePerformance&&ep&&ep.mark&&ep.measure?ep:{mark:oM,measure:oM},yd='FA "6.6.0"',qP=n=>(__.mark("".concat(yd," ").concat(n," begins")),()=>UA(n)),UA=n=>{__.mark("".concat(yd," ").concat(n," ends")),__.measure("".concat(yd," ").concat(n),"".concat(yd," ").concat(n," begins"),"".concat(yd," ").concat(n," ends"))};var xx={begin:qP,end:UA};const am=()=>{};function lM(n){return typeof(n.getAttribute?n.getAttribute(Dl):null)=="string"}function jP(n){const e=n.getAttribute?n.getAttribute(fx):null,t=n.getAttribute?n.getAttribute(dx):null;return e&&t}function YP(n){return n&&n.classList&&n.classList.contains&&n.classList.contains(_t.replacementClass)}function KP(){return _t.autoReplaceSvg===!0?om.replace:om[_t.autoReplaceSvg]||om.replace}function ZP(n){return xn.createElementNS("http://www.w3.org/2000/svg",n)}function QP(n){return xn.createElement(n)}function OA(n){let e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};const{ceFn:t=n.tag==="svg"?ZP:QP}=e;if(typeof n=="string")return xn.createTextNode(n);const i=t(n.tag);return Object.keys(n.attributes||[]).forEach(function(s){i.setAttribute(s,n.attributes[s])}),(n.children||[]).forEach(function(s){i.appendChild(OA(s,{ceFn:t}))}),i}function JP(n){let e=" ".concat(n.outerHTML," ");return e="".concat(e,"Font Awesome fontawesome.com "),e}const om={replace:function(n){const e=n[0];if(e.parentNode)if(n[1].forEach(t=>{e.parentNode.insertBefore(OA(t),e)}),e.getAttribute(Dl)===null&&_t.keepOriginalSource){let t=xn.createComment(JP(e));e.parentNode.replaceChild(t,e)}else e.remove()},nest:function(n){const e=n[0],t=n[1];if(~hx(e).indexOf(_t.replacementClass))return om.replace(n);const i=new RegExp("".concat(_t.cssPrefix,"-.*"));if(delete t[0].attributes.id,t[0].attributes.class){const s=t[0].attributes.class.split(" ").reduce((l,c)=>(c===_t.replacementClass||c.match(i)?l.toSvg.push(c):l.toNode.push(c),l),{toNode:[],toSvg:[]});t[0].attributes.class=s.toSvg.join(" "),s.toNode.length===0?e.removeAttribute("class"):e.setAttribute("class",s.toNode.join(" "))}const r=t.map(s=>Gd(s)).join(`
`);e.setAttribute(Dl,""),e.innerHTML=r}};function cM(n){n()}function FA(n,e){const t=typeof e=="function"?e:am;if(n.length===0)t();else{let i=cM;_t.mutateApproach===aP&&(i=xo.requestAnimationFrame||cM),i(()=>{const r=KP(),s=xx.begin("mutate");n.map(r),s(),t()})}}let yx=!1;function kA(){yx=!0}function x_(){yx=!1}let bm=null;function uM(n){if(!QS||!_t.observeMutations)return;const{treeCallback:e=am,nodeCallback:t=am,pseudoElementsCallback:i=am,observeMutationsRoot:r=xn}=n;bm=new QS(s=>{if(yx)return;const l=yo();tf(s).forEach(c=>{if(c.type==="childList"&&c.addedNodes.length>0&&!lM(c.addedNodes[0])&&(_t.searchPseudoElements&&i(c.target),e(c.target)),c.type==="attributes"&&c.target.parentNode&&_t.searchPseudoElements&&i(c.target.parentNode),c.type==="attributes"&&lM(c.target)&&~dP.indexOf(c.attributeName))if(c.attributeName==="class"&&jP(c.target)){const{prefix:u,iconName:d}=r0(hx(c.target));c.target.setAttribute(fx,u||l),d&&c.target.setAttribute(dx,d)}else YP(c.target)&&t(c.target)})}),pa&&bm.observe(r,{childList:!0,attributes:!0,characterData:!0,subtree:!0})}function e6(){bm&&bm.disconnect()}function t6(n){const e=n.getAttribute("style");let t=[];return e&&(t=e.split(";").reduce((i,r)=>{const s=r.split(":"),l=s[0],c=s.slice(1);return l&&c.length>0&&(i[l]=c.join(":").trim()),i},{})),t}function n6(n){const e=n.getAttribute("data-prefix"),t=n.getAttribute("data-icon"),i=n.innerText!==void 0?n.innerText.trim():"";let r=r0(hx(n));return r.prefix||(r.prefix=yo()),e&&t&&(r.prefix=e,r.iconName=t),r.iconName&&r.prefix||(r.prefix&&i.length>0&&(r.iconName=IP(r.prefix,n.innerText)||gx(r.prefix,d_(n.innerText))),!r.iconName&&_t.autoFetchSvg&&n.firstChild&&n.firstChild.nodeType===Node.TEXT_NODE&&(r.iconName=n.firstChild.data)),r}function i6(n){const e=tf(n.attributes).reduce((r,s)=>(r.name!=="class"&&r.name!=="style"&&(r[s.name]=s.value),r),{}),t=n.getAttribute("title"),i=n.getAttribute("data-fa-title-id");return _t.autoA11y&&(t?e["aria-labelledby"]="".concat(_t.replacementClass,"-title-").concat(i||Od()):(e["aria-hidden"]="true",e.focusable="false")),e}function r6(){return{iconName:null,title:null,titleId:null,prefix:null,transform:Ms,symbol:!1,mask:{iconName:null,prefix:null,rest:[]},maskId:null,extra:{classes:[],styles:{},attributes:{}}}}function fM(n){let e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{styleParser:!0};const{iconName:t,prefix:i,rest:r}=n6(n),s=i6(n),l=p_("parseNodeAttributes",{},n);let c=e.styleParser?t6(n):[];return{iconName:t,title:n.getAttribute("title"),titleId:n.getAttribute("data-fa-title-id"),prefix:i,transform:Ms,mask:{iconName:null,prefix:null,rest:[]},maskId:null,symbol:!1,extra:{classes:r,styles:c,attributes:s},...l}}const{styles:s6}=Es;function zA(n){const e=_t.autoReplaceSvg==="nest"?fM(n,{styleParser:!1}):fM(n);return~e.extra.classes.indexOf(SA)?So("generateLayersText",n,e):So("generateSvgReplacementMutation",n,e)}let Ps=new Set;xA.map(n=>{Ps.add("fa-".concat(n))});Object.keys(bl[Mn]).map(Ps.add.bind(Ps));Object.keys(bl[or]).map(Ps.add.bind(Ps));Object.keys(bl[lr]).map(Ps.add.bind(Ps));Ps=[...Ps];function dM(n){let e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null;if(!pa)return Promise.resolve();const t=xn.documentElement.classList,i=h=>t.add("".concat(tM,"-").concat(h)),r=h=>t.remove("".concat(tM,"-").concat(h)),s=_t.autoFetchSvg?Ps:xA.map(h=>"fa-".concat(h)).concat(Object.keys(s6));s.includes("fa")||s.push("fa");const l=[".".concat(SA,":not([").concat(Dl,"])")].concat(s.map(h=>".".concat(h,":not([").concat(Dl,"])"))).join(", ");if(l.length===0)return Promise.resolve();let c=[];try{c=tf(n.querySelectorAll(l))}catch{}if(c.length>0)i("pending"),r("complete");else return Promise.resolve();const u=xx.begin("onTree"),d=c.reduce((h,m)=>{try{const p=zA(m);p&&h.push(p)}catch(p){_A||p.name==="MissingIcon"&&console.error(p)}return h},[]);return new Promise((h,m)=>{Promise.all(d).then(p=>{FA(p,()=>{i("active"),i("complete"),r("pending"),typeof e=="function"&&e(),u(),h()})}).catch(p=>{u(),m(p)})})}function a6(n){let e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null;zA(n).then(t=>{t&&FA([t],e)})}function o6(n){return function(e){let t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};const i=(e||{}).icon?e:m_(e||{});let{mask:r}=t;return r&&(r=(r||{}).icon?r:m_(r||{})),n(i,{...t,mask:r})}}const l6=function(n){let e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};const{transform:t=Ms,symbol:i=!1,mask:r=null,maskId:s=null,title:l=null,titleId:c=null,classes:u=[],attributes:d={},styles:h={}}=e;if(!n)return;const{prefix:m,iconName:p,icon:x}=n;return s0({type:"icon",...n},()=>(Nl("beforeDOMElementCreation",{iconDefinition:n,params:e}),_t.autoA11y&&(l?d["aria-labelledby"]="".concat(_t.replacementClass,"-title-").concat(c||Od()):(d["aria-hidden"]="true",d.focusable="false")),_x({icons:{main:g_(x),mask:r?g_(r.icon):{found:!1,width:null,height:null,icon:{}}},prefix:m,iconName:p,transform:{...Ms,...t},symbol:i,title:l,maskId:s,titleId:c,extra:{attributes:d,styles:h,classes:u}})))};var c6={mixout(){return{icon:o6(l6)}},hooks(){return{mutationObserverCallbacks(n){return n.treeCallback=dM,n.nodeCallback=a6,n}}},provides(n){n.i2svg=function(e){const{node:t=xn,callback:i=()=>{}}=e;return dM(t,i)},n.generateSvgReplacementMutation=function(e,t){const{iconName:i,title:r,titleId:s,prefix:l,transform:c,symbol:u,mask:d,maskId:h,extra:m}=t;return new Promise((p,x)=>{Promise.all([v_(i,l),d.iconName?v_(d.iconName,d.prefix):Promise.resolve({found:!1,width:512,height:512,icon:{}})]).then(y=>{let[S,v]=y;p([e,_x({icons:{main:S,mask:v},prefix:l,iconName:i,transform:c,symbol:u,maskId:h,title:r,titleId:s,extra:m,watchable:!0})])}).catch(x)})},n.generateAbstractIcon=function(e){let{children:t,attributes:i,main:r,transform:s,styles:l}=e;const c=n0(l);c.length>0&&(i.style=c);let u;return px(s)&&(u=So("generateAbstractTransformGrouping",{main:r,transform:s,containerWidth:r.width,iconWidth:r.width})),t.push(u||r.icon),{children:t,attributes:i}}}},u6={mixout(){return{layer(n){let e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};const{classes:t=[]}=e;return s0({type:"layer"},()=>{Nl("beforeDOMElementCreation",{assembler:n,params:e});let i=[];return n(r=>{Array.isArray(r)?r.map(s=>{i=i.concat(s.abstract)}):i=i.concat(r.abstract)}),[{tag:"span",attributes:{class:["".concat(_t.cssPrefix,"-layers"),...t].join(" ")},children:i}]})}}}},f6={mixout(){return{counter(n){let e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};const{title:t=null,classes:i=[],attributes:r={},styles:s={}}=e;return s0({type:"counter",content:n},()=>(Nl("beforeDOMElementCreation",{content:n,params:e}),WP({content:n.toString(),title:t,extra:{attributes:r,styles:s,classes:["".concat(_t.cssPrefix,"-layers-counter"),...i]}})))}}}},d6={mixout(){return{text(n){let e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};const{transform:t=Ms,title:i=null,classes:r=[],attributes:s={},styles:l={}}=e;return s0({type:"text",content:n},()=>(Nl("beforeDOMElementCreation",{content:n,params:e}),aM({content:n,transform:{...Ms,...t},title:i,extra:{attributes:s,styles:l,classes:["".concat(_t.cssPrefix,"-layers-text"),...r]}})))}}},provides(n){n.generateLayersText=function(e,t){const{title:i,transform:r,extra:s}=t;let l=null,c=null;if(dA){const u=parseInt(getComputedStyle(e).fontSize,10),d=e.getBoundingClientRect();l=d.width/u,c=d.height/u}return _t.autoA11y&&!i&&(s.attributes["aria-hidden"]="true"),Promise.resolve([e,aM({content:e.innerHTML,width:l,height:c,transform:r,title:i,extra:s,watchable:!0})])}}};const h6=new RegExp('"',"ug"),hM=[1105920,1112319],pM={FontAwesome:{normal:"fas",400:"fas"},...j5,...q5,...nP},y_=Object.keys(pM).reduce((n,e)=>(n[e.toLowerCase()]=pM[e],n),{}),p6=Object.keys(y_).reduce((n,e)=>{const t=y_[e];return n[e]=t[900]||[...Object.entries(t)][0][1],n},{});function m6(n){const e=n.replace(h6,""),t=AP(e,0),i=t>=hM[0]&&t<=hM[1],r=e.length===2?e[0]===e[1]:!1;return{value:d_(r?e[0]:e),isSecondary:i||r}}function g6(n,e){const t=n.replace(/^['"]|['"]$/g,"").toLowerCase(),i=parseInt(e),r=isNaN(i)?"normal":i;return(y_[t]||{})[r]||p6[t]}function mM(n,e){const t="".concat(sP).concat(e.replace(":","-"));return new Promise((i,r)=>{if(n.getAttribute(t)!==null)return i();const l=tf(n.children).filter(p=>p.getAttribute(l_)===e)[0],c=xo.getComputedStyle(n,e),u=c.getPropertyValue("font-family"),d=u.match(uP),h=c.getPropertyValue("font-weight"),m=c.getPropertyValue("content");if(l&&!d)return n.removeChild(l),i();if(d&&m!=="none"&&m!==""){const p=c.getPropertyValue("content");let x=g6(u,h);const{value:y,isSecondary:S}=m6(p),v=d[0].startsWith("FontAwesome");let g=gx(x,y),P=g;if(v){const w=DP(y);w.iconName&&w.prefix&&(g=w.iconName,x=w.prefix)}if(g&&!S&&(!l||l.getAttribute(fx)!==x||l.getAttribute(dx)!==P)){n.setAttribute(t,P),l&&n.removeChild(l);const w=r6(),{extra:C}=w;C.attributes[l_]=e,v_(g,x).then(z=>{const L=_x({...w,icons:{main:z,mask:vx()},prefix:x,iconName:P,extra:C,watchable:!0}),D=xn.createElementNS("http://www.w3.org/2000/svg","svg");e==="::before"?n.insertBefore(D,n.firstChild):n.appendChild(D),D.outerHTML=L.map(V=>Gd(V)).join(`
`),n.removeAttribute(t),i()}).catch(r)}else i()}else i()})}function v6(n){return Promise.all([mM(n,"::before"),mM(n,"::after")])}function _6(n){return n.parentNode!==document.head&&!~oP.indexOf(n.tagName.toUpperCase())&&!n.getAttribute(l_)&&(!n.parentNode||n.parentNode.tagName!=="svg")}function gM(n){if(pa)return new Promise((e,t)=>{const i=tf(n.querySelectorAll("*")).filter(_6).map(v6),r=xx.begin("searchPseudoElements");kA(),Promise.all(i).then(()=>{r(),x_(),e()}).catch(()=>{r(),x_(),t()})})}var x6={hooks(){return{mutationObserverCallbacks(n){return n.pseudoElementsCallback=gM,n}}},provides(n){n.pseudoElements2svg=function(e){const{node:t=xn}=e;_t.searchPseudoElements&&gM(t)}}};let vM=!1;var y6={mixout(){return{dom:{unwatch(){kA(),vM=!0}}}},hooks(){return{bootstrap(){uM(p_("mutationObserverCallbacks",{}))},noAuto(){e6()},watch(n){const{observeMutationsRoot:e}=n;vM?x_():uM(p_("mutationObserverCallbacks",{observeMutationsRoot:e}))}}}};const _M=n=>{let e={size:16,x:0,y:0,flipX:!1,flipY:!1,rotate:0};return n.toLowerCase().split(" ").reduce((t,i)=>{const r=i.toLowerCase().split("-"),s=r[0];let l=r.slice(1).join("-");if(s&&l==="h")return t.flipX=!0,t;if(s&&l==="v")return t.flipY=!0,t;if(l=parseFloat(l),isNaN(l))return t;switch(s){case"grow":t.size=t.size+l;break;case"shrink":t.size=t.size-l;break;case"left":t.x=t.x-l;break;case"right":t.x=t.x+l;break;case"up":t.y=t.y-l;break;case"down":t.y=t.y+l;break;case"rotate":t.rotate=t.rotate+l;break}return t},e)};var S6={mixout(){return{parse:{transform:n=>_M(n)}}},hooks(){return{parseNodeAttributes(n,e){const t=e.getAttribute("data-fa-transform");return t&&(n.transform=_M(t)),n}}},provides(n){n.generateAbstractTransformGrouping=function(e){let{main:t,transform:i,containerWidth:r,iconWidth:s}=e;const l={transform:"translate(".concat(r/2," 256)")},c="translate(".concat(i.x*32,", ").concat(i.y*32,") "),u="scale(".concat(i.size/16*(i.flipX?-1:1),", ").concat(i.size/16*(i.flipY?-1:1),") "),d="rotate(".concat(i.rotate," 0 0)"),h={transform:"".concat(c," ").concat(u," ").concat(d)},m={transform:"translate(".concat(s/2*-1," -256)")},p={outer:l,inner:h,path:m};return{tag:"g",attributes:{...p.outer},children:[{tag:"g",attributes:{...p.inner},children:[{tag:t.icon.tag,children:t.icon.children,attributes:{...t.icon.attributes,...p.path}}]}]}}}};const f1={x:0,y:0,width:"100%",height:"100%"};function xM(n){let e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!0;return n.attributes&&(n.attributes.fill||e)&&(n.attributes.fill="black"),n}function M6(n){return n.tag==="g"?n.children:[n]}var E6={hooks(){return{parseNodeAttributes(n,e){const t=e.getAttribute("data-fa-mask"),i=t?r0(t.split(" ").map(r=>r.trim())):vx();return i.prefix||(i.prefix=yo()),n.mask=i,n.maskId=e.getAttribute("data-fa-mask-id"),n}}},provides(n){n.generateAbstractMask=function(e){let{children:t,attributes:i,main:r,mask:s,maskId:l,transform:c}=e;const{width:u,icon:d}=r,{width:h,icon:m}=s,p=yP({transform:c,containerWidth:h,iconWidth:u}),x={tag:"rect",attributes:{...f1,fill:"white"}},y=d.children?{children:d.children.map(xM)}:{},S={tag:"g",attributes:{...p.inner},children:[xM({tag:d.tag,attributes:{...d.attributes,...p.path},...y})]},v={tag:"g",attributes:{...p.outer},children:[S]},g="mask-".concat(l||Od()),P="clip-".concat(l||Od()),w={tag:"mask",attributes:{...f1,id:g,maskUnits:"userSpaceOnUse",maskContentUnits:"userSpaceOnUse"},children:[x,v]},C={tag:"defs",children:[{tag:"clipPath",attributes:{id:P},children:M6(m)},w]};return t.push(C,{tag:"rect",attributes:{fill:"currentColor","clip-path":"url(#".concat(P,")"),mask:"url(#".concat(g,")"),...f1}}),{children:t,attributes:i}}}},w6={provides(n){let e=!1;xo.matchMedia&&(e=xo.matchMedia("(prefers-reduced-motion: reduce)").matches),n.missingIconAbstract=function(){const t=[],i={fill:"currentColor"},r={attributeType:"XML",repeatCount:"indefinite",dur:"2s"};t.push({tag:"path",attributes:{...i,d:"M156.5,447.7l-12.6,29.5c-18.7-9.5-35.9-21.2-51.5-34.9l22.7-22.7C127.6,430.5,141.5,440,156.5,447.7z M40.6,272H8.5 c1.4,21.2,5.4,41.7,11.7,61.1L50,321.2C45.1,305.5,41.8,289,40.6,272z M40.6,240c1.4-18.8,5.2-37,11.1-54.1l-29.5-12.6 C14.7,194.3,10,216.7,8.5,240H40.6z M64.3,156.5c7.8-14.9,17.2-28.8,28.1-41.5L69.7,92.3c-13.7,15.6-25.5,32.8-34.9,51.5 L64.3,156.5z M397,419.6c-13.9,12-29.4,22.3-46.1,30.4l11.9,29.8c20.7-9.9,39.8-22.6,56.9-37.6L397,419.6z M115,92.4 c13.9-12,29.4-22.3,46.1-30.4l-11.9-29.8c-20.7,9.9-39.8,22.6-56.8,37.6L115,92.4z M447.7,355.5c-7.8,14.9-17.2,28.8-28.1,41.5 l22.7,22.7c13.7-15.6,25.5-32.9,34.9-51.5L447.7,355.5z M471.4,272c-1.4,18.8-5.2,37-11.1,54.1l29.5,12.6 c7.5-21.1,12.2-43.5,13.6-66.8H471.4z M321.2,462c-15.7,5-32.2,8.2-49.2,9.4v32.1c21.2-1.4,41.7-5.4,61.1-11.7L321.2,462z M240,471.4c-18.8-1.4-37-5.2-54.1-11.1l-12.6,29.5c21.1,7.5,43.5,12.2,66.8,13.6V471.4z M462,190.8c5,15.7,8.2,32.2,9.4,49.2h32.1 c-1.4-21.2-5.4-41.7-11.7-61.1L462,190.8z M92.4,397c-12-13.9-22.3-29.4-30.4-46.1l-29.8,11.9c9.9,20.7,22.6,39.8,37.6,56.9 L92.4,397z M272,40.6c18.8,1.4,36.9,5.2,54.1,11.1l12.6-29.5C317.7,14.7,295.3,10,272,8.5V40.6z M190.8,50 c15.7-5,32.2-8.2,49.2-9.4V8.5c-21.2,1.4-41.7,5.4-61.1,11.7L190.8,50z M442.3,92.3L419.6,115c12,13.9,22.3,29.4,30.5,46.1 l29.8-11.9C470,128.5,457.3,109.4,442.3,92.3z M397,92.4l22.7-22.7c-15.6-13.7-32.8-25.5-51.5-34.9l-12.6,29.5 C370.4,72.1,384.4,81.5,397,92.4z"}});const s={...r,attributeName:"opacity"},l={tag:"circle",attributes:{...i,cx:"256",cy:"364",r:"28"},children:[]};return e||l.children.push({tag:"animate",attributes:{...r,attributeName:"r",values:"28;14;28;28;14;28;"}},{tag:"animate",attributes:{...s,values:"1;0;1;1;0;1;"}}),t.push(l),t.push({tag:"path",attributes:{...i,opacity:"1",d:"M263.7,312h-16c-6.6,0-12-5.4-12-12c0-71,77.4-63.9,77.4-107.8c0-20-17.8-40.2-57.4-40.2c-29.1,0-44.3,9.6-59.2,28.7 c-3.9,5-11.1,6-16.2,2.4l-13.1-9.2c-5.6-3.9-6.9-11.8-2.6-17.2c21.2-27.2,46.4-44.7,91.2-44.7c52.3,0,97.4,29.8,97.4,80.2 c0,67.6-77.4,63.5-77.4,107.8C275.7,306.6,270.3,312,263.7,312z"},children:e?[]:[{tag:"animate",attributes:{...s,values:"1;0;0;0;0;1;"}}]}),e||t.push({tag:"path",attributes:{...i,opacity:"0",d:"M232.5,134.5l7,168c0.3,6.4,5.6,11.5,12,11.5h9c6.4,0,11.7-5.1,12-11.5l7-168c0.3-6.8-5.2-12.5-12-12.5h-23 C237.7,122,232.2,127.7,232.5,134.5z"},children:[{tag:"animate",attributes:{...s,values:"0;0;1;1;0;0;"}}]}),{tag:"g",attributes:{class:"missing"},children:t}}}},T6={hooks(){return{parseNodeAttributes(n,e){const t=e.getAttribute("data-fa-symbol"),i=t===null?!1:t===""?!0:t;return n.symbol=i,n}}}},A6=[EP,c6,u6,f6,d6,x6,y6,S6,E6,w6,T6];FP(A6,{mixoutsTo:cr});cr.noAuto;cr.config;cr.library;cr.dom;const S_=cr.parse;cr.findIconDefinition;cr.toHtml;const b6=cr.icon;cr.layer;cr.text;cr.counter;var d1={exports:{}},h1,yM;function R6(){if(yM)return h1;yM=1;var n="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";return h1=n,h1}var p1,SM;function C6(){if(SM)return p1;SM=1;var n=R6();function e(){}function t(){}return t.resetWarningCache=e,p1=function(){function i(l,c,u,d,h,m){if(m!==n){var p=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw p.name="Invariant Violation",p}}i.isRequired=i;function r(){return i}var s={array:i,bigint:i,bool:i,func:i,number:i,object:i,string:i,symbol:i,any:i,arrayOf:r,element:i,elementType:i,instanceOf:r,node:i,objectOf:r,oneOf:r,oneOfType:r,shape:r,exact:r,checkPropTypes:t,resetWarningCache:e};return s.PropTypes=s,s},p1}var MM;function P6(){return MM||(MM=1,d1.exports=C6()()),d1.exports}var L6=P6();const Gt=tx(L6);function EM(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);e&&(i=i.filter(function(r){return Object.getOwnPropertyDescriptor(n,r).enumerable})),t.push.apply(t,i)}return t}function gs(n){for(var e=1;e<arguments.length;e++){var t=arguments[e]!=null?arguments[e]:{};e%2?EM(Object(t),!0).forEach(function(i){vu(n,i,t[i])}):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):EM(Object(t)).forEach(function(i){Object.defineProperty(n,i,Object.getOwnPropertyDescriptor(t,i))})}return n}function Rm(n){"@babel/helpers - typeof";return Rm=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(e){return typeof e}:function(e){return e&&typeof Symbol=="function"&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Rm(n)}function vu(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function I6(n,e){if(n==null)return{};var t={},i=Object.keys(n),r,s;for(s=0;s<i.length;s++)r=i[s],!(e.indexOf(r)>=0)&&(t[r]=n[r]);return t}function D6(n,e){if(n==null)return{};var t=I6(n,e),i,r;if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(n);for(r=0;r<s.length;r++)i=s[r],!(e.indexOf(i)>=0)&&Object.prototype.propertyIsEnumerable.call(n,i)&&(t[i]=n[i])}return t}function M_(n){return N6(n)||U6(n)||O6(n)||F6()}function N6(n){if(Array.isArray(n))return E_(n)}function U6(n){if(typeof Symbol<"u"&&n[Symbol.iterator]!=null||n["@@iterator"]!=null)return Array.from(n)}function O6(n,e){if(n){if(typeof n=="string")return E_(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);if(t==="Object"&&n.constructor&&(t=n.constructor.name),t==="Map"||t==="Set")return Array.from(n);if(t==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return E_(n,e)}}function E_(n,e){(e==null||e>n.length)&&(e=n.length);for(var t=0,i=new Array(e);t<e;t++)i[t]=n[t];return i}function F6(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function k6(n){var e,t=n.beat,i=n.fade,r=n.beatFade,s=n.bounce,l=n.shake,c=n.flash,u=n.spin,d=n.spinPulse,h=n.spinReverse,m=n.pulse,p=n.fixedWidth,x=n.inverse,y=n.border,S=n.listItem,v=n.flip,g=n.size,P=n.rotation,w=n.pull,C=(e={"fa-beat":t,"fa-fade":i,"fa-beat-fade":r,"fa-bounce":s,"fa-shake":l,"fa-flash":c,"fa-spin":u,"fa-spin-reverse":h,"fa-spin-pulse":d,"fa-pulse":m,"fa-fw":p,"fa-inverse":x,"fa-border":y,"fa-li":S,"fa-flip":v===!0,"fa-flip-horizontal":v==="horizontal"||v==="both","fa-flip-vertical":v==="vertical"||v==="both"},vu(e,"fa-".concat(g),typeof g<"u"&&g!==null),vu(e,"fa-rotate-".concat(P),typeof P<"u"&&P!==null&&P!==0),vu(e,"fa-pull-".concat(w),typeof w<"u"&&w!==null),vu(e,"fa-swap-opacity",n.swapOpacity),e);return Object.keys(C).map(function(z){return C[z]?z:null}).filter(function(z){return z})}function z6(n){return n=n-0,n===n}function BA(n){return z6(n)?n:(n=n.replace(/[\-_\s]+(.)?/g,function(e,t){return t?t.toUpperCase():""}),n.substr(0,1).toLowerCase()+n.substr(1))}var B6=["style"];function H6(n){return n.charAt(0).toUpperCase()+n.slice(1)}function V6(n){return n.split(";").map(function(e){return e.trim()}).filter(function(e){return e}).reduce(function(e,t){var i=t.indexOf(":"),r=BA(t.slice(0,i)),s=t.slice(i+1).trim();return r.startsWith("webkit")?e[H6(r)]=s:e[r]=s,e},{})}function HA(n,e){var t=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{};if(typeof e=="string")return e;var i=(e.children||[]).map(function(u){return HA(n,u)}),r=Object.keys(e.attributes||{}).reduce(function(u,d){var h=e.attributes[d];switch(d){case"class":u.attrs.className=h,delete e.attributes.class;break;case"style":u.attrs.style=V6(h);break;default:d.indexOf("aria-")===0||d.indexOf("data-")===0?u.attrs[d.toLowerCase()]=h:u.attrs[BA(d)]=h}return u},{attrs:{}}),s=t.style,l=s===void 0?{}:s,c=D6(t,B6);return r.attrs.style=gs(gs({},r.attrs.style),l),n.apply(void 0,[e.tag,gs(gs({},r.attrs),c)].concat(M_(i)))}var VA=!1;try{VA=!0}catch{}function G6(){if(!VA&&console&&typeof console.error=="function"){var n;(n=console).error.apply(n,arguments)}}function wM(n){if(n&&Rm(n)==="object"&&n.prefix&&n.iconName&&n.icon)return n;if(S_.icon)return S_.icon(n);if(n===null)return null;if(n&&Rm(n)==="object"&&n.prefix&&n.iconName)return n;if(Array.isArray(n)&&n.length===2)return{prefix:n[0],iconName:n[1]};if(typeof n=="string")return{prefix:"fas",iconName:n}}function m1(n,e){return Array.isArray(e)&&e.length>0||!Array.isArray(e)&&e?vu({},n,e):{}}var TM={border:!1,className:"",mask:null,maskId:null,fixedWidth:!1,inverse:!1,flip:!1,icon:null,listItem:!1,pull:null,pulse:!1,rotation:null,size:null,spin:!1,spinPulse:!1,spinReverse:!1,beat:!1,fade:!1,beatFade:!1,bounce:!1,shake:!1,symbol:!1,title:"",titleId:null,transform:null,swapOpacity:!1},Wd=ss.forwardRef(function(n,e){var t=gs(gs({},TM),n),i=t.icon,r=t.mask,s=t.symbol,l=t.className,c=t.title,u=t.titleId,d=t.maskId,h=wM(i),m=m1("classes",[].concat(M_(k6(t)),M_((l||"").split(" ")))),p=m1("transform",typeof t.transform=="string"?S_.transform(t.transform):t.transform),x=m1("mask",wM(r)),y=b6(h,gs(gs(gs(gs({},m),p),x),{},{symbol:s,title:c,titleId:u,maskId:d}));if(!y)return G6("Could not find icon",h),null;var S=y.abstract,v={ref:e};return Object.keys(t).forEach(function(g){TM.hasOwnProperty(g)||(v[g]=t[g])}),W6(S[0],v)});Wd.displayName="FontAwesomeIcon";Wd.propTypes={beat:Gt.bool,border:Gt.bool,beatFade:Gt.bool,bounce:Gt.bool,className:Gt.string,fade:Gt.bool,flash:Gt.bool,mask:Gt.oneOfType([Gt.object,Gt.array,Gt.string]),maskId:Gt.string,fixedWidth:Gt.bool,inverse:Gt.bool,flip:Gt.oneOf([!0,!1,"horizontal","vertical","both"]),icon:Gt.oneOfType([Gt.object,Gt.array,Gt.string]),listItem:Gt.bool,pull:Gt.oneOf(["right","left"]),pulse:Gt.bool,rotation:Gt.oneOf([0,90,180,270]),shake:Gt.bool,size:Gt.oneOf(["2xs","xs","sm","lg","xl","2xl","1x","2x","3x","4x","5x","6x","7x","8x","9x","10x"]),spin:Gt.bool,spinPulse:Gt.bool,spinReverse:Gt.bool,symbol:Gt.oneOfType([Gt.bool,Gt.string]),title:Gt.string,titleId:Gt.string,transform:Gt.oneOfType([Gt.string,Gt.object]),swapOpacity:Gt.bool};var W6=HA.bind(null,ss.createElement),Hi=function(){return Hi=Object.assign||function(e){for(var t,i=1,r=arguments.length;i<r;i++){t=arguments[i];for(var s in t)Object.prototype.hasOwnProperty.call(t,s)&&(e[s]=t[s])}return e},Hi.apply(this,arguments)};function Cm(n,e,t){if(t||arguments.length===2)for(var i=0,r=e.length,s;i<r;i++)(s||!(i in e))&&(s||(s=Array.prototype.slice.call(e,0,i)),s[i]=e[i]);return n.concat(s||Array.prototype.slice.call(e))}var g1,AM;function $6(){return AM||(AM=1,g1=function(e,t,i,r){var s=i?i.call(r,e,t):void 0;if(s!==void 0)return!!s;if(e===t)return!0;if(typeof e!="object"||!e||typeof t!="object"||!t)return!1;var l=Object.keys(e),c=Object.keys(t);if(l.length!==c.length)return!1;for(var u=Object.prototype.hasOwnProperty.bind(t),d=0;d<l.length;d++){var h=l[d];if(!u(h))return!1;var m=e[h],p=t[h];if(s=i?i.call(r,m,p,h):void 0,s===!1||s===void 0&&m!==p)return!1}return!0}),g1}var X6=$6();const q6=tx(X6);var mn="-ms-",Cd="-moz-",Jt="-webkit-",GA="comm",a0="rule",Sx="decl",j6="@import",WA="@keyframes",Y6="@layer",$A=Math.abs,Mx=String.fromCharCode,w_=Object.assign;function K6(n,e){return ti(n,0)^45?(((e<<2^ti(n,0))<<2^ti(n,1))<<2^ti(n,2))<<2^ti(n,3):0}function XA(n){return n.trim()}function na(n,e){return(n=e.exec(n))?n[0]:n}function Ft(n,e,t){return n.replace(e,t)}function lm(n,e,t){return n.indexOf(e,t)}function ti(n,e){return n.charCodeAt(e)|0}function Ou(n,e,t){return n.slice(e,t)}function vs(n){return n.length}function qA(n){return n.length}function Sd(n,e){return e.push(n),n}function Z6(n,e){return n.map(e).join("")}function bM(n,e){return n.filter(function(t){return!na(t,e)})}var o0=1,Fu=1,jA=0,Lr=0,zn=0,nf="";function l0(n,e,t,i,r,s,l,c){return{value:n,root:e,parent:t,type:i,props:r,children:s,line:o0,column:Fu,length:l,return:"",siblings:c}}function no(n,e){return w_(l0("",null,null,"",null,null,0,n.siblings),n,{length:-n.length},e)}function uc(n){for(;n.root;)n=no(n.root,{children:[n]});Sd(n,n.siblings)}function Q6(){return zn}function J6(){return zn=Lr>0?ti(nf,--Lr):0,Fu--,zn===10&&(Fu=1,o0--),zn}function is(){return zn=Lr<jA?ti(nf,Lr++):0,Fu++,zn===10&&(Fu=1,o0++),zn}function Cl(){return ti(nf,Lr)}function cm(){return Lr}function c0(n,e){return Ou(nf,n,e)}function T_(n){switch(n){case 0:case 9:case 10:case 13:case 32:return 5;case 33:case 43:case 44:case 47:case 62:case 64:case 126:case 59:case 123:case 125:return 4;case 58:return 3;case 34:case 39:case 40:case 91:return 2;case 41:case 93:return 1}return 0}function eL(n){return o0=Fu=1,jA=vs(nf=n),Lr=0,[]}function tL(n){return nf="",n}function v1(n){return XA(c0(Lr-1,A_(n===91?n+2:n===40?n+1:n)))}function nL(n){for(;(zn=Cl())&&zn<33;)is();return T_(n)>2||T_(zn)>3?"":" "}function iL(n,e){for(;--e&&is()&&!(zn<48||zn>102||zn>57&&zn<65||zn>70&&zn<97););return c0(n,cm()+(e<6&&Cl()==32&&is()==32))}function A_(n){for(;is();)switch(zn){case n:return Lr;case 34:case 39:n!==34&&n!==39&&A_(zn);break;case 40:n===41&&A_(n);break;case 92:is();break}return Lr}function rL(n,e){for(;is()&&n+zn!==57;)if(n+zn===84&&Cl()===47)break;return"/*"+c0(e,Lr-1)+"*"+Mx(n===47?n:is())}function sL(n){for(;!T_(Cl());)is();return c0(n,Lr)}function aL(n){return tL(um("",null,null,null,[""],n=eL(n),0,[0],n))}function um(n,e,t,i,r,s,l,c,u){for(var d=0,h=0,m=l,p=0,x=0,y=0,S=1,v=1,g=1,P=0,w="",C=r,z=s,L=i,D=w;v;)switch(y=P,P=is()){case 40:if(y!=108&&ti(D,m-1)==58){lm(D+=Ft(v1(P),"&","&\f"),"&\f",$A(d?c[d-1]:0))!=-1&&(g=-1);break}case 34:case 39:case 91:D+=v1(P);break;case 9:case 10:case 13:case 32:D+=nL(y);break;case 92:D+=iL(cm()-1,7);continue;case 47:switch(Cl()){case 42:case 47:Sd(oL(rL(is(),cm()),e,t,u),u);break;default:D+="/"}break;case 123*S:c[d++]=vs(D)*g;case 125*S:case 59:case 0:switch(P){case 0:case 125:v=0;case 59+h:g==-1&&(D=Ft(D,/\f/g,"")),x>0&&vs(D)-m&&Sd(x>32?CM(D+";",i,t,m-1,u):CM(Ft(D," ","")+";",i,t,m-2,u),u);break;case 59:D+=";";default:if(Sd(L=RM(D,e,t,d,h,r,c,w,C=[],z=[],m,s),s),P===123)if(h===0)um(D,e,L,L,C,s,m,c,z);else switch(p===99&&ti(D,3)===110?100:p){case 100:case 108:case 109:case 115:um(n,L,L,i&&Sd(RM(n,L,L,0,0,r,c,w,r,C=[],m,z),z),r,z,m,c,i?C:z);break;default:um(D,L,L,L,[""],z,0,c,z)}}d=h=x=0,S=g=1,w=D="",m=l;break;case 58:m=1+vs(D),x=y;default:if(S<1){if(P==123)--S;else if(P==125&&S++==0&&J6()==125)continue}switch(D+=Mx(P),P*S){case 38:g=h>0?1:(D+="\f",-1);break;case 44:c[d++]=(vs(D)-1)*g,g=1;break;case 64:Cl()===45&&(D+=v1(is())),p=Cl(),h=m=vs(w=D+=sL(cm())),P++;break;case 45:y===45&&vs(D)==2&&(S=0)}}return s}function RM(n,e,t,i,r,s,l,c,u,d,h,m){for(var p=r-1,x=r===0?s:[""],y=qA(x),S=0,v=0,g=0;S<i;++S)for(var P=0,w=Ou(n,p+1,p=$A(v=l[S])),C=n;P<y;++P)(C=XA(v>0?x[P]+" "+w:Ft(w,/&\f/g,x[P])))&&(u[g++]=C);return l0(n,e,t,r===0?a0:c,u,d,h,m)}function oL(n,e,t,i){return l0(n,e,t,GA,Mx(Q6()),Ou(n,2,-2),0,i)}function CM(n,e,t,i,r){return l0(n,e,t,Sx,Ou(n,0,i),Ou(n,i+1,-1),i,r)}function YA(n,e,t){switch(K6(n,e)){case 5103:return Jt+"print-"+n+n;case 5737:case 4201:case 3177:case 3433:case 1641:case 4457:case 2921:case 5572:case 6356:case 5844:case 3191:case 6645:case 3005:case 6391:case 5879:case 5623:case 6135:case 4599:case 4855:case 4215:case 6389:case 5109:case 5365:case 5621:case 3829:return Jt+n+n;case 4789:return Cd+n+n;case 5349:case 4246:case 4810:case 6968:case 2756:return Jt+n+Cd+n+mn+n+n;case 5936:switch(ti(n,e+11)){case 114:return Jt+n+mn+Ft(n,/[svh]\w+-[tblr]{2}/,"tb")+n;case 108:return Jt+n+mn+Ft(n,/[svh]\w+-[tblr]{2}/,"tb-rl")+n;case 45:return Jt+n+mn+Ft(n,/[svh]\w+-[tblr]{2}/,"lr")+n}case 6828:case 4268:case 2903:return Jt+n+mn+n+n;case 6165:return Jt+n+mn+"flex-"+n+n;case 5187:return Jt+n+Ft(n,/(\w+).+(:[^]+)/,Jt+"box-$1$2"+mn+"flex-$1$2")+n;case 5443:return Jt+n+mn+"flex-item-"+Ft(n,/flex-|-self/g,"")+(na(n,/flex-|baseline/)?"":mn+"grid-row-"+Ft(n,/flex-|-self/g,""))+n;case 4675:return Jt+n+mn+"flex-line-pack"+Ft(n,/align-content|flex-|-self/g,"")+n;case 5548:return Jt+n+mn+Ft(n,"shrink","negative")+n;case 5292:return Jt+n+mn+Ft(n,"basis","preferred-size")+n;case 6060:return Jt+"box-"+Ft(n,"-grow","")+Jt+n+mn+Ft(n,"grow","positive")+n;case 4554:return Jt+Ft(n,/([^-])(transform)/g,"$1"+Jt+"$2")+n;case 6187:return Ft(Ft(Ft(n,/(zoom-|grab)/,Jt+"$1"),/(image-set)/,Jt+"$1"),n,"")+n;case 5495:case 3959:return Ft(n,/(image-set\([^]*)/,Jt+"$1$`$1");case 4968:return Ft(Ft(n,/(.+:)(flex-)?(.*)/,Jt+"box-pack:$3"+mn+"flex-pack:$3"),/s.+-b[^;]+/,"justify")+Jt+n+n;case 4200:if(!na(n,/flex-|baseline/))return mn+"grid-column-align"+Ou(n,e)+n;break;case 2592:case 3360:return mn+Ft(n,"template-","")+n;case 4384:case 3616:return t&&t.some(function(i,r){return e=r,na(i.props,/grid-\w+-end/)})?~lm(n+(t=t[e].value),"span",0)?n:mn+Ft(n,"-start","")+n+mn+"grid-row-span:"+(~lm(t,"span",0)?na(t,/\d+/):+na(t,/\d+/)-+na(n,/\d+/))+";":mn+Ft(n,"-start","")+n;case 4896:case 4128:return t&&t.some(function(i){return na(i.props,/grid-\w+-start/)})?n:mn+Ft(Ft(n,"-end","-span"),"span ","")+n;case 4095:case 3583:case 4068:case 2532:return Ft(n,/(.+)-inline(.+)/,Jt+"$1$2")+n;case 8116:case 7059:case 5753:case 5535:case 5445:case 5701:case 4933:case 4677:case 5533:case 5789:case 5021:case 4765:if(vs(n)-1-e>6)switch(ti(n,e+1)){case 109:if(ti(n,e+4)!==45)break;case 102:return Ft(n,/(.+:)(.+)-([^]+)/,"$1"+Jt+"$2-$3$1"+Cd+(ti(n,e+3)==108?"$3":"$2-$3"))+n;case 115:return~lm(n,"stretch",0)?YA(Ft(n,"stretch","fill-available"),e,t)+n:n}break;case 5152:case 5920:return Ft(n,/(.+?):(\d+)(\s*\/\s*(span)?\s*(\d+))?(.*)/,function(i,r,s,l,c,u,d){return mn+r+":"+s+d+(l?mn+r+"-span:"+(c?u:+u-+s)+d:"")+n});case 4949:if(ti(n,e+6)===121)return Ft(n,":",":"+Jt)+n;break;case 6444:switch(ti(n,ti(n,14)===45?18:11)){case 120:return Ft(n,/(.+:)([^;\s!]+)(;|(\s+)?!.+)?/,"$1"+Jt+(ti(n,14)===45?"inline-":"")+"box$3$1"+Jt+"$2$3$1"+mn+"$2box$3")+n;case 100:return Ft(n,":",":"+mn)+n}break;case 5719:case 2647:case 2135:case 3927:case 2391:return Ft(n,"scroll-","scroll-snap-")+n}return n}function Pm(n,e){for(var t="",i=0;i<n.length;i++)t+=e(n[i],i,n,e)||"";return t}function lL(n,e,t,i){switch(n.type){case Y6:if(n.children.length)break;case j6:case Sx:return n.return=n.return||n.value;case GA:return"";case WA:return n.return=n.value+"{"+Pm(n.children,i)+"}";case a0:if(!vs(n.value=n.props.join(",")))return""}return vs(t=Pm(n.children,i))?n.return=n.value+"{"+t+"}":""}function cL(n){var e=qA(n);return function(t,i,r,s){for(var l="",c=0;c<e;c++)l+=n[c](t,i,r,s)||"";return l}}function uL(n){return function(e){e.root||(e=e.return)&&n(e)}}function fL(n,e,t,i){if(n.length>-1&&!n.return)switch(n.type){case Sx:n.return=YA(n.value,n.length,t);return;case WA:return Pm([no(n,{value:Ft(n.value,"@","@"+Jt)})],i);case a0:if(n.length)return Z6(t=n.props,function(r){switch(na(r,i=/(::plac\w+|:read-\w+)/)){case":read-only":case":read-write":uc(no(n,{props:[Ft(r,/:(read-\w+)/,":"+Cd+"$1")]})),uc(no(n,{props:[r]})),w_(n,{props:bM(t,i)});break;case"::placeholder":uc(no(n,{props:[Ft(r,/:(plac\w+)/,":"+Jt+"input-$1")]})),uc(no(n,{props:[Ft(r,/:(plac\w+)/,":"+Cd+"$1")]})),uc(no(n,{props:[Ft(r,/:(plac\w+)/,mn+"input-$1")]})),uc(no(n,{props:[r]})),w_(n,{props:bM(t,i)});break}return""})}}var dL={animationIterationCount:1,aspectRatio:1,borderImageOutset:1,borderImageSlice:1,borderImageWidth:1,boxFlex:1,boxFlexGroup:1,boxOrdinalGroup:1,columnCount:1,columns:1,flex:1,flexGrow:1,flexPositive:1,flexShrink:1,flexNegative:1,flexOrder:1,gridRow:1,gridRowEnd:1,gridRowSpan:1,gridRowStart:1,gridColumn:1,gridColumnEnd:1,gridColumnSpan:1,gridColumnStart:1,msGridRow:1,msGridRowSpan:1,msGridColumn:1,msGridColumnSpan:1,fontWeight:1,lineHeight:1,opacity:1,order:1,orphans:1,tabSize:1,widows:1,zIndex:1,zoom:1,WebkitLineClamp:1,fillOpacity:1,floodOpacity:1,stopOpacity:1,strokeDasharray:1,strokeDashoffset:1,strokeMiterlimit:1,strokeOpacity:1,strokeWidth:1},sr={},ku=typeof process<"u"&&sr!==void 0&&(sr.REACT_APP_SC_ATTR||sr.SC_ATTR)||"data-styled",KA="active",ZA="data-styled-version",u0="6.1.13",Ex=`/*!sc*/
`,Lm=typeof window<"u"&&"HTMLElement"in window,hL=!!(typeof SC_DISABLE_SPEEDY=="boolean"?SC_DISABLE_SPEEDY:typeof process<"u"&&sr!==void 0&&sr.REACT_APP_SC_DISABLE_SPEEDY!==void 0&&sr.REACT_APP_SC_DISABLE_SPEEDY!==""?sr.REACT_APP_SC_DISABLE_SPEEDY!=="false"&&sr.REACT_APP_SC_DISABLE_SPEEDY:typeof process<"u"&&sr!==void 0&&sr.SC_DISABLE_SPEEDY!==void 0&&sr.SC_DISABLE_SPEEDY!==""&&sr.SC_DISABLE_SPEEDY!=="false"&&sr.SC_DISABLE_SPEEDY),f0=Object.freeze([]),zu=Object.freeze({});function pL(n,e,t){return t===void 0&&(t=zu),n.theme!==t.theme&&n.theme||e||t.theme}var QA=new Set(["a","abbr","address","area","article","aside","audio","b","base","bdi","bdo","big","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","data","datalist","dd","del","details","dfn","dialog","div","dl","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","header","hgroup","hr","html","i","iframe","img","input","ins","kbd","keygen","label","legend","li","link","main","map","mark","menu","menuitem","meta","meter","nav","noscript","object","ol","optgroup","option","output","p","param","picture","pre","progress","q","rp","rt","ruby","s","samp","script","section","select","small","source","span","strong","style","sub","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","tr","track","u","ul","use","var","video","wbr","circle","clipPath","defs","ellipse","foreignObject","g","image","line","linearGradient","marker","mask","path","pattern","polygon","polyline","radialGradient","rect","stop","svg","text","tspan"]),mL=/[!"#$%&'()*+,./:;<=>?@[\\\]^`{|}~-]+/g,gL=/(^-|-$)/g;function PM(n){return n.replace(mL,"-").replace(gL,"")}var vL=/(a)(d)/gi,tp=52,LM=function(n){return String.fromCharCode(n+(n>25?39:97))};function b_(n){var e,t="";for(e=Math.abs(n);e>tp;e=e/tp|0)t=LM(e%tp)+t;return(LM(e%tp)+t).replace(vL,"$1-$2")}var _1,JA=5381,_u=function(n,e){for(var t=e.length;t;)n=33*n^e.charCodeAt(--t);return n},eb=function(n){return _u(JA,n)};function _L(n){return b_(eb(n)>>>0)}function xL(n){return n.displayName||n.name||"Component"}function x1(n){return typeof n=="string"&&!0}var tb=typeof Symbol=="function"&&Symbol.for,nb=tb?Symbol.for("react.memo"):60115,yL=tb?Symbol.for("react.forward_ref"):60112,SL={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},ML={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},ib={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},EL=((_1={})[yL]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},_1[nb]=ib,_1);function IM(n){return("type"in(e=n)&&e.type.$$typeof)===nb?ib:"$$typeof"in n?EL[n.$$typeof]:SL;var e}var wL=Object.defineProperty,TL=Object.getOwnPropertyNames,DM=Object.getOwnPropertySymbols,AL=Object.getOwnPropertyDescriptor,bL=Object.getPrototypeOf,NM=Object.prototype;function rb(n,e,t){if(typeof e!="string"){if(NM){var i=bL(e);i&&i!==NM&&rb(n,i,t)}var r=TL(e);DM&&(r=r.concat(DM(e)));for(var s=IM(n),l=IM(e),c=0;c<r.length;++c){var u=r[c];if(!(u in ML||t&&t[u]||l&&u in l||s&&u in s)){var d=AL(e,u);try{wL(n,u,d)}catch{}}}}return n}function Bu(n){return typeof n=="function"}function wx(n){return typeof n=="object"&&"styledComponentId"in n}function yl(n,e){return n&&e?"".concat(n," ").concat(e):n||e||""}function UM(n,e){if(n.length===0)return"";for(var t=n[0],i=1;i<n.length;i++)t+=n[i];return t}function Fd(n){return n!==null&&typeof n=="object"&&n.constructor.name===Object.name&&!("props"in n&&n.$$typeof)}function R_(n,e,t){if(t===void 0&&(t=!1),!t&&!Fd(n)&&!Array.isArray(n))return e;if(Array.isArray(e))for(var i=0;i<e.length;i++)n[i]=R_(n[i],e[i]);else if(Fd(e))for(var i in e)n[i]=R_(n[i],e[i]);return n}function Tx(n,e){Object.defineProperty(n,"toString",{value:e})}function $d(n){for(var e=[],t=1;t<arguments.length;t++)e[t-1]=arguments[t];return new Error("An error occurred. See https://github.com/styled-components/styled-components/blob/main/packages/styled-components/src/utils/errors.md#".concat(n," for more information.").concat(e.length>0?" Args: ".concat(e.join(", ")):""))}var RL=function(){function n(e){this.groupSizes=new Uint32Array(512),this.length=512,this.tag=e}return n.prototype.indexOfGroup=function(e){for(var t=0,i=0;i<e;i++)t+=this.groupSizes[i];return t},n.prototype.insertRules=function(e,t){if(e>=this.groupSizes.length){for(var i=this.groupSizes,r=i.length,s=r;e>=s;)if((s<<=1)<0)throw $d(16,"".concat(e));this.groupSizes=new Uint32Array(s),this.groupSizes.set(i),this.length=s;for(var l=r;l<s;l++)this.groupSizes[l]=0}for(var c=this.indexOfGroup(e+1),u=(l=0,t.length);l<u;l++)this.tag.insertRule(c,t[l])&&(this.groupSizes[e]++,c++)},n.prototype.clearGroup=function(e){if(e<this.length){var t=this.groupSizes[e],i=this.indexOfGroup(e),r=i+t;this.groupSizes[e]=0;for(var s=i;s<r;s++)this.tag.deleteRule(i)}},n.prototype.getGroup=function(e){var t="";if(e>=this.length||this.groupSizes[e]===0)return t;for(var i=this.groupSizes[e],r=this.indexOfGroup(e),s=r+i,l=r;l<s;l++)t+="".concat(this.tag.getRule(l)).concat(Ex);return t},n}(),fm=new Map,Im=new Map,dm=1,np=function(n){if(fm.has(n))return fm.get(n);for(;Im.has(dm);)dm++;var e=dm++;return fm.set(n,e),Im.set(e,n),e},CL=function(n,e){dm=e+1,fm.set(n,e),Im.set(e,n)},PL="style[".concat(ku,"][").concat(ZA,'="').concat(u0,'"]'),LL=new RegExp("^".concat(ku,'\\.g(\\d+)\\[id="([\\w\\d-]+)"\\].*?"([^"]*)')),IL=function(n,e,t){for(var i,r=t.split(","),s=0,l=r.length;s<l;s++)(i=r[s])&&n.registerName(e,i)},DL=function(n,e){for(var t,i=((t=e.textContent)!==null&&t!==void 0?t:"").split(Ex),r=[],s=0,l=i.length;s<l;s++){var c=i[s].trim();if(c){var u=c.match(LL);if(u){var d=0|parseInt(u[1],10),h=u[2];d!==0&&(CL(h,d),IL(n,h,u[3]),n.getTag().insertRules(d,r)),r.length=0}else r.push(c)}}},OM=function(n){for(var e=document.querySelectorAll(PL),t=0,i=e.length;t<i;t++){var r=e[t];r&&r.getAttribute(ku)!==KA&&(DL(n,r),r.parentNode&&r.parentNode.removeChild(r))}};function NL(){return typeof __webpack_nonce__<"u"?__webpack_nonce__:null}var sb=function(n){var e=document.head,t=n||e,i=document.createElement("style"),r=function(c){var u=Array.from(c.querySelectorAll("style[".concat(ku,"]")));return u[u.length-1]}(t),s=r!==void 0?r.nextSibling:null;i.setAttribute(ku,KA),i.setAttribute(ZA,u0);var l=NL();return l&&i.setAttribute("nonce",l),t.insertBefore(i,s),i},UL=function(){function n(e){this.element=sb(e),this.element.appendChild(document.createTextNode("")),this.sheet=function(t){if(t.sheet)return t.sheet;for(var i=document.styleSheets,r=0,s=i.length;r<s;r++){var l=i[r];if(l.ownerNode===t)return l}throw $d(17)}(this.element),this.length=0}return n.prototype.insertRule=function(e,t){try{return this.sheet.insertRule(t,e),this.length++,!0}catch{return!1}},n.prototype.deleteRule=function(e){this.sheet.deleteRule(e),this.length--},n.prototype.getRule=function(e){var t=this.sheet.cssRules[e];return t&&t.cssText?t.cssText:""},n}(),OL=function(){function n(e){this.element=sb(e),this.nodes=this.element.childNodes,this.length=0}return n.prototype.insertRule=function(e,t){if(e<=this.length&&e>=0){var i=document.createTextNode(t);return this.element.insertBefore(i,this.nodes[e]||null),this.length++,!0}return!1},n.prototype.deleteRule=function(e){this.element.removeChild(this.nodes[e]),this.length--},n.prototype.getRule=function(e){return e<this.length?this.nodes[e].textContent:""},n}(),FL=function(){function n(e){this.rules=[],this.length=0}return n.prototype.insertRule=function(e,t){return e<=this.length&&(this.rules.splice(e,0,t),this.length++,!0)},n.prototype.deleteRule=function(e){this.rules.splice(e,1),this.length--},n.prototype.getRule=function(e){return e<this.length?this.rules[e]:""},n}(),FM=Lm,kL={isServer:!Lm,useCSSOMInjection:!hL},ab=function(){function n(e,t,i){e===void 0&&(e=zu),t===void 0&&(t={});var r=this;this.options=Hi(Hi({},kL),e),this.gs=t,this.names=new Map(i),this.server=!!e.isServer,!this.server&&Lm&&FM&&(FM=!1,OM(this)),Tx(this,function(){return function(s){for(var l=s.getTag(),c=l.length,u="",d=function(m){var p=function(g){return Im.get(g)}(m);if(p===void 0)return"continue";var x=s.names.get(p),y=l.getGroup(m);if(x===void 0||!x.size||y.length===0)return"continue";var S="".concat(ku,".g").concat(m,'[id="').concat(p,'"]'),v="";x!==void 0&&x.forEach(function(g){g.length>0&&(v+="".concat(g,","))}),u+="".concat(y).concat(S,'{content:"').concat(v,'"}').concat(Ex)},h=0;h<c;h++)d(h);return u}(r)})}return n.registerId=function(e){return np(e)},n.prototype.rehydrate=function(){!this.server&&Lm&&OM(this)},n.prototype.reconstructWithOptions=function(e,t){return t===void 0&&(t=!0),new n(Hi(Hi({},this.options),e),this.gs,t&&this.names||void 0)},n.prototype.allocateGSInstance=function(e){return this.gs[e]=(this.gs[e]||0)+1},n.prototype.getTag=function(){return this.tag||(this.tag=(e=function(t){var i=t.useCSSOMInjection,r=t.target;return t.isServer?new FL(r):i?new UL(r):new OL(r)}(this.options),new RL(e)));var e},n.prototype.hasNameForId=function(e,t){return this.names.has(e)&&this.names.get(e).has(t)},n.prototype.registerName=function(e,t){if(np(e),this.names.has(e))this.names.get(e).add(t);else{var i=new Set;i.add(t),this.names.set(e,i)}},n.prototype.insertRules=function(e,t,i){this.registerName(e,t),this.getTag().insertRules(np(e),i)},n.prototype.clearNames=function(e){this.names.has(e)&&this.names.get(e).clear()},n.prototype.clearRules=function(e){this.getTag().clearGroup(np(e)),this.clearNames(e)},n.prototype.clearTag=function(){this.tag=void 0},n}(),zL=/&/g,BL=/^\s*\/\/.*$/gm;function ob(n,e){return n.map(function(t){return t.type==="rule"&&(t.value="".concat(e," ").concat(t.value),t.value=t.value.replaceAll(",",",".concat(e," ")),t.props=t.props.map(function(i){return"".concat(e," ").concat(i)})),Array.isArray(t.children)&&t.type!=="@keyframes"&&(t.children=ob(t.children,e)),t})}function lb(n){var e,t,i,r=n===void 0?zu:n,s=r.options,l=s===void 0?zu:s,c=r.plugins,u=c===void 0?f0:c,d=function(p,x,y){return y.startsWith(t)&&y.endsWith(t)&&y.replaceAll(t,"").length>0?".".concat(e):p},h=u.slice();h.push(function(p){p.type===a0&&p.value.includes("&")&&(p.props[0]=p.props[0].replace(zL,t).replace(i,d))}),l.prefix&&h.push(fL),h.push(lL);var m=function(p,x,y,S){x===void 0&&(x=""),y===void 0&&(y=""),S===void 0&&(S="&"),e=S,t=x,i=new RegExp("\\".concat(t,"\\b"),"g");var v=p.replace(BL,""),g=aL(y||x?"".concat(y," ").concat(x," { ").concat(v," }"):v);l.namespace&&(g=ob(g,l.namespace));var P=[];return Pm(g,cL(h.concat(uL(function(w){return P.push(w)})))),P};return m.hash=u.length?u.reduce(function(p,x){return x.name||$d(15),_u(p,x.name)},JA).toString():"",m}var HL=new ab,C_=lb(),Ax=ss.createContext({shouldForwardProp:void 0,styleSheet:HL,stylis:C_});Ax.Consumer;var VL=ss.createContext(void 0);function P_(){return pl.useContext(Ax)}function cb(n){var e=pl.useState(n.stylisPlugins),t=e[0],i=e[1],r=P_().styleSheet,s=pl.useMemo(function(){var u=r;return n.sheet?u=n.sheet:n.target&&(u=u.reconstructWithOptions({target:n.target},!1)),n.disableCSSOMInjection&&(u=u.reconstructWithOptions({useCSSOMInjection:!1})),u},[n.disableCSSOMInjection,n.sheet,n.target,r]),l=pl.useMemo(function(){return lb({options:{namespace:n.namespace,prefix:n.enableVendorPrefixes},plugins:t})},[n.enableVendorPrefixes,n.namespace,t]);pl.useEffect(function(){q6(t,n.stylisPlugins)||i(n.stylisPlugins)},[n.stylisPlugins]);var c=pl.useMemo(function(){return{shouldForwardProp:n.shouldForwardProp,styleSheet:s,stylis:l}},[n.shouldForwardProp,s,l]);return ss.createElement(Ax.Provider,{value:c},ss.createElement(VL.Provider,{value:l},n.children))}var GL=function(){function n(e,t){var i=this;this.inject=function(r,s){s===void 0&&(s=C_);var l=i.name+s.hash;r.hasNameForId(i.id,l)||r.insertRules(i.id,l,s(i.rules,l,"@keyframes"))},this.name=e,this.id="sc-keyframes-".concat(e),this.rules=t,Tx(this,function(){throw $d(12,String(i.name))})}return n.prototype.getName=function(e){return e===void 0&&(e=C_),this.name+e.hash},n}(),WL=function(n){return n>="A"&&n<="Z"};function kM(n){for(var e="",t=0;t<n.length;t++){var i=n[t];if(t===1&&i==="-"&&n[0]==="-")return n;WL(i)?e+="-"+i.toLowerCase():e+=i}return e.startsWith("ms-")?"-"+e:e}var ub=function(n){return n==null||n===!1||n===""},fb=function(n){var e,t,i=[];for(var r in n){var s=n[r];n.hasOwnProperty(r)&&!ub(s)&&(Array.isArray(s)&&s.isCss||Bu(s)?i.push("".concat(kM(r),":"),s,";"):Fd(s)?i.push.apply(i,Cm(Cm(["".concat(r," {")],fb(s),!1),["}"],!1)):i.push("".concat(kM(r),": ").concat((e=r,(t=s)==null||typeof t=="boolean"||t===""?"":typeof t!="number"||t===0||e in dL||e.startsWith("--")?String(t).trim():"".concat(t,"px")),";")))}return i};function Pl(n,e,t,i){if(ub(n))return[];if(wx(n))return[".".concat(n.styledComponentId)];if(Bu(n)){if(!Bu(s=n)||s.prototype&&s.prototype.isReactComponent||!e)return[n];var r=n(e);return Pl(r,e,t,i)}var s;return n instanceof GL?t?(n.inject(t,i),[n.getName(i)]):[n]:Fd(n)?fb(n):Array.isArray(n)?Array.prototype.concat.apply(f0,n.map(function(l){return Pl(l,e,t,i)})):[n.toString()]}function $L(n){for(var e=0;e<n.length;e+=1){var t=n[e];if(Bu(t)&&!wx(t))return!1}return!0}var XL=eb(u0),qL=function(){function n(e,t,i){this.rules=e,this.staticRulesId="",this.isStatic=(i===void 0||i.isStatic)&&$L(e),this.componentId=t,this.baseHash=_u(XL,t),this.baseStyle=i,ab.registerId(t)}return n.prototype.generateAndInjectStyles=function(e,t,i){var r=this.baseStyle?this.baseStyle.generateAndInjectStyles(e,t,i):"";if(this.isStatic&&!i.hash)if(this.staticRulesId&&t.hasNameForId(this.componentId,this.staticRulesId))r=yl(r,this.staticRulesId);else{var s=UM(Pl(this.rules,e,t,i)),l=b_(_u(this.baseHash,s)>>>0);if(!t.hasNameForId(this.componentId,l)){var c=i(s,".".concat(l),void 0,this.componentId);t.insertRules(this.componentId,l,c)}r=yl(r,l),this.staticRulesId=l}else{for(var u=_u(this.baseHash,i.hash),d="",h=0;h<this.rules.length;h++){var m=this.rules[h];if(typeof m=="string")d+=m;else if(m){var p=UM(Pl(m,e,t,i));u=_u(u,p+h),d+=p}}if(d){var x=b_(u>>>0);t.hasNameForId(this.componentId,x)||t.insertRules(this.componentId,x,i(d,".".concat(x),void 0,this.componentId)),r=yl(r,x)}}return r},n}(),db=ss.createContext(void 0);db.Consumer;var y1={};function jL(n,e,t){var i=wx(n),r=n,s=!x1(n),l=e.attrs,c=l===void 0?f0:l,u=e.componentId,d=u===void 0?function(C,z){var L=typeof C!="string"?"sc":PM(C);y1[L]=(y1[L]||0)+1;var D="".concat(L,"-").concat(_L(u0+L+y1[L]));return z?"".concat(z,"-").concat(D):D}(e.displayName,e.parentComponentId):u,h=e.displayName,m=h===void 0?function(C){return x1(C)?"styled.".concat(C):"Styled(".concat(xL(C),")")}(n):h,p=e.displayName&&e.componentId?"".concat(PM(e.displayName),"-").concat(e.componentId):e.componentId||d,x=i&&r.attrs?r.attrs.concat(c).filter(Boolean):c,y=e.shouldForwardProp;if(i&&r.shouldForwardProp){var S=r.shouldForwardProp;if(e.shouldForwardProp){var v=e.shouldForwardProp;y=function(C,z){return S(C,z)&&v(C,z)}}else y=S}var g=new qL(t,p,i?r.componentStyle:void 0);function P(C,z){return function(L,D,V){var R=L.attrs,T=L.componentStyle,O=L.defaultProps,Z=L.foldedComponentIds,W=L.styledComponentId,K=L.target,ne=ss.useContext(db),Q=P_(),se=L.shouldForwardProp||Q.shouldForwardProp,G=pL(D,ne,O)||zu,de=function(ie,xe,pe){for(var Oe,Ne=Hi(Hi({},xe),{className:void 0,theme:pe}),Ye=0;Ye<ie.length;Ye+=1){var U=Bu(Oe=ie[Ye])?Oe(Ne):Oe;for(var Je in U)Ne[Je]=Je==="className"?yl(Ne[Je],U[Je]):Je==="style"?Hi(Hi({},Ne[Je]),U[Je]):U[Je]}return xe.className&&(Ne.className=yl(Ne.className,xe.className)),Ne}(R,D,G),le=de.as||K,X={};for(var he in de)de[he]===void 0||he[0]==="$"||he==="as"||he==="theme"&&de.theme===G||(he==="forwardedAs"?X.as=de.forwardedAs:se&&!se(he,le)||(X[he]=de[he]));var He=function(ie,xe){var pe=P_(),Oe=ie.generateAndInjectStyles(xe,pe.styleSheet,pe.stylis);return Oe}(T,de),Y=yl(Z,W);return He&&(Y+=" "+He),de.className&&(Y+=" "+de.className),X[x1(le)&&!QA.has(le)?"class":"className"]=Y,X.ref=V,pl.createElement(le,X)}(w,C,z)}P.displayName=m;var w=ss.forwardRef(P);return w.attrs=x,w.componentStyle=g,w.displayName=m,w.shouldForwardProp=y,w.foldedComponentIds=i?yl(r.foldedComponentIds,r.styledComponentId):"",w.styledComponentId=p,w.target=i?r.target:n,Object.defineProperty(w,"defaultProps",{get:function(){return this._foldedDefaultProps},set:function(C){this._foldedDefaultProps=i?function(z){for(var L=[],D=1;D<arguments.length;D++)L[D-1]=arguments[D];for(var V=0,R=L;V<R.length;V++)R_(z,R[V],!0);return z}({},r.defaultProps,C):C}}),Tx(w,function(){return".".concat(w.styledComponentId)}),s&&rb(w,n,{attrs:!0,componentStyle:!0,displayName:!0,foldedComponentIds:!0,shouldForwardProp:!0,styledComponentId:!0,target:!0}),w}function zM(n,e){for(var t=[n[0]],i=0,r=e.length;i<r;i+=1)t.push(e[i],n[i+1]);return t}var BM=function(n){return Object.assign(n,{isCss:!0})};function YL(n){for(var e=[],t=1;t<arguments.length;t++)e[t-1]=arguments[t];if(Bu(n)||Fd(n))return BM(Pl(zM(f0,Cm([n],e,!0))));var i=n;return e.length===0&&i.length===1&&typeof i[0]=="string"?Pl(i):BM(Pl(zM(i,e)))}function L_(n,e,t){if(t===void 0&&(t=zu),!e)throw $d(1,e);var i=function(r){for(var s=[],l=1;l<arguments.length;l++)s[l-1]=arguments[l];return n(e,t,YL.apply(void 0,Cm([r],s,!1)))};return i.attrs=function(r){return L_(n,e,Hi(Hi({},t),{attrs:Array.prototype.concat(t.attrs,r).filter(Boolean)}))},i.withConfig=function(r){return L_(n,e,Hi(Hi({},t),r))},i}var hb=function(n){return L_(jL,n)},en=hb;QA.forEach(function(n){en[n]=hb(n)});const ft={textWhite:"rgba(223, 223, 223, 1)",textGrey:"rgba(156, 156, 156, 1)",dangerRed:"rgba(243, 151, 143, 1)",dangerRedPressed:"rgba(240, 97, 84,1)",panelBackground:"rgba(38, 38, 38, 0.7)",panelBorder:"rgba(61, 61, 63, 0.7)",buttonBackground:"rgba(61, 61, 63, 0.6)",buttonPressed:"rgba(61, 61, 63, 1)",gradientGrey:"linear-gradient(to bottom, #343434, #393939)",gradientGreyTranslucent:"linear-gradient(to bottom, rgba(52, 52, 52, 0.75), rgba(57, 57, 57, 0.75))",gradientLightGreyTranslucent:"linear-gradient(to bottom, rgba(75, 75, 75, 0.75), rgba(80, 80, 80, 0.75))"},St={height:"30px",minWidth:"30px",fontSize:"14px",radiusMiddle:"3px",radiusSolo:"10px",radiusFirst:"10px 3px 3px 10px",radiusLast:"3px 10px 10px 3px",widthLong:"70px",widthShort:"30px",gap:"3px"},bi=en.button`
	background: ${ft.gradientGreyTranslucent};
	border: none;
	display: flex;
	align-items: center;
	justify-content: center;
	cursor: pointer;
	color: ${ft.textWhite};
	border: 1px solid transparent;
	border-radius: ${St.radiusMiddle};
	font-size: ${St.fontSize};
	height: ${St.height};
	min-width: ${St.minWidth};
	transition: all 0.2s ease-in-out;
	text-transform: none;
	box-shadow: none;
	font-family: Arial, sans-serif;

	&:first-child {
		border-radius: ${({$reverse:n})=>n?St.radiusLast:St.radiusFirst};
	}

	&:last-child {
		border-radius: ${({$reverse:n})=>n?St.radiusFirst:St.radiusLast};
	}

	&:first-child:last-child {
		border-radius: ${St.radiusSolo};
	}
`,I_=en.div`
	padding: 2px;
	display: flex;
	background-color: ${ft.panelBackground};
	border: 1px solid ${ft.panelBorder};
	backdrop-filter: blur(40px);
	-webkit-backdrop-filter: blur(40px);
	justify-content: center;
	pointer-events: all;
	border-radius: 14px;
	align-items: center;
	height: 24px;
`,Mr=en.button`
	background-color: transparent;
	border: none;
	display: flex;
	align-items: center;
	justify-content: center;
	cursor: pointer;
	color: ${ft.textWhite};
	border-radius: 4px;
	font-size: 16px;
	height: 24px;
	min-width: 24px;
	transition: all 0.2s ease-in-out;
	text-transform: none;
	box-shadow: none;
	padding: 1px 5px;
	font-family: Arial, sans-serif;

	&:hover {
		background-color: ${ft.buttonPressed};
	}

	&:active {
		background-color: ${ft.buttonPressed};
	}

	&:focus {
		outline: none;
	}

	&:first-child {
		border-radius: 12px 4px 4px 12px;
	}

	&:last-child {
		border-radius: 4px 12px 12px 4px;
	}

	&:first-child:last-child {
		border-radius: 12px;
	}
`,ra=en.div`
	background-color: ${({$pressed:n})=>n?ft.buttonPressed:ft.buttonBackground};
	border: none;
	display: flex;
	align-items: center;
	justify-content: center;
	color: ${ft.textWhite};
	border-radius: 8px;
	font-size: 14px;
	font-family: Arial, sans-serif;
	height: 30px;
	width: 30px;
	transition: all 0.2s ease-in-out;
`,Hu=en.div`
	display: flex;
	align-items: center;
	height: 30px;
	margin-bottom: 3px;
	justify-content: flex-start;
	flex-direction: ${({$reverse:n})=>n?"row-reverse":"row"};

	&:last-child {
		margin-bottom: 0;
	}
`,po=en.div`
	display: flex;
	flex-direction: ${({$reverse:n})=>n?"row-reverse":"row"};
	height: 100%;
	justify-content: space-between;
	align-items: center;
	margin: ${({$reverse:n})=>n?"0 5px 0 0":"0 0 0 5px"};
	gap: 3px;
`;en.button`
	background-color: rgba(255, 255, 255, 0.3);
	border: none;
	display: flex;
	justify-content: center;
	align-items: center;
	padding: 0;
	pointer-events: none;
	width: 50px;
	height: 50px;
	border-radius: 50%;
	position: relative;
	margin: 0 5px;
	backdrop-filter: blur(10px);
	-webkit-backdrop-filter: blur(10px);
`;en.div`
	position: absolute;
	background-color: ${ft.textWhite};
	border-radius: 50%;
	width: 36px;
	height: 36px;
	cursor: pointer;
	pointer-events: auto;
`;const pb=en.input.attrs({type:"range"})`
	-webkit-appearance: none;
	appearance: none;
	background: ${ft.gradientGreyTranslucent};
	border: none;
	height: 100%;
	width: ${St.widthLong};
	cursor: pointer;
	margin: 0;
	transition: all 0.2s ease-in-out;
	border-radius: ${({$reverse:n})=>n?St.radiusFirst:St.radiusLast};

	&::-webkit-slider-thumb {
		-webkit-appearance: none;
		appearance: none;
		width: 8px;
		height: 30px;
		background-color: ${ft.textWhite};
		border-radius: ${St.radiusMiddle};
	}

	&::-moz-range-thumb {
		width: 10px;
		height: 30px;
		background-color: ${ft.textWhite};
		border-radius: ${St.radiusMiddle};
	}

	&::-ms-thumb {
		width: 8px;
		height: 24px;
		background-color: ${ft.textWhite};
		border-radius: ${St.radiusMiddle};
	}
`;en.div`
	display: flex;
	flex-direction: column;
	align-items: ${({$reverse:n})=>n?"flex-start":"flex-end"};
	justify-content: center;
	margin: ${({$reverse:n})=>n?"2px -26px 0 0":"2px 0 0 -26px"};
`;en.div`
	display: flex;
	flex-direction: ${({$reverse:n})=>n?"row-reverse":"row"};
	align-items: center;
	justify-content: center;
`;const qt=en(Wd)`
	height: ${({$size:n=14})=>`${n}px`};
	min-height: ${({$size:n=14})=>`${n}px`};
	max-height: ${({$size:n=14})=>`${n}px`};
	width: ${({$size:n=14})=>`${n}px`};
	min-width: ${({$size:n=14})=>`${n}px`};
	max-width: ${({$size:n=14})=>`${n}px`};
	transform: ${({$reverse:n})=>n?"scaleX(-1)":"unset"};
`,rf=en(Wd)`
	height: 18px;
	min-height: 18px;
	max-height: 18px;
	width: 18px;
	min-width: 18px;
	max-width: 18px;
	margin: 6px;
	transform: ${({$reverse:n})=>n?"scaleX(-1)":"unset"};
`,kd=en.div`
	position: fixed;
	padding: 5px;
	font-family: Arial, sans-serif;
	color: ${ft.textWhite};
	pointer-events: all;
	background-color: ${ft.panelBackground};
	border: 1px solid ${ft.panelBorder};
	backdrop-filter: blur(40px);
	-webkit-backdrop-filter: blur(40px);
	border-radius: 12px;
	box-shadow: 0 5px 10px rgba(0, 0, 0, 0.3);
	overflow: hidden;
	display: flex;
	flex-direction: column;
`,Ul=en.hr`
	width: ${({$horizontal:n=!0})=>n?"unset":"1px"};
	height: ${({$horizontal:n=!0})=>n?"1px":"unset"};
	background-color: ${ft.panelBorder};
	margin: 5px 3px;
	border: none;
`,Ll=en.button`
	background-color: transparent;
	border: none;
	display: flex;
	align-items: center;
	justify-content: center;
	cursor: pointer;
	color: ${({$isRed:n})=>n?ft.dangerRed:ft.textWhite};
	font-size: 12px;
	padding: 3px;
	text-transform: none;
	box-shadow: none;

	&:hover {
		color: ${({$isRed:n})=>n?ft.dangerRedPressed:"#ffffff"};
	}

	&:active {
		color: ${({$isRed:n})=>n?ft.dangerRedPressed:"#ffffff"};
	}

	&:focus {
		outline: none;
	}
`,mb=en.div`
	display: flex;
	flex-direction: row;
	gap: ${St.gap};
	height: 25px;
`,gb=en.input.attrs({type:"text"})`
	width: 50px;
	outline: none;
	background: ${ft.gradientGrey};
	border: 1px solid transparent;
	border-radius: 5px;
	height: 25px;
	color: ${ft.textWhite};
	padding: 0 10px 0 5px;
	box-sizing: border-box;
	font-size: 10px;

	&:read-only {
		background: ${ft.gradientGreyTranslucent};
	}

	&:invalid {
		background-color: ${ft.dangerRed};
	}
`,vb=en.span`
	position: absolute;
	right: 5px;
	top: 50%;
	transform: translateY(-50%);
	pointer-events: none;
	color: ${ft.textGrey};
	font-size: 10px;
`;var Wt=cx();const Cr=tx(Wt),KL={prefix:"fas",iconName:"right-from-bracket",icon:[512,512,["sign-out-alt"],"f2f5","M377.9 105.9L500.7 228.7c7.2 7.2 11.3 17.1 11.3 27.3s-4.1 20.1-11.3 27.3L377.9 406.1c-6.4 6.4-15 9.9-24 9.9c-18.7 0-33.9-15.2-33.9-33.9l0-62.1-128 0c-17.7 0-32-14.3-32-32l0-64c0-17.7 14.3-32 32-32l128 0 0-62.1c0-18.7 15.2-33.9 33.9-33.9c9 0 17.6 3.6 24 9.9zM160 96L96 96c-17.7 0-32 14.3-32 32l0 256c0 17.7 14.3 32 32 32l64 0c17.7 0 32 14.3 32 32s-14.3 32-32 32l-64 0c-53 0-96-43-96-96L0 128C0 75 43 32 96 32l64 0c17.7 0 32 14.3 32 32s-14.3 32-32 32z"]},bx={prefix:"fas",iconName:"fingerprint",icon:[512,512,[],"f577","M48 256C48 141.1 141.1 48 256 48c63.1 0 119.6 28.1 157.8 72.5c8.6 10.1 23.8 11.2 33.8 2.6s11.2-23.8 2.6-33.8C403.3 34.6 333.7 0 256 0C114.6 0 0 114.6 0 256l0 40c0 13.3 10.7 24 24 24s24-10.7 24-24l0-40zm458.5-52.9c-2.7-13-15.5-21.3-28.4-18.5s-21.3 15.5-18.5 28.4c2.9 13.9 4.5 28.3 4.5 43.1l0 40c0 13.3 10.7 24 24 24s24-10.7 24-24l0-40c0-18.1-1.9-35.8-5.5-52.9zM256 80c-19 0-37.4 3-54.5 8.6c-15.2 5-18.7 23.7-8.3 35.9c7.1 8.3 18.8 10.8 29.4 7.9c10.6-2.9 21.8-4.4 33.4-4.4c70.7 0 128 57.3 128 128l0 24.9c0 25.2-1.5 50.3-4.4 75.3c-1.7 14.6 9.4 27.8 24.2 27.8c11.8 0 21.9-8.6 23.3-20.3c3.3-27.4 5-55 5-82.7l0-24.9c0-97.2-78.8-176-176-176zM150.7 148.7c-9.1-10.6-25.3-11.4-33.9-.4C93.7 178 80 215.4 80 256l0 24.9c0 24.2-2.6 48.4-7.8 71.9C68.8 368.4 80.1 384 96.1 384c10.5 0 19.9-7 22.2-17.3c6.4-28.1 9.7-56.8 9.7-85.8l0-24.9c0-27.2 8.5-52.4 22.9-73.1c7.2-10.4 8-24.6-.2-34.2zM256 160c-53 0-96 43-96 96l0 24.9c0 35.9-4.6 71.5-13.8 106.1c-3.8 14.3 6.7 29 21.5 29c9.5 0 17.9-6.2 20.4-15.4c10.5-39 15.9-79.2 15.9-119.7l0-24.9c0-28.7 23.3-52 52-52s52 23.3 52 52l0 24.9c0 36.3-3.5 72.4-10.4 107.9c-2.7 13.9 7.7 27.2 21.8 27.2c10.2 0 19-7 21-17c7.7-38.8 11.6-78.3 11.6-118.1l0-24.9c0-53-43-96-96-96zm24 96c0-13.3-10.7-24-24-24s-24 10.7-24 24l0 24.9c0 59.9-11 119.3-32.5 175.2l-5.9 15.3c-4.8 12.4 1.4 26.3 13.8 31s26.3-1.4 31-13.8l5.9-15.3C267.9 411.9 280 346.7 280 280.9l0-24.9z"]},ZL={prefix:"fas",iconName:"caret-right",icon:[256,512,[],"f0da","M246.6 278.6c12.5-12.5 12.5-32.8 0-45.3l-128-128c-9.2-9.2-22.9-11.9-34.9-6.9s-19.8 16.6-19.8 29.6l0 256c0 12.9 7.8 24.6 19.8 29.6s25.7 2.2 34.9-6.9l128-128z"]},QL={prefix:"fas",iconName:"caret-left",icon:[256,512,[],"f0d9","M9.4 278.6c-12.5-12.5-12.5-32.8 0-45.3l128-128c9.2-9.2 22.9-11.9 34.9-6.9s19.8 16.6 19.8 29.6l0 256c0 12.9-7.8 24.6-19.8 29.6s-25.7 2.2-34.9-6.9l-128-128z"]},_b={prefix:"fas",iconName:"gamepad",icon:[640,512,[],"f11b","M192 64C86 64 0 150 0 256S86 448 192 448l256 0c106 0 192-86 192-192s-86-192-192-192L192 64zM496 168a40 40 0 1 1 0 80 40 40 0 1 1 0-80zM392 304a40 40 0 1 1 80 0 40 40 0 1 1 -80 0zM168 200c0-13.3 10.7-24 24-24s24 10.7 24 24l0 32 32 0c13.3 0 24 10.7 24 24s-10.7 24-24 24l-32 0 0 32c0 13.3-10.7 24-24 24s-24-10.7-24-24l0-32-32 0c-13.3 0-24-10.7-24-24s10.7-24 24-24l32 0 0-32z"]},xb={prefix:"fas",iconName:"hand",icon:[512,512,[129306,9995,"hand-paper"],"f256","M288 32c0-17.7-14.3-32-32-32s-32 14.3-32 32l0 208c0 8.8-7.2 16-16 16s-16-7.2-16-16l0-176c0-17.7-14.3-32-32-32s-32 14.3-32 32l0 272c0 1.5 0 3.1 .1 4.6L67.6 283c-16-15.2-41.3-14.6-56.6 1.4s-14.6 41.3 1.4 56.6L124.8 448c43.1 41.1 100.4 64 160 64l19.2 0c97.2 0 176-78.8 176-176l0-208c0-17.7-14.3-32-32-32s-32 14.3-32 32l0 112c0 8.8-7.2 16-16 16s-16-7.2-16-16l0-176c0-17.7-14.3-32-32-32s-32 14.3-32 32l0 176c0 8.8-7.2 16-16 16s-16-7.2-16-16l0-208z"]},yb={prefix:"fas",iconName:"plug",icon:[384,512,[128268],"f1e6","M96 0C78.3 0 64 14.3 64 32l0 96 64 0 0-96c0-17.7-14.3-32-32-32zM288 0c-17.7 0-32 14.3-32 32l0 96 64 0 0-96c0-17.7-14.3-32-32-32zM32 160c-17.7 0-32 14.3-32 32s14.3 32 32 32l0 32c0 77.4 55 142 128 156.8l0 67.2c0 17.7 14.3 32 32 32s32-14.3 32-32l0-67.2C297 398 352 333.4 352 256l0-32c17.7 0 32-14.3 32-32s-14.3-32-32-32L32 160z"]},JL={prefix:"fas",iconName:"ban",icon:[512,512,[128683,"cancel"],"f05e","M367.2 412.5L99.5 144.8C77.1 176.1 64 214.5 64 256c0 106 86 192 192 192c41.5 0 79.9-13.1 111.2-35.5zm45.3-45.3C434.9 335.9 448 297.5 448 256c0-106-86-192-192-192c-41.5 0-79.9 13.1-111.2 35.5L412.5 367.2zM0 256a256 256 0 1 1 512 0A256 256 0 1 1 0 256z"]},e8={prefix:"fas",iconName:"arrow-right-to-bracket",icon:[512,512,["sign-in"],"f090","M352 96l64 0c17.7 0 32 14.3 32 32l0 256c0 17.7-14.3 32-32 32l-64 0c-17.7 0-32 14.3-32 32s14.3 32 32 32l64 0c53 0 96-43 96-96l0-256c0-53-43-96-96-96l-64 0c-17.7 0-32 14.3-32 32s14.3 32 32 32zm-9.4 182.6c12.5-12.5 12.5-32.8 0-45.3l-128-128c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L242.7 224 32 224c-17.7 0-32 14.3-32 32s14.3 32 32 32l210.7 0-73.4 73.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l128-128z"]},t8={prefix:"fas",iconName:"caret-up",icon:[320,512,[],"f0d8","M182.6 137.4c-12.5-12.5-32.8-12.5-45.3 0l-128 128c-9.2 9.2-11.9 22.9-6.9 34.9s16.6 19.8 29.6 19.8l256 0c12.9 0 24.6-7.8 29.6-19.8s2.2-25.7-6.9-34.9l-128-128z"]},n8={prefix:"fas",iconName:"rotate-left",icon:[512,512,["rotate-back","rotate-backward","undo-alt"],"f2ea","M48.5 224L40 224c-13.3 0-24-10.7-24-24L16 72c0-9.7 5.8-18.5 14.8-22.2s19.3-1.7 26.2 5.2L98.6 96.6c87.6-86.5 228.7-86.2 315.8 1c87.5 87.5 87.5 229.3 0 316.8s-229.3 87.5-316.8 0c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0c62.5 62.5 163.8 62.5 226.3 0s62.5-163.8 0-226.3c-62.2-62.2-162.7-62.5-225.3-1L185 183c6.9 6.9 8.9 17.2 5.2 26.2s-12.5 14.8-22.2 14.8L48.5 224z"]},i8={prefix:"fas",iconName:"circle-play",icon:[512,512,[61469,"play-circle"],"f144","M0 256a256 256 0 1 1 512 0A256 256 0 1 1 0 256zM188.3 147.1c-7.6 4.2-12.3 12.3-12.3 20.9l0 176c0 8.7 4.7 16.7 12.3 20.9s16.8 4.1 24.3-.5l144-88c7.1-4.4 11.5-12.1 11.5-20.5s-4.4-16.1-11.5-20.5l-144-88c-7.4-4.5-16.7-4.7-24.3-.5z"]},r8={prefix:"fas",iconName:"person-shelter",icon:[512,512,[],"e54f","M271.9 4.2c-9.8-5.6-21.9-5.6-31.8 0l-224 128C6.2 137.9 0 148.5 0 160L0 480c0 17.7 14.3 32 32 32s32-14.3 32-32l0-301.4L256 68.9 448 178.6 448 480c0 17.7 14.3 32 32 32s32-14.3 32-32l0-320c0-11.5-6.2-22.1-16.1-27.8l-224-128zM256 208a40 40 0 1 0 0-80 40 40 0 1 0 0 80zm-8 280l0-88 16 0 0 88c0 13.3 10.7 24 24 24s24-10.7 24-24l0-174.5 26.9 49.9c6.3 11.7 20.8 16 32.5 9.8s16-20.8 9.8-32.5l-37.9-70.3c-15.3-28.5-45.1-46.3-77.5-46.3l-19.5 0c-32.4 0-62.1 17.8-77.5 46.3l-37.9 70.3c-6.3 11.7-1.9 26.2 9.8 32.5s26.2 1.9 32.5-9.8L200 313.5 200 488c0 13.3 10.7 24 24 24s24-10.7 24-24z"]},Rx={prefix:"fas",iconName:"hand-scissors",icon:[512,512,[],"f257","M40 208c-22.1 0-40 17.9-40 40s17.9 40 40 40l180.2 0c-7.6 8.5-12.2 19.7-12.2 32c0 25.3 19.5 46 44.3 47.9c-7.7 8.5-12.3 19.8-12.3 32.1c0 26.5 21.5 48 48 48l32 0 64 0c70.7 0 128-57.3 128-128l0-113.1c0-40.2-16-78.8-44.4-107.3C444.8 76.8 413.9 64 381.7 64L336 64c-21.3 0-39.3 13.9-45.6 33.1l74.5 23.7c8.4 2.7 13.1 11.7 10.4 20.1s-11.7 13.1-20.1 10.4L288 129.9c0 0 0 .1 0 .1L84 65.8C62.9 59.2 40.5 70.9 33.8 92s5.1 43.5 26.2 50.2L269.5 208 40 208z"]},s8={prefix:"fas",iconName:"street-view",icon:[512,512,[],"f21d","M320 64A64 64 0 1 0 192 64a64 64 0 1 0 128 0zm-96 96c-35.3 0-64 28.7-64 64l0 48c0 17.7 14.3 32 32 32l1.8 0 11.1 99.5c1.8 16.2 15.5 28.5 31.8 28.5l38.7 0c16.3 0 30-12.3 31.8-28.5L318.2 304l1.8 0c17.7 0 32-14.3 32-32l0-48c0-35.3-28.7-64-64-64l-64 0zM132.3 394.2c13-2.4 21.7-14.9 19.3-27.9s-14.9-21.7-27.9-19.3c-32.4 5.9-60.9 14.2-82 24.8c-10.5 5.3-20.3 11.7-27.8 19.6C6.4 399.5 0 410.5 0 424c0 21.4 15.5 36.1 29.1 45c14.7 9.6 34.3 17.3 56.4 23.4C130.2 504.7 190.4 512 256 512s125.8-7.3 170.4-19.6c22.1-6.1 41.8-13.8 56.4-23.4c13.7-8.9 29.1-23.6 29.1-45c0-13.5-6.4-24.5-14-32.6c-7.5-7.9-17.3-14.3-27.8-19.6c-21-10.6-49.5-18.9-82-24.8c-13-2.4-25.5 6.3-27.9 19.3s6.3 25.5 19.3 27.9c30.2 5.5 53.7 12.8 69 20.5c3.2 1.6 5.8 3.1 7.9 4.5c3.6 2.4 3.6 7.2 0 9.6c-8.8 5.7-23.1 11.8-43 17.3C374.3 457 318.5 464 256 464s-118.3-7-157.7-17.9c-19.9-5.5-34.2-11.6-43-17.3c-3.6-2.4-3.6-7.2 0-9.6c2.1-1.4 4.8-2.9 7.9-4.5c15.3-7.7 38.8-14.9 69-20.5z"]},Sb={prefix:"fas",iconName:"gear",icon:[512,512,[9881,"cog"],"f013","M495.9 166.6c3.2 8.7 .5 18.4-6.4 24.6l-43.3 39.4c1.1 8.3 1.7 16.8 1.7 25.4s-.6 17.1-1.7 25.4l43.3 39.4c6.9 6.2 9.6 15.9 6.4 24.6c-4.4 11.9-9.7 23.3-15.8 34.3l-4.7 8.1c-6.6 11-14 21.4-22.1 31.2c-5.9 7.2-15.7 9.6-24.5 6.8l-55.7-17.7c-13.4 10.3-28.2 18.9-44 25.4l-12.5 57.1c-2 9.1-9 16.3-18.2 17.8c-13.8 2.3-28 3.5-42.5 3.5s-28.7-1.2-42.5-3.5c-9.2-1.5-16.2-8.7-18.2-17.8l-12.5-57.1c-15.8-6.5-30.6-15.1-44-25.4L83.1 425.9c-8.8 2.8-18.6 .3-24.5-6.8c-8.1-9.8-15.5-20.2-22.1-31.2l-4.7-8.1c-6.1-11-11.4-22.4-15.8-34.3c-3.2-8.7-.5-18.4 6.4-24.6l43.3-39.4C64.6 273.1 64 264.6 64 256s.6-17.1 1.7-25.4L22.4 191.2c-6.9-6.2-9.6-15.9-6.4-24.6c4.4-11.9 9.7-23.3 15.8-34.3l4.7-8.1c6.6-11 14-21.4 22.1-31.2c5.9-7.2 15.7-9.6 24.5-6.8l55.7 17.7c13.4-10.3 28.2-18.9 44-25.4l12.5-57.1c2-9.1 9-16.3 18.2-17.8C227.3 1.2 241.5 0 256 0s28.7 1.2 42.5 3.5c9.2 1.5 16.2 8.7 18.2 17.8l12.5 57.1c15.8 6.5 30.6 15.1 44 25.4l55.7-17.7c8.8-2.8 18.6-.3 24.5 6.8c8.1 9.8 15.5 20.2 22.1 31.2l4.7 8.1c6.1 11 11.4 22.4 15.8 34.3zM256 336a80 80 0 1 0 0-160 80 80 0 1 0 0 160z"]},a8={prefix:"fas",iconName:"caret-down",icon:[320,512,[],"f0d7","M137.4 374.6c12.5 12.5 32.8 12.5 45.3 0l128-128c9.2-9.2 11.9-22.9 6.9-34.9s-16.6-19.8-29.6-19.8L32 192c-12.9 0-24.6 7.8-29.6 19.8s-2.2 25.7 6.9 34.9l128 128z"]},o8={prefix:"fas",iconName:"delete-left",icon:[576,512,[9003,"backspace"],"f55a","M576 128c0-35.3-28.7-64-64-64L205.3 64c-17 0-33.3 6.7-45.3 18.7L9.4 233.4c-6 6-9.4 14.1-9.4 22.6s3.4 16.6 9.4 22.6L160 429.3c12 12 28.3 18.7 45.3 18.7L512 448c35.3 0 64-28.7 64-64l0-256zM271 175c9.4-9.4 24.6-9.4 33.9 0l47 47 47-47c9.4-9.4 24.6-9.4 33.9 0s9.4 24.6 0 33.9l-47 47 47 47c9.4 9.4 9.4 24.6 0 33.9s-24.6 9.4-33.9 0l-47-47-47 47c-9.4 9.4-24.6 9.4-33.9 0s-9.4-24.6 0-33.9l47-47-47-47c-9.4-9.4-9.4-24.6 0-33.9z"]},l8={prefix:"fas",iconName:"bug",icon:[512,512,[],"f188","M256 0c53 0 96 43 96 96l0 3.6c0 15.7-12.7 28.4-28.4 28.4l-135.1 0c-15.7 0-28.4-12.7-28.4-28.4l0-3.6c0-53 43-96 96-96zM41.4 105.4c12.5-12.5 32.8-12.5 45.3 0l64 64c.7 .7 1.3 1.4 1.9 2.1c14.2-7.3 30.4-11.4 47.5-11.4l112 0c17.1 0 33.2 4.1 47.5 11.4c.6-.7 1.2-1.4 1.9-2.1l64-64c12.5-12.5 32.8-12.5 45.3 0s12.5 32.8 0 45.3l-64 64c-.7 .7-1.4 1.3-2.1 1.9c6.2 12 10.1 25.3 11.1 39.5l64.3 0c17.7 0 32 14.3 32 32s-14.3 32-32 32l-64 0c0 24.6-5.5 47.8-15.4 68.6c2.2 1.3 4.2 2.9 6 4.8l64 64c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0l-63.1-63.1c-24.5 21.8-55.8 36.2-90.3 39.6L272 240c0-8.8-7.2-16-16-16s-16 7.2-16 16l0 239.2c-34.5-3.4-65.8-17.8-90.3-39.6L86.6 502.6c-12.5 12.5-32.8 12.5-45.3 0s-12.5-32.8 0-45.3l64-64c1.9-1.9 3.9-3.4 6-4.8C101.5 367.8 96 344.6 96 320l-64 0c-17.7 0-32-14.3-32-32s14.3-32 32-32l64.3 0c1.1-14.1 5-27.5 11.1-39.5c-.7-.6-1.4-1.2-2.1-1.9l-64-64c-12.5-12.5-12.5-32.8 0-45.3z"]},HM={prefix:"fas",iconName:"angle-up",icon:[448,512,[8963],"f106","M201.4 137.4c12.5-12.5 32.8-12.5 45.3 0l160 160c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L224 205.3 86.6 342.6c-12.5 12.5-32.8 12.5-45.3 0s-12.5-32.8 0-45.3l160-160z"]},VM={prefix:"fas",iconName:"chevron-left",icon:[320,512,[9001],"f053","M9.4 233.4c-12.5 12.5-12.5 32.8 0 45.3l192 192c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L77.3 256 246.6 86.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0l-192 192z"]},Cx={prefix:"fas",iconName:"hand-lizard",icon:[512,512,[],"f258","M0 112C0 85.5 21.5 64 48 64l112 0 80 0 46.5 0c36.8 0 71.2 18 92.1 48.2l113.5 164c13 18.7 19.9 41 19.9 63.8l0 12 0 16 0 48c0 17.7-14.3 32-32 32l-96 0c-17.7 0-32-14.3-32-32l0-13.8L273.9 352 240 352l-80 0-48 0c-26.5 0-48-21.5-48-48s21.5-48 48-48l48 0 80 0c26.5 0 48-21.5 48-48s-21.5-48-48-48l-80 0L48 160c-26.5 0-48-21.5-48-48z"]},GM={prefix:"fas",iconName:"chevron-right",icon:[320,512,[9002],"f054","M310.6 233.4c12.5 12.5 12.5 32.8 0 45.3l-192 192c-12.5 12.5-32.8 12.5-45.3 0s-12.5-32.8 0-45.3L242.7 256 73.4 86.6c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0l192 192z"]},c8={prefix:"fas",iconName:"vr-cardboard",icon:[640,512,[],"f729","M576 64L64 64C28.7 64 0 92.7 0 128L0 384c0 35.3 28.7 64 64 64l120.4 0c24.2 0 46.4-13.7 57.2-35.4l32-64c8.8-17.5 26.7-28.6 46.3-28.6s37.5 11.1 46.3 28.6l32 64c10.8 21.7 33 35.4 57.2 35.4L576 448c35.3 0 64-28.7 64-64l0-256c0-35.3-28.7-64-64-64zM96 240a64 64 0 1 1 128 0A64 64 0 1 1 96 240zm384-64a64 64 0 1 1 0 128 64 64 0 1 1 0-128z"]},u8={prefix:"fas",iconName:"arrow-turn-down",icon:[384,512,["level-down"],"f149","M32 64C14.3 64 0 49.7 0 32S14.3 0 32 0l96 0c53 0 96 43 96 96l0 306.7 73.4-73.4c12.5-12.5 32.8-12.5 45.3 0s12.5 32.8 0 45.3l-128 128c-12.5 12.5-32.8 12.5-45.3 0l-128-128c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L160 402.7 160 96c0-17.7-14.3-32-32-32L32 64z"]},d0={prefix:"fas",iconName:"circle-xmark",icon:[512,512,[61532,"times-circle","xmark-circle"],"f057","M256 512A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM175 175c9.4-9.4 24.6-9.4 33.9 0l47 47 47-47c9.4-9.4 24.6-9.4 33.9 0s9.4 24.6 0 33.9l-47 47 47 47c9.4 9.4 9.4 24.6 0 33.9s-24.6 9.4-33.9 0l-47-47-47 47c-9.4 9.4-24.6 9.4-33.9 0s-9.4-24.6 0-33.9l47-47-47-47c-9.4-9.4-9.4-24.6 0-33.9z"]},f8={prefix:"fas",iconName:"video",icon:[576,512,["video-camera"],"f03d","M0 128C0 92.7 28.7 64 64 64l256 0c35.3 0 64 28.7 64 64l0 256c0 35.3-28.7 64-64 64L64 448c-35.3 0-64-28.7-64-64L0 128zM559.1 99.8c10.4 5.6 16.9 16.4 16.9 28.2l0 256c0 11.8-6.5 22.6-16.9 28.2s-23 5-32.9-1.6l-96-64L416 337.1l0-17.1 0-128 0-17.1 14.2-9.5 96-64c9.8-6.5 22.4-7.2 32.9-1.6z"]},kt=St.height,d8=({scale:n=1.2})=>B.jsxs("svg",{xmlns:"http://www.w3.org/2000/svg",width:kt,height:kt,fill:"none",transform:`scale(${n}, ${n})`,children:[B.jsx("path",{fill:"#fff",fillRule:"evenodd",d:"M7 13.125a7 7 0 1 0 14 0v1.75a7 7 0 0 1-14 0v-1.75Z",clipRule:"evenodd",style:{fill:"#fff",fillOpacity:1}}),B.jsx("path",{stroke:"#fff",strokeWidth:.55,d:"M14 19.863a6.738 6.738 0 1 0 0-13.476 6.738 6.738 0 0 0 0 13.476Z",style:{stroke:"#fff",strokeOpacity:1}}),B.jsx("path",{fill:"#fff",d:"M16.529 16.1h-.893l-1.653-2.713-1.68 2.713h-.832l2.074-3.255-1.942-2.992h.875l1.531 2.45 1.54-2.45h.831l-1.933 2.975 2.082 3.272Z",style:{fill:"#fff",fillOpacity:1}})]}),h8=({scale:n=1.2})=>B.jsxs("svg",{xmlns:"http://www.w3.org/2000/svg",width:kt,height:kt,fill:"none",transform:`scale(${n}, ${n})`,children:[B.jsx("path",{fill:"#fff",fillRule:"evenodd",d:"M7 13.125a7 7 0 1 0 14 0v1.75a7 7 0 0 1-14 0v-1.75Z",clipRule:"evenodd",style:{fill:"#fff",fillOpacity:1}}),B.jsx("path",{stroke:"#fff",strokeWidth:.55,d:"M14 19.863a6.738 6.738 0 1 0 0-13.476 6.738 6.738 0 0 0 0 13.476Z",style:{stroke:"#fff",strokeOpacity:1}}),B.jsx("path",{fill:"#fff",d:"m14.086 12.924 1.627-3.071h.849l-2.083 3.823V16.1h-.787v-2.389L11.61 9.853h.857l1.619 3.07Z",style:{fill:"#fff",fillOpacity:1}})]}),p8=({scale:n=1.2})=>B.jsxs("svg",{xmlns:"http://www.w3.org/2000/svg",width:kt,height:kt,fill:"none",transform:`scale(${n}, ${n})`,children:[B.jsx("path",{fill:"#fff",fillRule:"evenodd",d:"M7 13.125a7 7 0 1 0 14 0v1.75a7 7 0 0 1-14 0v-1.75Z",clipRule:"evenodd",style:{fill:"#fff",fillOpacity:1}}),B.jsx("path",{stroke:"#fff",strokeWidth:.55,d:"M14 19.863a6.738 6.738 0 1 0 0-13.476 6.738 6.738 0 0 0 0 13.476Z",style:{stroke:"#fff",strokeOpacity:1}}),B.jsx("path",{fill:"#fff",d:"m15.975 16.1-.753-1.934h-2.476l-.744 1.934h-.796l2.441-6.274h.709l2.432 6.274h-.813Zm-1.69-4.524a29.052 29.052 0 0 1-.21-.63 5.175 5.175 0 0 0-.087-.306c-.029.117-.06.236-.096.359-.03.116-.061.224-.096.323-.03.1-.056.184-.079.254l-.709 1.89h1.978l-.7-1.89Z",style:{fill:"#fff",fillOpacity:1}})]}),m8=({scale:n=1.2})=>B.jsxs("svg",{xmlns:"http://www.w3.org/2000/svg",width:kt,height:kt,fill:"none",transform:`scale(${n}, ${n})`,children:[B.jsx("path",{fill:"#fff",fillRule:"evenodd",d:"M7 13.125a7 7 0 1 0 14 0v1.75a7 7 0 0 1-14 0v-1.75Z",clipRule:"evenodd",style:{fill:"#fff",fillOpacity:1}}),B.jsx("path",{stroke:"#fff",strokeWidth:.55,d:"M14 19.863a6.738 6.738 0 1 0 0-13.476 6.738 6.738 0 0 0 0 13.476Z",style:{stroke:"#fff",strokeOpacity:1}}),B.jsx("path",{fill:"#fff",d:"M13.876 9.853c.519 0 .954.05 1.304.148.355.1.62.263.796.49.18.228.271.531.271.91 0 .245-.047.464-.14.656a1.198 1.198 0 0 1-.402.473 1.62 1.62 0 0 1-.648.254v.043c.262.041.499.117.709.228.216.11.385.268.507.473.123.204.184.47.184.796 0 .379-.088.703-.262.971a1.663 1.663 0 0 1-.753.604c-.32.134-.706.201-1.155.201h-2.196V9.853h1.785Zm.157 2.66c.537 0 .905-.085 1.103-.254.198-.175.297-.432.297-.77 0-.344-.122-.59-.367-.735-.24-.152-.624-.228-1.155-.228h-1.033v1.986h1.155Zm-1.155.656v2.266h1.26c.555 0 .94-.108 1.155-.324.216-.216.324-.498.324-.849 0-.221-.05-.414-.149-.577-.093-.163-.254-.289-.481-.376-.222-.093-.525-.14-.91-.14h-1.199Z",style:{fill:"#fff",fillOpacity:1}})]}),g8=({scale:n=1.2})=>B.jsxs("svg",{xmlns:"http://www.w3.org/2000/svg",width:kt,height:kt,fill:"none",transform:`scale(${n}, ${n})`,children:[B.jsx("path",{stroke:"#fff",strokeWidth:.5,d:"M14 19.95a5.95 5.95 0 1 0 0-11.9 5.95 5.95 0 0 0 0 11.9Z",style:{stroke:"#fff",strokeOpacity:1}}),B.jsx("path",{fill:"#fff",d:"M12.642 17.325v-6.247h.787v5.547h2.73v.7h-3.517ZM14.479 6.389a.525.525 0 0 1-.782 0l-2.235-2.495a.525.525 0 0 1 .39-.875h4.47c.454 0 .694.537.391.875L14.478 6.39Z",style:{fill:"#fff",fillOpacity:1}}),B.jsx("path",{fill:"#fff",fillRule:"evenodd",d:"m13.045 6.711-1.093-1.22a8.75 8.75 0 1 0 4.24.036L15.11 6.733A7.352 7.352 0 0 1 14 21.35a7.35 7.35 0 0 1-.955-14.639Z",clipRule:"evenodd",style:{fill:"#fff",fillOpacity:1}})]}),v8=({scale:n=1.2})=>B.jsxs("svg",{xmlns:"http://www.w3.org/2000/svg",width:kt,height:kt,fill:"none",transform:`scale(${n}, ${n})`,children:[B.jsx("path",{stroke:"#fff",strokeWidth:.7,d:"M14 19.95a5.95 5.95 0 1 0 0-11.9 5.95 5.95 0 0 0 0 11.9Z",style:{stroke:"#fff",strokeOpacity:1}}),B.jsx("path",{fill:"#fff",d:"M13.938 11.077c.52 0 .945.068 1.278.202.338.128.59.323.752.586.164.262.245.592.245.989 0 .332-.06.61-.183.83-.123.223-.28.4-.473.535a2.61 2.61 0 0 1-.595.306l1.715 2.8h-.919l-1.513-2.581h-1.243v2.58h-.787v-6.247h1.723Zm-.043.683h-.893v2.319h.936c.339 0 .616-.044.832-.132a.956.956 0 0 0 .472-.402c.105-.175.158-.394.158-.656 0-.274-.056-.493-.167-.657a.905.905 0 0 0-.49-.358c-.221-.076-.504-.114-.848-.114ZM14.479 6.389a.525.525 0 0 1-.782 0l-2.235-2.495a.525.525 0 0 1 .39-.875h4.47c.454 0 .694.537.391.875L14.478 6.39Z",style:{fill:"#fff",fillOpacity:1}}),B.jsx("path",{fill:"#fff",fillRule:"evenodd",d:"m13.045 6.711-1.093-1.22a8.75 8.75 0 1 0 4.24.036L15.11 6.733A7.352 7.352 0 0 1 14 21.35a7.35 7.35 0 0 1-.955-14.639Z",clipRule:"evenodd",style:{fill:"#fff",fillOpacity:1}})]}),_8=({scale:n=1.2})=>B.jsxs("svg",{xmlns:"http://www.w3.org/2000/svg",width:kt,height:kt,fill:"none",transform:`scale(${n}, ${n})`,children:[B.jsx("path",{stroke:"#fff",strokeWidth:1.5,d:"M14 22.05a8.05 8.05 0 1 0 0-16.1 8.05 8.05 0 0 0 0 16.1Z",style:{stroke:"#fff",strokeOpacity:1}}),B.jsx("path",{stroke:"#fff",strokeWidth:.75,d:"M14 19.95a5.95 5.95 0 1 0 0-11.9 5.95 5.95 0 0 0 0 11.9Z",style:{stroke:"#fff",strokeOpacity:1}}),B.jsx("path",{fill:"#fff",d:"M12.642 17.325v-6.248h.787v5.548h2.73v.7h-3.517ZM13.697.611a.525.525 0 0 1 .782 0l2.234 2.495a.525.525 0 0 1-.39.875h-4.47a.525.525 0 0 1-.391-.875L13.697.61Z",style:{fill:"#fff",fillOpacity:1}})]}),x8=({scale:n=1.2})=>B.jsxs("svg",{xmlns:"http://www.w3.org/2000/svg",width:kt,height:kt,fill:"none",transform:`scale(${n}, ${n})`,children:[B.jsx("path",{stroke:"#fff",strokeWidth:1.5,d:"M14 22.05a8.05 8.05 0 1 0 0-16.1 8.05 8.05 0 0 0 0 16.1Z",style:{stroke:"#fff",strokeOpacity:1}}),B.jsx("path",{stroke:"#fff",strokeWidth:.75,d:"M14 19.95a5.95 5.95 0 1 0 0-11.9 5.95 5.95 0 0 0 0 11.9Z",style:{stroke:"#fff",strokeOpacity:1}}),B.jsx("path",{fill:"#fff",d:"M12.642 17.325v-6.248h.787v5.548h2.73v.7h-3.517ZM14.479 27.389a.525.525 0 0 1-.782 0l-2.235-2.495a.525.525 0 0 1 .39-.875h4.47c.454 0 .694.537.391.875l-2.235 2.495Z",style:{fill:"#fff",fillOpacity:1}})]}),y8=({scale:n=1.2})=>B.jsxs("svg",{xmlns:"http://www.w3.org/2000/svg",width:kt,height:kt,fill:"none",transform:`scale(${n}, ${n})`,children:[B.jsx("path",{stroke:"#fff",strokeWidth:1.5,d:"M14 22.05a8.05 8.05 0 1 0 0-16.1 8.05 8.05 0 0 0 0 16.1Z",style:{stroke:"#fff",strokeOpacity:1}}),B.jsx("path",{stroke:"#fff",strokeWidth:.75,d:"M14 19.95a5.95 5.95 0 1 0 0-11.9 5.95 5.95 0 0 0 0 11.9Z",style:{stroke:"#fff",strokeOpacity:1}}),B.jsx("path",{fill:"#fff",d:"M12.642 17.325v-6.248h.787v5.548h2.73v.7h-3.517ZM.611 14.303a.525.525 0 0 1 0-.782l2.495-2.234a.525.525 0 0 1 .875.39v4.47a.525.525 0 0 1-.875.391L.61 14.303Z",style:{fill:"#fff",fillOpacity:1}})]}),S8=({scale:n=1.2})=>B.jsxs("svg",{xmlns:"http://www.w3.org/2000/svg",width:kt,height:kt,fill:"none",transform:`scale(${n}, ${n})`,children:[B.jsx("path",{stroke:"#fff",strokeWidth:1.5,d:"M14 22.05a8.05 8.05 0 1 0 0-16.1 8.05 8.05 0 0 0 0 16.1Z",style:{stroke:"#fff",strokeOpacity:1}}),B.jsx("path",{stroke:"#fff",strokeWidth:.75,d:"M14 19.95a5.95 5.95 0 1 0 0-11.9 5.95 5.95 0 0 0 0 11.9Z",style:{stroke:"#fff",strokeOpacity:1}}),B.jsx("path",{fill:"#fff",d:"M12.642 17.325v-6.248h.787v5.548h2.73v.7h-3.517ZM27.389 13.521a.525.525 0 0 1 0 .782l-2.495 2.235a.525.525 0 0 1-.875-.39v-4.47c0-.454.537-.694.875-.391l2.495 2.234Z",style:{fill:"#fff",fillOpacity:1}})]}),M8=({scale:n=1.2})=>B.jsxs("svg",{xmlns:"http://www.w3.org/2000/svg",width:kt,height:kt,fill:"none",transform:`scale(${n}, ${n})`,children:[B.jsx("path",{stroke:"#fff",strokeWidth:1.5,d:"M14 22.05a8.05 8.05 0 1 0 0-16.1 8.05 8.05 0 0 0 0 16.1Z",style:{stroke:"#fff",strokeOpacity:1}}),B.jsx("path",{stroke:"#fff",strokeWidth:.75,d:"M14 19.95a5.95 5.95 0 1 0 0-11.9 5.95 5.95 0 0 0 0 11.9Z",style:{stroke:"#fff",strokeOpacity:1}}),B.jsx("path",{fill:"#fff",d:"M13.938 11.077c.52 0 .945.068 1.278.202.338.128.59.323.752.586.164.262.245.592.245.989 0 .332-.06.61-.183.83-.123.223-.28.4-.473.535a2.61 2.61 0 0 1-.595.306l1.715 2.8h-.919l-1.513-2.581h-1.243v2.58h-.787v-6.247h1.723Zm-.043.683h-.893v2.319h.936c.339 0 .616-.044.832-.132a.956.956 0 0 0 .472-.402c.105-.175.158-.394.158-.656 0-.274-.056-.493-.167-.657a.905.905 0 0 0-.49-.358c-.221-.076-.504-.114-.848-.114ZM13.697.611a.525.525 0 0 1 .782 0l2.234 2.495a.525.525 0 0 1-.39.875h-4.47a.525.525 0 0 1-.391-.875L13.697.61Z",style:{fill:"#fff",fillOpacity:1}})]}),E8=({scale:n=1.2})=>B.jsxs("svg",{xmlns:"http://www.w3.org/2000/svg",width:kt,height:kt,fill:"none",transform:`scale(${n}, ${n})`,children:[B.jsx("path",{stroke:"#fff",strokeWidth:1.5,d:"M14 22.05a8.05 8.05 0 1 0 0-16.1 8.05 8.05 0 0 0 0 16.1Z",style:{stroke:"#fff",strokeOpacity:1}}),B.jsx("path",{stroke:"#fff",strokeWidth:.75,d:"M14 19.95a5.95 5.95 0 1 0 0-11.9 5.95 5.95 0 0 0 0 11.9Z",style:{stroke:"#fff",strokeOpacity:1}}),B.jsx("path",{fill:"#fff",d:"M13.938 11.077c.52 0 .945.068 1.278.202.338.128.59.323.752.586.164.262.245.592.245.989 0 .332-.06.61-.183.83-.123.223-.28.4-.473.535a2.61 2.61 0 0 1-.595.306l1.715 2.8h-.919l-1.513-2.581h-1.243v2.58h-.787v-6.247h1.723Zm-.043.683h-.893v2.319h.936c.339 0 .616-.044.832-.132a.956.956 0 0 0 .472-.402c.105-.175.158-.394.158-.656 0-.274-.056-.493-.167-.657a.905.905 0 0 0-.49-.358c-.221-.076-.504-.114-.848-.114ZM14.479 27.389a.525.525 0 0 1-.782 0l-2.235-2.495a.525.525 0 0 1 .39-.875h4.47c.454 0 .694.537.391.875l-2.235 2.495Z",style:{fill:"#fff",fillOpacity:1}})]}),w8=({scale:n=1.2})=>B.jsxs("svg",{xmlns:"http://www.w3.org/2000/svg",width:kt,height:kt,fill:"none",transform:`scale(${n}, ${n})`,children:[B.jsx("path",{stroke:"#fff",strokeWidth:1.5,d:"M14 22.05a8.05 8.05 0 1 0 0-16.1 8.05 8.05 0 0 0 0 16.1Z",style:{stroke:"#fff",strokeOpacity:1}}),B.jsx("path",{stroke:"#fff",strokeWidth:.75,d:"M14 19.95a5.95 5.95 0 1 0 0-11.9 5.95 5.95 0 0 0 0 11.9Z",style:{stroke:"#fff",strokeOpacity:1}}),B.jsx("path",{fill:"#fff",d:"M13.938 11.077c.52 0 .945.068 1.278.202.338.128.59.323.752.586.164.262.245.592.245.989 0 .332-.06.61-.183.83-.123.223-.28.4-.473.535a2.61 2.61 0 0 1-.595.306l1.715 2.8h-.919l-1.513-2.581h-1.243v2.58h-.787v-6.247h1.723Zm-.043.683h-.893v2.319h.936c.339 0 .616-.044.832-.132a.956.956 0 0 0 .472-.402c.105-.175.158-.394.158-.656 0-.274-.056-.493-.167-.657a.905.905 0 0 0-.49-.358c-.221-.076-.504-.114-.848-.114ZM.611 14.303a.525.525 0 0 1 0-.782l2.495-2.234a.525.525 0 0 1 .875.39v4.47a.525.525 0 0 1-.875.391L.61 14.303Z",style:{fill:"#fff",fillOpacity:1}})]}),T8=({scale:n=1.2})=>B.jsxs("svg",{xmlns:"http://www.w3.org/2000/svg",width:kt,height:kt,fill:"none",transform:`scale(${n}, ${n})`,children:[B.jsx("path",{stroke:"#fff",strokeWidth:1.5,d:"M14 22.05a8.05 8.05 0 1 0 0-16.1 8.05 8.05 0 0 0 0 16.1Z",style:{stroke:"#fff",strokeOpacity:1}}),B.jsx("path",{stroke:"#fff",strokeWidth:.75,d:"M14 19.95a5.95 5.95 0 1 0 0-11.9 5.95 5.95 0 0 0 0 11.9Z",style:{stroke:"#fff",strokeOpacity:1}}),B.jsx("path",{fill:"#fff",d:"M13.938 11.077c.52 0 .945.068 1.278.202.338.128.59.323.752.586.164.262.245.592.245.989 0 .332-.06.61-.183.83-.123.223-.28.4-.473.535a2.61 2.61 0 0 1-.595.306l1.715 2.8h-.919l-1.513-2.581h-1.243v2.58h-.787v-6.247h1.723Zm-.043.683h-.893v2.319h.936c.339 0 .616-.044.832-.132a.956.956 0 0 0 .472-.402c.105-.175.158-.394.158-.656 0-.274-.056-.493-.167-.657a.905.905 0 0 0-.49-.358c-.221-.076-.504-.114-.848-.114ZM27.389 13.521a.525.525 0 0 1 0 .782l-2.495 2.235a.525.525 0 0 1-.875-.39v-4.47c0-.454.537-.694.875-.391l2.495 2.234Z",style:{fill:"#fff",fillOpacity:1}})]}),A8=({scale:n=1.2})=>B.jsxs("svg",{xmlns:"http://www.w3.org/2000/svg",width:kt,height:kt,fill:"none",transform:`scale(${n}, ${n})`,children:[B.jsx("path",{fill:"#fff",fillRule:"evenodd",d:"M7.525 7.875c-2.283 1.22-3.82 3.507-3.82 6.125s1.537 4.904 3.82 6.125C4.405 19.425 2.1 16.948 2.1 14s2.306-5.425 5.425-6.125Z",clipRule:"evenodd",style:{fill:"#fff",fillOpacity:1}}),B.jsx("path",{stroke:"#fff",strokeWidth:.7,d:"M24.702 10.954a2.187 2.187 0 0 0-2.095-2.817H11.025a5.863 5.863 0 0 0 0 11.726h9.377c.966 0 1.818-.634 2.095-1.56l2.205-7.35Z",style:{stroke:"#fff",strokeOpacity:1}}),B.jsx("path",{fill:"#fff",d:"M10.594 17.15v-6.248h.788v5.548h2.73v.7h-3.518Zm7.13-3.299h2.162v3.063c-.338.11-.68.192-1.024.245a7.837 7.837 0 0 1-1.172.078c-.648 0-1.193-.128-1.637-.385a2.567 2.567 0 0 1-1.015-1.11c-.227-.485-.34-1.057-.34-1.716 0-.653.127-1.219.384-1.697a2.699 2.699 0 0 1 1.103-1.112c.484-.268 1.067-.402 1.75-.402.35 0 .68.032.988.096.315.064.607.155.875.271l-.297.683a4.55 4.55 0 0 0-.753-.254 3.453 3.453 0 0 0-.857-.105c-.496 0-.922.102-1.278.306a2.004 2.004 0 0 0-.813.875c-.187.374-.28.82-.28 1.34 0 .495.078.935.236 1.32.163.38.417.677.761.893.344.21.796.315 1.356.315.187 0 .35-.006.49-.018.146-.017.277-.037.394-.06.123-.024.236-.047.341-.07V14.55h-1.373v-.7Z",style:{fill:"#fff",fillOpacity:1}})]}),b8=({scale:n=1.2})=>B.jsxs("svg",{xmlns:"http://www.w3.org/2000/svg",width:kt,height:kt,fill:"none",transform:`scale(${n}, ${n})`,children:[B.jsx("path",{fill:"#fff",fillRule:"evenodd",d:"M20.441 7.875c2.283 1.22 3.82 3.507 3.82 6.125s-1.537 4.904-3.82 6.125c3.12-.7 5.425-3.177 5.425-6.125s-2.305-5.425-5.425-6.125Z",clipRule:"evenodd",style:{fill:"#fff",fillOpacity:1}}),B.jsx("path",{stroke:"#fff",strokeWidth:.7,d:"M3.264 10.954a2.187 2.187 0 0 1 2.095-2.817h11.582a5.862 5.862 0 0 1 0 11.726H7.564a2.188 2.188 0 0 1-2.095-1.56l-2.205-7.35Z",style:{stroke:"#fff",strokeOpacity:1}}),B.jsx("path",{fill:"#fff",d:"M9.497 10.902c.519 0 .945.068 1.277.202.339.128.59.323.753.586.163.262.245.592.245.989 0 .332-.062.61-.184.83-.122.223-.28.4-.472.535-.187.128-.386.23-.595.306l1.714 2.8h-.918l-1.514-2.581H8.56v2.58h-.787v-6.247h1.724Zm-.044.683H8.56v2.319h.937c.338 0 .615-.044.831-.132a.956.956 0 0 0 .473-.402c.104-.175.157-.394.157-.656 0-.274-.055-.493-.166-.657a.905.905 0 0 0-.49-.358c-.222-.076-.505-.114-.849-.114Zm6.476 2.266h2.16v3.063c-.337.11-.679.192-1.023.245a7.837 7.837 0 0 1-1.172.078c-.648 0-1.193-.128-1.637-.385a2.568 2.568 0 0 1-1.015-1.11c-.227-.485-.34-1.057-.34-1.716 0-.653.127-1.219.384-1.697a2.699 2.699 0 0 1 1.103-1.112c.484-.268 1.067-.402 1.75-.402.35 0 .68.032.988.096.315.064.607.155.875.271l-.297.683a4.551 4.551 0 0 0-.753-.254 3.453 3.453 0 0 0-.857-.105c-.496 0-.922.102-1.278.306a2.004 2.004 0 0 0-.813.875c-.187.374-.28.82-.28 1.34 0 .495.078.935.236 1.32.163.38.417.677.761.893.344.21.796.315 1.356.315.187 0 .35-.006.49-.018a5.17 5.17 0 0 0 .394-.06c.123-.024.236-.047.341-.07V14.55H15.93v-.7Z",style:{fill:"#fff",fillOpacity:1}})]}),R8=({scale:n=1.2})=>B.jsxs("svg",{xmlns:"http://www.w3.org/2000/svg",width:kt,height:kt,fill:"none",transform:`scale(${n}, ${n})`,children:[B.jsx("path",{stroke:"#fff",strokeWidth:.7,d:"M14 20.212a7.612 7.612 0 1 0 0-15.224 7.612 7.612 0 0 0 0 15.224Z",style:{stroke:"#fff",strokeOpacity:1}}),B.jsx("path",{fill:"#fff",d:"M10.209 15.662V9.415h.787v5.548h2.73v.7H10.21Zm6.395 0h-.787v-5.556h-1.952v-.691h4.682v.691h-1.943v5.556Z",style:{fill:"#fff",fillOpacity:1}}),B.jsx("path",{fill:"#fff",fillRule:"evenodd",d:"M21.235 17.5a8.31 8.31 0 0 1-7.205 4.165A8.31 8.31 0 0 1 6.825 17.5c.823 3.4 3.737 5.915 7.205 5.915 3.469 0 6.382-2.514 7.205-5.915Z",clipRule:"evenodd",style:{fill:"#fff",fillOpacity:1}})]}),C8=({scale:n=1.2})=>B.jsxs("svg",{xmlns:"http://www.w3.org/2000/svg",width:kt,height:kt,fill:"none",transform:`scale(${n}, ${n})`,children:[B.jsx("path",{stroke:"#fff",strokeWidth:.7,d:"M14 20.212a7.612 7.612 0 1 0 0-15.224 7.612 7.612 0 0 0 0 15.224Z",style:{stroke:"#fff",strokeOpacity:1}}),B.jsx("path",{fill:"#fff",d:"M11.42 9.415c.52 0 .945.067 1.277.201.339.129.59.324.753.587.163.262.245.592.245.988 0 .333-.061.61-.184.832-.122.221-.28.4-.472.533-.187.129-.385.23-.595.307l1.715 2.8h-.92l-1.513-2.582h-1.242v2.582h-.788V9.415h1.724Zm-.044.683h-.892v2.318h.936c.338 0 .615-.043.831-.131a.956.956 0 0 0 .473-.402c.105-.175.157-.394.157-.657 0-.274-.055-.493-.166-.656a.905.905 0 0 0-.49-.359c-.222-.075-.505-.114-.849-.114Zm5.74 5.564h-.787v-5.556h-1.951v-.691h4.681v.691h-1.942v5.556Z",style:{fill:"#fff",fillOpacity:1}}),B.jsx("path",{fill:"#fff",fillRule:"evenodd",d:"M21.235 17.5a8.31 8.31 0 0 1-7.205 4.165A8.31 8.31 0 0 1 6.825 17.5c.823 3.4 3.737 5.915 7.205 5.915 3.469 0 6.382-2.514 7.205-5.915Z",clipRule:"evenodd",style:{fill:"#fff",fillOpacity:1}})]}),P8=({scale:n=1.2})=>B.jsxs("svg",{xmlns:"http://www.w3.org/2000/svg",width:kt,height:kt,fill:"none",transform:`scale(${n}, ${n})`,children:[B.jsx("path",{stroke:"#fff",d:"m20.01 15.768-4.242 4.242a5.5 5.5 0 1 1-7.778-7.778l4.242-4.242a5.5 5.5 0 1 1 7.778 7.778Z",style:{stroke:"#fff",strokeOpacity:1}}),B.jsx("path",{fill:"#fff",fillRule:"evenodd",d:"M11.172 16.828a1 1 0 0 0 1.414 0L15.414 14l.707.707-2.828 2.828a2 2 0 1 1-2.829-2.828l.708.707a1 1 0 0 0 0 1.414ZM12.586 14l2.828-2.829a1 1 0 1 1 1.414 1.415l.708.707a2 2 0 0 0-2.829-2.829l-2.828 2.829.707.707Z",clipRule:"evenodd",style:{fill:"#fff",fillOpacity:1}}),B.jsx("path",{fill:"#fff",fillRule:"evenodd",d:"M15.414 16.828 18.243 14a3 3 0 0 0-2.289-5.117l-.869-.869a4 4 0 0 1 3.864 6.693l-2.828 2.828-.707-.707Zm-.707 2.122a4 4 0 1 1-5.657-5.657l4.243-4.243.707.707L9.757 14A3 3 0 1 0 14 18.242l.707.708Z",clipRule:"evenodd",style:{fill:"#fff",fillOpacity:1}})]}),L8=({scale:n=1.2})=>B.jsxs("svg",{xmlns:"http://www.w3.org/2000/svg",width:kt,height:kt,fill:"none",transform:`scale(${n}, ${n})`,children:[B.jsx("path",{stroke:"#fff",d:"m15.768 7.99 4.242 4.242a5.5 5.5 0 1 1-7.778 7.778L7.99 15.768a5.5 5.5 0 1 1 7.778-7.778Z",style:{stroke:"#fff",strokeOpacity:1}}),B.jsx("path",{fill:"#fff",fillRule:"evenodd",d:"M16.828 16.828a1 1 0 0 0 0-1.414L14 12.586l.707-.707 2.828 2.828a2 2 0 1 1-2.828 2.828l.707-.707a1 1 0 0 0 1.414 0ZM14 15.414l-2.828-2.828a1 1 0 0 1 1.414-1.414l.707-.708a2 2 0 0 0-2.829 2.829l2.829 2.828.707-.707Z",clipRule:"evenodd",style:{fill:"#fff",fillOpacity:1}}),B.jsx("path",{fill:"#fff",fillRule:"evenodd",d:"M16.828 12.586 14 9.757a3 3 0 0 0-5.117 2.289l-.869.869a4 4 0 0 1 6.693-3.864l2.828 2.828-.707.707Zm2.122.707a4 4 0 1 1-5.657 5.657L9.05 14.707 9.757 14 14 18.243A3 3 0 1 0 18.243 14l.707-.707Z",clipRule:"evenodd",style:{fill:"#fff",fillOpacity:1}})]}),I8=()=>B.jsx(rf,{icon:Rx,$reverse:!0}),D8=()=>B.jsx(rf,{icon:Rx,$reverse:!1}),N8=()=>B.jsx(rf,{icon:Cx,$reverse:!0}),U8=()=>B.jsx(rf,{icon:Cx,$reverse:!1}),O8={"x-button-left":d8,"y-button-left":h8,"a-button-right":p8,"b-button-right":m8,"thumbstick-left":g8,"thumbstick-up-left":_8,"thumbstick-down-left":x8,"thumbstick-right-left":S8,"thumbstick-left-left":y8,"pose-left":I8,"pinch-left":N8,"thumbstick-right":v8,"thumbstick-up-right":M8,"thumbstick-down-right":E8,"thumbstick-right-right":T8,"thumbstick-left-right":w8,"trigger-left":R8,"trigger-right":C8,"squeeze-left":A8,"squeeze-right":b8,"thumbrest-left":P8,"thumbrest-right":L8,"pose-right":D8,"pinch-right":U8},zd=({buttonName:n,handedness:e})=>{const t=`${n}-${e}`,i=O8[t];return i?B.jsx(i,{}):B.jsx("div",{style:{width:St.height,height:St.height}})},F8=({scale:n=1.2})=>B.jsxs("svg",{xmlns:"http://www.w3.org/2000/svg",width:12,height:16,fill:"none",transform:`scale(${n}, ${n})`,children:[B.jsx("g",{clipPath:"url(#a)",children:B.jsx("path",{stroke:"#fff",d:"M.5 6.5H6m-5.5 0V5C.5 2.237 2.237.5 5 .5h1m-5.5 6V11c0 2.762 1.737 4.5 4.5 4.5h2c2.762 0 4.5-1.738 4.5-4.5V6.5M6 6.5v-6m0 6h5.5M6 .5h1c2.762 0 4.5 1.737 4.5 4.5v1.5",style:{stroke:"#fff",strokeOpacity:1}})}),B.jsx("path",{fill:"#fff",d:"M.5 6.5H6v-6H5C2.237.5.5 2.237.5 5v1.5Z",style:{fill:"#fff",fillOpacity:1}}),B.jsx("defs",{children:B.jsx("clipPath",{id:"a",children:B.jsx("path",{fill:"#fff",d:"M0 0h12v16H0z",style:{fill:"#fff",fillOpacity:1}})})})]}),k8=({scale:n=1.2})=>B.jsxs("svg",{xmlns:"http://www.w3.org/2000/svg",width:12,height:16,fill:"none",transform:`scale(${n}, ${n})`,children:[B.jsx("g",{clipPath:"url(#a)",children:B.jsx("path",{stroke:"#fff",d:"M.5 6.5H6m-5.5 0V5C.5 2.237 2.237.5 5 .5h1m-5.5 6V11c0 2.762 1.737 4.5 4.5 4.5h2c2.762 0 4.5-1.738 4.5-4.5V6.5M6 6.5v-6m0 6h5.5M6 .5h1c2.762 0 4.5 1.737 4.5 4.5v1.5",style:{stroke:"#fff",strokeOpacity:1}})}),B.jsx("path",{fill:"#fff",d:"M11.5 6.5H6v-6h1c2.762 0 4.5 1.737 4.5 4.5v1.5Z",style:{fill:"#fff",fillOpacity:1}}),B.jsx("defs",{children:B.jsx("clipPath",{id:"a",children:B.jsx("path",{fill:"#fff",d:"M0 0h12v16H0z",style:{fill:"#fff",fillOpacity:1}})})})]}),z8=({size:n=14,color:e=ft.textWhite})=>B.jsx("svg",{xmlns:"http://www.w3.org/2000/svg",width:n,height:n,viewBox:"0 0 14 14",fill:"none",children:B.jsx("path",{stroke:e,strokeWidth:1.5,d:"M7 13.037V5.512m-.324.289 6.3-2.275m-11.952 0 6.3 2.275m.23 6.937 4.233-1.528a1.627 1.627 0 0 0 1.076-1.53V4.396c0-.685-.43-1.297-1.076-1.53L7.553 1.339a1.63 1.63 0 0 0-1.106 0L2.213 2.867a1.627 1.627 0 0 0-1.075 1.53V9.68c0 .686.43 1.298 1.075 1.53l4.234 1.529a1.63 1.63 0 0 0 1.106 0Z",style:{stroke:e,strokeOpacity:1}})}),B8=({size:n=14,color:e=ft.textWhite})=>B.jsx("svg",{xmlns:"http://www.w3.org/2000/svg",width:n,height:n,viewBox:"0 0 14 14",fill:"none",children:B.jsx("path",{stroke:e,strokeWidth:1.2,d:"M7 13.037V5.512M3.937 11.9V4.375m6.126 7.525V4.375M6.675 5.8l6.3-2.275m-9.275.962 6.3-2.275M1.024 3.526l6.3 2.275M6.85 9.388l6.3-2.275m-12.302 0 6.3 2.276m-3.15-7.176 6.3 2.276m-2.746 8.248 4.234-1.527a1.627 1.627 0 0 0 1.075-1.53V4.396c0-.685-.43-1.297-1.075-1.53L7.553 1.339a1.63 1.63 0 0 0-1.106 0L2.213 2.867a1.627 1.627 0 0 0-1.076 1.53V9.68c0 .686.43 1.298 1.076 1.53l4.234 1.529a1.63 1.63 0 0 0 1.106 0Z",style:{stroke:e,strokeOpacity:1}})}),H8=({size:n=14,color:e=ft.textWhite})=>B.jsx("svg",{xmlns:"http://www.w3.org/2000/svg",width:n,height:n,viewBox:"0 0 14 14",fill:"none",children:B.jsx("path",{stroke:e,strokeWidth:1.2,d:"M1.225 8.225h11.55M2.1 5.075h9.8m-7 7L5.6 2.1m3.5 9.975L8.4 2.1m-5.708 9.712h8.617a1.75 1.75 0 0 0 1.696-2.183l-1.567-6.125a1.75 1.75 0 0 0-1.695-1.317H4.258c-.8 0-1.498.542-1.696 1.317L.996 9.629a1.75 1.75 0 0 0 1.696 2.183Z",style:{stroke:e,strokeOpacity:1}})}),D_=({size:n=14,color:e=ft.textWhite})=>B.jsxs("svg",{xmlns:"http://www.w3.org/2000/svg",width:n,height:n,viewBox:"0 0 14 14",fill:"none",children:[B.jsx("path",{fill:e,d:"M10.5 8.367a1.4 1.4 0 1 0 0-2.8 1.4 1.4 0 0 0 0 2.8Z",style:{fill:e,fillOpacity:1}}),B.jsx("path",{fill:e,fillRule:"evenodd",d:"M0 5.8A2.8 2.8 0 0 1 2.8 3h8.4A2.8 2.8 0 0 1 14 5.8v2.8a2.8 2.8 0 0 1-2.8 2.8H9.526c-.619 0-1.184-.35-1.46-.903l-.108-.214a.933.933 0 0 0-.835-.516h-.246c-.354 0-.677.2-.835.516l-.107.214a1.633 1.633 0 0 1-1.461.903H2.8A2.8 2.8 0 0 1 0 8.6V5.8Zm4.9 1.167a1.4 1.4 0 1 1-2.8 0 1.4 1.4 0 0 1 2.8 0Zm8.367-.768a.268.268 0 0 0 .076-.292 2.942 2.942 0 0 0-.187-.407l-.055-.096a3.012 3.012 0 0 0-.262-.37.27.27 0 0 0-.29-.08l-.66.21a2.279 2.279 0 0 0-.522-.302l-.148-.676a.268.268 0 0 0-.215-.211 3.062 3.062 0 0 0-1.008.001.268.268 0 0 0-.215.21l-.148.677a2.28 2.28 0 0 0-.522.301l-.66-.21a.268.268 0 0 0-.29.081c-.096.116-.184.24-.262.37l-.056.096c-.072.13-.135.265-.187.406a.268.268 0 0 0 .076.292l.513.467a2.293 2.293 0 0 0 0 .603l-.513.467a.268.268 0 0 0-.076.291c.052.141.115.276.187.407l.056.096c.078.13.166.253.262.37a.27.27 0 0 0 .29.08l.66-.211c.158.122.333.224.52.3l.149.677a.268.268 0 0 0 .215.211 3.06 3.06 0 0 0 1.007 0 .268.268 0 0 0 .216-.21l.148-.677a2.28 2.28 0 0 0 .521-.301l.66.21c.105.033.22.004.29-.08.097-.117.184-.24.263-.37l.055-.097c.073-.13.135-.265.188-.406a.268.268 0 0 0-.076-.292l-.513-.466a2.299 2.299 0 0 0 0-.602l.513-.467Z",clipRule:"evenodd",style:{fill:e,fillOpacity:1}})]}),Zr={KeyA:"A",KeyB:"B",KeyC:"C",KeyD:"D",KeyE:"E",KeyF:"F",KeyG:"G",KeyH:"H",KeyI:"I",KeyJ:"J",KeyK:"K",KeyL:"L",KeyM:"M",KeyN:"N",KeyO:"O",KeyP:"P",KeyQ:"Q",KeyR:"R",KeyS:"S",KeyT:"T",KeyU:"U",KeyV:"V",KeyW:"W",KeyX:"X",KeyY:"Y",KeyZ:"Z",Digit0:"0",Digit1:"1",Digit2:"2",Digit3:"3",Digit4:"4",Digit5:"5",Digit6:"6",Digit7:"7",Digit8:"8",Digit9:"9",Tab:B.jsx(qt,{icon:e8}),Backspace:B.jsx(qt,{icon:o8}),Enter:B.jsx(qt,{style:{transform:"rotate(90deg)"},icon:u8}),ShiftLeft:B.jsx(qt,{icon:HM}),ShiftRight:B.jsx(qt,{icon:HM}),Space:" ",ArrowUp:B.jsx(qt,{icon:t8}),ArrowDown:B.jsx(qt,{icon:a8}),ArrowLeft:B.jsx(qt,{icon:QL}),ArrowRight:B.jsx(qt,{icon:ZL}),Semicolon:";",Equal:"=",Comma:",",Minus:"-",Period:".",Slash:"/",Backquote:"`",BracketLeft:"[",Backslash:"\\",BracketRight:"]",Quote:"'",MouseLeft:B.jsx(F8,{}),MouseRight:B.jsx(k8,{})},V8={left:{"thumbstick-up":"KeyW","thumbstick-down":"KeyS","thumbstick-left":"KeyA","thumbstick-right":"KeyD",thumbstick:"KeyR","x-button":"KeyX","y-button":"KeyZ",trigger:"KeyQ",squeeze:"KeyE",pinch:"MouseLeft",pose:"KeyF"},right:{"thumbstick-up":"ArrowUp","thumbstick-down":"ArrowDown","thumbstick-left":"ArrowLeft","thumbstick-right":"ArrowRight",thumbstick:"Slash","a-button":"Enter","b-button":"ShiftRight",trigger:"MouseLeft",squeeze:"MouseRight",pinch:"MouseRight",pose:"Backslash"}},Px=rx(n=>({keyMap:V8,bindKey:(e,t,i="Unmapped")=>n(r=>({keyMap:{...r.keyMap,[e]:{...r.keyMap[e],[t]:i}}}))})),G8=en.div`
	display: flex;
	height: ${St.height};
	align-items: center;
	justify-content: space-between;
	margin-bottom: ${St.gap};

	&:last-child {
		margin-bottom: 0;
	}
`,Mb=({handedness:n,actions:e})=>{const{keyMap:t,bindKey:i}=Px(),[r,s]=Wt.useState(null),l=c=>{s({action:c})};return Wt.useEffect(()=>{const c=h=>{r&&Zr[h.code]&&(i(n,r.action,h.code),s(null))},u=h=>{if(r){const m=h.button===0?"MouseLeft":h.button===2?"MouseRight":null;m&&Zr[m]&&(i(n,r.action,m),s(null))}},d=h=>{h.preventDefault()};return window.addEventListener("keydown",c),window.addEventListener("mousedown",u),window.addEventListener("contextmenu",d),()=>{window.removeEventListener("keydown",c),window.removeEventListener("mousedown",u),window.removeEventListener("contextmenu",d)}},[r]),Object.keys(t[n]).filter(c=>e.includes(c)).map(c=>B.jsxs(G8,{children:[B.jsx(zd,{buttonName:c==="up"?"thumbstick":c,handedness:n}),B.jsxs(po,{$reverse:!1,children:[B.jsx(bi,{$reverse:!1,style:{width:"100px",background:r&&r.action===c?ft.gradientLightGreyTranslucent:ft.gradientGreyTranslucent},onClick:()=>l(c),onContextMenu:u=>u.preventDefault(),children:t[n][c]}),B.jsx(bi,{style:{width:St.widthShort},$reverse:!1,onClick:()=>i(n,c),onContextMenu:u=>u.preventDefault(),children:B.jsx(Wd,{icon:JL})})]})]},c))},W8=({xrController:n,buttonId:e,pointerLocked:t,mappedKey:i})=>{const[r,s]=Wt.useState(!1),[l,c]=Wt.useState(!1),[u,d]=Wt.useState(!1),[h,m]=Wt.useState(0),p=n.inputSource.handedness;return Wt.useEffect(()=>{const x=g=>{g.code===i&&(n.updateButtonValue(e,1),d(!0))},y=g=>{g.code===i&&(n.updateButtonValue(e,0),d(!1))},S=g=>{(i==="MouseLeft"&&g.button===0||i==="MouseRight"&&g.button===2)&&(n.updateButtonValue(e,1),d(!0))},v=g=>{(i==="MouseLeft"&&g.button===0||i==="MouseRight"&&g.button===2)&&(n.updateButtonValue(e,0),d(!1))};return t?i==="MouseLeft"||i==="MouseRight"?(window.addEventListener("mousedown",S),window.addEventListener("mouseup",v)):(window.addEventListener("keydown",x),window.addEventListener("keyup",y)):i==="MouseLeft"||i==="MouseRight"?(window.removeEventListener("mousedown",S),window.removeEventListener("mouseup",v)):(window.removeEventListener("keydown",x),window.removeEventListener("keyup",y)),()=>{i==="MouseLeft"||i==="MouseRight"?(window.removeEventListener("mousedown",S),window.removeEventListener("mouseup",v)):(window.removeEventListener("keydown",x),window.removeEventListener("keyup",y))}},[i,t,e,n]),B.jsxs(Hu,{$reverse:p==="right",children:[B.jsx(zd,{buttonName:e,handedness:p}),B.jsx(po,{$reverse:p==="right",children:t?B.jsx(ra,{$pressed:u,children:Zr[i]}):B.jsxs(B.Fragment,{children:[B.jsx(bi,{$reverse:p==="right",style:{background:l?ft.gradientLightGreyTranslucent:ft.gradientGreyTranslucent,width:St.widthLong},onClick:()=>{c(!0),n.updateButtonValue(e,1),setTimeout(()=>{c(!1),n.updateButtonValue(e,0)},250)},children:"Press"}),B.jsx(bi,{title:"Click to toggle touch state",$reverse:p==="right",style:{background:r?ft.gradientLightGreyTranslucent:ft.gradientGreyTranslucent,width:St.widthShort},onClick:()=>{s(!r),n.updateButtonTouch(e,!r)},children:B.jsx(qt,{icon:bx})}),B.jsx(pb,{$reverse:p==="right",value:h,onChange:x=>{const y=Number(x.target.value);m(y),n.updateButtonValue(e,y/100)},min:"0",max:"100"})]})})]})},$8=({xrController:n,buttonId:e,pointerLocked:t,mappedKey:i})=>{const[r,s]=Wt.useState(!1),[l,c]=Wt.useState(!1),[u,d]=Wt.useState(!1),[h,m]=Wt.useState(!1),p=n.inputSource.handedness;return Wt.useEffect(()=>{const x=S=>{S.code===i&&(n.updateButtonValue(e,1),m(!0))},y=S=>{S.code===i&&(n.updateButtonValue(e,0),m(!1))};return t?(window.addEventListener("keydown",x),window.addEventListener("keyup",y)):(window.removeEventListener("keydown",x),window.removeEventListener("keyup",y)),()=>{window.removeEventListener("keydown",x),window.removeEventListener("keyup",y)}},[i,t,e,n]),B.jsxs(Hu,{$reverse:p==="right",children:[B.jsx(zd,{buttonName:e,handedness:p}),B.jsx(po,{$reverse:p==="right",children:t?B.jsx(ra,{$pressed:h,children:Zr[i]}):B.jsxs(B.Fragment,{children:[B.jsx(bi,{$reverse:p==="right",style:{background:u?ft.gradientLightGreyTranslucent:ft.gradientGreyTranslucent,width:St.widthLong},onClick:()=>{d(!0),n.updateButtonValue(e,1),setTimeout(()=>{d(!1),n.updateButtonValue(e,0)},250)},children:"Press"}),B.jsx(bi,{title:"Click to toggle touch state",$reverse:p==="right",style:{background:r?ft.gradientLightGreyTranslucent:ft.gradientGreyTranslucent,width:St.widthShort},onClick:()=>{s(!r),n.updateButtonTouch(e,!r)},children:B.jsx(qt,{icon:bx})}),B.jsx(bi,{$reverse:p==="right",style:{background:l?ft.gradientLightGreyTranslucent:ft.gradientGreyTranslucent,width:St.widthLong},onClick:()=>{c(!l),n.updateButtonValue(e,l?0:1)},children:"Hold"})]})})]})},X8=en.div`
	display: flex;
	align-items: center;
	margin-bottom: ${St.gap};
`,WM=`calc(2 * ${St.height} + ${St.gap})`,q8=en.button`
	background: ${ft.gradientGreyTranslucent};
	border: none;
	display: flex;
	justify-content: center;
	align-items: center;
	padding: 0;
	pointer-events: none;
	width: ${WM};
	height: ${WM};
	border-radius: 50%;
	position: relative;
	margin: 0 5px;
`,j8=en.div`
	position: absolute;
	font-size: 50px;
	display: flex;
	align-items: center;
	justify-content: center;
	color: ${ft.textWhite};
	cursor: pointer;
	pointer-events: auto;
`,$M=en(bi)`
	width: ${St.widthLong};
	font-size: ${St.fontSize};

	${({$reverse:n})=>n?`
    &:first-child {
      border-radius: ${St.radiusLast};
    }

    &:last-child {
      border-radius: ${St.radiusFirst};
    }
  `:`
    &:first-child {
      border-radius: ${St.radiusFirst};
    }

    &:last-child {
      border-radius: ${St.radiusLast};
    }
  `}
`,Y8=({xrController:n,pointerLocked:e,buttonId:t,mappedKeyUp:i,mappedKeyDown:r,mappedKeyLeft:s,mappedKeyRight:l,mappedKeyPressed:c})=>{const u=Wt.useRef(null),[d,h]=Wt.useState(!1),[m,p]=Wt.useState(!1),[x,y]=Wt.useState(!1),[S,v]=Wt.useState(!1),[g,P]=Wt.useState({x:0,y:0}),[w,C]=Wt.useState({up:!1,down:!1,left:!1,right:!1,pressed:!1}),z=n.inputSource.handedness,L=()=>{if(u.current){const R=u.current.getBoundingClientRect();P({x:R.left+R.width/2,y:R.top+R.height/2}),h(!0)}},D=R=>{if(d&&u.current){const T=R.clientX-g.x,O=R.clientY-g.y,Z=Math.sqrt(T*T+O*O),W=12;let K,ne;if(Z<W)K=T,ne=O;else{const G=Math.atan2(O,T);K=Math.cos(G)*W,ne=Math.sin(G)*W}u.current.style.transform=`translate(${K}px, ${ne}px)`;const Q=K/W,se=ne/W;n.updateAxes(t,Q,se)}},V=()=>{h(!1),u.current&&(u.current.style.transform="translate(0, 0)",n.updateAxes(t,0,0))};return Wt.useEffect(()=>{const R=Z=>{const W={...w};Z.code===i&&(W.up=!0),Z.code===r&&(W.down=!0),Z.code===s&&(W.left=!0),Z.code===l&&(W.right=!0),Z.code===c&&(W.pressed=!0,n.updateButtonValue(t,1)),C(W),O(W)},T=Z=>{const W={...w};Z.code===i&&(W.up=!1),Z.code===r&&(W.down=!1),Z.code===s&&(W.left=!1),Z.code===l&&(W.right=!1),Z.code===c&&(W.pressed=!1,n.updateButtonValue(t,0)),C(W),O(W)},O=Z=>{const W=(Z.right?1:0)-(Z.left?1:0),K=(Z.down?1:0)-(Z.up?1:0),ne=Math.sqrt(W*W+K*K);if(ne===0){n.updateAxes(t,0,0);return}const Q=W/ne,se=K/ne;n.updateAxes(t,Q,se)};return e?(window.addEventListener("keydown",R),window.addEventListener("keyup",T)):(window.removeEventListener("keydown",R),window.removeEventListener("keyup",T)),()=>{window.removeEventListener("keydown",R),window.removeEventListener("keyup",T)}},[i,r,s,l,e,w]),Wt.useEffect(()=>(document.addEventListener("mousemove",D),document.addEventListener("mouseup",V),()=>{document.removeEventListener("mousemove",D),document.removeEventListener("mouseup",V)}),[d,g]),e?B.jsxs(B.Fragment,{children:[B.jsxs(Hu,{$reverse:z==="right",children:[B.jsx(zd,{buttonName:"thumbstick",handedness:n.inputSource.handedness}),B.jsxs(po,{$reverse:z==="right",children:[B.jsx(ra,{$pressed:w.up,children:Zr[i]}),B.jsx(ra,{$pressed:w.pressed,children:Zr[c]})]})]}),B.jsx(Hu,{$reverse:z==="right",style:z==="right"?{marginRight:"2px"}:{marginLeft:"2px"},children:B.jsxs(po,{$reverse:!1,style:{margin:0},children:[B.jsx(ra,{$pressed:w.left,children:Zr[s]}),B.jsx(ra,{$pressed:w.down,children:Zr[r]}),B.jsx(ra,{$pressed:w.right,children:Zr[l]})]})})]}):B.jsx(X8,{style:{flexDirection:n.inputSource.handedness==="left"?"row":"row-reverse",alignItems:"flex-start"},children:B.jsxs(B.Fragment,{children:[B.jsx(zd,{buttonName:"thumbstick",handedness:n.inputSource.handedness}),B.jsx(q8,{style:{margin:"0 5px"},children:B.jsx(j8,{ref:u,onMouseDown:L,children:B.jsx(qt,{icon:d0,$size:50})})}),B.jsxs("div",{style:{display:"flex",flexDirection:"column",alignItems:z==="right"?"start":"end"},children:[B.jsx(bi,{$reverse:z==="right",style:{background:S?ft.gradientLightGreyTranslucent:ft.gradientGreyTranslucent,width:`calc(${St.widthLong} + ${St.widthShort} + ${St.gap})`,marginBottom:St.gap,borderRadius:St.radiusSolo},onClick:()=>{v(!0),n.updateButtonValue(t,1),setTimeout(()=>{v(!1),n.updateButtonValue(t,0)},250)},children:"Press"}),B.jsxs(po,{$reverse:z==="right",children:[B.jsx($M,{title:"Click to toggle touch state",$reverse:n.inputSource.handedness!=="left",style:{background:m?ft.gradientLightGreyTranslucent:ft.gradientGreyTranslucent,width:St.widthShort},onClick:()=>{p(!m),n.updateButtonTouch(t,!m)},children:B.jsx(qt,{icon:bx})}),B.jsx($M,{$reverse:n.inputSource.handedness!=="left",style:{background:x?ft.gradientLightGreyTranslucent:ft.gradientGreyTranslucent,width:St.widthLong},onClick:()=>{y(!x),n.updateButtonValue(t,x?0:1)},children:"Hold"})]})]})]})})};function fc(n,e){const t=Math.pow(10,e);return Math.round(n*t)/t}const K8=en.div`
	width: 100%;
	display: flex;
	flex-direction: row;
	justify-content: space-between;
	align-items: center;
	margin: 0;
	font-size: 12px;
`,Bd=({vector:n,label:e="",icon:t,multiplier:i=1,precision:r=2,onValidInput:s=()=>{},marginBottom:l="0"})=>{const[c,u]=Wt.useState({x:(n.x/i).toFixed(r),y:(n.y/i).toFixed(r),z:(n.z/i).toFixed(r)}),d=Wt.useRef({x:fc(n.x/i,r),y:fc(n.y/i,r),z:fc(n.z/i,r)}),h=Wt.useRef(null),m=()=>{const x={x:fc(n.x/i,r),y:fc(n.y/i,r),z:fc(n.z/i,r)},{x:y,y:S,z:v}=d.current;(x.x!==y||x.y!==S||x.z!==v)&&(d.current=x,u({x:x.x.toFixed(r),y:x.y.toFixed(r),z:x.z.toFixed(r)})),h.current=requestAnimationFrame(m)};Wt.useEffect(()=>(h.current=requestAnimationFrame(m),()=>{h.current&&cancelAnimationFrame(h.current)}),[n,i,r]);const p=x=>y=>{const S=y.target.value,v=parseFloat(S);u(g=>({...g,[x]:S})),isNaN(v)||(d.current[x]=v,n[x]=v*i,s())};return B.jsxs(K8,{style:{marginBottom:l},children:[t?B.jsx(qt,{icon:t,style:{marginRight:"5px"}}):B.jsx("span",{style:{marginRight:"5px"},children:e}),B.jsx(mb,{children:["x","y","z"].map(x=>B.jsxs("div",{style:{position:"relative",display:"inline-block",height:"25px"},children:[B.jsx(gb,{value:c[x],onChange:p(x),className:parseFloat(c[x])!==d.current[x]?"invalid":void 0}),B.jsx(vb,{children:x.toUpperCase()})]},`${e}-${x}`))})]})};function Z8(n){const e=new Set;for(const i of n.axes)i&&i.id&&e.add(i.id);const t=n.buttons.filter(i=>i!==null).map(i=>({id:i.id,type:i.type,hasAxes:e.has(i.id)}));return t.sort((i,r)=>i.hasAxes&&!r.hasAxes?-1:!i.hasAxes&&r.hasAxes?1:0),t}const Q8=({controller:n,handle:e,handedness:t,pointerLocked:i})=>{const{keyMap:r}=Px(),[s,l]=Cr.useState(n.connected),[c,u]=Cr.useState(!1),d=Z8(n.gamepadConfig),h=d.flatMap(m=>m.hasAxes?[`${m.id}-left`,`${m.id}-right`,`${m.id}-up`,`${m.id}-down`,m.id]:m.id);return Cr.useEffect(()=>{i&&u(!1)},[i]),B.jsxs(kd,{style:t==="left"?{left:"8px",bottom:"8px"}:{right:"8px",bottom:"8px"},children:[!i&&B.jsx(B.Fragment,{children:B.jsxs("div",{style:{display:"flex",flexDirection:"row",justifyContent:"space-between",alignItems:"center"},children:[B.jsxs("div",{style:{fontSize:"13px",display:"flex",flexDirection:"row",alignItems:"center"},children:[B.jsx(qt,{icon:_b,style:{marginRight:"5px"}}),"Controller ",B.jsxs("span",{style:{fontWeight:"bold"},children:["[",t==="left"?"L":"R","]"]})]}),B.jsx("div",{style:{display:"flex",flexDirection:"row",gap:"1px"},children:s?B.jsxs(B.Fragment,{children:[B.jsx(Ll,{title:`Click to ${c?"close":"change"} key bindings`,onClick:()=>{u(!c)},children:B.jsx(qt,{icon:Sb})}),B.jsx(Ll,{title:`Click to disconnect ${t} controller`,$isRed:!0,onClick:()=>{n.connected=!1,l(!1)},children:B.jsx(qt,{icon:d0})})]}):B.jsx(Ll,{title:`Click to reconnect ${t} controller`,onClick:()=>{n.connected=!0,l(!0)},style:{marginLeft:"5px"},children:B.jsx(qt,{icon:yb})})})]})}),s&&!i&&B.jsxs(B.Fragment,{children:[!c&&B.jsxs(B.Fragment,{children:[B.jsx(Ul,{}),B.jsx(Bd,{vector:e.position,label:"Position",marginBottom:St.gap}),B.jsx(Bd,{vector:e.rotation,label:"Rotation"})]}),B.jsx(Ul,{})]}),s&&(c?B.jsx(Mb,{handedness:t,actions:h}):d.map(m=>{const p=r[t];return m.hasAxes?B.jsx(Y8,{xrController:n,pointerLocked:i,buttonId:m.id,mappedKeyUp:r[t][`${m.id}-up`],mappedKeyDown:p[`${m.id}-down`],mappedKeyLeft:p[`${m.id}-left`],mappedKeyRight:p[`${m.id}-right`],mappedKeyPressed:p[m.id]},m.id):m.type==="analog"?B.jsx(W8,{xrController:n,buttonId:m.id,mappedKey:p[m.id],pointerLocked:i},m.id):B.jsx($8,{xrController:n,buttonId:m.id,mappedKey:p[m.id],pointerLocked:i},m.id)}))]},t)},J8=`calc(${St.widthLong} + ${St.widthShort} + ${St.gap})`,eI=({hand:n,pointerLocked:e,mappedKey:t})=>{const[i,r]=Wt.useState(!1),[s,l]=Wt.useState(!1),[c,u]=Wt.useState(0),d=n.inputSource.handedness;return Wt.useEffect(()=>{const h=y=>{y.code===t&&(n.updatePinchValue(1),l(!0))},m=y=>{y.code===t&&(n.updatePinchValue(0),l(!1))},p=y=>{(t==="MouseLeft"&&y.button===0||t==="MouseRight"&&y.button===2)&&(n.updatePinchValue(1),l(!0))},x=y=>{(t==="MouseLeft"&&y.button===0||t==="MouseRight"&&y.button===2)&&(n.updatePinchValue(0),l(!1))};return e?t==="MouseLeft"||t==="MouseRight"?(window.addEventListener("mousedown",p),window.addEventListener("mouseup",x)):(window.addEventListener("keydown",h),window.addEventListener("keyup",m)):t==="MouseLeft"||t==="MouseRight"?(window.removeEventListener("mousedown",p),window.removeEventListener("mouseup",x)):(window.removeEventListener("keydown",h),window.removeEventListener("keyup",m)),()=>{t==="MouseLeft"||t==="MouseRight"?(window.removeEventListener("mousedown",p),window.removeEventListener("mouseup",x)):(window.removeEventListener("keydown",h),window.removeEventListener("keyup",m))}},[t,e,n]),B.jsxs(Hu,{$reverse:d==="right",children:[B.jsx(rf,{icon:Cx,$reverse:d==="left"}),B.jsx(po,{$reverse:d==="right",children:e?B.jsx(ra,{$pressed:s,children:Zr[t]}):B.jsxs(B.Fragment,{children:[B.jsx(bi,{$reverse:d==="right",style:{background:i?ft.gradientLightGreyTranslucent:ft.gradientGreyTranslucent,width:St.widthLong},onClick:()=>{r(!0),n.updatePinchValue(1),setTimeout(()=>{r(!1),n.updatePinchValue(0)},250)},children:"Pinch"}),B.jsx(pb,{$reverse:d==="right",value:c,onChange:h=>{const m=Number(h.target.value);u(m),n.updatePinchValue(m/100)},style:{width:J8},min:"0",max:"100"})]})})]})},Jf=["default","point"],tI=`calc(2 * ${St.widthLong} - ${St.widthShort})`,nI=({hand:n,pointerLocked:e,mappedKey:t})=>{const[i,r]=Wt.useState(n.poseId),[s,l]=Wt.useState(!1),c=n.inputSource.handedness,u=h=>{const p=(Jf.indexOf(n.poseId)+Jf.length+h)%Jf.length;r(Jf[p]),n.poseId=Jf[p]},d=c==="right";return Wt.useEffect(()=>{const h=p=>{p.code===t&&(u(1),l(!0))},m=p=>{p.code===t&&l(!1)};return e?(window.addEventListener("keydown",h),window.addEventListener("keyup",m)):(window.removeEventListener("keydown",h),window.removeEventListener("keyup",m)),()=>{window.removeEventListener("keydown",h),window.removeEventListener("keyup",m)}},[t,e,n]),B.jsxs(Hu,{$reverse:d,children:[B.jsx(rf,{icon:Rx,$reverse:c==="left"}),B.jsx(po,{$reverse:d,children:e?B.jsx(ra,{$pressed:s,children:Zr[t]}):B.jsxs(B.Fragment,{children:[B.jsx(bi,{$reverse:d,style:{width:St.widthShort},onClick:()=>{u(d?1:-1)},children:B.jsx(qt,{icon:d?GM:VM})}),B.jsxs(bi,{$reverse:d,style:{width:tI},disabled:!0,children:["Pose: ",i]}),B.jsx(bi,{$reverse:d,style:{width:St.widthShort},onClick:()=>{u(d?-1:1)},children:B.jsx(qt,{icon:d?VM:GM})})]})})]})},iI=({hand:n,handle:e,handedness:t,pointerLocked:i})=>{const{keyMap:r}=Px(),[s,l]=Cr.useState(n.connected),[c,u]=Cr.useState(!1);return Cr.useEffect(()=>{i&&u(!1)},[i]),B.jsxs(kd,{style:t==="left"?{left:"8px",bottom:"8px"}:{right:"8px",bottom:"8px"},children:[!i&&B.jsx(B.Fragment,{children:B.jsxs("div",{style:{display:"flex",flexDirection:"row",justifyContent:"space-between",alignItems:"center"},children:[B.jsxs("div",{style:{fontSize:"13px",display:"flex",flexDirection:"row",alignItems:"center"},children:[B.jsx(qt,{icon:xb,$reverse:t==="left",style:{marginRight:"5px"}}),"Hand ",B.jsxs("span",{style:{fontWeight:"bold"},children:["[",t==="left"?"L":"R","]"]})]}),B.jsx("div",{style:{display:"flex",flexDirection:"row",gap:"1px"},children:s?B.jsxs(B.Fragment,{children:[B.jsx(Ll,{title:`Click to ${c?"close":"change"} key bindings`,onClick:()=>{u(!c)},children:B.jsx(qt,{icon:Sb})}),B.jsx(Ll,{title:`Click to disconnect ${t} controller`,$isRed:!0,onClick:()=>{n.connected=!1,l(!1)},children:B.jsx(qt,{icon:d0})})]}):B.jsx(Ll,{title:`Click to reconnect ${t} controller`,onClick:()=>{n.connected=!0,l(!0)},style:{marginLeft:"5px"},children:B.jsx(qt,{icon:yb})})})]})}),s&&!i&&B.jsxs(B.Fragment,{children:[!c&&B.jsxs(B.Fragment,{children:[B.jsx(Ul,{}),B.jsx(Bd,{vector:e.position,label:"Position",marginBottom:St.gap}),B.jsx(Bd,{vector:e.rotation,label:"Rotation"})]}),B.jsx(Ul,{})]}),s&&(c?B.jsx(Mb,{handedness:t,actions:["pose","pinch"]}):B.jsxs(B.Fragment,{children:[B.jsx(nI,{hand:n,pointerLocked:i,mappedKey:r[t].pose}),B.jsx(eI,{hand:n,pointerLocked:i,mappedKey:r[t].pinch})]}))]},t)},Lx=rx(n=>({inputMode:"controller",setInputMode:e=>n(()=>({inputMode:e}))})),rI=({xrDevice:n,inputLayer:e,pointerLocked:t})=>{const{inputMode:i}=Lx();return B.jsx(B.Fragment,{children:i==="controller"?Object.entries(n.controllers).map(([r,s])=>B.jsx(Q8,{controller:s,handle:e.transformHandles.get(r),handedness:r,pointerLocked:t},`controller-${r}`)):Object.entries(n.hands).map(([r,s])=>B.jsx(iI,{hand:s,handle:e.transformHandles.get(r),handedness:r,pointerLocked:t},`hand-${r}`))})},S1=en.td`
	text-align: right;
	color: ${ft.textWhite};
	padding: 0 8px 0 0;
	font-weight: bold;
`,M1=en.td`
	text-align: left;
	color: ${ft.textGrey};
	padding: 0;
`,sI=["meeting_room","living_room","music_room","office_large","office_small"],aI=rx(n=>({infoPanelOpen:!1,envDropDownOpen:!1,setInfoPanelOpen:e=>n(()=>({infoPanelOpen:e})),setEnvDropDownOpen:e=>n(()=>({envDropDownOpen:e}))}));function oI(n){return n.split("_").map(e=>e.charAt(0).toUpperCase()+e.slice(1)).join(" ")}const lI=({xrDevice:n,inputLayer:e})=>{var t,i,r;const[s,l]=Cr.useState(!!(!((t=n.sem)===null||t===void 0)&&t.planesVisible)),[c,u]=Cr.useState(!!(!((i=n.sem)===null||i===void 0)&&i.boundingBoxesVisible)),[d,h]=Cr.useState(!!(!((r=n.sem)===null||r===void 0)&&r.meshesVisible)),{inputMode:m,setInputMode:p}=Lx(),{infoPanelOpen:x,setInfoPanelOpen:y,envDropDownOpen:S,setEnvDropDownOpen:v}=aI();return B.jsxs("div",{style:{display:"flex",justifyContent:"center",flexDirection:"row",alignItems:"center",gap:"6px",padding:"8px"},children:[B.jsx(I_,{children:B.jsxs("div",{style:{display:"flex",flexDirection:"row",gap:"1px"},children:[B.jsx(Mr,{title:"Click to reset device transforms",onClick:()=>{e.resetDeviceTransforms()},children:B.jsx(qt,{icon:n8,$size:16})}),B.jsx(Mr,{title:"Click to activate play mode",onClick:()=>{e.lockPointer(),v(!1),y(!1)},children:B.jsx(qt,{icon:i8,$size:16})}),B.jsx(Mr,{title:"Click to toggle input mode",onClick:()=>{m==="controller"?(p("hand"),n.primaryInputMode="hand"):(p("controller"),n.primaryInputMode="controller")},children:B.jsx(qt,{icon:m==="controller"?_b:xb,$size:16})}),n.sem&&B.jsxs(B.Fragment,{children:[B.jsx(Ul,{$horizontal:!1}),B.jsx(Mr,{title:"Click to select/change emulated environment",onClick:()=>v(!S),children:B.jsx(qt,{icon:r8,$size:16})}),B.jsx(Mr,{title:"Click to toggle visibility of planes",onClick:()=>{n.sem.planesVisible=!s,l(!s)},children:B.jsx(H8,{size:16,color:s?ft.textWhite:ft.textGrey})}),B.jsx(Mr,{title:"Click to toggle visibility of bounding boxes",onClick:()=>{n.sem.boundingBoxesVisible=!c,u(!c)},children:B.jsx(z8,{size:16,color:c?ft.textWhite:ft.textGrey})}),B.jsx(Mr,{title:"Click to toggle visibility of meshes",onClick:()=>{n.sem.meshesVisible=!d,h(!d)},children:B.jsx(B8,{size:16,color:d?ft.textWhite:ft.textGrey})})]}),B.jsx(Ul,{$horizontal:!1}),B.jsx(Mr,{title:"Click to exit XR session",onClick:()=>{const g=n.activeSession;g==null||g.end()},children:B.jsx(qt,{icon:KL,$size:16})})]})}),B.jsx(I_,{children:B.jsxs("div",{style:{display:"flex",flexDirection:"row",gap:"1px"},children:[B.jsx(Mr,{title:"About IWER",onClick:()=>{y(!x)},children:B.jsx(D_,{size:16})}),B.jsx(Mr,{title:"Report issues",onClick:()=>{window.open("https://github.com/meta-quest/immersive-web-emulation-runtime/issues","_blank")},children:B.jsx(qt,{icon:l8,$size:16})})]})}),x&&B.jsxs(kd,{style:{top:"50vh",left:"50vw",transform:"translate(-50%, -50%)",maxWidth:"240px",gap:"4px"},children:[B.jsx("div",{style:{display:"flex",justifyContent:"end"},children:B.jsx(Ll,{$isRed:!0,onClick:()=>{y(!1)},children:B.jsx(qt,{icon:d0})})}),B.jsx("div",{style:{display:"flex",justifyContent:"center"},children:B.jsx(D_,{size:100})}),B.jsxs("p",{style:{textAlign:"center",padding:"0 5px",margin:"0"},children:[B.jsx("b",{children:"Immersive Web Emulation Runtime"})," (IWER) is a free, open-source WebXR developer tool created by Meta Platforms, Inc."]}),B.jsx("table",{style:{width:"100%",borderCollapse:"collapse",display:"flex",justifyContent:"center",fontSize:"12px",padding:"8px"},children:B.jsxs("tbody",{children:[B.jsxs("tr",{children:[B.jsx(S1,{children:"IWER"}),B.jsxs(M1,{children:["v",n.version]})]}),B.jsxs("tr",{children:[B.jsx(S1,{children:"DevUI"}),B.jsxs(M1,{children:["v",n.devui.version]})]}),n.sem&&B.jsxs("tr",{children:[B.jsx(S1,{children:"SEM"}),B.jsxs(M1,{children:["v",n.sem.version]})]})]})}),B.jsx(bi,{style:{borderRadius:St.radiusSolo},onClick:()=>{window.open("https://github.com/meta-quest/immersive-web-emulation-runtime/blob/main/LICENSE","_blank")},children:"MIT License"}),B.jsx(bi,{style:{borderRadius:St.radiusSolo},onClick:()=>{window.open("https://github.com/meta-quest/immersive-web-emulation-runtime","_blank")},children:"View Source on GitHub"})]}),S&&B.jsx(kd,{style:{position:"absolute",top:"40px"},children:sI.map(g=>B.jsx("div",{children:B.jsx(Mr,{style:{fontSize:"12px",width:"100%",justifyContent:"start",borderRadius:"8px"},onClick:()=>{n.sem.loadDefaultEnvironment(g)},children:oI(g)})},g))})]})},cI=en.div`
	width: 100%;
	display: flex;
	flex-direction: row;
	justify-content: space-between;
	align-items: center;
	margin-top: ${St.gap};
	font-size: 12px;
`,uI=en.input.attrs({type:"range"})`
	-webkit-appearance: none;
	appearance: none;
	background: ${ft.gradientGrey};
	border: 1px solid transparent;
	height: 25px;
	color: ${ft.textWhite};
	width: ${St.widthLong};
	cursor: pointer;
	margin: 0;
	border-radius: 5px;
	padding: 0 10px 0 5px;
	box-sizing: border-box;
	font-size: 10px;

	&::-webkit-slider-thumb {
		-webkit-appearance: none;
		appearance: none;
		width: 8px;
		height: 25px;
		background-color: ${ft.textWhite};
		border-radius: ${St.radiusMiddle};
	}

	&::-moz-range-thumb {
		width: 8px;
		height: 25px;
		background-color: ${ft.textWhite};
		border-radius: ${St.radiusMiddle};
	}

	&::-ms-thumb {
		width: 8px;
		height: 25px;
		background-color: ${ft.textWhite};
		border-radius: ${St.radiusMiddle};
	}
`,fI=({xrDevice:n,inputLayer:e,pointerLocked:t})=>{const[i,r]=Cr.useState(n.fovy);return B.jsxs(kd,{style:{left:"8px",top:"8px"},children:[B.jsxs("div",{style:{display:"flex",flexDirection:"row",justifyContent:"space-between",alignItems:"center",height:"20px"},children:[B.jsxs("div",{style:{fontSize:"13px",display:"flex",flexDirection:"row",alignItems:"center",justifyItems:"start"},children:[B.jsx(qt,{icon:c8,style:{marginRight:"5px"}}),B.jsx("div",{style:{alignItems:"end"},children:n.name})]}),B.jsx("div",{style:{display:"flex",flexDirection:"row",gap:"1px"}})]}),B.jsx(Ul,{}),B.jsx(Bd,{vector:e.combinedCameraPosition,icon:s8}),!t&&B.jsxs(cI,{children:[B.jsx(qt,{icon:f8,style:{marginRight:"5px"}}),B.jsxs(mb,{children:[B.jsxs("div",{style:{position:"relative",display:"inline-block",height:"25px"},children:[B.jsx(gb,{type:"text",value:(i/Math.PI*180).toFixed(0)+"°",readOnly:!0,style:{width:"73px"}}),B.jsx(vb,{children:"FOV-Y"})]}),B.jsx("div",{style:{position:"relative",display:"inline-block"},children:B.jsx(uI,{value:i,onChange:s=>{const l=Number(s.target.value);r(l),n.fovy=l},min:Math.PI/6,max:Math.PI/1.5,step:Math.PI/48,style:{width:"80px"}})})]})]})]})};/**
 * @license
 * Copyright 2010-2024 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Ix="165",dI=0,XM=1,hI=2,Eb=1,pI=2,ea=3,da=0,Vi=1,sa=2,mo=0,Eu=1,qM=2,jM=3,YM=4,mI=5,gl=100,gI=101,vI=102,_I=103,xI=104,yI=200,SI=201,MI=202,EI=203,N_=204,U_=205,wI=206,TI=207,AI=208,bI=209,RI=210,CI=211,PI=212,LI=213,II=214,DI=0,NI=1,UI=2,Dm=3,OI=4,FI=5,kI=6,zI=7,wb=0,BI=1,HI=2,go=0,VI=1,GI=2,WI=3,$I=4,XI=5,qI=6,jI=7,Tb=300,Vu=301,Gu=302,O_=303,F_=304,h0=306,k_=1e3,Sl=1001,z_=1002,br=1003,YI=1004,ip=1005,Qr=1006,E1=1007,Ml=1008,Mo=1009,KI=1010,ZI=1011,Nm=1012,Ab=1013,Wu=1014,uo=1015,p0=1016,bb=1017,Rb=1018,$u=1020,QI=35902,JI=1021,eD=1022,ws=1023,tD=1024,nD=1025,wu=1026,Xu=1027,iD=1028,Cb=1029,rD=1030,Pb=1031,Lb=1033,w1=33776,T1=33777,A1=33778,b1=33779,KM=35840,ZM=35841,QM=35842,JM=35843,eE=36196,tE=37492,nE=37496,iE=37808,rE=37809,sE=37810,aE=37811,oE=37812,lE=37813,cE=37814,uE=37815,fE=37816,dE=37817,hE=37818,pE=37819,mE=37820,gE=37821,R1=36492,vE=36494,_E=36495,sD=36283,xE=36284,yE=36285,SE=36286,aD=3200,oD=3201,lD=0,cD=1,oo="",ps="srgb",Ro="srgb-linear",Dx="display-p3",m0="display-p3-linear",Um="linear",gn="srgb",Om="rec709",Fm="p3",dc=7680,ME=519,uD=512,fD=513,dD=514,Ib=515,hD=516,pD=517,mD=518,gD=519,EE=35044,wE="300 es",oa=2e3,km=2001;let sf=class{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const i=this._listeners;i[e]===void 0&&(i[e]=[]),i[e].indexOf(t)===-1&&i[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const i=this._listeners;return i[e]!==void 0&&i[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const r=this._listeners[e];if(r!==void 0){const s=r.indexOf(t);s!==-1&&r.splice(s,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const i=this._listeners[e.type];if(i!==void 0){e.target=this;const r=i.slice(0);for(let s=0,l=r.length;s<l;s++)r[s].call(this,e);e.target=null}}};const di=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"],C1=Math.PI/180,B_=180/Math.PI;function Xd(){const n=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(di[n&255]+di[n>>8&255]+di[n>>16&255]+di[n>>24&255]+"-"+di[e&255]+di[e>>8&255]+"-"+di[e>>16&15|64]+di[e>>24&255]+"-"+di[t&63|128]+di[t>>8&255]+"-"+di[t>>16&255]+di[t>>24&255]+di[i&255]+di[i>>8&255]+di[i>>16&255]+di[i>>24&255]).toLowerCase()}function zi(n,e,t){return Math.max(e,Math.min(t,n))}function vD(n,e){return(n%e+e)%e}function P1(n,e,t){return(1-t)*n+t*e}function ed(n,e){switch(e.constructor){case Float32Array:return n;case Uint32Array:return n/4294967295;case Uint16Array:return n/65535;case Uint8Array:return n/255;case Int32Array:return Math.max(n/2147483647,-1);case Int16Array:return Math.max(n/32767,-1);case Int8Array:return Math.max(n/127,-1);default:throw new Error("Invalid component type.")}}function Oi(n,e){switch(e.constructor){case Float32Array:return n;case Uint32Array:return Math.round(n*4294967295);case Uint16Array:return Math.round(n*65535);case Uint8Array:return Math.round(n*255);case Int32Array:return Math.round(n*2147483647);case Int16Array:return Math.round(n*32767);case Int8Array:return Math.round(n*127);default:throw new Error("Invalid component type.")}}let sn=class Db{constructor(e=0,t=0){Db.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,i=this.y,r=e.elements;return this.x=r[0]*t+r[3]*i+r[6],this.y=r[1]*t+r[4]*i+r[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const i=this.dot(e)/t;return Math.acos(zi(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y;return t*t+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const i=Math.cos(t),r=Math.sin(t),s=this.x-e.x,l=this.y-e.y;return this.x=s*i-l*r+e.x,this.y=s*r+l*i+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}},Vt=class Nb{constructor(e,t,i,r,s,l,c,u,d){Nb.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,i,r,s,l,c,u,d)}set(e,t,i,r,s,l,c,u,d){const h=this.elements;return h[0]=e,h[1]=r,h[2]=c,h[3]=t,h[4]=s,h[5]=u,h[6]=i,h[7]=l,h[8]=d,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],this}extractBasis(e,t,i){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,r=t.elements,s=this.elements,l=i[0],c=i[3],u=i[6],d=i[1],h=i[4],m=i[7],p=i[2],x=i[5],y=i[8],S=r[0],v=r[3],g=r[6],P=r[1],w=r[4],C=r[7],z=r[2],L=r[5],D=r[8];return s[0]=l*S+c*P+u*z,s[3]=l*v+c*w+u*L,s[6]=l*g+c*C+u*D,s[1]=d*S+h*P+m*z,s[4]=d*v+h*w+m*L,s[7]=d*g+h*C+m*D,s[2]=p*S+x*P+y*z,s[5]=p*v+x*w+y*L,s[8]=p*g+x*C+y*D,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[1],r=e[2],s=e[3],l=e[4],c=e[5],u=e[6],d=e[7],h=e[8];return t*l*h-t*c*d-i*s*h+i*c*u+r*s*d-r*l*u}invert(){const e=this.elements,t=e[0],i=e[1],r=e[2],s=e[3],l=e[4],c=e[5],u=e[6],d=e[7],h=e[8],m=h*l-c*d,p=c*u-h*s,x=d*s-l*u,y=t*m+i*p+r*x;if(y===0)return this.set(0,0,0,0,0,0,0,0,0);const S=1/y;return e[0]=m*S,e[1]=(r*d-h*i)*S,e[2]=(c*i-r*l)*S,e[3]=p*S,e[4]=(h*t-r*u)*S,e[5]=(r*s-c*t)*S,e[6]=x*S,e[7]=(i*u-d*t)*S,e[8]=(l*t-i*s)*S,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,i,r,s,l,c){const u=Math.cos(s),d=Math.sin(s);return this.set(i*u,i*d,-i*(u*l+d*c)+l+e,-r*d,r*u,-r*(-d*l+u*c)+c+t,0,0,1),this}scale(e,t){return this.premultiply(L1.makeScale(e,t)),this}rotate(e){return this.premultiply(L1.makeRotation(-e)),this}translate(e,t){return this.premultiply(L1.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,i,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,i=e.elements;for(let r=0;r<9;r++)if(t[r]!==i[r])return!1;return!0}fromArray(e,t=0){for(let i=0;i<9;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e}clone(){return new this.constructor().fromArray(this.elements)}};const L1=new Vt;function Ub(n){for(let e=n.length-1;e>=0;--e)if(n[e]>=65535)return!0;return!1}function zm(n){return document.createElementNS("http://www.w3.org/1999/xhtml",n)}function _D(){const n=zm("canvas");return n.style.display="block",n}const TE={};function Ob(n){n in TE||(TE[n]=!0,console.warn(n))}function xD(n,e,t){return new Promise(function(i,r){function s(){switch(n.clientWaitSync(e,n.SYNC_FLUSH_COMMANDS_BIT,0)){case n.WAIT_FAILED:r();break;case n.TIMEOUT_EXPIRED:setTimeout(s,t);break;default:i()}}setTimeout(s,t)})}const AE=new Vt().set(.8224621,.177538,0,.0331941,.9668058,0,.0170827,.0723974,.9105199),bE=new Vt().set(1.2249401,-.2249404,0,-.0420569,1.0420571,0,-.0196376,-.0786361,1.0982735),rp={[Ro]:{transfer:Um,primaries:Om,toReference:n=>n,fromReference:n=>n},[ps]:{transfer:gn,primaries:Om,toReference:n=>n.convertSRGBToLinear(),fromReference:n=>n.convertLinearToSRGB()},[m0]:{transfer:Um,primaries:Fm,toReference:n=>n.applyMatrix3(bE),fromReference:n=>n.applyMatrix3(AE)},[Dx]:{transfer:gn,primaries:Fm,toReference:n=>n.convertSRGBToLinear().applyMatrix3(bE),fromReference:n=>n.applyMatrix3(AE).convertLinearToSRGB()}},yD=new Set([Ro,m0]),nn={enabled:!0,_workingColorSpace:Ro,get workingColorSpace(){return this._workingColorSpace},set workingColorSpace(n){if(!yD.has(n))throw new Error(`Unsupported working color space, "${n}".`);this._workingColorSpace=n},convert:function(n,e,t){if(this.enabled===!1||e===t||!e||!t)return n;const i=rp[e].toReference,r=rp[t].fromReference;return r(i(n))},fromWorkingColorSpace:function(n,e){return this.convert(n,this._workingColorSpace,e)},toWorkingColorSpace:function(n,e){return this.convert(n,e,this._workingColorSpace)},getPrimaries:function(n){return rp[n].primaries},getTransfer:function(n){return n===oo?Um:rp[n].transfer}};function Tu(n){return n<.04045?n*.0773993808:Math.pow(n*.9478672986+.0521327014,2.4)}function I1(n){return n<.0031308?n*12.92:1.055*Math.pow(n,.41666)-.055}let hc,SD=class{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{hc===void 0&&(hc=zm("canvas")),hc.width=e.width,hc.height=e.height;const i=hc.getContext("2d");e instanceof ImageData?i.putImageData(e,0,0):i.drawImage(e,0,0,e.width,e.height),t=hc}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=zm("canvas");t.width=e.width,t.height=e.height;const i=t.getContext("2d");i.drawImage(e,0,0,e.width,e.height);const r=i.getImageData(0,0,e.width,e.height),s=r.data;for(let l=0;l<s.length;l++)s[l]=Tu(s[l]/255)*255;return i.putImageData(r,0,0),t}else if(e.data){const t=e.data.slice(0);for(let i=0;i<t.length;i++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[i]=Math.floor(Tu(t[i]/255)*255):t[i]=Tu(t[i]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}},MD=0,Fb=class{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:MD++}),this.uuid=Xd(),this.data=e,this.dataReady=!0,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const i={uuid:this.uuid,url:""},r=this.data;if(r!==null){let s;if(Array.isArray(r)){s=[];for(let l=0,c=r.length;l<c;l++)r[l].isDataTexture?s.push(D1(r[l].image)):s.push(D1(r[l]))}else s=D1(r);i.url=s}return t||(e.images[this.uuid]=i),i}};function D1(n){return typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&n instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&n instanceof ImageBitmap?SD.getDataURL(n):n.data?{data:Array.from(n.data),width:n.width,height:n.height,type:n.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let ED=0,Ls=class hm extends sf{constructor(e=hm.DEFAULT_IMAGE,t=hm.DEFAULT_MAPPING,i=Sl,r=Sl,s=Qr,l=Ml,c=ws,u=Mo,d=hm.DEFAULT_ANISOTROPY,h=oo){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:ED++}),this.uuid=Xd(),this.name="",this.source=new Fb(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=i,this.wrapT=r,this.magFilter=s,this.minFilter=l,this.anisotropy=d,this.format=c,this.internalFormat=null,this.type=u,this.offset=new sn(0,0),this.repeat=new sn(1,1),this.center=new sn(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Vt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=h,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const i={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(i.userData=this.userData),t||(e.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==Tb)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case k_:e.x=e.x-Math.floor(e.x);break;case Sl:e.x=e.x<0?0:1;break;case z_:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case k_:e.y=e.y-Math.floor(e.y);break;case Sl:e.y=e.y<0?0:1;break;case z_:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){e===!0&&this.pmremVersion++}};Ls.DEFAULT_IMAGE=null;Ls.DEFAULT_MAPPING=Tb;Ls.DEFAULT_ANISOTROPY=1;let Ai=class kb{constructor(e=0,t=0,i=0,r=1){kb.prototype.isVector4=!0,this.x=e,this.y=t,this.z=i,this.w=r}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,i,r){return this.x=e,this.y=t,this.z=i,this.w=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,i=this.y,r=this.z,s=this.w,l=e.elements;return this.x=l[0]*t+l[4]*i+l[8]*r+l[12]*s,this.y=l[1]*t+l[5]*i+l[9]*r+l[13]*s,this.z=l[2]*t+l[6]*i+l[10]*r+l[14]*s,this.w=l[3]*t+l[7]*i+l[11]*r+l[15]*s,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,i,r,s;const u=e.elements,d=u[0],h=u[4],m=u[8],p=u[1],x=u[5],y=u[9],S=u[2],v=u[6],g=u[10];if(Math.abs(h-p)<.01&&Math.abs(m-S)<.01&&Math.abs(y-v)<.01){if(Math.abs(h+p)<.1&&Math.abs(m+S)<.1&&Math.abs(y+v)<.1&&Math.abs(d+x+g-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const w=(d+1)/2,C=(x+1)/2,z=(g+1)/2,L=(h+p)/4,D=(m+S)/4,V=(y+v)/4;return w>C&&w>z?w<.01?(i=0,r=.707106781,s=.707106781):(i=Math.sqrt(w),r=L/i,s=D/i):C>z?C<.01?(i=.707106781,r=0,s=.707106781):(r=Math.sqrt(C),i=L/r,s=V/r):z<.01?(i=.707106781,r=.707106781,s=0):(s=Math.sqrt(z),i=D/s,r=V/s),this.set(i,r,s,t),this}let P=Math.sqrt((v-y)*(v-y)+(m-S)*(m-S)+(p-h)*(p-h));return Math.abs(P)<.001&&(P=1),this.x=(v-y)/P,this.y=(m-S)/P,this.z=(p-h)/P,this.w=Math.acos((d+x+g-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this.w=e.w+(t.w-e.w)*i,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}},wD=class extends sf{constructor(e=1,t=1,i={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new Ai(0,0,e,t),this.scissorTest=!1,this.viewport=new Ai(0,0,e,t);const r={width:e,height:t,depth:1};i=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:Qr,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1},i);const s=new Ls(r,i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.colorSpace);s.flipY=!1,s.generateMipmaps=i.generateMipmaps,s.internalFormat=i.internalFormat,this.textures=[];const l=i.count;for(let c=0;c<l;c++)this.textures[c]=s.clone(),this.textures[c].isRenderTargetTexture=!0;this.depthBuffer=i.depthBuffer,this.stencilBuffer=i.stencilBuffer,this.resolveDepthBuffer=i.resolveDepthBuffer,this.resolveStencilBuffer=i.resolveStencilBuffer,this.depthTexture=i.depthTexture,this.samples=i.samples}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}setSize(e,t,i=1){if(this.width!==e||this.height!==t||this.depth!==i){this.width=e,this.height=t,this.depth=i;for(let r=0,s=this.textures.length;r<s;r++)this.textures[r].image.width=e,this.textures[r].image.height=t,this.textures[r].image.depth=i;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let i=0,r=e.textures.length;i<r;i++)this.textures[i]=e.textures[i].clone(),this.textures[i].isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new Fb(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.resolveDepthBuffer=e.resolveDepthBuffer,this.resolveStencilBuffer=e.resolveStencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}},Ol=class extends wD{constructor(e=1,t=1,i={}){super(e,t,i),this.isWebGLRenderTarget=!0}},zb=class extends Ls{constructor(e=null,t=1,i=1,r=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:i,depth:r},this.magFilter=br,this.minFilter=br,this.wrapR=Sl,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}},TD=class extends Ls{constructor(e=null,t=1,i=1,r=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:i,depth:r},this.magFilter=br,this.minFilter=br,this.wrapR=Sl,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}},Fl=class{constructor(e=0,t=0,i=0,r=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=i,this._w=r}static slerpFlat(e,t,i,r,s,l,c){let u=i[r+0],d=i[r+1],h=i[r+2],m=i[r+3];const p=s[l+0],x=s[l+1],y=s[l+2],S=s[l+3];if(c===0){e[t+0]=u,e[t+1]=d,e[t+2]=h,e[t+3]=m;return}if(c===1){e[t+0]=p,e[t+1]=x,e[t+2]=y,e[t+3]=S;return}if(m!==S||u!==p||d!==x||h!==y){let v=1-c;const g=u*p+d*x+h*y+m*S,P=g>=0?1:-1,w=1-g*g;if(w>Number.EPSILON){const z=Math.sqrt(w),L=Math.atan2(z,g*P);v=Math.sin(v*L)/z,c=Math.sin(c*L)/z}const C=c*P;if(u=u*v+p*C,d=d*v+x*C,h=h*v+y*C,m=m*v+S*C,v===1-c){const z=1/Math.sqrt(u*u+d*d+h*h+m*m);u*=z,d*=z,h*=z,m*=z}}e[t]=u,e[t+1]=d,e[t+2]=h,e[t+3]=m}static multiplyQuaternionsFlat(e,t,i,r,s,l){const c=i[r],u=i[r+1],d=i[r+2],h=i[r+3],m=s[l],p=s[l+1],x=s[l+2],y=s[l+3];return e[t]=c*y+h*m+u*x-d*p,e[t+1]=u*y+h*p+d*m-c*x,e[t+2]=d*y+h*x+c*p-u*m,e[t+3]=h*y-c*m-u*p-d*x,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,i,r){return this._x=e,this._y=t,this._z=i,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){const i=e._x,r=e._y,s=e._z,l=e._order,c=Math.cos,u=Math.sin,d=c(i/2),h=c(r/2),m=c(s/2),p=u(i/2),x=u(r/2),y=u(s/2);switch(l){case"XYZ":this._x=p*h*m+d*x*y,this._y=d*x*m-p*h*y,this._z=d*h*y+p*x*m,this._w=d*h*m-p*x*y;break;case"YXZ":this._x=p*h*m+d*x*y,this._y=d*x*m-p*h*y,this._z=d*h*y-p*x*m,this._w=d*h*m+p*x*y;break;case"ZXY":this._x=p*h*m-d*x*y,this._y=d*x*m+p*h*y,this._z=d*h*y+p*x*m,this._w=d*h*m-p*x*y;break;case"ZYX":this._x=p*h*m-d*x*y,this._y=d*x*m+p*h*y,this._z=d*h*y-p*x*m,this._w=d*h*m+p*x*y;break;case"YZX":this._x=p*h*m+d*x*y,this._y=d*x*m+p*h*y,this._z=d*h*y-p*x*m,this._w=d*h*m-p*x*y;break;case"XZY":this._x=p*h*m-d*x*y,this._y=d*x*m-p*h*y,this._z=d*h*y+p*x*m,this._w=d*h*m+p*x*y;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+l)}return t===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const i=t/2,r=Math.sin(i);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,i=t[0],r=t[4],s=t[8],l=t[1],c=t[5],u=t[9],d=t[2],h=t[6],m=t[10],p=i+c+m;if(p>0){const x=.5/Math.sqrt(p+1);this._w=.25/x,this._x=(h-u)*x,this._y=(s-d)*x,this._z=(l-r)*x}else if(i>c&&i>m){const x=2*Math.sqrt(1+i-c-m);this._w=(h-u)/x,this._x=.25*x,this._y=(r+l)/x,this._z=(s+d)/x}else if(c>m){const x=2*Math.sqrt(1+c-i-m);this._w=(s-d)/x,this._x=(r+l)/x,this._y=.25*x,this._z=(u+h)/x}else{const x=2*Math.sqrt(1+m-i-c);this._w=(l-r)/x,this._x=(s+d)/x,this._y=(u+h)/x,this._z=.25*x}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let i=e.dot(t)+1;return i<Number.EPSILON?(i=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=i):(this._x=0,this._y=-e.z,this._z=e.y,this._w=i)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=i),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(zi(this.dot(e),-1,1)))}rotateTowards(e,t){const i=this.angleTo(e);if(i===0)return this;const r=Math.min(1,t/i);return this.slerp(e,r),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const i=e._x,r=e._y,s=e._z,l=e._w,c=t._x,u=t._y,d=t._z,h=t._w;return this._x=i*h+l*c+r*d-s*u,this._y=r*h+l*u+s*c-i*d,this._z=s*h+l*d+i*u-r*c,this._w=l*h-i*c-r*u-s*d,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const i=this._x,r=this._y,s=this._z,l=this._w;let c=l*e._w+i*e._x+r*e._y+s*e._z;if(c<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,c=-c):this.copy(e),c>=1)return this._w=l,this._x=i,this._y=r,this._z=s,this;const u=1-c*c;if(u<=Number.EPSILON){const x=1-t;return this._w=x*l+t*this._w,this._x=x*i+t*this._x,this._y=x*r+t*this._y,this._z=x*s+t*this._z,this.normalize(),this}const d=Math.sqrt(u),h=Math.atan2(d,c),m=Math.sin((1-t)*h)/d,p=Math.sin(t*h)/d;return this._w=l*m+this._w*p,this._x=i*m+this._x*p,this._y=r*m+this._y*p,this._z=s*m+this._z*p,this._onChangeCallback(),this}slerpQuaternions(e,t,i){return this.copy(e).slerp(t,i)}random(){const e=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),i=Math.random(),r=Math.sqrt(1-i),s=Math.sqrt(i);return this.set(r*Math.sin(e),r*Math.cos(e),s*Math.sin(t),s*Math.cos(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}},Re=class Bb{constructor(e=0,t=0,i=0){Bb.prototype.isVector3=!0,this.x=e,this.y=t,this.z=i}set(e,t,i){return i===void 0&&(i=this.z),this.x=e,this.y=t,this.z=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(RE.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(RE.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,i=this.y,r=this.z,s=e.elements;return this.x=s[0]*t+s[3]*i+s[6]*r,this.y=s[1]*t+s[4]*i+s[7]*r,this.z=s[2]*t+s[5]*i+s[8]*r,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,i=this.y,r=this.z,s=e.elements,l=1/(s[3]*t+s[7]*i+s[11]*r+s[15]);return this.x=(s[0]*t+s[4]*i+s[8]*r+s[12])*l,this.y=(s[1]*t+s[5]*i+s[9]*r+s[13])*l,this.z=(s[2]*t+s[6]*i+s[10]*r+s[14])*l,this}applyQuaternion(e){const t=this.x,i=this.y,r=this.z,s=e.x,l=e.y,c=e.z,u=e.w,d=2*(l*r-c*i),h=2*(c*t-s*r),m=2*(s*i-l*t);return this.x=t+u*d+l*m-c*h,this.y=i+u*h+c*d-s*m,this.z=r+u*m+s*h-l*d,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,i=this.y,r=this.z,s=e.elements;return this.x=s[0]*t+s[4]*i+s[8]*r,this.y=s[1]*t+s[5]*i+s[9]*r,this.z=s[2]*t+s[6]*i+s[10]*r,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const i=e.x,r=e.y,s=e.z,l=t.x,c=t.y,u=t.z;return this.x=r*u-s*c,this.y=s*l-i*u,this.z=i*c-r*l,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const i=e.dot(this)/t;return this.copy(e).multiplyScalar(i)}projectOnPlane(e){return N1.copy(this).projectOnVector(e),this.sub(N1)}reflect(e){return this.sub(N1.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const i=this.dot(e)/t;return Math.acos(zi(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y,r=this.z-e.z;return t*t+i*i+r*r}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,i){const r=Math.sin(t)*e;return this.x=r*Math.sin(i),this.y=Math.cos(t)*e,this.z=r*Math.cos(i),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,i){return this.x=e*Math.sin(t),this.y=i,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),i=this.setFromMatrixColumn(e,1).length(),r=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=i,this.z=r,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=Math.random()*Math.PI*2,t=Math.random()*2-1,i=Math.sqrt(1-t*t);return this.x=i*Math.cos(e),this.y=t,this.z=i*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}};const N1=new Re,RE=new Fl;let qd=class{constructor(e=new Re(1/0,1/0,1/0),t=new Re(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t+=3)this.expandByPoint(Vr.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,i=e.count;t<i;t++)this.expandByPoint(Vr.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const i=Vr.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const i=e.geometry;if(i!==void 0){const s=i.getAttribute("position");if(t===!0&&s!==void 0&&e.isInstancedMesh!==!0)for(let l=0,c=s.count;l<c;l++)e.isMesh===!0?e.getVertexPosition(l,Vr):Vr.fromBufferAttribute(s,l),Vr.applyMatrix4(e.matrixWorld),this.expandByPoint(Vr);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),sp.copy(e.boundingBox)):(i.boundingBox===null&&i.computeBoundingBox(),sp.copy(i.boundingBox)),sp.applyMatrix4(e.matrixWorld),this.union(sp)}const r=e.children;for(let s=0,l=r.length;s<l;s++)this.expandByObject(r[s],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,Vr),Vr.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,i;return e.normal.x>0?(t=e.normal.x*this.min.x,i=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,i=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,i+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,i+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,i+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,i+=e.normal.z*this.min.z),t<=-e.constant&&i>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(td),ap.subVectors(this.max,td),pc.subVectors(e.a,td),mc.subVectors(e.b,td),gc.subVectors(e.c,td),Ba.subVectors(mc,pc),Ha.subVectors(gc,mc),Xo.subVectors(pc,gc);let t=[0,-Ba.z,Ba.y,0,-Ha.z,Ha.y,0,-Xo.z,Xo.y,Ba.z,0,-Ba.x,Ha.z,0,-Ha.x,Xo.z,0,-Xo.x,-Ba.y,Ba.x,0,-Ha.y,Ha.x,0,-Xo.y,Xo.x,0];return!U1(t,pc,mc,gc,ap)||(t=[1,0,0,0,1,0,0,0,1],!U1(t,pc,mc,gc,ap))?!1:(op.crossVectors(Ba,Ha),t=[op.x,op.y,op.z],U1(t,pc,mc,gc,ap))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,Vr).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(Vr).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Gs[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Gs[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Gs[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Gs[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Gs[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Gs[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Gs[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Gs[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Gs),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}};const Gs=[new Re,new Re,new Re,new Re,new Re,new Re,new Re,new Re],Vr=new Re,sp=new qd,pc=new Re,mc=new Re,gc=new Re,Ba=new Re,Ha=new Re,Xo=new Re,td=new Re,ap=new Re,op=new Re,qo=new Re;function U1(n,e,t,i,r){for(let s=0,l=n.length-3;s<=l;s+=3){qo.fromArray(n,s);const c=r.x*Math.abs(qo.x)+r.y*Math.abs(qo.y)+r.z*Math.abs(qo.z),u=e.dot(qo),d=t.dot(qo),h=i.dot(qo);if(Math.max(-Math.max(u,d,h),Math.min(u,d,h))>c)return!1}return!0}const AD=new qd,nd=new Re,O1=new Re;let Nx=class{constructor(e=new Re,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const i=this.center;t!==void 0?i.copy(t):AD.setFromPoints(e).getCenter(i);let r=0;for(let s=0,l=e.length;s<l;s++)r=Math.max(r,i.distanceToSquared(e[s]));return this.radius=Math.sqrt(r),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const i=this.center.distanceToSquared(e);return t.copy(e),i>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;nd.subVectors(e,this.center);const t=nd.lengthSq();if(t>this.radius*this.radius){const i=Math.sqrt(t),r=(i-this.radius)*.5;this.center.addScaledVector(nd,r/i),this.radius+=r}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(O1.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(nd.copy(e.center).add(O1)),this.expandByPoint(nd.copy(e.center).sub(O1))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}};const Ws=new Re,F1=new Re,lp=new Re,Va=new Re,k1=new Re,cp=new Re,z1=new Re;let bD=class{constructor(e=new Re,t=new Re(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Ws)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const i=t.dot(this.direction);return i<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,i)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Ws.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Ws.copy(this.origin).addScaledVector(this.direction,t),Ws.distanceToSquared(e))}distanceSqToSegment(e,t,i,r){F1.copy(e).add(t).multiplyScalar(.5),lp.copy(t).sub(e).normalize(),Va.copy(this.origin).sub(F1);const s=e.distanceTo(t)*.5,l=-this.direction.dot(lp),c=Va.dot(this.direction),u=-Va.dot(lp),d=Va.lengthSq(),h=Math.abs(1-l*l);let m,p,x,y;if(h>0)if(m=l*u-c,p=l*c-u,y=s*h,m>=0)if(p>=-y)if(p<=y){const S=1/h;m*=S,p*=S,x=m*(m+l*p+2*c)+p*(l*m+p+2*u)+d}else p=s,m=Math.max(0,-(l*p+c)),x=-m*m+p*(p+2*u)+d;else p=-s,m=Math.max(0,-(l*p+c)),x=-m*m+p*(p+2*u)+d;else p<=-y?(m=Math.max(0,-(-l*s+c)),p=m>0?-s:Math.min(Math.max(-s,-u),s),x=-m*m+p*(p+2*u)+d):p<=y?(m=0,p=Math.min(Math.max(-s,-u),s),x=p*(p+2*u)+d):(m=Math.max(0,-(l*s+c)),p=m>0?s:Math.min(Math.max(-s,-u),s),x=-m*m+p*(p+2*u)+d);else p=l>0?-s:s,m=Math.max(0,-(l*p+c)),x=-m*m+p*(p+2*u)+d;return i&&i.copy(this.origin).addScaledVector(this.direction,m),r&&r.copy(F1).addScaledVector(lp,p),x}intersectSphere(e,t){Ws.subVectors(e.center,this.origin);const i=Ws.dot(this.direction),r=Ws.dot(Ws)-i*i,s=e.radius*e.radius;if(r>s)return null;const l=Math.sqrt(s-r),c=i-l,u=i+l;return u<0?null:c<0?this.at(u,t):this.at(c,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const i=-(this.origin.dot(e.normal)+e.constant)/t;return i>=0?i:null}intersectPlane(e,t){const i=this.distanceToPlane(e);return i===null?null:this.at(i,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let i,r,s,l,c,u;const d=1/this.direction.x,h=1/this.direction.y,m=1/this.direction.z,p=this.origin;return d>=0?(i=(e.min.x-p.x)*d,r=(e.max.x-p.x)*d):(i=(e.max.x-p.x)*d,r=(e.min.x-p.x)*d),h>=0?(s=(e.min.y-p.y)*h,l=(e.max.y-p.y)*h):(s=(e.max.y-p.y)*h,l=(e.min.y-p.y)*h),i>l||s>r||((s>i||isNaN(i))&&(i=s),(l<r||isNaN(r))&&(r=l),m>=0?(c=(e.min.z-p.z)*m,u=(e.max.z-p.z)*m):(c=(e.max.z-p.z)*m,u=(e.min.z-p.z)*m),i>u||c>r)||((c>i||i!==i)&&(i=c),(u<r||r!==r)&&(r=u),r<0)?null:this.at(i>=0?i:r,t)}intersectsBox(e){return this.intersectBox(e,Ws)!==null}intersectTriangle(e,t,i,r,s){k1.subVectors(t,e),cp.subVectors(i,e),z1.crossVectors(k1,cp);let l=this.direction.dot(z1),c;if(l>0){if(r)return null;c=1}else if(l<0)c=-1,l=-l;else return null;Va.subVectors(this.origin,e);const u=c*this.direction.dot(cp.crossVectors(Va,cp));if(u<0)return null;const d=c*this.direction.dot(k1.cross(Va));if(d<0||u+d>l)return null;const h=-c*Va.dot(z1);return h<0?null:this.at(h/l,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}},xi=class H_{constructor(e,t,i,r,s,l,c,u,d,h,m,p,x,y,S,v){H_.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,i,r,s,l,c,u,d,h,m,p,x,y,S,v)}set(e,t,i,r,s,l,c,u,d,h,m,p,x,y,S,v){const g=this.elements;return g[0]=e,g[4]=t,g[8]=i,g[12]=r,g[1]=s,g[5]=l,g[9]=c,g[13]=u,g[2]=d,g[6]=h,g[10]=m,g[14]=p,g[3]=x,g[7]=y,g[11]=S,g[15]=v,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new H_().fromArray(this.elements)}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],t[9]=i[9],t[10]=i[10],t[11]=i[11],t[12]=i[12],t[13]=i[13],t[14]=i[14],t[15]=i[15],this}copyPosition(e){const t=this.elements,i=e.elements;return t[12]=i[12],t[13]=i[13],t[14]=i[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,i){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(e,t,i){return this.set(e.x,t.x,i.x,0,e.y,t.y,i.y,0,e.z,t.z,i.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,i=e.elements,r=1/vc.setFromMatrixColumn(e,0).length(),s=1/vc.setFromMatrixColumn(e,1).length(),l=1/vc.setFromMatrixColumn(e,2).length();return t[0]=i[0]*r,t[1]=i[1]*r,t[2]=i[2]*r,t[3]=0,t[4]=i[4]*s,t[5]=i[5]*s,t[6]=i[6]*s,t[7]=0,t[8]=i[8]*l,t[9]=i[9]*l,t[10]=i[10]*l,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,i=e.x,r=e.y,s=e.z,l=Math.cos(i),c=Math.sin(i),u=Math.cos(r),d=Math.sin(r),h=Math.cos(s),m=Math.sin(s);if(e.order==="XYZ"){const p=l*h,x=l*m,y=c*h,S=c*m;t[0]=u*h,t[4]=-u*m,t[8]=d,t[1]=x+y*d,t[5]=p-S*d,t[9]=-c*u,t[2]=S-p*d,t[6]=y+x*d,t[10]=l*u}else if(e.order==="YXZ"){const p=u*h,x=u*m,y=d*h,S=d*m;t[0]=p+S*c,t[4]=y*c-x,t[8]=l*d,t[1]=l*m,t[5]=l*h,t[9]=-c,t[2]=x*c-y,t[6]=S+p*c,t[10]=l*u}else if(e.order==="ZXY"){const p=u*h,x=u*m,y=d*h,S=d*m;t[0]=p-S*c,t[4]=-l*m,t[8]=y+x*c,t[1]=x+y*c,t[5]=l*h,t[9]=S-p*c,t[2]=-l*d,t[6]=c,t[10]=l*u}else if(e.order==="ZYX"){const p=l*h,x=l*m,y=c*h,S=c*m;t[0]=u*h,t[4]=y*d-x,t[8]=p*d+S,t[1]=u*m,t[5]=S*d+p,t[9]=x*d-y,t[2]=-d,t[6]=c*u,t[10]=l*u}else if(e.order==="YZX"){const p=l*u,x=l*d,y=c*u,S=c*d;t[0]=u*h,t[4]=S-p*m,t[8]=y*m+x,t[1]=m,t[5]=l*h,t[9]=-c*h,t[2]=-d*h,t[6]=x*m+y,t[10]=p-S*m}else if(e.order==="XZY"){const p=l*u,x=l*d,y=c*u,S=c*d;t[0]=u*h,t[4]=-m,t[8]=d*h,t[1]=p*m+S,t[5]=l*h,t[9]=x*m-y,t[2]=y*m-x,t[6]=c*h,t[10]=S*m+p}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(RD,e,CD)}lookAt(e,t,i){const r=this.elements;return er.subVectors(e,t),er.lengthSq()===0&&(er.z=1),er.normalize(),Ga.crossVectors(i,er),Ga.lengthSq()===0&&(Math.abs(i.z)===1?er.x+=1e-4:er.z+=1e-4,er.normalize(),Ga.crossVectors(i,er)),Ga.normalize(),up.crossVectors(er,Ga),r[0]=Ga.x,r[4]=up.x,r[8]=er.x,r[1]=Ga.y,r[5]=up.y,r[9]=er.y,r[2]=Ga.z,r[6]=up.z,r[10]=er.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,r=t.elements,s=this.elements,l=i[0],c=i[4],u=i[8],d=i[12],h=i[1],m=i[5],p=i[9],x=i[13],y=i[2],S=i[6],v=i[10],g=i[14],P=i[3],w=i[7],C=i[11],z=i[15],L=r[0],D=r[4],V=r[8],R=r[12],T=r[1],O=r[5],Z=r[9],W=r[13],K=r[2],ne=r[6],Q=r[10],se=r[14],G=r[3],de=r[7],le=r[11],X=r[15];return s[0]=l*L+c*T+u*K+d*G,s[4]=l*D+c*O+u*ne+d*de,s[8]=l*V+c*Z+u*Q+d*le,s[12]=l*R+c*W+u*se+d*X,s[1]=h*L+m*T+p*K+x*G,s[5]=h*D+m*O+p*ne+x*de,s[9]=h*V+m*Z+p*Q+x*le,s[13]=h*R+m*W+p*se+x*X,s[2]=y*L+S*T+v*K+g*G,s[6]=y*D+S*O+v*ne+g*de,s[10]=y*V+S*Z+v*Q+g*le,s[14]=y*R+S*W+v*se+g*X,s[3]=P*L+w*T+C*K+z*G,s[7]=P*D+w*O+C*ne+z*de,s[11]=P*V+w*Z+C*Q+z*le,s[15]=P*R+w*W+C*se+z*X,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[4],r=e[8],s=e[12],l=e[1],c=e[5],u=e[9],d=e[13],h=e[2],m=e[6],p=e[10],x=e[14],y=e[3],S=e[7],v=e[11],g=e[15];return y*(+s*u*m-r*d*m-s*c*p+i*d*p+r*c*x-i*u*x)+S*(+t*u*x-t*d*p+s*l*p-r*l*x+r*d*h-s*u*h)+v*(+t*d*m-t*c*x-s*l*m+i*l*x+s*c*h-i*d*h)+g*(-r*c*h-t*u*m+t*c*p+r*l*m-i*l*p+i*u*h)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,i){const r=this.elements;return e.isVector3?(r[12]=e.x,r[13]=e.y,r[14]=e.z):(r[12]=e,r[13]=t,r[14]=i),this}invert(){const e=this.elements,t=e[0],i=e[1],r=e[2],s=e[3],l=e[4],c=e[5],u=e[6],d=e[7],h=e[8],m=e[9],p=e[10],x=e[11],y=e[12],S=e[13],v=e[14],g=e[15],P=m*v*d-S*p*d+S*u*x-c*v*x-m*u*g+c*p*g,w=y*p*d-h*v*d-y*u*x+l*v*x+h*u*g-l*p*g,C=h*S*d-y*m*d+y*c*x-l*S*x-h*c*g+l*m*g,z=y*m*u-h*S*u-y*c*p+l*S*p+h*c*v-l*m*v,L=t*P+i*w+r*C+s*z;if(L===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const D=1/L;return e[0]=P*D,e[1]=(S*p*s-m*v*s-S*r*x+i*v*x+m*r*g-i*p*g)*D,e[2]=(c*v*s-S*u*s+S*r*d-i*v*d-c*r*g+i*u*g)*D,e[3]=(m*u*s-c*p*s-m*r*d+i*p*d+c*r*x-i*u*x)*D,e[4]=w*D,e[5]=(h*v*s-y*p*s+y*r*x-t*v*x-h*r*g+t*p*g)*D,e[6]=(y*u*s-l*v*s-y*r*d+t*v*d+l*r*g-t*u*g)*D,e[7]=(l*p*s-h*u*s+h*r*d-t*p*d-l*r*x+t*u*x)*D,e[8]=C*D,e[9]=(y*m*s-h*S*s-y*i*x+t*S*x+h*i*g-t*m*g)*D,e[10]=(l*S*s-y*c*s+y*i*d-t*S*d-l*i*g+t*c*g)*D,e[11]=(h*c*s-l*m*s-h*i*d+t*m*d+l*i*x-t*c*x)*D,e[12]=z*D,e[13]=(h*S*r-y*m*r+y*i*p-t*S*p-h*i*v+t*m*v)*D,e[14]=(y*c*r-l*S*r-y*i*u+t*S*u+l*i*v-t*c*v)*D,e[15]=(l*m*r-h*c*r+h*i*u-t*m*u-l*i*p+t*c*p)*D,this}scale(e){const t=this.elements,i=e.x,r=e.y,s=e.z;return t[0]*=i,t[4]*=r,t[8]*=s,t[1]*=i,t[5]*=r,t[9]*=s,t[2]*=i,t[6]*=r,t[10]*=s,t[3]*=i,t[7]*=r,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],i=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],r=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,i,r))}makeTranslation(e,t,i){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,i,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),i=Math.sin(e);return this.set(1,0,0,0,0,t,-i,0,0,i,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,0,i,0,0,1,0,0,-i,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,0,i,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const i=Math.cos(t),r=Math.sin(t),s=1-i,l=e.x,c=e.y,u=e.z,d=s*l,h=s*c;return this.set(d*l+i,d*c-r*u,d*u+r*c,0,d*c+r*u,h*c+i,h*u-r*l,0,d*u-r*c,h*u+r*l,s*u*u+i,0,0,0,0,1),this}makeScale(e,t,i){return this.set(e,0,0,0,0,t,0,0,0,0,i,0,0,0,0,1),this}makeShear(e,t,i,r,s,l){return this.set(1,i,s,0,e,1,l,0,t,r,1,0,0,0,0,1),this}compose(e,t,i){const r=this.elements,s=t._x,l=t._y,c=t._z,u=t._w,d=s+s,h=l+l,m=c+c,p=s*d,x=s*h,y=s*m,S=l*h,v=l*m,g=c*m,P=u*d,w=u*h,C=u*m,z=i.x,L=i.y,D=i.z;return r[0]=(1-(S+g))*z,r[1]=(x+C)*z,r[2]=(y-w)*z,r[3]=0,r[4]=(x-C)*L,r[5]=(1-(p+g))*L,r[6]=(v+P)*L,r[7]=0,r[8]=(y+w)*D,r[9]=(v-P)*D,r[10]=(1-(p+S))*D,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,this}decompose(e,t,i){const r=this.elements;let s=vc.set(r[0],r[1],r[2]).length();const l=vc.set(r[4],r[5],r[6]).length(),c=vc.set(r[8],r[9],r[10]).length();this.determinant()<0&&(s=-s),e.x=r[12],e.y=r[13],e.z=r[14],Gr.copy(this);const d=1/s,h=1/l,m=1/c;return Gr.elements[0]*=d,Gr.elements[1]*=d,Gr.elements[2]*=d,Gr.elements[4]*=h,Gr.elements[5]*=h,Gr.elements[6]*=h,Gr.elements[8]*=m,Gr.elements[9]*=m,Gr.elements[10]*=m,t.setFromRotationMatrix(Gr),i.x=s,i.y=l,i.z=c,this}makePerspective(e,t,i,r,s,l,c=oa){const u=this.elements,d=2*s/(t-e),h=2*s/(i-r),m=(t+e)/(t-e),p=(i+r)/(i-r);let x,y;if(c===oa)x=-(l+s)/(l-s),y=-2*l*s/(l-s);else if(c===km)x=-l/(l-s),y=-l*s/(l-s);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+c);return u[0]=d,u[4]=0,u[8]=m,u[12]=0,u[1]=0,u[5]=h,u[9]=p,u[13]=0,u[2]=0,u[6]=0,u[10]=x,u[14]=y,u[3]=0,u[7]=0,u[11]=-1,u[15]=0,this}makeOrthographic(e,t,i,r,s,l,c=oa){const u=this.elements,d=1/(t-e),h=1/(i-r),m=1/(l-s),p=(t+e)*d,x=(i+r)*h;let y,S;if(c===oa)y=(l+s)*m,S=-2*m;else if(c===km)y=s*m,S=-1*m;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+c);return u[0]=2*d,u[4]=0,u[8]=0,u[12]=-p,u[1]=0,u[5]=2*h,u[9]=0,u[13]=-x,u[2]=0,u[6]=0,u[10]=S,u[14]=-y,u[3]=0,u[7]=0,u[11]=0,u[15]=1,this}equals(e){const t=this.elements,i=e.elements;for(let r=0;r<16;r++)if(t[r]!==i[r])return!1;return!0}fromArray(e,t=0){for(let i=0;i<16;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e[t+9]=i[9],e[t+10]=i[10],e[t+11]=i[11],e[t+12]=i[12],e[t+13]=i[13],e[t+14]=i[14],e[t+15]=i[15],e}};const vc=new Re,Gr=new xi,RD=new Re(0,0,0),CD=new Re(1,1,1),Ga=new Re,up=new Re,er=new Re,CE=new xi,PE=new Fl;let kl=class Hb{constructor(e=0,t=0,i=0,r=Hb.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=i,this._order=r}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,i,r=this._order){return this._x=e,this._y=t,this._z=i,this._order=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,i=!0){const r=e.elements,s=r[0],l=r[4],c=r[8],u=r[1],d=r[5],h=r[9],m=r[2],p=r[6],x=r[10];switch(t){case"XYZ":this._y=Math.asin(zi(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-h,x),this._z=Math.atan2(-l,s)):(this._x=Math.atan2(p,d),this._z=0);break;case"YXZ":this._x=Math.asin(-zi(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(c,x),this._z=Math.atan2(u,d)):(this._y=Math.atan2(-m,s),this._z=0);break;case"ZXY":this._x=Math.asin(zi(p,-1,1)),Math.abs(p)<.9999999?(this._y=Math.atan2(-m,x),this._z=Math.atan2(-l,d)):(this._y=0,this._z=Math.atan2(u,s));break;case"ZYX":this._y=Math.asin(-zi(m,-1,1)),Math.abs(m)<.9999999?(this._x=Math.atan2(p,x),this._z=Math.atan2(u,s)):(this._x=0,this._z=Math.atan2(-l,d));break;case"YZX":this._z=Math.asin(zi(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(-h,d),this._y=Math.atan2(-m,s)):(this._x=0,this._y=Math.atan2(c,x));break;case"XZY":this._z=Math.asin(-zi(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(p,d),this._y=Math.atan2(c,s)):(this._x=Math.atan2(-h,x),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,i===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,i){return CE.makeRotationFromQuaternion(e),this.setFromRotationMatrix(CE,t,i)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return PE.setFromEuler(this),this.setFromQuaternion(PE,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}};kl.DEFAULT_ORDER="XYZ";let Vb=class{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}},PD=0;const LE=new Re,_c=new Fl,$s=new xi,fp=new Re,id=new Re,LD=new Re,ID=new Fl,IE=new Re(1,0,0),DE=new Re(0,1,0),NE=new Re(0,0,1),UE={type:"added"},DD={type:"removed"},xc={type:"childadded",child:null},B1={type:"childremoved",child:null};let ma=class pm extends sf{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:PD++}),this.uuid=Xd(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=pm.DEFAULT_UP.clone();const e=new Re,t=new kl,i=new Fl,r=new Re(1,1,1);function s(){i.setFromEuler(t,!1)}function l(){t.setFromQuaternion(i,void 0,!1)}t._onChange(s),i._onChange(l),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new xi},normalMatrix:{value:new Vt}}),this.matrix=new xi,this.matrixWorld=new xi,this.matrixAutoUpdate=pm.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=pm.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new Vb,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return _c.setFromAxisAngle(e,t),this.quaternion.multiply(_c),this}rotateOnWorldAxis(e,t){return _c.setFromAxisAngle(e,t),this.quaternion.premultiply(_c),this}rotateX(e){return this.rotateOnAxis(IE,e)}rotateY(e){return this.rotateOnAxis(DE,e)}rotateZ(e){return this.rotateOnAxis(NE,e)}translateOnAxis(e,t){return LE.copy(e).applyQuaternion(this.quaternion),this.position.add(LE.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(IE,e)}translateY(e){return this.translateOnAxis(DE,e)}translateZ(e){return this.translateOnAxis(NE,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4($s.copy(this.matrixWorld).invert())}lookAt(e,t,i){e.isVector3?fp.copy(e):fp.set(e,t,i);const r=this.parent;this.updateWorldMatrix(!0,!1),id.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?$s.lookAt(id,fp,this.up):$s.lookAt(fp,id,this.up),this.quaternion.setFromRotationMatrix($s),r&&($s.extractRotation(r.matrixWorld),_c.setFromRotationMatrix($s),this.quaternion.premultiply(_c.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent(UE),xc.child=e,this.dispatchEvent(xc),xc.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(DD),B1.child=e,this.dispatchEvent(B1),B1.child=null),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),$s.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),$s.multiply(e.parent.matrixWorld)),e.applyMatrix4($s),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent(UE),xc.child=e,this.dispatchEvent(xc),xc.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let i=0,r=this.children.length;i<r;i++){const l=this.children[i].getObjectByProperty(e,t);if(l!==void 0)return l}}getObjectsByProperty(e,t,i=[]){this[e]===t&&i.push(this);const r=this.children;for(let s=0,l=r.length;s<l;s++)r[s].getObjectsByProperty(e,t,i);return i}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(id,e,LD),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(id,ID,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let i=0,r=t.length;i<r;i++)t[i].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let i=0,r=t.length;i<r;i++)t[i].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let i=0,r=t.length;i<r;i++){const s=t[i];(s.matrixWorldAutoUpdate===!0||e===!0)&&s.updateMatrixWorld(e)}}updateWorldMatrix(e,t){const i=this.parent;if(e===!0&&i!==null&&i.matrixWorldAutoUpdate===!0&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const r=this.children;for(let s=0,l=r.length;s<l;s++){const c=r[s];c.matrixWorldAutoUpdate===!0&&c.updateWorldMatrix(!1,!0)}}}toJSON(e){const t=e===void 0||typeof e=="string",i={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const r={};r.uuid=this.uuid,r.type=this.type,this.name!==""&&(r.name=this.name),this.castShadow===!0&&(r.castShadow=!0),this.receiveShadow===!0&&(r.receiveShadow=!0),this.visible===!1&&(r.visible=!1),this.frustumCulled===!1&&(r.frustumCulled=!1),this.renderOrder!==0&&(r.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),r.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(r.matrixAutoUpdate=!1),this.isInstancedMesh&&(r.type="InstancedMesh",r.count=this.count,r.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(r.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(r.type="BatchedMesh",r.perObjectFrustumCulled=this.perObjectFrustumCulled,r.sortObjects=this.sortObjects,r.drawRanges=this._drawRanges,r.reservedRanges=this._reservedRanges,r.visibility=this._visibility,r.active=this._active,r.bounds=this._bounds.map(c=>({boxInitialized:c.boxInitialized,boxMin:c.box.min.toArray(),boxMax:c.box.max.toArray(),sphereInitialized:c.sphereInitialized,sphereRadius:c.sphere.radius,sphereCenter:c.sphere.center.toArray()})),r.maxGeometryCount=this._maxGeometryCount,r.maxVertexCount=this._maxVertexCount,r.maxIndexCount=this._maxIndexCount,r.geometryInitialized=this._geometryInitialized,r.geometryCount=this._geometryCount,r.matricesTexture=this._matricesTexture.toJSON(e),this._colorsTexture!==null&&(r.colorsTexture=this._colorsTexture.toJSON(e)),this.boundingSphere!==null&&(r.boundingSphere={center:r.boundingSphere.center.toArray(),radius:r.boundingSphere.radius}),this.boundingBox!==null&&(r.boundingBox={min:r.boundingBox.min.toArray(),max:r.boundingBox.max.toArray()}));function s(c,u){return c[u.uuid]===void 0&&(c[u.uuid]=u.toJSON(e)),u.uuid}if(this.isScene)this.background&&(this.background.isColor?r.background=this.background.toJSON():this.background.isTexture&&(r.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(r.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){r.geometry=s(e.geometries,this.geometry);const c=this.geometry.parameters;if(c!==void 0&&c.shapes!==void 0){const u=c.shapes;if(Array.isArray(u))for(let d=0,h=u.length;d<h;d++){const m=u[d];s(e.shapes,m)}else s(e.shapes,u)}}if(this.isSkinnedMesh&&(r.bindMode=this.bindMode,r.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),r.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const c=[];for(let u=0,d=this.material.length;u<d;u++)c.push(s(e.materials,this.material[u]));r.material=c}else r.material=s(e.materials,this.material);if(this.children.length>0){r.children=[];for(let c=0;c<this.children.length;c++)r.children.push(this.children[c].toJSON(e).object)}if(this.animations.length>0){r.animations=[];for(let c=0;c<this.animations.length;c++){const u=this.animations[c];r.animations.push(s(e.animations,u))}}if(t){const c=l(e.geometries),u=l(e.materials),d=l(e.textures),h=l(e.images),m=l(e.shapes),p=l(e.skeletons),x=l(e.animations),y=l(e.nodes);c.length>0&&(i.geometries=c),u.length>0&&(i.materials=u),d.length>0&&(i.textures=d),h.length>0&&(i.images=h),m.length>0&&(i.shapes=m),p.length>0&&(i.skeletons=p),x.length>0&&(i.animations=x),y.length>0&&(i.nodes=y)}return i.object=r,i;function l(c){const u=[];for(const d in c){const h=c[d];delete h.metadata,u.push(h)}return u}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let i=0;i<e.children.length;i++){const r=e.children[i];this.add(r.clone())}return this}};ma.DEFAULT_UP=new Re(0,1,0);ma.DEFAULT_MATRIX_AUTO_UPDATE=!0;ma.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const Wr=new Re,Xs=new Re,H1=new Re,qs=new Re,yc=new Re,Sc=new Re,OE=new Re,V1=new Re,G1=new Re,W1=new Re;let dp=class iu{constructor(e=new Re,t=new Re,i=new Re){this.a=e,this.b=t,this.c=i}static getNormal(e,t,i,r){r.subVectors(i,t),Wr.subVectors(e,t),r.cross(Wr);const s=r.lengthSq();return s>0?r.multiplyScalar(1/Math.sqrt(s)):r.set(0,0,0)}static getBarycoord(e,t,i,r,s){Wr.subVectors(r,t),Xs.subVectors(i,t),H1.subVectors(e,t);const l=Wr.dot(Wr),c=Wr.dot(Xs),u=Wr.dot(H1),d=Xs.dot(Xs),h=Xs.dot(H1),m=l*d-c*c;if(m===0)return s.set(0,0,0),null;const p=1/m,x=(d*u-c*h)*p,y=(l*h-c*u)*p;return s.set(1-x-y,y,x)}static containsPoint(e,t,i,r){return this.getBarycoord(e,t,i,r,qs)===null?!1:qs.x>=0&&qs.y>=0&&qs.x+qs.y<=1}static getInterpolation(e,t,i,r,s,l,c,u){return this.getBarycoord(e,t,i,r,qs)===null?(u.x=0,u.y=0,"z"in u&&(u.z=0),"w"in u&&(u.w=0),null):(u.setScalar(0),u.addScaledVector(s,qs.x),u.addScaledVector(l,qs.y),u.addScaledVector(c,qs.z),u)}static isFrontFacing(e,t,i,r){return Wr.subVectors(i,t),Xs.subVectors(e,t),Wr.cross(Xs).dot(r)<0}set(e,t,i){return this.a.copy(e),this.b.copy(t),this.c.copy(i),this}setFromPointsAndIndices(e,t,i,r){return this.a.copy(e[t]),this.b.copy(e[i]),this.c.copy(e[r]),this}setFromAttributeAndIndices(e,t,i,r){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,i),this.c.fromBufferAttribute(e,r),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Wr.subVectors(this.c,this.b),Xs.subVectors(this.a,this.b),Wr.cross(Xs).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return iu.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return iu.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,i,r,s){return iu.getInterpolation(e,this.a,this.b,this.c,t,i,r,s)}containsPoint(e){return iu.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return iu.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const i=this.a,r=this.b,s=this.c;let l,c;yc.subVectors(r,i),Sc.subVectors(s,i),V1.subVectors(e,i);const u=yc.dot(V1),d=Sc.dot(V1);if(u<=0&&d<=0)return t.copy(i);G1.subVectors(e,r);const h=yc.dot(G1),m=Sc.dot(G1);if(h>=0&&m<=h)return t.copy(r);const p=u*m-h*d;if(p<=0&&u>=0&&h<=0)return l=u/(u-h),t.copy(i).addScaledVector(yc,l);W1.subVectors(e,s);const x=yc.dot(W1),y=Sc.dot(W1);if(y>=0&&x<=y)return t.copy(s);const S=x*d-u*y;if(S<=0&&d>=0&&y<=0)return c=d/(d-y),t.copy(i).addScaledVector(Sc,c);const v=h*y-x*m;if(v<=0&&m-h>=0&&x-y>=0)return OE.subVectors(s,r),c=(m-h)/(m-h+(x-y)),t.copy(r).addScaledVector(OE,c);const g=1/(v+S+p);return l=S*g,c=p*g,t.copy(i).addScaledVector(yc,l).addScaledVector(Sc,c)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}};const Gb={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Wa={h:0,s:0,l:0},hp={h:0,s:0,l:0};function $1(n,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?n+(e-n)*6*t:t<1/2?e:t<2/3?n+(e-n)*6*(2/3-t):n}let an=class{constructor(e,t,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,i)}set(e,t,i){if(t===void 0&&i===void 0){const r=e;r&&r.isColor?this.copy(r):typeof r=="number"?this.setHex(r):typeof r=="string"&&this.setStyle(r)}else this.setRGB(e,t,i);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=ps){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,nn.toWorkingColorSpace(this,t),this}setRGB(e,t,i,r=nn.workingColorSpace){return this.r=e,this.g=t,this.b=i,nn.toWorkingColorSpace(this,r),this}setHSL(e,t,i,r=nn.workingColorSpace){if(e=vD(e,1),t=zi(t,0,1),i=zi(i,0,1),t===0)this.r=this.g=this.b=i;else{const s=i<=.5?i*(1+t):i+t-i*t,l=2*i-s;this.r=$1(l,s,e+1/3),this.g=$1(l,s,e),this.b=$1(l,s,e-1/3)}return nn.toWorkingColorSpace(this,r),this}setStyle(e,t=ps){function i(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let r;if(r=/^(\w+)\(([^\)]*)\)/.exec(e)){let s;const l=r[1],c=r[2];switch(l){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return i(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,t);if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return i(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,t);break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return i(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(r=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=r[1],l=s.length;if(l===3)return this.setRGB(parseInt(s.charAt(0),16)/15,parseInt(s.charAt(1),16)/15,parseInt(s.charAt(2),16)/15,t);if(l===6)return this.setHex(parseInt(s,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=ps){const i=Gb[e.toLowerCase()];return i!==void 0?this.setHex(i,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Tu(e.r),this.g=Tu(e.g),this.b=Tu(e.b),this}copyLinearToSRGB(e){return this.r=I1(e.r),this.g=I1(e.g),this.b=I1(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=ps){return nn.fromWorkingColorSpace(hi.copy(this),e),Math.round(zi(hi.r*255,0,255))*65536+Math.round(zi(hi.g*255,0,255))*256+Math.round(zi(hi.b*255,0,255))}getHexString(e=ps){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=nn.workingColorSpace){nn.fromWorkingColorSpace(hi.copy(this),t);const i=hi.r,r=hi.g,s=hi.b,l=Math.max(i,r,s),c=Math.min(i,r,s);let u,d;const h=(c+l)/2;if(c===l)u=0,d=0;else{const m=l-c;switch(d=h<=.5?m/(l+c):m/(2-l-c),l){case i:u=(r-s)/m+(r<s?6:0);break;case r:u=(s-i)/m+2;break;case s:u=(i-r)/m+4;break}u/=6}return e.h=u,e.s=d,e.l=h,e}getRGB(e,t=nn.workingColorSpace){return nn.fromWorkingColorSpace(hi.copy(this),t),e.r=hi.r,e.g=hi.g,e.b=hi.b,e}getStyle(e=ps){nn.fromWorkingColorSpace(hi.copy(this),e);const t=hi.r,i=hi.g,r=hi.b;return e!==ps?`color(${e} ${t.toFixed(3)} ${i.toFixed(3)} ${r.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(i*255)},${Math.round(r*255)})`}offsetHSL(e,t,i){return this.getHSL(Wa),this.setHSL(Wa.h+e,Wa.s+t,Wa.l+i)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,i){return this.r=e.r+(t.r-e.r)*i,this.g=e.g+(t.g-e.g)*i,this.b=e.b+(t.b-e.b)*i,this}lerpHSL(e,t){this.getHSL(Wa),e.getHSL(hp);const i=P1(Wa.h,hp.h,t),r=P1(Wa.s,hp.s,t),s=P1(Wa.l,hp.l,t);return this.setHSL(i,r,s),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,i=this.g,r=this.b,s=e.elements;return this.r=s[0]*t+s[3]*i+s[6]*r,this.g=s[1]*t+s[4]*i+s[7]*r,this.b=s[2]*t+s[5]*i+s[8]*r,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}};const hi=new an;an.NAMES=Gb;let ND=0,g0=class extends sf{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:ND++}),this.uuid=Xd(),this.name="",this.type="Material",this.blending=Eu,this.side=da,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=N_,this.blendDst=U_,this.blendEquation=gl,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new an(0,0,0),this.blendAlpha=0,this.depthFunc=Dm,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=ME,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=dc,this.stencilZFail=dc,this.stencilZPass=dc,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const i=e[t];if(i===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const r=this[t];if(r===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}r&&r.isColor?r.set(i):r&&r.isVector3&&i&&i.isVector3?r.copy(i):this[t]=i}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const i={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),this.roughness!==void 0&&(i.roughness=this.roughness),this.metalness!==void 0&&(i.metalness=this.metalness),this.sheen!==void 0&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(i.shininess=this.shininess),this.clearcoat!==void 0&&(i.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(i.dispersion=this.dispersion),this.iridescence!==void 0&&(i.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(i.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(i.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(i.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(i.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(e).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(e).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(e).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(e).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(e).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(i.combine=this.combine)),this.envMapRotation!==void 0&&(i.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(i.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(i.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(i.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(i.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(i.size=this.size),this.shadowSide!==null&&(i.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==Eu&&(i.blending=this.blending),this.side!==da&&(i.side=this.side),this.vertexColors===!0&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),this.transparent===!0&&(i.transparent=!0),this.blendSrc!==N_&&(i.blendSrc=this.blendSrc),this.blendDst!==U_&&(i.blendDst=this.blendDst),this.blendEquation!==gl&&(i.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(i.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(i.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(i.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(i.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(i.blendAlpha=this.blendAlpha),this.depthFunc!==Dm&&(i.depthFunc=this.depthFunc),this.depthTest===!1&&(i.depthTest=this.depthTest),this.depthWrite===!1&&(i.depthWrite=this.depthWrite),this.colorWrite===!1&&(i.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(i.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==ME&&(i.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(i.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(i.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==dc&&(i.stencilFail=this.stencilFail),this.stencilZFail!==dc&&(i.stencilZFail=this.stencilZFail),this.stencilZPass!==dc&&(i.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(i.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(i.rotation=this.rotation),this.polygonOffset===!0&&(i.polygonOffset=!0),this.polygonOffsetFactor!==0&&(i.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(i.linewidth=this.linewidth),this.dashSize!==void 0&&(i.dashSize=this.dashSize),this.gapSize!==void 0&&(i.gapSize=this.gapSize),this.scale!==void 0&&(i.scale=this.scale),this.dithering===!0&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),this.alphaHash===!0&&(i.alphaHash=!0),this.alphaToCoverage===!0&&(i.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(i.premultipliedAlpha=!0),this.forceSinglePass===!0&&(i.forceSinglePass=!0),this.wireframe===!0&&(i.wireframe=!0),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(i.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(i.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(i.flatShading=!0),this.visible===!1&&(i.visible=!1),this.toneMapped===!1&&(i.toneMapped=!1),this.fog===!1&&(i.fog=!1),Object.keys(this.userData).length>0&&(i.userData=this.userData);function r(s){const l=[];for(const c in s){const u=s[c];delete u.metadata,l.push(u)}return l}if(t){const s=r(e.textures),l=r(e.images);s.length>0&&(i.textures=s),l.length>0&&(i.images=l)}return i}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let i=null;if(t!==null){const r=t.length;i=new Array(r);for(let s=0;s!==r;++s)i[s]=t[s].clone()}return this.clippingPlanes=i,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}},Ux=class extends g0{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new an(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new kl,this.combine=wb,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}};const On=new Re,pp=new sn;let Rs=class{constructor(e,t,i=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=i,this.usage=EE,this._updateRange={offset:0,count:-1},this.updateRanges=[],this.gpuType=uo,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}get updateRange(){return Ob("THREE.BufferAttribute: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead."),this._updateRange}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,i){e*=this.itemSize,i*=t.itemSize;for(let r=0,s=this.itemSize;r<s;r++)this.array[e+r]=t.array[i+r];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,i=this.count;t<i;t++)pp.fromBufferAttribute(this,t),pp.applyMatrix3(e),this.setXY(t,pp.x,pp.y);else if(this.itemSize===3)for(let t=0,i=this.count;t<i;t++)On.fromBufferAttribute(this,t),On.applyMatrix3(e),this.setXYZ(t,On.x,On.y,On.z);return this}applyMatrix4(e){for(let t=0,i=this.count;t<i;t++)On.fromBufferAttribute(this,t),On.applyMatrix4(e),this.setXYZ(t,On.x,On.y,On.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)On.fromBufferAttribute(this,t),On.applyNormalMatrix(e),this.setXYZ(t,On.x,On.y,On.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)On.fromBufferAttribute(this,t),On.transformDirection(e),this.setXYZ(t,On.x,On.y,On.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let i=this.array[e*this.itemSize+t];return this.normalized&&(i=ed(i,this.array)),i}setComponent(e,t,i){return this.normalized&&(i=Oi(i,this.array)),this.array[e*this.itemSize+t]=i,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=ed(t,this.array)),t}setX(e,t){return this.normalized&&(t=Oi(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=ed(t,this.array)),t}setY(e,t){return this.normalized&&(t=Oi(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=ed(t,this.array)),t}setZ(e,t){return this.normalized&&(t=Oi(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=ed(t,this.array)),t}setW(e,t){return this.normalized&&(t=Oi(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,i){return e*=this.itemSize,this.normalized&&(t=Oi(t,this.array),i=Oi(i,this.array)),this.array[e+0]=t,this.array[e+1]=i,this}setXYZ(e,t,i,r){return e*=this.itemSize,this.normalized&&(t=Oi(t,this.array),i=Oi(i,this.array),r=Oi(r,this.array)),this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=r,this}setXYZW(e,t,i,r,s){return e*=this.itemSize,this.normalized&&(t=Oi(t,this.array),i=Oi(i,this.array),r=Oi(r,this.array),s=Oi(s,this.array)),this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=r,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==EE&&(e.usage=this.usage),e}},Wb=class extends Rs{constructor(e,t,i){super(new Uint16Array(e),t,i)}},$b=class extends Rs{constructor(e,t,i){super(new Uint32Array(e),t,i)}},Cs=class extends Rs{constructor(e,t,i){super(new Float32Array(e),t,i)}},UD=0;const _r=new xi,X1=new ma,Mc=new Re,tr=new qd,rd=new qd,Qn=new Re;let af=class Xb extends sf{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:UD++}),this.uuid=Xd(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(Ub(e)?$b:Wb)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,i=0){this.groups.push({start:e,count:t,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const i=this.attributes.normal;if(i!==void 0){const s=new Vt().getNormalMatrix(e);i.applyNormalMatrix(s),i.needsUpdate=!0}const r=this.attributes.tangent;return r!==void 0&&(r.transformDirection(e),r.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return _r.makeRotationFromQuaternion(e),this.applyMatrix4(_r),this}rotateX(e){return _r.makeRotationX(e),this.applyMatrix4(_r),this}rotateY(e){return _r.makeRotationY(e),this.applyMatrix4(_r),this}rotateZ(e){return _r.makeRotationZ(e),this.applyMatrix4(_r),this}translate(e,t,i){return _r.makeTranslation(e,t,i),this.applyMatrix4(_r),this}scale(e,t,i){return _r.makeScale(e,t,i),this.applyMatrix4(_r),this}lookAt(e){return X1.lookAt(e),X1.updateMatrix(),this.applyMatrix4(X1.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Mc).negate(),this.translate(Mc.x,Mc.y,Mc.z),this}setFromPoints(e){const t=[];for(let i=0,r=e.length;i<r;i++){const s=e[i];t.push(s.x,s.y,s.z||0)}return this.setAttribute("position",new Cs(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new qd);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new Re(-1/0,-1/0,-1/0),new Re(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let i=0,r=t.length;i<r;i++){const s=t[i];tr.setFromBufferAttribute(s),this.morphTargetsRelative?(Qn.addVectors(this.boundingBox.min,tr.min),this.boundingBox.expandByPoint(Qn),Qn.addVectors(this.boundingBox.max,tr.max),this.boundingBox.expandByPoint(Qn)):(this.boundingBox.expandByPoint(tr.min),this.boundingBox.expandByPoint(tr.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Nx);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new Re,1/0);return}if(e){const i=this.boundingSphere.center;if(tr.setFromBufferAttribute(e),t)for(let s=0,l=t.length;s<l;s++){const c=t[s];rd.setFromBufferAttribute(c),this.morphTargetsRelative?(Qn.addVectors(tr.min,rd.min),tr.expandByPoint(Qn),Qn.addVectors(tr.max,rd.max),tr.expandByPoint(Qn)):(tr.expandByPoint(rd.min),tr.expandByPoint(rd.max))}tr.getCenter(i);let r=0;for(let s=0,l=e.count;s<l;s++)Qn.fromBufferAttribute(e,s),r=Math.max(r,i.distanceToSquared(Qn));if(t)for(let s=0,l=t.length;s<l;s++){const c=t[s],u=this.morphTargetsRelative;for(let d=0,h=c.count;d<h;d++)Qn.fromBufferAttribute(c,d),u&&(Mc.fromBufferAttribute(e,d),Qn.add(Mc)),r=Math.max(r,i.distanceToSquared(Qn))}this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const i=t.position,r=t.normal,s=t.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Rs(new Float32Array(4*i.count),4));const l=this.getAttribute("tangent"),c=[],u=[];for(let V=0;V<i.count;V++)c[V]=new Re,u[V]=new Re;const d=new Re,h=new Re,m=new Re,p=new sn,x=new sn,y=new sn,S=new Re,v=new Re;function g(V,R,T){d.fromBufferAttribute(i,V),h.fromBufferAttribute(i,R),m.fromBufferAttribute(i,T),p.fromBufferAttribute(s,V),x.fromBufferAttribute(s,R),y.fromBufferAttribute(s,T),h.sub(d),m.sub(d),x.sub(p),y.sub(p);const O=1/(x.x*y.y-y.x*x.y);isFinite(O)&&(S.copy(h).multiplyScalar(y.y).addScaledVector(m,-x.y).multiplyScalar(O),v.copy(m).multiplyScalar(x.x).addScaledVector(h,-y.x).multiplyScalar(O),c[V].add(S),c[R].add(S),c[T].add(S),u[V].add(v),u[R].add(v),u[T].add(v))}let P=this.groups;P.length===0&&(P=[{start:0,count:e.count}]);for(let V=0,R=P.length;V<R;++V){const T=P[V],O=T.start,Z=T.count;for(let W=O,K=O+Z;W<K;W+=3)g(e.getX(W+0),e.getX(W+1),e.getX(W+2))}const w=new Re,C=new Re,z=new Re,L=new Re;function D(V){z.fromBufferAttribute(r,V),L.copy(z);const R=c[V];w.copy(R),w.sub(z.multiplyScalar(z.dot(R))).normalize(),C.crossVectors(L,R);const O=C.dot(u[V])<0?-1:1;l.setXYZW(V,w.x,w.y,w.z,O)}for(let V=0,R=P.length;V<R;++V){const T=P[V],O=T.start,Z=T.count;for(let W=O,K=O+Z;W<K;W+=3)D(e.getX(W+0)),D(e.getX(W+1)),D(e.getX(W+2))}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let i=this.getAttribute("normal");if(i===void 0)i=new Rs(new Float32Array(t.count*3),3),this.setAttribute("normal",i);else for(let p=0,x=i.count;p<x;p++)i.setXYZ(p,0,0,0);const r=new Re,s=new Re,l=new Re,c=new Re,u=new Re,d=new Re,h=new Re,m=new Re;if(e)for(let p=0,x=e.count;p<x;p+=3){const y=e.getX(p+0),S=e.getX(p+1),v=e.getX(p+2);r.fromBufferAttribute(t,y),s.fromBufferAttribute(t,S),l.fromBufferAttribute(t,v),h.subVectors(l,s),m.subVectors(r,s),h.cross(m),c.fromBufferAttribute(i,y),u.fromBufferAttribute(i,S),d.fromBufferAttribute(i,v),c.add(h),u.add(h),d.add(h),i.setXYZ(y,c.x,c.y,c.z),i.setXYZ(S,u.x,u.y,u.z),i.setXYZ(v,d.x,d.y,d.z)}else for(let p=0,x=t.count;p<x;p+=3)r.fromBufferAttribute(t,p+0),s.fromBufferAttribute(t,p+1),l.fromBufferAttribute(t,p+2),h.subVectors(l,s),m.subVectors(r,s),h.cross(m),i.setXYZ(p+0,h.x,h.y,h.z),i.setXYZ(p+1,h.x,h.y,h.z),i.setXYZ(p+2,h.x,h.y,h.z);this.normalizeNormals(),i.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,i=e.count;t<i;t++)Qn.fromBufferAttribute(e,t),Qn.normalize(),e.setXYZ(t,Qn.x,Qn.y,Qn.z)}toNonIndexed(){function e(c,u){const d=c.array,h=c.itemSize,m=c.normalized,p=new d.constructor(u.length*h);let x=0,y=0;for(let S=0,v=u.length;S<v;S++){c.isInterleavedBufferAttribute?x=u[S]*c.data.stride+c.offset:x=u[S]*h;for(let g=0;g<h;g++)p[y++]=d[x++]}return new Rs(p,h,m)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new Xb,i=this.index.array,r=this.attributes;for(const c in r){const u=r[c],d=e(u,i);t.setAttribute(c,d)}const s=this.morphAttributes;for(const c in s){const u=[],d=s[c];for(let h=0,m=d.length;h<m;h++){const p=d[h],x=e(p,i);u.push(x)}t.morphAttributes[c]=u}t.morphTargetsRelative=this.morphTargetsRelative;const l=this.groups;for(let c=0,u=l.length;c<u;c++){const d=l[c];t.addGroup(d.start,d.count,d.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const u=this.parameters;for(const d in u)u[d]!==void 0&&(e[d]=u[d]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const i=this.attributes;for(const u in i){const d=i[u];e.data.attributes[u]=d.toJSON(e.data)}const r={};let s=!1;for(const u in this.morphAttributes){const d=this.morphAttributes[u],h=[];for(let m=0,p=d.length;m<p;m++){const x=d[m];h.push(x.toJSON(e.data))}h.length>0&&(r[u]=h,s=!0)}s&&(e.data.morphAttributes=r,e.data.morphTargetsRelative=this.morphTargetsRelative);const l=this.groups;l.length>0&&(e.data.groups=JSON.parse(JSON.stringify(l)));const c=this.boundingSphere;return c!==null&&(e.data.boundingSphere={center:c.center.toArray(),radius:c.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const i=e.index;i!==null&&this.setIndex(i.clone(t));const r=e.attributes;for(const d in r){const h=r[d];this.setAttribute(d,h.clone(t))}const s=e.morphAttributes;for(const d in s){const h=[],m=s[d];for(let p=0,x=m.length;p<x;p++)h.push(m[p].clone(t));this.morphAttributes[d]=h}this.morphTargetsRelative=e.morphTargetsRelative;const l=e.groups;for(let d=0,h=l.length;d<h;d++){const m=l[d];this.addGroup(m.start,m.count,m.materialIndex)}const c=e.boundingBox;c!==null&&(this.boundingBox=c.clone());const u=e.boundingSphere;return u!==null&&(this.boundingSphere=u.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}};const FE=new xi,jo=new bD,mp=new Nx,kE=new Re,Ec=new Re,wc=new Re,Tc=new Re,q1=new Re,gp=new Re,vp=new sn,_p=new sn,xp=new sn,zE=new Re,BE=new Re,HE=new Re,yp=new Re,Sp=new Re;let Ts=class extends ma{constructor(e=new af,t=new Ux){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,i=Object.keys(t);if(i.length>0){const r=t[i[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,l=r.length;s<l;s++){const c=r[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}getVertexPosition(e,t){const i=this.geometry,r=i.attributes.position,s=i.morphAttributes.position,l=i.morphTargetsRelative;t.fromBufferAttribute(r,e);const c=this.morphTargetInfluences;if(s&&c){gp.set(0,0,0);for(let u=0,d=s.length;u<d;u++){const h=c[u],m=s[u];h!==0&&(q1.fromBufferAttribute(m,e),l?gp.addScaledVector(q1,h):gp.addScaledVector(q1.sub(t),h))}t.add(gp)}return t}raycast(e,t){const i=this.geometry,r=this.material,s=this.matrixWorld;r!==void 0&&(i.boundingSphere===null&&i.computeBoundingSphere(),mp.copy(i.boundingSphere),mp.applyMatrix4(s),jo.copy(e.ray).recast(e.near),!(mp.containsPoint(jo.origin)===!1&&(jo.intersectSphere(mp,kE)===null||jo.origin.distanceToSquared(kE)>(e.far-e.near)**2))&&(FE.copy(s).invert(),jo.copy(e.ray).applyMatrix4(FE),!(i.boundingBox!==null&&jo.intersectsBox(i.boundingBox)===!1)&&this._computeIntersections(e,t,jo)))}_computeIntersections(e,t,i){let r;const s=this.geometry,l=this.material,c=s.index,u=s.attributes.position,d=s.attributes.uv,h=s.attributes.uv1,m=s.attributes.normal,p=s.groups,x=s.drawRange;if(c!==null)if(Array.isArray(l))for(let y=0,S=p.length;y<S;y++){const v=p[y],g=l[v.materialIndex],P=Math.max(v.start,x.start),w=Math.min(c.count,Math.min(v.start+v.count,x.start+x.count));for(let C=P,z=w;C<z;C+=3){const L=c.getX(C),D=c.getX(C+1),V=c.getX(C+2);r=Mp(this,g,e,i,d,h,m,L,D,V),r&&(r.faceIndex=Math.floor(C/3),r.face.materialIndex=v.materialIndex,t.push(r))}}else{const y=Math.max(0,x.start),S=Math.min(c.count,x.start+x.count);for(let v=y,g=S;v<g;v+=3){const P=c.getX(v),w=c.getX(v+1),C=c.getX(v+2);r=Mp(this,l,e,i,d,h,m,P,w,C),r&&(r.faceIndex=Math.floor(v/3),t.push(r))}}else if(u!==void 0)if(Array.isArray(l))for(let y=0,S=p.length;y<S;y++){const v=p[y],g=l[v.materialIndex],P=Math.max(v.start,x.start),w=Math.min(u.count,Math.min(v.start+v.count,x.start+x.count));for(let C=P,z=w;C<z;C+=3){const L=C,D=C+1,V=C+2;r=Mp(this,g,e,i,d,h,m,L,D,V),r&&(r.faceIndex=Math.floor(C/3),r.face.materialIndex=v.materialIndex,t.push(r))}}else{const y=Math.max(0,x.start),S=Math.min(u.count,x.start+x.count);for(let v=y,g=S;v<g;v+=3){const P=v,w=v+1,C=v+2;r=Mp(this,l,e,i,d,h,m,P,w,C),r&&(r.faceIndex=Math.floor(v/3),t.push(r))}}}};function OD(n,e,t,i,r,s,l,c){let u;if(e.side===Vi?u=i.intersectTriangle(l,s,r,!0,c):u=i.intersectTriangle(r,s,l,e.side===da,c),u===null)return null;Sp.copy(c),Sp.applyMatrix4(n.matrixWorld);const d=t.ray.origin.distanceTo(Sp);return d<t.near||d>t.far?null:{distance:d,point:Sp.clone(),object:n}}function Mp(n,e,t,i,r,s,l,c,u,d){n.getVertexPosition(c,Ec),n.getVertexPosition(u,wc),n.getVertexPosition(d,Tc);const h=OD(n,e,t,i,Ec,wc,Tc,yp);if(h){r&&(vp.fromBufferAttribute(r,c),_p.fromBufferAttribute(r,u),xp.fromBufferAttribute(r,d),h.uv=dp.getInterpolation(yp,Ec,wc,Tc,vp,_p,xp,new sn)),s&&(vp.fromBufferAttribute(s,c),_p.fromBufferAttribute(s,u),xp.fromBufferAttribute(s,d),h.uv1=dp.getInterpolation(yp,Ec,wc,Tc,vp,_p,xp,new sn)),l&&(zE.fromBufferAttribute(l,c),BE.fromBufferAttribute(l,u),HE.fromBufferAttribute(l,d),h.normal=dp.getInterpolation(yp,Ec,wc,Tc,zE,BE,HE,new Re),h.normal.dot(i.direction)>0&&h.normal.multiplyScalar(-1));const m={a:c,b:u,c:d,normal:new Re,materialIndex:0};dp.getNormal(Ec,wc,Tc,m.normal),h.face=m}return h}let Ox=class qb extends af{constructor(e=1,t=1,i=1,r=1,s=1,l=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:i,widthSegments:r,heightSegments:s,depthSegments:l};const c=this;r=Math.floor(r),s=Math.floor(s),l=Math.floor(l);const u=[],d=[],h=[],m=[];let p=0,x=0;y("z","y","x",-1,-1,i,t,e,l,s,0),y("z","y","x",1,-1,i,t,-e,l,s,1),y("x","z","y",1,1,e,i,t,r,l,2),y("x","z","y",1,-1,e,i,-t,r,l,3),y("x","y","z",1,-1,e,t,i,r,s,4),y("x","y","z",-1,-1,e,t,-i,r,s,5),this.setIndex(u),this.setAttribute("position",new Cs(d,3)),this.setAttribute("normal",new Cs(h,3)),this.setAttribute("uv",new Cs(m,2));function y(S,v,g,P,w,C,z,L,D,V,R){const T=C/D,O=z/V,Z=C/2,W=z/2,K=L/2,ne=D+1,Q=V+1;let se=0,G=0;const de=new Re;for(let le=0;le<Q;le++){const X=le*O-W;for(let he=0;he<ne;he++){const He=he*T-Z;de[S]=He*P,de[v]=X*w,de[g]=K,d.push(de.x,de.y,de.z),de[S]=0,de[v]=0,de[g]=L>0?1:-1,h.push(de.x,de.y,de.z),m.push(he/D),m.push(1-le/V),se+=1}}for(let le=0;le<V;le++)for(let X=0;X<D;X++){const he=p+X+ne*le,He=p+X+ne*(le+1),Y=p+(X+1)+ne*(le+1),ie=p+(X+1)+ne*le;u.push(he,He,ie),u.push(He,Y,ie),G+=6}c.addGroup(x,G,R),x+=G,p+=se}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new qb(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}};function qu(n){const e={};for(const t in n){e[t]={};for(const i in n[t]){const r=n[t][i];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?r.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][i]=null):e[t][i]=r.clone():Array.isArray(r)?e[t][i]=r.slice():e[t][i]=r}}return e}function wi(n){const e={};for(let t=0;t<n.length;t++){const i=qu(n[t]);for(const r in i)e[r]=i[r]}return e}function FD(n){const e=[];for(let t=0;t<n.length;t++)e.push(n[t].clone());return e}function jb(n){const e=n.getRenderTarget();return e===null?n.outputColorSpace:e.isXRRenderTarget===!0?e.texture.colorSpace:nn.workingColorSpace}const kD={clone:qu,merge:wi};var zD=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,BD=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;let Eo=class extends g0{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=zD,this.fragmentShader=BD,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=qu(e.uniforms),this.uniformsGroups=FD(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const r in this.uniforms){const l=this.uniforms[r].value;l&&l.isTexture?t.uniforms[r]={type:"t",value:l.toJSON(e).uuid}:l&&l.isColor?t.uniforms[r]={type:"c",value:l.getHex()}:l&&l.isVector2?t.uniforms[r]={type:"v2",value:l.toArray()}:l&&l.isVector3?t.uniforms[r]={type:"v3",value:l.toArray()}:l&&l.isVector4?t.uniforms[r]={type:"v4",value:l.toArray()}:l&&l.isMatrix3?t.uniforms[r]={type:"m3",value:l.toArray()}:l&&l.isMatrix4?t.uniforms[r]={type:"m4",value:l.toArray()}:t.uniforms[r]={value:l}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const i={};for(const r in this.extensions)this.extensions[r]===!0&&(i[r]=!0);return Object.keys(i).length>0&&(t.extensions=i),t}},Yb=class extends ma{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new xi,this.projectionMatrix=new xi,this.projectionMatrixInverse=new xi,this.coordinateSystem=oa}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}};const $a=new Re,VE=new sn,GE=new sn;let Tr=class extends Yb{constructor(e=50,t=1,i=.1,r=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=i,this.far=r,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=B_*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(C1*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return B_*2*Math.atan(Math.tan(C1*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,i){$a.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set($a.x,$a.y).multiplyScalar(-e/$a.z),$a.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),i.set($a.x,$a.y).multiplyScalar(-e/$a.z)}getViewSize(e,t){return this.getViewBounds(e,VE,GE),t.subVectors(GE,VE)}setViewOffset(e,t,i,r,s,l){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=r,this.view.width=s,this.view.height=l,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(C1*.5*this.fov)/this.zoom,i=2*t,r=this.aspect*i,s=-.5*r;const l=this.view;if(this.view!==null&&this.view.enabled){const u=l.fullWidth,d=l.fullHeight;s+=l.offsetX*r/u,t-=l.offsetY*i/d,r*=l.width/u,i*=l.height/d}const c=this.filmOffset;c!==0&&(s+=e*c/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+r,t,t-i,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}};const Ac=-90,bc=1;let HD=class extends ma{constructor(e,t,i){super(),this.type="CubeCamera",this.renderTarget=i,this.coordinateSystem=null,this.activeMipmapLevel=0;const r=new Tr(Ac,bc,e,t);r.layers=this.layers,this.add(r);const s=new Tr(Ac,bc,e,t);s.layers=this.layers,this.add(s);const l=new Tr(Ac,bc,e,t);l.layers=this.layers,this.add(l);const c=new Tr(Ac,bc,e,t);c.layers=this.layers,this.add(c);const u=new Tr(Ac,bc,e,t);u.layers=this.layers,this.add(u);const d=new Tr(Ac,bc,e,t);d.layers=this.layers,this.add(d)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[i,r,s,l,c,u]=t;for(const d of t)this.remove(d);if(e===oa)i.up.set(0,1,0),i.lookAt(1,0,0),r.up.set(0,1,0),r.lookAt(-1,0,0),s.up.set(0,0,-1),s.lookAt(0,1,0),l.up.set(0,0,1),l.lookAt(0,-1,0),c.up.set(0,1,0),c.lookAt(0,0,1),u.up.set(0,1,0),u.lookAt(0,0,-1);else if(e===km)i.up.set(0,-1,0),i.lookAt(-1,0,0),r.up.set(0,-1,0),r.lookAt(1,0,0),s.up.set(0,0,1),s.lookAt(0,1,0),l.up.set(0,0,-1),l.lookAt(0,-1,0),c.up.set(0,-1,0),c.lookAt(0,0,1),u.up.set(0,-1,0),u.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const d of t)this.add(d),d.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:i,activeMipmapLevel:r}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[s,l,c,u,d,h]=this.children,m=e.getRenderTarget(),p=e.getActiveCubeFace(),x=e.getActiveMipmapLevel(),y=e.xr.enabled;e.xr.enabled=!1;const S=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,e.setRenderTarget(i,0,r),e.render(t,s),e.setRenderTarget(i,1,r),e.render(t,l),e.setRenderTarget(i,2,r),e.render(t,c),e.setRenderTarget(i,3,r),e.render(t,u),e.setRenderTarget(i,4,r),e.render(t,d),i.texture.generateMipmaps=S,e.setRenderTarget(i,5,r),e.render(t,h),e.setRenderTarget(m,p,x),e.xr.enabled=y,i.texture.needsPMREMUpdate=!0}},Kb=class extends Ls{constructor(e,t,i,r,s,l,c,u,d,h){e=e!==void 0?e:[],t=t!==void 0?t:Vu,super(e,t,i,r,s,l,c,u,d,h),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}},VD=class extends Ol{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const i={width:e,height:e,depth:1},r=[i,i,i,i,i,i];this.texture=new Kb(r,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:Qr}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const i={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},r=new Ox(5,5,5),s=new Eo({name:"CubemapFromEquirect",uniforms:qu(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:Vi,blending:mo});s.uniforms.tEquirect.value=t;const l=new Ts(r,s),c=t.minFilter;return t.minFilter===Ml&&(t.minFilter=Qr),new HD(1,10,this).update(e,l),t.minFilter=c,l.geometry.dispose(),l.material.dispose(),this}clear(e,t,i,r){const s=e.getRenderTarget();for(let l=0;l<6;l++)e.setRenderTarget(this,l),e.clear(t,i,r);e.setRenderTarget(s)}};const j1=new Re,GD=new Re,WD=new Vt;let ul=class{constructor(e=new Re(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,i,r){return this.normal.set(e,t,i),this.constant=r,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,i){const r=j1.subVectors(i,t).cross(GD.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(r,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const i=e.delta(j1),r=this.normal.dot(i);if(r===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/r;return s<0||s>1?null:t.copy(e.start).addScaledVector(i,s)}intersectsLine(e){const t=this.distanceToPoint(e.start),i=this.distanceToPoint(e.end);return t<0&&i>0||i<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const i=t||WD.getNormalMatrix(e),r=this.coplanarPoint(j1).applyMatrix4(e),s=this.normal.applyMatrix3(i).normalize();return this.constant=-r.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}};const Yo=new Nx,Ep=new Re;let Zb=class{constructor(e=new ul,t=new ul,i=new ul,r=new ul,s=new ul,l=new ul){this.planes=[e,t,i,r,s,l]}set(e,t,i,r,s,l){const c=this.planes;return c[0].copy(e),c[1].copy(t),c[2].copy(i),c[3].copy(r),c[4].copy(s),c[5].copy(l),this}copy(e){const t=this.planes;for(let i=0;i<6;i++)t[i].copy(e.planes[i]);return this}setFromProjectionMatrix(e,t=oa){const i=this.planes,r=e.elements,s=r[0],l=r[1],c=r[2],u=r[3],d=r[4],h=r[5],m=r[6],p=r[7],x=r[8],y=r[9],S=r[10],v=r[11],g=r[12],P=r[13],w=r[14],C=r[15];if(i[0].setComponents(u-s,p-d,v-x,C-g).normalize(),i[1].setComponents(u+s,p+d,v+x,C+g).normalize(),i[2].setComponents(u+l,p+h,v+y,C+P).normalize(),i[3].setComponents(u-l,p-h,v-y,C-P).normalize(),i[4].setComponents(u-c,p-m,v-S,C-w).normalize(),t===oa)i[5].setComponents(u+c,p+m,v+S,C+w).normalize();else if(t===km)i[5].setComponents(c,m,S,w).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),Yo.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),Yo.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(Yo)}intersectsSprite(e){return Yo.center.set(0,0,0),Yo.radius=.7071067811865476,Yo.applyMatrix4(e.matrixWorld),this.intersectsSphere(Yo)}intersectsSphere(e){const t=this.planes,i=e.center,r=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(i)<r)return!1;return!0}intersectsBox(e){const t=this.planes;for(let i=0;i<6;i++){const r=t[i];if(Ep.x=r.normal.x>0?e.max.x:e.min.x,Ep.y=r.normal.y>0?e.max.y:e.min.y,Ep.z=r.normal.z>0?e.max.z:e.min.z,r.distanceToPoint(Ep)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let i=0;i<6;i++)if(t[i].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}};function Qb(){let n=null,e=!1,t=null,i=null;function r(s,l){t(s,l),i=n.requestAnimationFrame(r)}return{start:function(){e!==!0&&t!==null&&(i=n.requestAnimationFrame(r),e=!0)},stop:function(){n.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){n=s}}}function $D(n){const e=new WeakMap;function t(c,u){const d=c.array,h=c.usage,m=d.byteLength,p=n.createBuffer();n.bindBuffer(u,p),n.bufferData(u,d,h),c.onUploadCallback();let x;if(d instanceof Float32Array)x=n.FLOAT;else if(d instanceof Uint16Array)c.isFloat16BufferAttribute?x=n.HALF_FLOAT:x=n.UNSIGNED_SHORT;else if(d instanceof Int16Array)x=n.SHORT;else if(d instanceof Uint32Array)x=n.UNSIGNED_INT;else if(d instanceof Int32Array)x=n.INT;else if(d instanceof Int8Array)x=n.BYTE;else if(d instanceof Uint8Array)x=n.UNSIGNED_BYTE;else if(d instanceof Uint8ClampedArray)x=n.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+d);return{buffer:p,type:x,bytesPerElement:d.BYTES_PER_ELEMENT,version:c.version,size:m}}function i(c,u,d){const h=u.array,m=u._updateRange,p=u.updateRanges;if(n.bindBuffer(d,c),m.count===-1&&p.length===0&&n.bufferSubData(d,0,h),p.length!==0){for(let x=0,y=p.length;x<y;x++){const S=p[x];n.bufferSubData(d,S.start*h.BYTES_PER_ELEMENT,h,S.start,S.count)}u.clearUpdateRanges()}m.count!==-1&&(n.bufferSubData(d,m.offset*h.BYTES_PER_ELEMENT,h,m.offset,m.count),m.count=-1),u.onUploadCallback()}function r(c){return c.isInterleavedBufferAttribute&&(c=c.data),e.get(c)}function s(c){c.isInterleavedBufferAttribute&&(c=c.data);const u=e.get(c);u&&(n.deleteBuffer(u.buffer),e.delete(c))}function l(c,u){if(c.isGLBufferAttribute){const h=e.get(c);(!h||h.version<c.version)&&e.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}c.isInterleavedBufferAttribute&&(c=c.data);const d=e.get(c);if(d===void 0)e.set(c,t(c,u));else if(d.version<c.version){if(d.size!==c.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");i(d.buffer,c,u),d.version=c.version}}return{get:r,remove:s,update:l}}let Jb=class e4 extends af{constructor(e=1,t=1,i=1,r=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:i,heightSegments:r};const s=e/2,l=t/2,c=Math.floor(i),u=Math.floor(r),d=c+1,h=u+1,m=e/c,p=t/u,x=[],y=[],S=[],v=[];for(let g=0;g<h;g++){const P=g*p-l;for(let w=0;w<d;w++){const C=w*m-s;y.push(C,-P,0),S.push(0,0,1),v.push(w/c),v.push(1-g/u)}}for(let g=0;g<u;g++)for(let P=0;P<c;P++){const w=P+d*g,C=P+d*(g+1),z=P+1+d*(g+1),L=P+1+d*g;x.push(w,C,L),x.push(C,z,L)}this.setIndex(x),this.setAttribute("position",new Cs(y,3)),this.setAttribute("normal",new Cs(S,3)),this.setAttribute("uv",new Cs(v,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new e4(e.width,e.height,e.widthSegments,e.heightSegments)}};var XD=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,qD=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,jD=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,YD=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,KD=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,ZD=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,QD=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,JD=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,e7=`#ifdef USE_BATCHING
	attribute float batchId;
	uniform highp sampler2D batchingTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`,t7=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( batchId );
#endif`,n7=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,i7=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,r7=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,s7=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,a7=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,o7=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,l7=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,c7=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,u7=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,f7=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,d7=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,h7=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`,p7=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( batchId );
	vColor.xyz *= batchingColor.xyz;
#endif`,m7=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,g7=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,v7=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,_7=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,x7=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,y7=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,S7=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,M7="gl_FragColor = linearToOutputTexel( gl_FragColor );",E7=`
const mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(
	vec3( 0.8224621, 0.177538, 0.0 ),
	vec3( 0.0331941, 0.9668058, 0.0 ),
	vec3( 0.0170827, 0.0723974, 0.9105199 )
);
const mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(
	vec3( 1.2249401, - 0.2249404, 0.0 ),
	vec3( - 0.0420569, 1.0420571, 0.0 ),
	vec3( - 0.0196376, - 0.0786361, 1.0982735 )
);
vec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {
	return vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );
}
vec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {
	return vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );
}
vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}
vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return sRGBTransferOETF( value );
}`,w7=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,T7=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,A7=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,b7=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,R7=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,C7=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,P7=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,L7=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,I7=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,D7=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,N7=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,U7=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,O7=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,F7=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,k7=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,z7=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,B7=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,H7=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,V7=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,G7=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,W7=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,$7=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,X7=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,q7=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,j7=`#if defined( USE_LOGDEPTHBUF )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,Y7=`#if defined( USE_LOGDEPTHBUF )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,K7=`#ifdef USE_LOGDEPTHBUF
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,Z7=`#ifdef USE_LOGDEPTHBUF
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,Q7=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,J7=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,eN=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,tN=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,nN=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,iN=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,rN=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,sN=`#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,aN=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,oN=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`,lN=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,cN=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,uN=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,fN=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,dN=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,hN=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,pN=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,mN=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,gN=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,vN=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,_N=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,xN=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,yN=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,SN=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,MN=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,EN=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,wN=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,TN=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,AN=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,bN=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return shadow;
	}
#endif`,RN=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,CN=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,PN=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,LN=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,IN=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,DN=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,NN=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,UN=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,ON=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,FN=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,kN=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,zN=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,BN=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
		
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
		
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		
		#else
		
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,HN=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,VN=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,GN=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,WN=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const $N=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,XN=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,qN=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,jN=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,YN=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,KN=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,ZN=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,QN=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,JN=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,eU=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,tU=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,nU=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,iU=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,rU=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,sU=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,aU=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,oU=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,lU=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,cU=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,uU=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,fU=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,dU=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,hU=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,pU=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,mU=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,gU=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,vU=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,_U=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,xU=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,yU=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,SU=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,MU=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,EU=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,wU=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,Ut={alphahash_fragment:XD,alphahash_pars_fragment:qD,alphamap_fragment:jD,alphamap_pars_fragment:YD,alphatest_fragment:KD,alphatest_pars_fragment:ZD,aomap_fragment:QD,aomap_pars_fragment:JD,batching_pars_vertex:e7,batching_vertex:t7,begin_vertex:n7,beginnormal_vertex:i7,bsdfs:r7,iridescence_fragment:s7,bumpmap_pars_fragment:a7,clipping_planes_fragment:o7,clipping_planes_pars_fragment:l7,clipping_planes_pars_vertex:c7,clipping_planes_vertex:u7,color_fragment:f7,color_pars_fragment:d7,color_pars_vertex:h7,color_vertex:p7,common:m7,cube_uv_reflection_fragment:g7,defaultnormal_vertex:v7,displacementmap_pars_vertex:_7,displacementmap_vertex:x7,emissivemap_fragment:y7,emissivemap_pars_fragment:S7,colorspace_fragment:M7,colorspace_pars_fragment:E7,envmap_fragment:w7,envmap_common_pars_fragment:T7,envmap_pars_fragment:A7,envmap_pars_vertex:b7,envmap_physical_pars_fragment:k7,envmap_vertex:R7,fog_vertex:C7,fog_pars_vertex:P7,fog_fragment:L7,fog_pars_fragment:I7,gradientmap_pars_fragment:D7,lightmap_pars_fragment:N7,lights_lambert_fragment:U7,lights_lambert_pars_fragment:O7,lights_pars_begin:F7,lights_toon_fragment:z7,lights_toon_pars_fragment:B7,lights_phong_fragment:H7,lights_phong_pars_fragment:V7,lights_physical_fragment:G7,lights_physical_pars_fragment:W7,lights_fragment_begin:$7,lights_fragment_maps:X7,lights_fragment_end:q7,logdepthbuf_fragment:j7,logdepthbuf_pars_fragment:Y7,logdepthbuf_pars_vertex:K7,logdepthbuf_vertex:Z7,map_fragment:Q7,map_pars_fragment:J7,map_particle_fragment:eN,map_particle_pars_fragment:tN,metalnessmap_fragment:nN,metalnessmap_pars_fragment:iN,morphinstance_vertex:rN,morphcolor_vertex:sN,morphnormal_vertex:aN,morphtarget_pars_vertex:oN,morphtarget_vertex:lN,normal_fragment_begin:cN,normal_fragment_maps:uN,normal_pars_fragment:fN,normal_pars_vertex:dN,normal_vertex:hN,normalmap_pars_fragment:pN,clearcoat_normal_fragment_begin:mN,clearcoat_normal_fragment_maps:gN,clearcoat_pars_fragment:vN,iridescence_pars_fragment:_N,opaque_fragment:xN,packing:yN,premultiplied_alpha_fragment:SN,project_vertex:MN,dithering_fragment:EN,dithering_pars_fragment:wN,roughnessmap_fragment:TN,roughnessmap_pars_fragment:AN,shadowmap_pars_fragment:bN,shadowmap_pars_vertex:RN,shadowmap_vertex:CN,shadowmask_pars_fragment:PN,skinbase_vertex:LN,skinning_pars_vertex:IN,skinning_vertex:DN,skinnormal_vertex:NN,specularmap_fragment:UN,specularmap_pars_fragment:ON,tonemapping_fragment:FN,tonemapping_pars_fragment:kN,transmission_fragment:zN,transmission_pars_fragment:BN,uv_pars_fragment:HN,uv_pars_vertex:VN,uv_vertex:GN,worldpos_vertex:WN,background_vert:$N,background_frag:XN,backgroundCube_vert:qN,backgroundCube_frag:jN,cube_vert:YN,cube_frag:KN,depth_vert:ZN,depth_frag:QN,distanceRGBA_vert:JN,distanceRGBA_frag:eU,equirect_vert:tU,equirect_frag:nU,linedashed_vert:iU,linedashed_frag:rU,meshbasic_vert:sU,meshbasic_frag:aU,meshlambert_vert:oU,meshlambert_frag:lU,meshmatcap_vert:cU,meshmatcap_frag:uU,meshnormal_vert:fU,meshnormal_frag:dU,meshphong_vert:hU,meshphong_frag:pU,meshphysical_vert:mU,meshphysical_frag:gU,meshtoon_vert:vU,meshtoon_frag:_U,points_vert:xU,points_frag:yU,shadow_vert:SU,shadow_frag:MU,sprite_vert:EU,sprite_frag:wU},st={common:{diffuse:{value:new an(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new Vt},alphaMap:{value:null},alphaMapTransform:{value:new Vt},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new Vt}},envmap:{envMap:{value:null},envMapRotation:{value:new Vt},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new Vt}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new Vt}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new Vt},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new Vt},normalScale:{value:new sn(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new Vt},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new Vt}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new Vt}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new Vt}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new an(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new an(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new Vt},alphaTest:{value:0},uvTransform:{value:new Vt}},sprite:{diffuse:{value:new an(16777215)},opacity:{value:1},center:{value:new sn(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new Vt},alphaMap:{value:null},alphaMapTransform:{value:new Vt},alphaTest:{value:0}}},_s={basic:{uniforms:wi([st.common,st.specularmap,st.envmap,st.aomap,st.lightmap,st.fog]),vertexShader:Ut.meshbasic_vert,fragmentShader:Ut.meshbasic_frag},lambert:{uniforms:wi([st.common,st.specularmap,st.envmap,st.aomap,st.lightmap,st.emissivemap,st.bumpmap,st.normalmap,st.displacementmap,st.fog,st.lights,{emissive:{value:new an(0)}}]),vertexShader:Ut.meshlambert_vert,fragmentShader:Ut.meshlambert_frag},phong:{uniforms:wi([st.common,st.specularmap,st.envmap,st.aomap,st.lightmap,st.emissivemap,st.bumpmap,st.normalmap,st.displacementmap,st.fog,st.lights,{emissive:{value:new an(0)},specular:{value:new an(1118481)},shininess:{value:30}}]),vertexShader:Ut.meshphong_vert,fragmentShader:Ut.meshphong_frag},standard:{uniforms:wi([st.common,st.envmap,st.aomap,st.lightmap,st.emissivemap,st.bumpmap,st.normalmap,st.displacementmap,st.roughnessmap,st.metalnessmap,st.fog,st.lights,{emissive:{value:new an(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Ut.meshphysical_vert,fragmentShader:Ut.meshphysical_frag},toon:{uniforms:wi([st.common,st.aomap,st.lightmap,st.emissivemap,st.bumpmap,st.normalmap,st.displacementmap,st.gradientmap,st.fog,st.lights,{emissive:{value:new an(0)}}]),vertexShader:Ut.meshtoon_vert,fragmentShader:Ut.meshtoon_frag},matcap:{uniforms:wi([st.common,st.bumpmap,st.normalmap,st.displacementmap,st.fog,{matcap:{value:null}}]),vertexShader:Ut.meshmatcap_vert,fragmentShader:Ut.meshmatcap_frag},points:{uniforms:wi([st.points,st.fog]),vertexShader:Ut.points_vert,fragmentShader:Ut.points_frag},dashed:{uniforms:wi([st.common,st.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Ut.linedashed_vert,fragmentShader:Ut.linedashed_frag},depth:{uniforms:wi([st.common,st.displacementmap]),vertexShader:Ut.depth_vert,fragmentShader:Ut.depth_frag},normal:{uniforms:wi([st.common,st.bumpmap,st.normalmap,st.displacementmap,{opacity:{value:1}}]),vertexShader:Ut.meshnormal_vert,fragmentShader:Ut.meshnormal_frag},sprite:{uniforms:wi([st.sprite,st.fog]),vertexShader:Ut.sprite_vert,fragmentShader:Ut.sprite_frag},background:{uniforms:{uvTransform:{value:new Vt},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:Ut.background_vert,fragmentShader:Ut.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new Vt}},vertexShader:Ut.backgroundCube_vert,fragmentShader:Ut.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Ut.cube_vert,fragmentShader:Ut.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Ut.equirect_vert,fragmentShader:Ut.equirect_frag},distanceRGBA:{uniforms:wi([st.common,st.displacementmap,{referencePosition:{value:new Re},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Ut.distanceRGBA_vert,fragmentShader:Ut.distanceRGBA_frag},shadow:{uniforms:wi([st.lights,st.fog,{color:{value:new an(0)},opacity:{value:1}}]),vertexShader:Ut.shadow_vert,fragmentShader:Ut.shadow_frag}};_s.physical={uniforms:wi([_s.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new Vt},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new Vt},clearcoatNormalScale:{value:new sn(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new Vt},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new Vt},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new Vt},sheen:{value:0},sheenColor:{value:new an(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new Vt},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new Vt},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new Vt},transmissionSamplerSize:{value:new sn},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new Vt},attenuationDistance:{value:0},attenuationColor:{value:new an(0)},specularColor:{value:new an(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new Vt},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new Vt},anisotropyVector:{value:new sn},anisotropyMap:{value:null},anisotropyMapTransform:{value:new Vt}}]),vertexShader:Ut.meshphysical_vert,fragmentShader:Ut.meshphysical_frag};const wp={r:0,b:0,g:0},Ko=new kl,TU=new xi;function AU(n,e,t,i,r,s,l){const c=new an(0);let u=s===!0?0:1,d,h,m=null,p=0,x=null;function y(P){let w=P.isScene===!0?P.background:null;return w&&w.isTexture&&(w=(P.backgroundBlurriness>0?t:e).get(w)),w}function S(P){let w=!1;const C=y(P);C===null?g(c,u):C&&C.isColor&&(g(C,1),w=!0);const z=n.xr.getEnvironmentBlendMode();z==="additive"?i.buffers.color.setClear(0,0,0,1,l):z==="alpha-blend"&&i.buffers.color.setClear(0,0,0,0,l),(n.autoClear||w)&&(i.buffers.depth.setTest(!0),i.buffers.depth.setMask(!0),i.buffers.color.setMask(!0),n.clear(n.autoClearColor,n.autoClearDepth,n.autoClearStencil))}function v(P,w){const C=y(w);C&&(C.isCubeTexture||C.mapping===h0)?(h===void 0&&(h=new Ts(new Ox(1,1,1),new Eo({name:"BackgroundCubeMaterial",uniforms:qu(_s.backgroundCube.uniforms),vertexShader:_s.backgroundCube.vertexShader,fragmentShader:_s.backgroundCube.fragmentShader,side:Vi,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),h.geometry.deleteAttribute("uv"),h.onBeforeRender=function(z,L,D){this.matrixWorld.copyPosition(D.matrixWorld)},Object.defineProperty(h.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),r.update(h)),Ko.copy(w.backgroundRotation),Ko.x*=-1,Ko.y*=-1,Ko.z*=-1,C.isCubeTexture&&C.isRenderTargetTexture===!1&&(Ko.y*=-1,Ko.z*=-1),h.material.uniforms.envMap.value=C,h.material.uniforms.flipEnvMap.value=C.isCubeTexture&&C.isRenderTargetTexture===!1?-1:1,h.material.uniforms.backgroundBlurriness.value=w.backgroundBlurriness,h.material.uniforms.backgroundIntensity.value=w.backgroundIntensity,h.material.uniforms.backgroundRotation.value.setFromMatrix4(TU.makeRotationFromEuler(Ko)),h.material.toneMapped=nn.getTransfer(C.colorSpace)!==gn,(m!==C||p!==C.version||x!==n.toneMapping)&&(h.material.needsUpdate=!0,m=C,p=C.version,x=n.toneMapping),h.layers.enableAll(),P.unshift(h,h.geometry,h.material,0,0,null)):C&&C.isTexture&&(d===void 0&&(d=new Ts(new Jb(2,2),new Eo({name:"BackgroundMaterial",uniforms:qu(_s.background.uniforms),vertexShader:_s.background.vertexShader,fragmentShader:_s.background.fragmentShader,side:da,depthTest:!1,depthWrite:!1,fog:!1})),d.geometry.deleteAttribute("normal"),Object.defineProperty(d.material,"map",{get:function(){return this.uniforms.t2D.value}}),r.update(d)),d.material.uniforms.t2D.value=C,d.material.uniforms.backgroundIntensity.value=w.backgroundIntensity,d.material.toneMapped=nn.getTransfer(C.colorSpace)!==gn,C.matrixAutoUpdate===!0&&C.updateMatrix(),d.material.uniforms.uvTransform.value.copy(C.matrix),(m!==C||p!==C.version||x!==n.toneMapping)&&(d.material.needsUpdate=!0,m=C,p=C.version,x=n.toneMapping),d.layers.enableAll(),P.unshift(d,d.geometry,d.material,0,0,null))}function g(P,w){P.getRGB(wp,jb(n)),i.buffers.color.setClear(wp.r,wp.g,wp.b,w,l)}return{getClearColor:function(){return c},setClearColor:function(P,w=1){c.set(P),u=w,g(c,u)},getClearAlpha:function(){return u},setClearAlpha:function(P){u=P,g(c,u)},render:S,addToRenderList:v}}function bU(n,e){const t=n.getParameter(n.MAX_VERTEX_ATTRIBS),i={},r=p(null);let s=r,l=!1;function c(T,O,Z,W,K){let ne=!1;const Q=m(W,Z,O);s!==Q&&(s=Q,d(s.object)),ne=x(T,W,Z,K),ne&&y(T,W,Z,K),K!==null&&e.update(K,n.ELEMENT_ARRAY_BUFFER),(ne||l)&&(l=!1,C(T,O,Z,W),K!==null&&n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,e.get(K).buffer))}function u(){return n.createVertexArray()}function d(T){return n.bindVertexArray(T)}function h(T){return n.deleteVertexArray(T)}function m(T,O,Z){const W=Z.wireframe===!0;let K=i[T.id];K===void 0&&(K={},i[T.id]=K);let ne=K[O.id];ne===void 0&&(ne={},K[O.id]=ne);let Q=ne[W];return Q===void 0&&(Q=p(u()),ne[W]=Q),Q}function p(T){const O=[],Z=[],W=[];for(let K=0;K<t;K++)O[K]=0,Z[K]=0,W[K]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:O,enabledAttributes:Z,attributeDivisors:W,object:T,attributes:{},index:null}}function x(T,O,Z,W){const K=s.attributes,ne=O.attributes;let Q=0;const se=Z.getAttributes();for(const G in se)if(se[G].location>=0){const le=K[G];let X=ne[G];if(X===void 0&&(G==="instanceMatrix"&&T.instanceMatrix&&(X=T.instanceMatrix),G==="instanceColor"&&T.instanceColor&&(X=T.instanceColor)),le===void 0||le.attribute!==X||X&&le.data!==X.data)return!0;Q++}return s.attributesNum!==Q||s.index!==W}function y(T,O,Z,W){const K={},ne=O.attributes;let Q=0;const se=Z.getAttributes();for(const G in se)if(se[G].location>=0){let le=ne[G];le===void 0&&(G==="instanceMatrix"&&T.instanceMatrix&&(le=T.instanceMatrix),G==="instanceColor"&&T.instanceColor&&(le=T.instanceColor));const X={};X.attribute=le,le&&le.data&&(X.data=le.data),K[G]=X,Q++}s.attributes=K,s.attributesNum=Q,s.index=W}function S(){const T=s.newAttributes;for(let O=0,Z=T.length;O<Z;O++)T[O]=0}function v(T){g(T,0)}function g(T,O){const Z=s.newAttributes,W=s.enabledAttributes,K=s.attributeDivisors;Z[T]=1,W[T]===0&&(n.enableVertexAttribArray(T),W[T]=1),K[T]!==O&&(n.vertexAttribDivisor(T,O),K[T]=O)}function P(){const T=s.newAttributes,O=s.enabledAttributes;for(let Z=0,W=O.length;Z<W;Z++)O[Z]!==T[Z]&&(n.disableVertexAttribArray(Z),O[Z]=0)}function w(T,O,Z,W,K,ne,Q){Q===!0?n.vertexAttribIPointer(T,O,Z,K,ne):n.vertexAttribPointer(T,O,Z,W,K,ne)}function C(T,O,Z,W){S();const K=W.attributes,ne=Z.getAttributes(),Q=O.defaultAttributeValues;for(const se in ne){const G=ne[se];if(G.location>=0){let de=K[se];if(de===void 0&&(se==="instanceMatrix"&&T.instanceMatrix&&(de=T.instanceMatrix),se==="instanceColor"&&T.instanceColor&&(de=T.instanceColor)),de!==void 0){const le=de.normalized,X=de.itemSize,he=e.get(de);if(he===void 0)continue;const He=he.buffer,Y=he.type,ie=he.bytesPerElement,xe=Y===n.INT||Y===n.UNSIGNED_INT||de.gpuType===Ab;if(de.isInterleavedBufferAttribute){const pe=de.data,Oe=pe.stride,Ne=de.offset;if(pe.isInstancedInterleavedBuffer){for(let Ye=0;Ye<G.locationSize;Ye++)g(G.location+Ye,pe.meshPerAttribute);T.isInstancedMesh!==!0&&W._maxInstanceCount===void 0&&(W._maxInstanceCount=pe.meshPerAttribute*pe.count)}else for(let Ye=0;Ye<G.locationSize;Ye++)v(G.location+Ye);n.bindBuffer(n.ARRAY_BUFFER,He);for(let Ye=0;Ye<G.locationSize;Ye++)w(G.location+Ye,X/G.locationSize,Y,le,Oe*ie,(Ne+X/G.locationSize*Ye)*ie,xe)}else{if(de.isInstancedBufferAttribute){for(let pe=0;pe<G.locationSize;pe++)g(G.location+pe,de.meshPerAttribute);T.isInstancedMesh!==!0&&W._maxInstanceCount===void 0&&(W._maxInstanceCount=de.meshPerAttribute*de.count)}else for(let pe=0;pe<G.locationSize;pe++)v(G.location+pe);n.bindBuffer(n.ARRAY_BUFFER,He);for(let pe=0;pe<G.locationSize;pe++)w(G.location+pe,X/G.locationSize,Y,le,X*ie,X/G.locationSize*pe*ie,xe)}}else if(Q!==void 0){const le=Q[se];if(le!==void 0)switch(le.length){case 2:n.vertexAttrib2fv(G.location,le);break;case 3:n.vertexAttrib3fv(G.location,le);break;case 4:n.vertexAttrib4fv(G.location,le);break;default:n.vertexAttrib1fv(G.location,le)}}}}P()}function z(){V();for(const T in i){const O=i[T];for(const Z in O){const W=O[Z];for(const K in W)h(W[K].object),delete W[K];delete O[Z]}delete i[T]}}function L(T){if(i[T.id]===void 0)return;const O=i[T.id];for(const Z in O){const W=O[Z];for(const K in W)h(W[K].object),delete W[K];delete O[Z]}delete i[T.id]}function D(T){for(const O in i){const Z=i[O];if(Z[T.id]===void 0)continue;const W=Z[T.id];for(const K in W)h(W[K].object),delete W[K];delete Z[T.id]}}function V(){R(),l=!0,s!==r&&(s=r,d(s.object))}function R(){r.geometry=null,r.program=null,r.wireframe=!1}return{setup:c,reset:V,resetDefaultState:R,dispose:z,releaseStatesOfGeometry:L,releaseStatesOfProgram:D,initAttributes:S,enableAttribute:v,disableUnusedAttributes:P}}function RU(n,e,t){let i;function r(d){i=d}function s(d,h){n.drawArrays(i,d,h),t.update(h,i,1)}function l(d,h,m){m!==0&&(n.drawArraysInstanced(i,d,h,m),t.update(h,i,m))}function c(d,h,m){if(m===0)return;const p=e.get("WEBGL_multi_draw");if(p===null)for(let x=0;x<m;x++)this.render(d[x],h[x]);else{p.multiDrawArraysWEBGL(i,d,0,h,0,m);let x=0;for(let y=0;y<m;y++)x+=h[y];t.update(x,i,1)}}function u(d,h,m,p){if(m===0)return;const x=e.get("WEBGL_multi_draw");if(x===null)for(let y=0;y<d.length;y++)l(d[y],h[y],p[y]);else{x.multiDrawArraysInstancedWEBGL(i,d,0,h,0,p,0,m);let y=0;for(let S=0;S<m;S++)y+=h[S];for(let S=0;S<p.length;S++)t.update(y,i,p[S])}}this.setMode=r,this.render=s,this.renderInstances=l,this.renderMultiDraw=c,this.renderMultiDrawInstances=u}function CU(n,e,t,i){let r;function s(){if(r!==void 0)return r;if(e.has("EXT_texture_filter_anisotropic")===!0){const L=e.get("EXT_texture_filter_anisotropic");r=n.getParameter(L.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else r=0;return r}function l(L){return!(L!==ws&&i.convert(L)!==n.getParameter(n.IMPLEMENTATION_COLOR_READ_FORMAT))}function c(L){const D=L===p0&&(e.has("EXT_color_buffer_half_float")||e.has("EXT_color_buffer_float"));return!(L!==Mo&&i.convert(L)!==n.getParameter(n.IMPLEMENTATION_COLOR_READ_TYPE)&&L!==uo&&!D)}function u(L){if(L==="highp"){if(n.getShaderPrecisionFormat(n.VERTEX_SHADER,n.HIGH_FLOAT).precision>0&&n.getShaderPrecisionFormat(n.FRAGMENT_SHADER,n.HIGH_FLOAT).precision>0)return"highp";L="mediump"}return L==="mediump"&&n.getShaderPrecisionFormat(n.VERTEX_SHADER,n.MEDIUM_FLOAT).precision>0&&n.getShaderPrecisionFormat(n.FRAGMENT_SHADER,n.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let d=t.precision!==void 0?t.precision:"highp";const h=u(d);h!==d&&(console.warn("THREE.WebGLRenderer:",d,"not supported, using",h,"instead."),d=h);const m=t.logarithmicDepthBuffer===!0,p=n.getParameter(n.MAX_TEXTURE_IMAGE_UNITS),x=n.getParameter(n.MAX_VERTEX_TEXTURE_IMAGE_UNITS),y=n.getParameter(n.MAX_TEXTURE_SIZE),S=n.getParameter(n.MAX_CUBE_MAP_TEXTURE_SIZE),v=n.getParameter(n.MAX_VERTEX_ATTRIBS),g=n.getParameter(n.MAX_VERTEX_UNIFORM_VECTORS),P=n.getParameter(n.MAX_VARYING_VECTORS),w=n.getParameter(n.MAX_FRAGMENT_UNIFORM_VECTORS),C=x>0,z=n.getParameter(n.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:s,getMaxPrecision:u,textureFormatReadable:l,textureTypeReadable:c,precision:d,logarithmicDepthBuffer:m,maxTextures:p,maxVertexTextures:x,maxTextureSize:y,maxCubemapSize:S,maxAttributes:v,maxVertexUniforms:g,maxVaryings:P,maxFragmentUniforms:w,vertexTextures:C,maxSamples:z}}function PU(n){const e=this;let t=null,i=0,r=!1,s=!1;const l=new ul,c=new Vt,u={value:null,needsUpdate:!1};this.uniform=u,this.numPlanes=0,this.numIntersection=0,this.init=function(m,p){const x=m.length!==0||p||i!==0||r;return r=p,i=m.length,x},this.beginShadows=function(){s=!0,h(null)},this.endShadows=function(){s=!1},this.setGlobalState=function(m,p){t=h(m,p,0)},this.setState=function(m,p,x){const y=m.clippingPlanes,S=m.clipIntersection,v=m.clipShadows,g=n.get(m);if(!r||y===null||y.length===0||s&&!v)s?h(null):d();else{const P=s?0:i,w=P*4;let C=g.clippingState||null;u.value=C,C=h(y,p,w,x);for(let z=0;z!==w;++z)C[z]=t[z];g.clippingState=C,this.numIntersection=S?this.numPlanes:0,this.numPlanes+=P}};function d(){u.value!==t&&(u.value=t,u.needsUpdate=i>0),e.numPlanes=i,e.numIntersection=0}function h(m,p,x,y){const S=m!==null?m.length:0;let v=null;if(S!==0){if(v=u.value,y!==!0||v===null){const g=x+S*4,P=p.matrixWorldInverse;c.getNormalMatrix(P),(v===null||v.length<g)&&(v=new Float32Array(g));for(let w=0,C=x;w!==S;++w,C+=4)l.copy(m[w]).applyMatrix4(P,c),l.normal.toArray(v,C),v[C+3]=l.constant}u.value=v,u.needsUpdate=!0}return e.numPlanes=S,e.numIntersection=0,v}}function LU(n){let e=new WeakMap;function t(l,c){return c===O_?l.mapping=Vu:c===F_&&(l.mapping=Gu),l}function i(l){if(l&&l.isTexture){const c=l.mapping;if(c===O_||c===F_)if(e.has(l)){const u=e.get(l).texture;return t(u,l.mapping)}else{const u=l.image;if(u&&u.height>0){const d=new VD(u.height);return d.fromEquirectangularTexture(n,l),e.set(l,d),l.addEventListener("dispose",r),t(d.texture,l.mapping)}else return null}}return l}function r(l){const c=l.target;c.removeEventListener("dispose",r);const u=e.get(c);u!==void 0&&(e.delete(c),u.dispose())}function s(){e=new WeakMap}return{get:i,dispose:s}}let IU=class extends Yb{constructor(e=-1,t=1,i=1,r=-1,s=.1,l=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=i,this.bottom=r,this.near=s,this.far=l,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,i,r,s,l){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=r,this.view.width=s,this.view.height=l,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,r=(this.top+this.bottom)/2;let s=i-e,l=i+e,c=r+t,u=r-t;if(this.view!==null&&this.view.enabled){const d=(this.right-this.left)/this.view.fullWidth/this.zoom,h=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=d*this.view.offsetX,l=s+d*this.view.width,c-=h*this.view.offsetY,u=c-h*this.view.height}this.projectionMatrix.makeOrthographic(s,l,c,u,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}};const xu=4,WE=[.125,.215,.35,.446,.526,.582],vl=20,Y1=new IU,$E=new an;let K1=null,Z1=0,Q1=0,J1=!1;const fl=(1+Math.sqrt(5))/2,Rc=1/fl,XE=[new Re(-fl,Rc,0),new Re(fl,Rc,0),new Re(-Rc,0,fl),new Re(Rc,0,fl),new Re(0,fl,-Rc),new Re(0,fl,Rc),new Re(-1,1,-1),new Re(1,1,-1),new Re(-1,1,1),new Re(1,1,1)];let qE=class{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,i=.1,r=100){K1=this._renderer.getRenderTarget(),Z1=this._renderer.getActiveCubeFace(),Q1=this._renderer.getActiveMipmapLevel(),J1=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(256);const s=this._allocateTargets();return s.depthBuffer=!0,this._sceneToCubeUV(e,i,r,s),t>0&&this._blur(s,0,0,t),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=KE(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=YE(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(K1,Z1,Q1),this._renderer.xr.enabled=J1,e.scissorTest=!1,Tp(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===Vu||e.mapping===Gu?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),K1=this._renderer.getRenderTarget(),Z1=this._renderer.getActiveCubeFace(),Q1=this._renderer.getActiveMipmapLevel(),J1=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const i=t||this._allocateTargets();return this._textureToCubeUV(e,i),this._applyPMREM(i),this._cleanup(i),i}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,i={magFilter:Qr,minFilter:Qr,generateMipmaps:!1,type:p0,format:ws,colorSpace:Ro,depthBuffer:!1},r=jE(e,t,i);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=jE(e,t,i);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=DU(s)),this._blurMaterial=NU(s,e,t)}return r}_compileMaterial(e){const t=new Ts(this._lodPlanes[0],e);this._renderer.compile(t,Y1)}_sceneToCubeUV(e,t,i,r){const c=new Tr(90,1,t,i),u=[1,-1,1,1,1,1],d=[1,1,1,-1,-1,-1],h=this._renderer,m=h.autoClear,p=h.toneMapping;h.getClearColor($E),h.toneMapping=go,h.autoClear=!1;const x=new Ux({name:"PMREM.Background",side:Vi,depthWrite:!1,depthTest:!1}),y=new Ts(new Ox,x);let S=!1;const v=e.background;v?v.isColor&&(x.color.copy(v),e.background=null,S=!0):(x.color.copy($E),S=!0);for(let g=0;g<6;g++){const P=g%3;P===0?(c.up.set(0,u[g],0),c.lookAt(d[g],0,0)):P===1?(c.up.set(0,0,u[g]),c.lookAt(0,d[g],0)):(c.up.set(0,u[g],0),c.lookAt(0,0,d[g]));const w=this._cubeSize;Tp(r,P*w,g>2?w:0,w,w),h.setRenderTarget(r),S&&h.render(y,c),h.render(e,c)}y.geometry.dispose(),y.material.dispose(),h.toneMapping=p,h.autoClear=m,e.background=v}_textureToCubeUV(e,t){const i=this._renderer,r=e.mapping===Vu||e.mapping===Gu;r?(this._cubemapMaterial===null&&(this._cubemapMaterial=KE()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=YE());const s=r?this._cubemapMaterial:this._equirectMaterial,l=new Ts(this._lodPlanes[0],s),c=s.uniforms;c.envMap.value=e;const u=this._cubeSize;Tp(t,0,0,3*u,2*u),i.setRenderTarget(t),i.render(l,Y1)}_applyPMREM(e){const t=this._renderer,i=t.autoClear;t.autoClear=!1;const r=this._lodPlanes.length;for(let s=1;s<r;s++){const l=Math.sqrt(this._sigmas[s]*this._sigmas[s]-this._sigmas[s-1]*this._sigmas[s-1]),c=XE[(r-s-1)%XE.length];this._blur(e,s-1,s,l,c)}t.autoClear=i}_blur(e,t,i,r,s){const l=this._pingPongRenderTarget;this._halfBlur(e,l,t,i,r,"latitudinal",s),this._halfBlur(l,e,i,i,r,"longitudinal",s)}_halfBlur(e,t,i,r,s,l,c){const u=this._renderer,d=this._blurMaterial;l!=="latitudinal"&&l!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const h=3,m=new Ts(this._lodPlanes[r],d),p=d.uniforms,x=this._sizeLods[i]-1,y=isFinite(s)?Math.PI/(2*x):2*Math.PI/(2*vl-1),S=s/y,v=isFinite(s)?1+Math.floor(h*S):vl;v>vl&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${v} samples when the maximum is set to ${vl}`);const g=[];let P=0;for(let D=0;D<vl;++D){const V=D/S,R=Math.exp(-V*V/2);g.push(R),D===0?P+=R:D<v&&(P+=2*R)}for(let D=0;D<g.length;D++)g[D]=g[D]/P;p.envMap.value=e.texture,p.samples.value=v,p.weights.value=g,p.latitudinal.value=l==="latitudinal",c&&(p.poleAxis.value=c);const{_lodMax:w}=this;p.dTheta.value=y,p.mipInt.value=w-i;const C=this._sizeLods[r],z=3*C*(r>w-xu?r-w+xu:0),L=4*(this._cubeSize-C);Tp(t,z,L,3*C,2*C),u.setRenderTarget(t),u.render(m,Y1)}};function DU(n){const e=[],t=[],i=[];let r=n;const s=n-xu+1+WE.length;for(let l=0;l<s;l++){const c=Math.pow(2,r);t.push(c);let u=1/c;l>n-xu?u=WE[l-n+xu-1]:l===0&&(u=0),i.push(u);const d=1/(c-2),h=-d,m=1+d,p=[h,h,m,h,m,m,h,h,m,m,h,m],x=6,y=6,S=3,v=2,g=1,P=new Float32Array(S*y*x),w=new Float32Array(v*y*x),C=new Float32Array(g*y*x);for(let L=0;L<x;L++){const D=L%3*2/3-1,V=L>2?0:-1,R=[D,V,0,D+2/3,V,0,D+2/3,V+1,0,D,V,0,D+2/3,V+1,0,D,V+1,0];P.set(R,S*y*L),w.set(p,v*y*L);const T=[L,L,L,L,L,L];C.set(T,g*y*L)}const z=new af;z.setAttribute("position",new Rs(P,S)),z.setAttribute("uv",new Rs(w,v)),z.setAttribute("faceIndex",new Rs(C,g)),e.push(z),r>xu&&r--}return{lodPlanes:e,sizeLods:t,sigmas:i}}function jE(n,e,t){const i=new Ol(n,e,t);return i.texture.mapping=h0,i.texture.name="PMREM.cubeUv",i.scissorTest=!0,i}function Tp(n,e,t,i,r){n.viewport.set(e,t,i,r),n.scissor.set(e,t,i,r)}function NU(n,e,t){const i=new Float32Array(vl),r=new Re(0,1,0);return new Eo({name:"SphericalGaussianBlur",defines:{n:vl,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${n}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:i},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:r}},vertexShader:Fx(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:mo,depthTest:!1,depthWrite:!1})}function YE(){return new Eo({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Fx(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:mo,depthTest:!1,depthWrite:!1})}function KE(){return new Eo({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Fx(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:mo,depthTest:!1,depthWrite:!1})}function Fx(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function UU(n){let e=new WeakMap,t=null;function i(c){if(c&&c.isTexture){const u=c.mapping,d=u===O_||u===F_,h=u===Vu||u===Gu;if(d||h){let m=e.get(c);const p=m!==void 0?m.texture.pmremVersion:0;if(c.isRenderTargetTexture&&c.pmremVersion!==p)return t===null&&(t=new qE(n)),m=d?t.fromEquirectangular(c,m):t.fromCubemap(c,m),m.texture.pmremVersion=c.pmremVersion,e.set(c,m),m.texture;if(m!==void 0)return m.texture;{const x=c.image;return d&&x&&x.height>0||h&&x&&r(x)?(t===null&&(t=new qE(n)),m=d?t.fromEquirectangular(c):t.fromCubemap(c),m.texture.pmremVersion=c.pmremVersion,e.set(c,m),c.addEventListener("dispose",s),m.texture):null}}}return c}function r(c){let u=0;const d=6;for(let h=0;h<d;h++)c[h]!==void 0&&u++;return u===d}function s(c){const u=c.target;u.removeEventListener("dispose",s);const d=e.get(u);d!==void 0&&(e.delete(u),d.dispose())}function l(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:i,dispose:l}}function OU(n){const e={};function t(i){if(e[i]!==void 0)return e[i];let r;switch(i){case"WEBGL_depth_texture":r=n.getExtension("WEBGL_depth_texture")||n.getExtension("MOZ_WEBGL_depth_texture")||n.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=n.getExtension("EXT_texture_filter_anisotropic")||n.getExtension("MOZ_EXT_texture_filter_anisotropic")||n.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=n.getExtension("WEBGL_compressed_texture_s3tc")||n.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=n.getExtension("WEBGL_compressed_texture_pvrtc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=n.getExtension(i)}return e[i]=r,r}return{has:function(i){return t(i)!==null},init:function(){t("EXT_color_buffer_float"),t("WEBGL_clip_cull_distance"),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture"),t("WEBGL_render_shared_exponent")},get:function(i){const r=t(i);return r===null&&Ob("THREE.WebGLRenderer: "+i+" extension not supported."),r}}}function FU(n,e,t,i){const r={},s=new WeakMap;function l(m){const p=m.target;p.index!==null&&e.remove(p.index);for(const y in p.attributes)e.remove(p.attributes[y]);for(const y in p.morphAttributes){const S=p.morphAttributes[y];for(let v=0,g=S.length;v<g;v++)e.remove(S[v])}p.removeEventListener("dispose",l),delete r[p.id];const x=s.get(p);x&&(e.remove(x),s.delete(p)),i.releaseStatesOfGeometry(p),p.isInstancedBufferGeometry===!0&&delete p._maxInstanceCount,t.memory.geometries--}function c(m,p){return r[p.id]===!0||(p.addEventListener("dispose",l),r[p.id]=!0,t.memory.geometries++),p}function u(m){const p=m.attributes;for(const y in p)e.update(p[y],n.ARRAY_BUFFER);const x=m.morphAttributes;for(const y in x){const S=x[y];for(let v=0,g=S.length;v<g;v++)e.update(S[v],n.ARRAY_BUFFER)}}function d(m){const p=[],x=m.index,y=m.attributes.position;let S=0;if(x!==null){const P=x.array;S=x.version;for(let w=0,C=P.length;w<C;w+=3){const z=P[w+0],L=P[w+1],D=P[w+2];p.push(z,L,L,D,D,z)}}else if(y!==void 0){const P=y.array;S=y.version;for(let w=0,C=P.length/3-1;w<C;w+=3){const z=w+0,L=w+1,D=w+2;p.push(z,L,L,D,D,z)}}else return;const v=new(Ub(p)?$b:Wb)(p,1);v.version=S;const g=s.get(m);g&&e.remove(g),s.set(m,v)}function h(m){const p=s.get(m);if(p){const x=m.index;x!==null&&p.version<x.version&&d(m)}else d(m);return s.get(m)}return{get:c,update:u,getWireframeAttribute:h}}function kU(n,e,t){let i;function r(p){i=p}let s,l;function c(p){s=p.type,l=p.bytesPerElement}function u(p,x){n.drawElements(i,x,s,p*l),t.update(x,i,1)}function d(p,x,y){y!==0&&(n.drawElementsInstanced(i,x,s,p*l,y),t.update(x,i,y))}function h(p,x,y){if(y===0)return;const S=e.get("WEBGL_multi_draw");if(S===null)for(let v=0;v<y;v++)this.render(p[v]/l,x[v]);else{S.multiDrawElementsWEBGL(i,x,0,s,p,0,y);let v=0;for(let g=0;g<y;g++)v+=x[g];t.update(v,i,1)}}function m(p,x,y,S){if(y===0)return;const v=e.get("WEBGL_multi_draw");if(v===null)for(let g=0;g<p.length;g++)d(p[g]/l,x[g],S[g]);else{v.multiDrawElementsInstancedWEBGL(i,x,0,s,p,0,S,0,y);let g=0;for(let P=0;P<y;P++)g+=x[P];for(let P=0;P<S.length;P++)t.update(g,i,S[P])}}this.setMode=r,this.setIndex=c,this.render=u,this.renderInstances=d,this.renderMultiDraw=h,this.renderMultiDrawInstances=m}function zU(n){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function i(s,l,c){switch(t.calls++,l){case n.TRIANGLES:t.triangles+=c*(s/3);break;case n.LINES:t.lines+=c*(s/2);break;case n.LINE_STRIP:t.lines+=c*(s-1);break;case n.LINE_LOOP:t.lines+=c*s;break;case n.POINTS:t.points+=c*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",l);break}}function r(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:r,update:i}}function BU(n,e,t){const i=new WeakMap,r=new Ai;function s(l,c,u){const d=l.morphTargetInfluences,h=c.morphAttributes.position||c.morphAttributes.normal||c.morphAttributes.color,m=h!==void 0?h.length:0;let p=i.get(c);if(p===void 0||p.count!==m){let R=function(){D.dispose(),i.delete(c),c.removeEventListener("dispose",R)};p!==void 0&&p.texture.dispose();const x=c.morphAttributes.position!==void 0,y=c.morphAttributes.normal!==void 0,S=c.morphAttributes.color!==void 0,v=c.morphAttributes.position||[],g=c.morphAttributes.normal||[],P=c.morphAttributes.color||[];let w=0;x===!0&&(w=1),y===!0&&(w=2),S===!0&&(w=3);let C=c.attributes.position.count*w,z=1;C>e.maxTextureSize&&(z=Math.ceil(C/e.maxTextureSize),C=e.maxTextureSize);const L=new Float32Array(C*z*4*m),D=new zb(L,C,z,m);D.type=uo,D.needsUpdate=!0;const V=w*4;for(let T=0;T<m;T++){const O=v[T],Z=g[T],W=P[T],K=C*z*4*T;for(let ne=0;ne<O.count;ne++){const Q=ne*V;x===!0&&(r.fromBufferAttribute(O,ne),L[K+Q+0]=r.x,L[K+Q+1]=r.y,L[K+Q+2]=r.z,L[K+Q+3]=0),y===!0&&(r.fromBufferAttribute(Z,ne),L[K+Q+4]=r.x,L[K+Q+5]=r.y,L[K+Q+6]=r.z,L[K+Q+7]=0),S===!0&&(r.fromBufferAttribute(W,ne),L[K+Q+8]=r.x,L[K+Q+9]=r.y,L[K+Q+10]=r.z,L[K+Q+11]=W.itemSize===4?r.w:1)}}p={count:m,texture:D,size:new sn(C,z)},i.set(c,p),c.addEventListener("dispose",R)}if(l.isInstancedMesh===!0&&l.morphTexture!==null)u.getUniforms().setValue(n,"morphTexture",l.morphTexture,t);else{let x=0;for(let S=0;S<d.length;S++)x+=d[S];const y=c.morphTargetsRelative?1:1-x;u.getUniforms().setValue(n,"morphTargetBaseInfluence",y),u.getUniforms().setValue(n,"morphTargetInfluences",d)}u.getUniforms().setValue(n,"morphTargetsTexture",p.texture,t),u.getUniforms().setValue(n,"morphTargetsTextureSize",p.size)}return{update:s}}function HU(n,e,t,i){let r=new WeakMap;function s(u){const d=i.render.frame,h=u.geometry,m=e.get(u,h);if(r.get(m)!==d&&(e.update(m),r.set(m,d)),u.isInstancedMesh&&(u.hasEventListener("dispose",c)===!1&&u.addEventListener("dispose",c),r.get(u)!==d&&(t.update(u.instanceMatrix,n.ARRAY_BUFFER),u.instanceColor!==null&&t.update(u.instanceColor,n.ARRAY_BUFFER),r.set(u,d))),u.isSkinnedMesh){const p=u.skeleton;r.get(p)!==d&&(p.update(),r.set(p,d))}return m}function l(){r=new WeakMap}function c(u){const d=u.target;d.removeEventListener("dispose",c),t.remove(d.instanceMatrix),d.instanceColor!==null&&t.remove(d.instanceColor)}return{update:s,dispose:l}}let t4=class extends Ls{constructor(e,t,i,r,s,l,c,u,d,h=wu){if(h!==wu&&h!==Xu)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");i===void 0&&h===wu&&(i=Wu),i===void 0&&h===Xu&&(i=$u),super(null,r,s,l,c,u,h,i,d),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=c!==void 0?c:br,this.minFilter=u!==void 0?u:br,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}};const n4=new Ls,i4=new t4(1,1);i4.compareFunction=Ib;const r4=new zb,s4=new TD,a4=new Kb,ZE=[],QE=[],JE=new Float32Array(16),e3=new Float32Array(9),t3=new Float32Array(4);function of(n,e,t){const i=n[0];if(i<=0||i>0)return n;const r=e*t;let s=ZE[r];if(s===void 0&&(s=new Float32Array(r),ZE[r]=s),e!==0){i.toArray(s,0);for(let l=1,c=0;l!==e;++l)c+=t,n[l].toArray(s,c)}return s}function $n(n,e){if(n.length!==e.length)return!1;for(let t=0,i=n.length;t<i;t++)if(n[t]!==e[t])return!1;return!0}function Xn(n,e){for(let t=0,i=e.length;t<i;t++)n[t]=e[t]}function v0(n,e){let t=QE[e];t===void 0&&(t=new Int32Array(e),QE[e]=t);for(let i=0;i!==e;++i)t[i]=n.allocateTextureUnit();return t}function VU(n,e){const t=this.cache;t[0]!==e&&(n.uniform1f(this.addr,e),t[0]=e)}function GU(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(n.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if($n(t,e))return;n.uniform2fv(this.addr,e),Xn(t,e)}}function WU(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(n.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(n.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if($n(t,e))return;n.uniform3fv(this.addr,e),Xn(t,e)}}function $U(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(n.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if($n(t,e))return;n.uniform4fv(this.addr,e),Xn(t,e)}}function XU(n,e){const t=this.cache,i=e.elements;if(i===void 0){if($n(t,e))return;n.uniformMatrix2fv(this.addr,!1,e),Xn(t,e)}else{if($n(t,i))return;t3.set(i),n.uniformMatrix2fv(this.addr,!1,t3),Xn(t,i)}}function qU(n,e){const t=this.cache,i=e.elements;if(i===void 0){if($n(t,e))return;n.uniformMatrix3fv(this.addr,!1,e),Xn(t,e)}else{if($n(t,i))return;e3.set(i),n.uniformMatrix3fv(this.addr,!1,e3),Xn(t,i)}}function jU(n,e){const t=this.cache,i=e.elements;if(i===void 0){if($n(t,e))return;n.uniformMatrix4fv(this.addr,!1,e),Xn(t,e)}else{if($n(t,i))return;JE.set(i),n.uniformMatrix4fv(this.addr,!1,JE),Xn(t,i)}}function YU(n,e){const t=this.cache;t[0]!==e&&(n.uniform1i(this.addr,e),t[0]=e)}function KU(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(n.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if($n(t,e))return;n.uniform2iv(this.addr,e),Xn(t,e)}}function ZU(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(n.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if($n(t,e))return;n.uniform3iv(this.addr,e),Xn(t,e)}}function QU(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(n.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if($n(t,e))return;n.uniform4iv(this.addr,e),Xn(t,e)}}function JU(n,e){const t=this.cache;t[0]!==e&&(n.uniform1ui(this.addr,e),t[0]=e)}function e9(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(n.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if($n(t,e))return;n.uniform2uiv(this.addr,e),Xn(t,e)}}function t9(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(n.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if($n(t,e))return;n.uniform3uiv(this.addr,e),Xn(t,e)}}function n9(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(n.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if($n(t,e))return;n.uniform4uiv(this.addr,e),Xn(t,e)}}function i9(n,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(n.uniform1i(this.addr,r),i[0]=r);const s=this.type===n.SAMPLER_2D_SHADOW?i4:n4;t.setTexture2D(e||s,r)}function r9(n,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(n.uniform1i(this.addr,r),i[0]=r),t.setTexture3D(e||s4,r)}function s9(n,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(n.uniform1i(this.addr,r),i[0]=r),t.setTextureCube(e||a4,r)}function a9(n,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(n.uniform1i(this.addr,r),i[0]=r),t.setTexture2DArray(e||r4,r)}function o9(n){switch(n){case 5126:return VU;case 35664:return GU;case 35665:return WU;case 35666:return $U;case 35674:return XU;case 35675:return qU;case 35676:return jU;case 5124:case 35670:return YU;case 35667:case 35671:return KU;case 35668:case 35672:return ZU;case 35669:case 35673:return QU;case 5125:return JU;case 36294:return e9;case 36295:return t9;case 36296:return n9;case 35678:case 36198:case 36298:case 36306:case 35682:return i9;case 35679:case 36299:case 36307:return r9;case 35680:case 36300:case 36308:case 36293:return s9;case 36289:case 36303:case 36311:case 36292:return a9}}function l9(n,e){n.uniform1fv(this.addr,e)}function c9(n,e){const t=of(e,this.size,2);n.uniform2fv(this.addr,t)}function u9(n,e){const t=of(e,this.size,3);n.uniform3fv(this.addr,t)}function f9(n,e){const t=of(e,this.size,4);n.uniform4fv(this.addr,t)}function d9(n,e){const t=of(e,this.size,4);n.uniformMatrix2fv(this.addr,!1,t)}function h9(n,e){const t=of(e,this.size,9);n.uniformMatrix3fv(this.addr,!1,t)}function p9(n,e){const t=of(e,this.size,16);n.uniformMatrix4fv(this.addr,!1,t)}function m9(n,e){n.uniform1iv(this.addr,e)}function g9(n,e){n.uniform2iv(this.addr,e)}function v9(n,e){n.uniform3iv(this.addr,e)}function _9(n,e){n.uniform4iv(this.addr,e)}function x9(n,e){n.uniform1uiv(this.addr,e)}function y9(n,e){n.uniform2uiv(this.addr,e)}function S9(n,e){n.uniform3uiv(this.addr,e)}function M9(n,e){n.uniform4uiv(this.addr,e)}function E9(n,e,t){const i=this.cache,r=e.length,s=v0(t,r);$n(i,s)||(n.uniform1iv(this.addr,s),Xn(i,s));for(let l=0;l!==r;++l)t.setTexture2D(e[l]||n4,s[l])}function w9(n,e,t){const i=this.cache,r=e.length,s=v0(t,r);$n(i,s)||(n.uniform1iv(this.addr,s),Xn(i,s));for(let l=0;l!==r;++l)t.setTexture3D(e[l]||s4,s[l])}function T9(n,e,t){const i=this.cache,r=e.length,s=v0(t,r);$n(i,s)||(n.uniform1iv(this.addr,s),Xn(i,s));for(let l=0;l!==r;++l)t.setTextureCube(e[l]||a4,s[l])}function A9(n,e,t){const i=this.cache,r=e.length,s=v0(t,r);$n(i,s)||(n.uniform1iv(this.addr,s),Xn(i,s));for(let l=0;l!==r;++l)t.setTexture2DArray(e[l]||r4,s[l])}function b9(n){switch(n){case 5126:return l9;case 35664:return c9;case 35665:return u9;case 35666:return f9;case 35674:return d9;case 35675:return h9;case 35676:return p9;case 5124:case 35670:return m9;case 35667:case 35671:return g9;case 35668:case 35672:return v9;case 35669:case 35673:return _9;case 5125:return x9;case 36294:return y9;case 36295:return S9;case 36296:return M9;case 35678:case 36198:case 36298:case 36306:case 35682:return E9;case 35679:case 36299:case 36307:return w9;case 35680:case 36300:case 36308:case 36293:return T9;case 36289:case 36303:case 36311:case 36292:return A9}}let R9=class{constructor(e,t,i){this.id=e,this.addr=i,this.cache=[],this.type=t.type,this.setValue=o9(t.type)}},C9=class{constructor(e,t,i){this.id=e,this.addr=i,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=b9(t.type)}},P9=class{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,i){const r=this.seq;for(let s=0,l=r.length;s!==l;++s){const c=r[s];c.setValue(e,t[c.id],i)}}};const ev=/(\w+)(\])?(\[|\.)?/g;function n3(n,e){n.seq.push(e),n.map[e.id]=e}function L9(n,e,t){const i=n.name,r=i.length;for(ev.lastIndex=0;;){const s=ev.exec(i),l=ev.lastIndex;let c=s[1];const u=s[2]==="]",d=s[3];if(u&&(c=c|0),d===void 0||d==="["&&l+2===r){n3(t,d===void 0?new R9(c,n,e):new C9(c,n,e));break}else{let m=t.map[c];m===void 0&&(m=new P9(c),n3(t,m)),t=m}}}let mm=class{constructor(e,t){this.seq=[],this.map={};const i=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let r=0;r<i;++r){const s=e.getActiveUniform(t,r),l=e.getUniformLocation(t,s.name);L9(s,l,this)}}setValue(e,t,i,r){const s=this.map[t];s!==void 0&&s.setValue(e,i,r)}setOptional(e,t,i){const r=t[i];r!==void 0&&this.setValue(e,i,r)}static upload(e,t,i,r){for(let s=0,l=t.length;s!==l;++s){const c=t[s],u=i[c.id];u.needsUpdate!==!1&&c.setValue(e,u.value,r)}}static seqWithValue(e,t){const i=[];for(let r=0,s=e.length;r!==s;++r){const l=e[r];l.id in t&&i.push(l)}return i}};function i3(n,e,t){const i=n.createShader(e);return n.shaderSource(i,t),n.compileShader(i),i}const I9=37297;let D9=0;function N9(n,e){const t=n.split(`
`),i=[],r=Math.max(e-6,0),s=Math.min(e+6,t.length);for(let l=r;l<s;l++){const c=l+1;i.push(`${c===e?">":" "} ${c}: ${t[l]}`)}return i.join(`
`)}function U9(n){const e=nn.getPrimaries(nn.workingColorSpace),t=nn.getPrimaries(n);let i;switch(e===t?i="":e===Fm&&t===Om?i="LinearDisplayP3ToLinearSRGB":e===Om&&t===Fm&&(i="LinearSRGBToLinearDisplayP3"),n){case Ro:case m0:return[i,"LinearTransferOETF"];case ps:case Dx:return[i,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space:",n),[i,"LinearTransferOETF"]}}function r3(n,e,t){const i=n.getShaderParameter(e,n.COMPILE_STATUS),r=n.getShaderInfoLog(e).trim();if(i&&r==="")return"";const s=/ERROR: 0:(\d+)/.exec(r);if(s){const l=parseInt(s[1]);return t.toUpperCase()+`

`+r+`

`+N9(n.getShaderSource(e),l)}else return r}function O9(n,e){const t=U9(e);return`vec4 ${n}( vec4 value ) { return ${t[0]}( ${t[1]}( value ) ); }`}function F9(n,e){let t;switch(e){case VI:t="Linear";break;case GI:t="Reinhard";break;case WI:t="OptimizedCineon";break;case $I:t="ACESFilmic";break;case qI:t="AgX";break;case jI:t="Neutral";break;case XI:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+n+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function k9(n){return[n.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",n.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(Md).join(`
`)}function z9(n){const e=[];for(const t in n){const i=n[t];i!==!1&&e.push("#define "+t+" "+i)}return e.join(`
`)}function B9(n,e){const t={},i=n.getProgramParameter(e,n.ACTIVE_ATTRIBUTES);for(let r=0;r<i;r++){const s=n.getActiveAttrib(e,r),l=s.name;let c=1;s.type===n.FLOAT_MAT2&&(c=2),s.type===n.FLOAT_MAT3&&(c=3),s.type===n.FLOAT_MAT4&&(c=4),t[l]={type:s.type,location:n.getAttribLocation(e,l),locationSize:c}}return t}function Md(n){return n!==""}function s3(n,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return n.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function a3(n,e){return n.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const H9=/^[ \t]*#include +<([\w\d./]+)>/gm;function V_(n){return n.replace(H9,G9)}const V9=new Map;function G9(n,e){let t=Ut[e];if(t===void 0){const i=V9.get(e);if(i!==void 0)t=Ut[i],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,i);else throw new Error("Can not resolve #include <"+e+">")}return V_(t)}const W9=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function o3(n){return n.replace(W9,$9)}function $9(n,e,t,i){let r="";for(let s=parseInt(e);s<parseInt(t);s++)r+=i.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return r}function l3(n){let e=`precision ${n.precision} float;
	precision ${n.precision} int;
	precision ${n.precision} sampler2D;
	precision ${n.precision} samplerCube;
	precision ${n.precision} sampler3D;
	precision ${n.precision} sampler2DArray;
	precision ${n.precision} sampler2DShadow;
	precision ${n.precision} samplerCubeShadow;
	precision ${n.precision} sampler2DArrayShadow;
	precision ${n.precision} isampler2D;
	precision ${n.precision} isampler3D;
	precision ${n.precision} isamplerCube;
	precision ${n.precision} isampler2DArray;
	precision ${n.precision} usampler2D;
	precision ${n.precision} usampler3D;
	precision ${n.precision} usamplerCube;
	precision ${n.precision} usampler2DArray;
	`;return n.precision==="highp"?e+=`
#define HIGH_PRECISION`:n.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:n.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function X9(n){let e="SHADOWMAP_TYPE_BASIC";return n.shadowMapType===Eb?e="SHADOWMAP_TYPE_PCF":n.shadowMapType===pI?e="SHADOWMAP_TYPE_PCF_SOFT":n.shadowMapType===ea&&(e="SHADOWMAP_TYPE_VSM"),e}function q9(n){let e="ENVMAP_TYPE_CUBE";if(n.envMap)switch(n.envMapMode){case Vu:case Gu:e="ENVMAP_TYPE_CUBE";break;case h0:e="ENVMAP_TYPE_CUBE_UV";break}return e}function j9(n){let e="ENVMAP_MODE_REFLECTION";if(n.envMap)switch(n.envMapMode){case Gu:e="ENVMAP_MODE_REFRACTION";break}return e}function Y9(n){let e="ENVMAP_BLENDING_NONE";if(n.envMap)switch(n.combine){case wb:e="ENVMAP_BLENDING_MULTIPLY";break;case BI:e="ENVMAP_BLENDING_MIX";break;case HI:e="ENVMAP_BLENDING_ADD";break}return e}function K9(n){const e=n.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,i=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:i,maxMip:t}}function Z9(n,e,t,i){const r=n.getContext(),s=t.defines;let l=t.vertexShader,c=t.fragmentShader;const u=X9(t),d=q9(t),h=j9(t),m=Y9(t),p=K9(t),x=k9(t),y=z9(s),S=r.createProgram();let v,g,P=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(v=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y].filter(Md).join(`
`),v.length>0&&(v+=`
`),g=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y].filter(Md).join(`
`),g.length>0&&(g+=`
`)):(v=[l3(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y,t.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",t.batching?"#define USE_BATCHING":"",t.batchingColor?"#define USE_BATCHING_COLOR":"",t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.instancingMorph?"#define USE_INSTANCING_MORPH":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Md).join(`
`),g=[l3(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+d:"",t.envMap?"#define "+h:"",t.envMap?"#define "+m:"",p?"#define CUBEUV_TEXEL_WIDTH "+p.texelWidth:"",p?"#define CUBEUV_TEXEL_HEIGHT "+p.texelHeight:"",p?"#define CUBEUV_MAX_MIP "+p.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.dispersion?"#define USE_DISPERSION":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor||t.batchingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==go?"#define TONE_MAPPING":"",t.toneMapping!==go?Ut.tonemapping_pars_fragment:"",t.toneMapping!==go?F9("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",Ut.colorspace_pars_fragment,O9("linearToOutputTexel",t.outputColorSpace),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(Md).join(`
`)),l=V_(l),l=s3(l,t),l=a3(l,t),c=V_(c),c=s3(c,t),c=a3(c,t),l=o3(l),c=o3(c),t.isRawShaderMaterial!==!0&&(P=`#version 300 es
`,v=[x,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+v,g=["#define varying in",t.glslVersion===wE?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===wE?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+g);const w=P+v+l,C=P+g+c,z=i3(r,r.VERTEX_SHADER,w),L=i3(r,r.FRAGMENT_SHADER,C);r.attachShader(S,z),r.attachShader(S,L),t.index0AttributeName!==void 0?r.bindAttribLocation(S,0,t.index0AttributeName):t.morphTargets===!0&&r.bindAttribLocation(S,0,"position"),r.linkProgram(S);function D(O){if(n.debug.checkShaderErrors){const Z=r.getProgramInfoLog(S).trim(),W=r.getShaderInfoLog(z).trim(),K=r.getShaderInfoLog(L).trim();let ne=!0,Q=!0;if(r.getProgramParameter(S,r.LINK_STATUS)===!1)if(ne=!1,typeof n.debug.onShaderError=="function")n.debug.onShaderError(r,S,z,L);else{const se=r3(r,z,"vertex"),G=r3(r,L,"fragment");console.error("THREE.WebGLProgram: Shader Error "+r.getError()+" - VALIDATE_STATUS "+r.getProgramParameter(S,r.VALIDATE_STATUS)+`

Material Name: `+O.name+`
Material Type: `+O.type+`

Program Info Log: `+Z+`
`+se+`
`+G)}else Z!==""?console.warn("THREE.WebGLProgram: Program Info Log:",Z):(W===""||K==="")&&(Q=!1);Q&&(O.diagnostics={runnable:ne,programLog:Z,vertexShader:{log:W,prefix:v},fragmentShader:{log:K,prefix:g}})}r.deleteShader(z),r.deleteShader(L),V=new mm(r,S),R=B9(r,S)}let V;this.getUniforms=function(){return V===void 0&&D(this),V};let R;this.getAttributes=function(){return R===void 0&&D(this),R};let T=t.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return T===!1&&(T=r.getProgramParameter(S,I9)),T},this.destroy=function(){i.releaseStatesOfProgram(this),r.deleteProgram(S),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=D9++,this.cacheKey=e,this.usedTimes=1,this.program=S,this.vertexShader=z,this.fragmentShader=L,this}let Q9=0,J9=class{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,i=e.fragmentShader,r=this._getShaderStage(t),s=this._getShaderStage(i),l=this._getShaderCacheForMaterial(e);return l.has(r)===!1&&(l.add(r),r.usedTimes++),l.has(s)===!1&&(l.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const i of t)i.usedTimes--,i.usedTimes===0&&this.shaderCache.delete(i.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let i=t.get(e);return i===void 0&&(i=new Set,t.set(e,i)),i}_getShaderStage(e){const t=this.shaderCache;let i=t.get(e);return i===void 0&&(i=new eO(e),t.set(e,i)),i}},eO=class{constructor(e){this.id=Q9++,this.code=e,this.usedTimes=0}};function tO(n,e,t,i,r,s,l){const c=new Vb,u=new J9,d=new Set,h=[],m=r.logarithmicDepthBuffer,p=r.vertexTextures;let x=r.precision;const y={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function S(R){return d.add(R),R===0?"uv":`uv${R}`}function v(R,T,O,Z,W){const K=Z.fog,ne=W.geometry,Q=R.isMeshStandardMaterial?Z.environment:null,se=(R.isMeshStandardMaterial?t:e).get(R.envMap||Q),G=se&&se.mapping===h0?se.image.height:null,de=y[R.type];R.precision!==null&&(x=r.getMaxPrecision(R.precision),x!==R.precision&&console.warn("THREE.WebGLProgram.getParameters:",R.precision,"not supported, using",x,"instead."));const le=ne.morphAttributes.position||ne.morphAttributes.normal||ne.morphAttributes.color,X=le!==void 0?le.length:0;let he=0;ne.morphAttributes.position!==void 0&&(he=1),ne.morphAttributes.normal!==void 0&&(he=2),ne.morphAttributes.color!==void 0&&(he=3);let He,Y,ie,xe;if(de){const xt=_s[de];He=xt.vertexShader,Y=xt.fragmentShader}else He=R.vertexShader,Y=R.fragmentShader,u.update(R),ie=u.getVertexShaderID(R),xe=u.getFragmentShaderID(R);const pe=n.getRenderTarget(),Oe=W.isInstancedMesh===!0,Ne=W.isBatchedMesh===!0,Ye=!!R.map,U=!!R.matcap,Je=!!se,nt=!!R.aoMap,Tt=!!R.lightMap,Ve=!!R.bumpMap,ut=!!R.normalMap,tt=!!R.displacementMap,Ke=!!R.emissiveMap,Lt=!!R.metalnessMap,I=!!R.roughnessMap,E=R.anisotropy>0,j=R.clearcoat>0,ae=R.dispersion>0,ce=R.iridescence>0,ue=R.sheen>0,Fe=R.transmission>0,Me=E&&!!R.anisotropyMap,Se=j&&!!R.clearcoatMap,Ze=j&&!!R.clearcoatNormalMap,me=j&&!!R.clearcoatRoughnessMap,Pe=ce&&!!R.iridescenceMap,it=ce&&!!R.iridescenceThicknessMap,Xe=ue&&!!R.sheenColorMap,Te=ue&&!!R.sheenRoughnessMap,et=!!R.specularMap,rt=!!R.specularColorMap,bt=!!R.specularIntensityMap,N=Fe&&!!R.transmissionMap,Ae=Fe&&!!R.thicknessMap,ee=!!R.gradientMap,te=!!R.alphaMap,ge=R.alphaTest>0,qe=!!R.alphaHash,dt=!!R.extensions;let Pt=go;R.toneMapped&&(pe===null||pe.isXRRenderTarget===!0)&&(Pt=n.toneMapping);const Nt={shaderID:de,shaderType:R.type,shaderName:R.name,vertexShader:He,fragmentShader:Y,defines:R.defines,customVertexShaderID:ie,customFragmentShaderID:xe,isRawShaderMaterial:R.isRawShaderMaterial===!0,glslVersion:R.glslVersion,precision:x,batching:Ne,batchingColor:Ne&&W._colorsTexture!==null,instancing:Oe,instancingColor:Oe&&W.instanceColor!==null,instancingMorph:Oe&&W.morphTexture!==null,supportsVertexTextures:p,outputColorSpace:pe===null?n.outputColorSpace:pe.isXRRenderTarget===!0?pe.texture.colorSpace:Ro,alphaToCoverage:!!R.alphaToCoverage,map:Ye,matcap:U,envMap:Je,envMapMode:Je&&se.mapping,envMapCubeUVHeight:G,aoMap:nt,lightMap:Tt,bumpMap:Ve,normalMap:ut,displacementMap:p&&tt,emissiveMap:Ke,normalMapObjectSpace:ut&&R.normalMapType===cD,normalMapTangentSpace:ut&&R.normalMapType===lD,metalnessMap:Lt,roughnessMap:I,anisotropy:E,anisotropyMap:Me,clearcoat:j,clearcoatMap:Se,clearcoatNormalMap:Ze,clearcoatRoughnessMap:me,dispersion:ae,iridescence:ce,iridescenceMap:Pe,iridescenceThicknessMap:it,sheen:ue,sheenColorMap:Xe,sheenRoughnessMap:Te,specularMap:et,specularColorMap:rt,specularIntensityMap:bt,transmission:Fe,transmissionMap:N,thicknessMap:Ae,gradientMap:ee,opaque:R.transparent===!1&&R.blending===Eu&&R.alphaToCoverage===!1,alphaMap:te,alphaTest:ge,alphaHash:qe,combine:R.combine,mapUv:Ye&&S(R.map.channel),aoMapUv:nt&&S(R.aoMap.channel),lightMapUv:Tt&&S(R.lightMap.channel),bumpMapUv:Ve&&S(R.bumpMap.channel),normalMapUv:ut&&S(R.normalMap.channel),displacementMapUv:tt&&S(R.displacementMap.channel),emissiveMapUv:Ke&&S(R.emissiveMap.channel),metalnessMapUv:Lt&&S(R.metalnessMap.channel),roughnessMapUv:I&&S(R.roughnessMap.channel),anisotropyMapUv:Me&&S(R.anisotropyMap.channel),clearcoatMapUv:Se&&S(R.clearcoatMap.channel),clearcoatNormalMapUv:Ze&&S(R.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:me&&S(R.clearcoatRoughnessMap.channel),iridescenceMapUv:Pe&&S(R.iridescenceMap.channel),iridescenceThicknessMapUv:it&&S(R.iridescenceThicknessMap.channel),sheenColorMapUv:Xe&&S(R.sheenColorMap.channel),sheenRoughnessMapUv:Te&&S(R.sheenRoughnessMap.channel),specularMapUv:et&&S(R.specularMap.channel),specularColorMapUv:rt&&S(R.specularColorMap.channel),specularIntensityMapUv:bt&&S(R.specularIntensityMap.channel),transmissionMapUv:N&&S(R.transmissionMap.channel),thicknessMapUv:Ae&&S(R.thicknessMap.channel),alphaMapUv:te&&S(R.alphaMap.channel),vertexTangents:!!ne.attributes.tangent&&(ut||E),vertexColors:R.vertexColors,vertexAlphas:R.vertexColors===!0&&!!ne.attributes.color&&ne.attributes.color.itemSize===4,pointsUvs:W.isPoints===!0&&!!ne.attributes.uv&&(Ye||te),fog:!!K,useFog:R.fog===!0,fogExp2:!!K&&K.isFogExp2,flatShading:R.flatShading===!0,sizeAttenuation:R.sizeAttenuation===!0,logarithmicDepthBuffer:m,skinning:W.isSkinnedMesh===!0,morphTargets:ne.morphAttributes.position!==void 0,morphNormals:ne.morphAttributes.normal!==void 0,morphColors:ne.morphAttributes.color!==void 0,morphTargetsCount:X,morphTextureStride:he,numDirLights:T.directional.length,numPointLights:T.point.length,numSpotLights:T.spot.length,numSpotLightMaps:T.spotLightMap.length,numRectAreaLights:T.rectArea.length,numHemiLights:T.hemi.length,numDirLightShadows:T.directionalShadowMap.length,numPointLightShadows:T.pointShadowMap.length,numSpotLightShadows:T.spotShadowMap.length,numSpotLightShadowsWithMaps:T.numSpotLightShadowsWithMaps,numLightProbes:T.numLightProbes,numClippingPlanes:l.numPlanes,numClipIntersection:l.numIntersection,dithering:R.dithering,shadowMapEnabled:n.shadowMap.enabled&&O.length>0,shadowMapType:n.shadowMap.type,toneMapping:Pt,decodeVideoTexture:Ye&&R.map.isVideoTexture===!0&&nn.getTransfer(R.map.colorSpace)===gn,premultipliedAlpha:R.premultipliedAlpha,doubleSided:R.side===sa,flipSided:R.side===Vi,useDepthPacking:R.depthPacking>=0,depthPacking:R.depthPacking||0,index0AttributeName:R.index0AttributeName,extensionClipCullDistance:dt&&R.extensions.clipCullDistance===!0&&i.has("WEBGL_clip_cull_distance"),extensionMultiDraw:dt&&R.extensions.multiDraw===!0&&i.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:i.has("KHR_parallel_shader_compile"),customProgramCacheKey:R.customProgramCacheKey()};return Nt.vertexUv1s=d.has(1),Nt.vertexUv2s=d.has(2),Nt.vertexUv3s=d.has(3),d.clear(),Nt}function g(R){const T=[];if(R.shaderID?T.push(R.shaderID):(T.push(R.customVertexShaderID),T.push(R.customFragmentShaderID)),R.defines!==void 0)for(const O in R.defines)T.push(O),T.push(R.defines[O]);return R.isRawShaderMaterial===!1&&(P(T,R),w(T,R),T.push(n.outputColorSpace)),T.push(R.customProgramCacheKey),T.join()}function P(R,T){R.push(T.precision),R.push(T.outputColorSpace),R.push(T.envMapMode),R.push(T.envMapCubeUVHeight),R.push(T.mapUv),R.push(T.alphaMapUv),R.push(T.lightMapUv),R.push(T.aoMapUv),R.push(T.bumpMapUv),R.push(T.normalMapUv),R.push(T.displacementMapUv),R.push(T.emissiveMapUv),R.push(T.metalnessMapUv),R.push(T.roughnessMapUv),R.push(T.anisotropyMapUv),R.push(T.clearcoatMapUv),R.push(T.clearcoatNormalMapUv),R.push(T.clearcoatRoughnessMapUv),R.push(T.iridescenceMapUv),R.push(T.iridescenceThicknessMapUv),R.push(T.sheenColorMapUv),R.push(T.sheenRoughnessMapUv),R.push(T.specularMapUv),R.push(T.specularColorMapUv),R.push(T.specularIntensityMapUv),R.push(T.transmissionMapUv),R.push(T.thicknessMapUv),R.push(T.combine),R.push(T.fogExp2),R.push(T.sizeAttenuation),R.push(T.morphTargetsCount),R.push(T.morphAttributeCount),R.push(T.numDirLights),R.push(T.numPointLights),R.push(T.numSpotLights),R.push(T.numSpotLightMaps),R.push(T.numHemiLights),R.push(T.numRectAreaLights),R.push(T.numDirLightShadows),R.push(T.numPointLightShadows),R.push(T.numSpotLightShadows),R.push(T.numSpotLightShadowsWithMaps),R.push(T.numLightProbes),R.push(T.shadowMapType),R.push(T.toneMapping),R.push(T.numClippingPlanes),R.push(T.numClipIntersection),R.push(T.depthPacking)}function w(R,T){c.disableAll(),T.supportsVertexTextures&&c.enable(0),T.instancing&&c.enable(1),T.instancingColor&&c.enable(2),T.instancingMorph&&c.enable(3),T.matcap&&c.enable(4),T.envMap&&c.enable(5),T.normalMapObjectSpace&&c.enable(6),T.normalMapTangentSpace&&c.enable(7),T.clearcoat&&c.enable(8),T.iridescence&&c.enable(9),T.alphaTest&&c.enable(10),T.vertexColors&&c.enable(11),T.vertexAlphas&&c.enable(12),T.vertexUv1s&&c.enable(13),T.vertexUv2s&&c.enable(14),T.vertexUv3s&&c.enable(15),T.vertexTangents&&c.enable(16),T.anisotropy&&c.enable(17),T.alphaHash&&c.enable(18),T.batching&&c.enable(19),T.dispersion&&c.enable(20),T.batchingColor&&c.enable(21),R.push(c.mask),c.disableAll(),T.fog&&c.enable(0),T.useFog&&c.enable(1),T.flatShading&&c.enable(2),T.logarithmicDepthBuffer&&c.enable(3),T.skinning&&c.enable(4),T.morphTargets&&c.enable(5),T.morphNormals&&c.enable(6),T.morphColors&&c.enable(7),T.premultipliedAlpha&&c.enable(8),T.shadowMapEnabled&&c.enable(9),T.doubleSided&&c.enable(10),T.flipSided&&c.enable(11),T.useDepthPacking&&c.enable(12),T.dithering&&c.enable(13),T.transmission&&c.enable(14),T.sheen&&c.enable(15),T.opaque&&c.enable(16),T.pointsUvs&&c.enable(17),T.decodeVideoTexture&&c.enable(18),T.alphaToCoverage&&c.enable(19),R.push(c.mask)}function C(R){const T=y[R.type];let O;if(T){const Z=_s[T];O=kD.clone(Z.uniforms)}else O=R.uniforms;return O}function z(R,T){let O;for(let Z=0,W=h.length;Z<W;Z++){const K=h[Z];if(K.cacheKey===T){O=K,++O.usedTimes;break}}return O===void 0&&(O=new Z9(n,T,R,s),h.push(O)),O}function L(R){if(--R.usedTimes===0){const T=h.indexOf(R);h[T]=h[h.length-1],h.pop(),R.destroy()}}function D(R){u.remove(R)}function V(){u.dispose()}return{getParameters:v,getProgramCacheKey:g,getUniforms:C,acquireProgram:z,releaseProgram:L,releaseShaderCache:D,programs:h,dispose:V}}function nO(){let n=new WeakMap;function e(s){let l=n.get(s);return l===void 0&&(l={},n.set(s,l)),l}function t(s){n.delete(s)}function i(s,l,c){n.get(s)[l]=c}function r(){n=new WeakMap}return{get:e,remove:t,update:i,dispose:r}}function iO(n,e){return n.groupOrder!==e.groupOrder?n.groupOrder-e.groupOrder:n.renderOrder!==e.renderOrder?n.renderOrder-e.renderOrder:n.material.id!==e.material.id?n.material.id-e.material.id:n.z!==e.z?n.z-e.z:n.id-e.id}function c3(n,e){return n.groupOrder!==e.groupOrder?n.groupOrder-e.groupOrder:n.renderOrder!==e.renderOrder?n.renderOrder-e.renderOrder:n.z!==e.z?e.z-n.z:n.id-e.id}function u3(){const n=[];let e=0;const t=[],i=[],r=[];function s(){e=0,t.length=0,i.length=0,r.length=0}function l(m,p,x,y,S,v){let g=n[e];return g===void 0?(g={id:m.id,object:m,geometry:p,material:x,groupOrder:y,renderOrder:m.renderOrder,z:S,group:v},n[e]=g):(g.id=m.id,g.object=m,g.geometry=p,g.material=x,g.groupOrder=y,g.renderOrder=m.renderOrder,g.z=S,g.group=v),e++,g}function c(m,p,x,y,S,v){const g=l(m,p,x,y,S,v);x.transmission>0?i.push(g):x.transparent===!0?r.push(g):t.push(g)}function u(m,p,x,y,S,v){const g=l(m,p,x,y,S,v);x.transmission>0?i.unshift(g):x.transparent===!0?r.unshift(g):t.unshift(g)}function d(m,p){t.length>1&&t.sort(m||iO),i.length>1&&i.sort(p||c3),r.length>1&&r.sort(p||c3)}function h(){for(let m=e,p=n.length;m<p;m++){const x=n[m];if(x.id===null)break;x.id=null,x.object=null,x.geometry=null,x.material=null,x.group=null}}return{opaque:t,transmissive:i,transparent:r,init:s,push:c,unshift:u,finish:h,sort:d}}function rO(){let n=new WeakMap;function e(i,r){const s=n.get(i);let l;return s===void 0?(l=new u3,n.set(i,[l])):r>=s.length?(l=new u3,s.push(l)):l=s[r],l}function t(){n=new WeakMap}return{get:e,dispose:t}}function sO(){const n={};return{get:function(e){if(n[e.id]!==void 0)return n[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new Re,color:new an};break;case"SpotLight":t={position:new Re,direction:new Re,color:new an,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new Re,color:new an,distance:0,decay:0};break;case"HemisphereLight":t={direction:new Re,skyColor:new an,groundColor:new an};break;case"RectAreaLight":t={color:new an,position:new Re,halfWidth:new Re,halfHeight:new Re};break}return n[e.id]=t,t}}}function aO(){const n={};return{get:function(e){if(n[e.id]!==void 0)return n[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new sn};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new sn};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new sn,shadowCameraNear:1,shadowCameraFar:1e3};break}return n[e.id]=t,t}}}let oO=0;function lO(n,e){return(e.castShadow?2:0)-(n.castShadow?2:0)+(e.map?1:0)-(n.map?1:0)}function cO(n){const e=new sO,t=aO(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let d=0;d<9;d++)i.probe.push(new Re);const r=new Re,s=new xi,l=new xi;function c(d){let h=0,m=0,p=0;for(let R=0;R<9;R++)i.probe[R].set(0,0,0);let x=0,y=0,S=0,v=0,g=0,P=0,w=0,C=0,z=0,L=0,D=0;d.sort(lO);for(let R=0,T=d.length;R<T;R++){const O=d[R],Z=O.color,W=O.intensity,K=O.distance,ne=O.shadow&&O.shadow.map?O.shadow.map.texture:null;if(O.isAmbientLight)h+=Z.r*W,m+=Z.g*W,p+=Z.b*W;else if(O.isLightProbe){for(let Q=0;Q<9;Q++)i.probe[Q].addScaledVector(O.sh.coefficients[Q],W);D++}else if(O.isDirectionalLight){const Q=e.get(O);if(Q.color.copy(O.color).multiplyScalar(O.intensity),O.castShadow){const se=O.shadow,G=t.get(O);G.shadowBias=se.bias,G.shadowNormalBias=se.normalBias,G.shadowRadius=se.radius,G.shadowMapSize=se.mapSize,i.directionalShadow[x]=G,i.directionalShadowMap[x]=ne,i.directionalShadowMatrix[x]=O.shadow.matrix,P++}i.directional[x]=Q,x++}else if(O.isSpotLight){const Q=e.get(O);Q.position.setFromMatrixPosition(O.matrixWorld),Q.color.copy(Z).multiplyScalar(W),Q.distance=K,Q.coneCos=Math.cos(O.angle),Q.penumbraCos=Math.cos(O.angle*(1-O.penumbra)),Q.decay=O.decay,i.spot[S]=Q;const se=O.shadow;if(O.map&&(i.spotLightMap[z]=O.map,z++,se.updateMatrices(O),O.castShadow&&L++),i.spotLightMatrix[S]=se.matrix,O.castShadow){const G=t.get(O);G.shadowBias=se.bias,G.shadowNormalBias=se.normalBias,G.shadowRadius=se.radius,G.shadowMapSize=se.mapSize,i.spotShadow[S]=G,i.spotShadowMap[S]=ne,C++}S++}else if(O.isRectAreaLight){const Q=e.get(O);Q.color.copy(Z).multiplyScalar(W),Q.halfWidth.set(O.width*.5,0,0),Q.halfHeight.set(0,O.height*.5,0),i.rectArea[v]=Q,v++}else if(O.isPointLight){const Q=e.get(O);if(Q.color.copy(O.color).multiplyScalar(O.intensity),Q.distance=O.distance,Q.decay=O.decay,O.castShadow){const se=O.shadow,G=t.get(O);G.shadowBias=se.bias,G.shadowNormalBias=se.normalBias,G.shadowRadius=se.radius,G.shadowMapSize=se.mapSize,G.shadowCameraNear=se.camera.near,G.shadowCameraFar=se.camera.far,i.pointShadow[y]=G,i.pointShadowMap[y]=ne,i.pointShadowMatrix[y]=O.shadow.matrix,w++}i.point[y]=Q,y++}else if(O.isHemisphereLight){const Q=e.get(O);Q.skyColor.copy(O.color).multiplyScalar(W),Q.groundColor.copy(O.groundColor).multiplyScalar(W),i.hemi[g]=Q,g++}}v>0&&(n.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=st.LTC_FLOAT_1,i.rectAreaLTC2=st.LTC_FLOAT_2):(i.rectAreaLTC1=st.LTC_HALF_1,i.rectAreaLTC2=st.LTC_HALF_2)),i.ambient[0]=h,i.ambient[1]=m,i.ambient[2]=p;const V=i.hash;(V.directionalLength!==x||V.pointLength!==y||V.spotLength!==S||V.rectAreaLength!==v||V.hemiLength!==g||V.numDirectionalShadows!==P||V.numPointShadows!==w||V.numSpotShadows!==C||V.numSpotMaps!==z||V.numLightProbes!==D)&&(i.directional.length=x,i.spot.length=S,i.rectArea.length=v,i.point.length=y,i.hemi.length=g,i.directionalShadow.length=P,i.directionalShadowMap.length=P,i.pointShadow.length=w,i.pointShadowMap.length=w,i.spotShadow.length=C,i.spotShadowMap.length=C,i.directionalShadowMatrix.length=P,i.pointShadowMatrix.length=w,i.spotLightMatrix.length=C+z-L,i.spotLightMap.length=z,i.numSpotLightShadowsWithMaps=L,i.numLightProbes=D,V.directionalLength=x,V.pointLength=y,V.spotLength=S,V.rectAreaLength=v,V.hemiLength=g,V.numDirectionalShadows=P,V.numPointShadows=w,V.numSpotShadows=C,V.numSpotMaps=z,V.numLightProbes=D,i.version=oO++)}function u(d,h){let m=0,p=0,x=0,y=0,S=0;const v=h.matrixWorldInverse;for(let g=0,P=d.length;g<P;g++){const w=d[g];if(w.isDirectionalLight){const C=i.directional[m];C.direction.setFromMatrixPosition(w.matrixWorld),r.setFromMatrixPosition(w.target.matrixWorld),C.direction.sub(r),C.direction.transformDirection(v),m++}else if(w.isSpotLight){const C=i.spot[x];C.position.setFromMatrixPosition(w.matrixWorld),C.position.applyMatrix4(v),C.direction.setFromMatrixPosition(w.matrixWorld),r.setFromMatrixPosition(w.target.matrixWorld),C.direction.sub(r),C.direction.transformDirection(v),x++}else if(w.isRectAreaLight){const C=i.rectArea[y];C.position.setFromMatrixPosition(w.matrixWorld),C.position.applyMatrix4(v),l.identity(),s.copy(w.matrixWorld),s.premultiply(v),l.extractRotation(s),C.halfWidth.set(w.width*.5,0,0),C.halfHeight.set(0,w.height*.5,0),C.halfWidth.applyMatrix4(l),C.halfHeight.applyMatrix4(l),y++}else if(w.isPointLight){const C=i.point[p];C.position.setFromMatrixPosition(w.matrixWorld),C.position.applyMatrix4(v),p++}else if(w.isHemisphereLight){const C=i.hemi[S];C.direction.setFromMatrixPosition(w.matrixWorld),C.direction.transformDirection(v),S++}}}return{setup:c,setupView:u,state:i}}function f3(n){const e=new cO(n),t=[],i=[];function r(h){d.camera=h,t.length=0,i.length=0}function s(h){t.push(h)}function l(h){i.push(h)}function c(){e.setup(t)}function u(h){e.setupView(t,h)}const d={lightsArray:t,shadowsArray:i,camera:null,lights:e,transmissionRenderTarget:{}};return{init:r,state:d,setupLights:c,setupLightsView:u,pushLight:s,pushShadow:l}}function uO(n){let e=new WeakMap;function t(r,s=0){const l=e.get(r);let c;return l===void 0?(c=new f3(n),e.set(r,[c])):s>=l.length?(c=new f3(n),l.push(c)):c=l[s],c}function i(){e=new WeakMap}return{get:t,dispose:i}}let fO=class extends g0{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=aD,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}},dO=class extends g0{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}};const hO=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,pO=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function mO(n,e,t){let i=new Zb;const r=new sn,s=new sn,l=new Ai,c=new fO({depthPacking:oD}),u=new dO,d={},h=t.maxTextureSize,m={[da]:Vi,[Vi]:da,[sa]:sa},p=new Eo({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new sn},radius:{value:4}},vertexShader:hO,fragmentShader:pO}),x=p.clone();x.defines.HORIZONTAL_PASS=1;const y=new af;y.setAttribute("position",new Rs(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const S=new Ts(y,p),v=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Eb;let g=this.type;this.render=function(L,D,V){if(v.enabled===!1||v.autoUpdate===!1&&v.needsUpdate===!1||L.length===0)return;const R=n.getRenderTarget(),T=n.getActiveCubeFace(),O=n.getActiveMipmapLevel(),Z=n.state;Z.setBlending(mo),Z.buffers.color.setClear(1,1,1,1),Z.buffers.depth.setTest(!0),Z.setScissorTest(!1);const W=g!==ea&&this.type===ea,K=g===ea&&this.type!==ea;for(let ne=0,Q=L.length;ne<Q;ne++){const se=L[ne],G=se.shadow;if(G===void 0){console.warn("THREE.WebGLShadowMap:",se,"has no shadow.");continue}if(G.autoUpdate===!1&&G.needsUpdate===!1)continue;r.copy(G.mapSize);const de=G.getFrameExtents();if(r.multiply(de),s.copy(G.mapSize),(r.x>h||r.y>h)&&(r.x>h&&(s.x=Math.floor(h/de.x),r.x=s.x*de.x,G.mapSize.x=s.x),r.y>h&&(s.y=Math.floor(h/de.y),r.y=s.y*de.y,G.mapSize.y=s.y)),G.map===null||W===!0||K===!0){const X=this.type!==ea?{minFilter:br,magFilter:br}:{};G.map!==null&&G.map.dispose(),G.map=new Ol(r.x,r.y,X),G.map.texture.name=se.name+".shadowMap",G.camera.updateProjectionMatrix()}n.setRenderTarget(G.map),n.clear();const le=G.getViewportCount();for(let X=0;X<le;X++){const he=G.getViewport(X);l.set(s.x*he.x,s.y*he.y,s.x*he.z,s.y*he.w),Z.viewport(l),G.updateMatrices(se,X),i=G.getFrustum(),C(D,V,G.camera,se,this.type)}G.isPointLightShadow!==!0&&this.type===ea&&P(G,V),G.needsUpdate=!1}g=this.type,v.needsUpdate=!1,n.setRenderTarget(R,T,O)};function P(L,D){const V=e.update(S);p.defines.VSM_SAMPLES!==L.blurSamples&&(p.defines.VSM_SAMPLES=L.blurSamples,x.defines.VSM_SAMPLES=L.blurSamples,p.needsUpdate=!0,x.needsUpdate=!0),L.mapPass===null&&(L.mapPass=new Ol(r.x,r.y)),p.uniforms.shadow_pass.value=L.map.texture,p.uniforms.resolution.value=L.mapSize,p.uniforms.radius.value=L.radius,n.setRenderTarget(L.mapPass),n.clear(),n.renderBufferDirect(D,null,V,p,S,null),x.uniforms.shadow_pass.value=L.mapPass.texture,x.uniforms.resolution.value=L.mapSize,x.uniforms.radius.value=L.radius,n.setRenderTarget(L.map),n.clear(),n.renderBufferDirect(D,null,V,x,S,null)}function w(L,D,V,R){let T=null;const O=V.isPointLight===!0?L.customDistanceMaterial:L.customDepthMaterial;if(O!==void 0)T=O;else if(T=V.isPointLight===!0?u:c,n.localClippingEnabled&&D.clipShadows===!0&&Array.isArray(D.clippingPlanes)&&D.clippingPlanes.length!==0||D.displacementMap&&D.displacementScale!==0||D.alphaMap&&D.alphaTest>0||D.map&&D.alphaTest>0){const Z=T.uuid,W=D.uuid;let K=d[Z];K===void 0&&(K={},d[Z]=K);let ne=K[W];ne===void 0&&(ne=T.clone(),K[W]=ne,D.addEventListener("dispose",z)),T=ne}if(T.visible=D.visible,T.wireframe=D.wireframe,R===ea?T.side=D.shadowSide!==null?D.shadowSide:D.side:T.side=D.shadowSide!==null?D.shadowSide:m[D.side],T.alphaMap=D.alphaMap,T.alphaTest=D.alphaTest,T.map=D.map,T.clipShadows=D.clipShadows,T.clippingPlanes=D.clippingPlanes,T.clipIntersection=D.clipIntersection,T.displacementMap=D.displacementMap,T.displacementScale=D.displacementScale,T.displacementBias=D.displacementBias,T.wireframeLinewidth=D.wireframeLinewidth,T.linewidth=D.linewidth,V.isPointLight===!0&&T.isMeshDistanceMaterial===!0){const Z=n.properties.get(T);Z.light=V}return T}function C(L,D,V,R,T){if(L.visible===!1)return;if(L.layers.test(D.layers)&&(L.isMesh||L.isLine||L.isPoints)&&(L.castShadow||L.receiveShadow&&T===ea)&&(!L.frustumCulled||i.intersectsObject(L))){L.modelViewMatrix.multiplyMatrices(V.matrixWorldInverse,L.matrixWorld);const W=e.update(L),K=L.material;if(Array.isArray(K)){const ne=W.groups;for(let Q=0,se=ne.length;Q<se;Q++){const G=ne[Q],de=K[G.materialIndex];if(de&&de.visible){const le=w(L,de,R,T);L.onBeforeShadow(n,L,D,V,W,le,G),n.renderBufferDirect(V,null,W,le,L,G),L.onAfterShadow(n,L,D,V,W,le,G)}}}else if(K.visible){const ne=w(L,K,R,T);L.onBeforeShadow(n,L,D,V,W,ne,null),n.renderBufferDirect(V,null,W,ne,L,null),L.onAfterShadow(n,L,D,V,W,ne,null)}}const Z=L.children;for(let W=0,K=Z.length;W<K;W++)C(Z[W],D,V,R,T)}function z(L){L.target.removeEventListener("dispose",z);for(const V in d){const R=d[V],T=L.target.uuid;T in R&&(R[T].dispose(),delete R[T])}}}function gO(n){function e(){let N=!1;const Ae=new Ai;let ee=null;const te=new Ai(0,0,0,0);return{setMask:function(ge){ee!==ge&&!N&&(n.colorMask(ge,ge,ge,ge),ee=ge)},setLocked:function(ge){N=ge},setClear:function(ge,qe,dt,Pt,Nt){Nt===!0&&(ge*=Pt,qe*=Pt,dt*=Pt),Ae.set(ge,qe,dt,Pt),te.equals(Ae)===!1&&(n.clearColor(ge,qe,dt,Pt),te.copy(Ae))},reset:function(){N=!1,ee=null,te.set(-1,0,0,0)}}}function t(){let N=!1,Ae=null,ee=null,te=null;return{setTest:function(ge){ge?xe(n.DEPTH_TEST):pe(n.DEPTH_TEST)},setMask:function(ge){Ae!==ge&&!N&&(n.depthMask(ge),Ae=ge)},setFunc:function(ge){if(ee!==ge){switch(ge){case DI:n.depthFunc(n.NEVER);break;case NI:n.depthFunc(n.ALWAYS);break;case UI:n.depthFunc(n.LESS);break;case Dm:n.depthFunc(n.LEQUAL);break;case OI:n.depthFunc(n.EQUAL);break;case FI:n.depthFunc(n.GEQUAL);break;case kI:n.depthFunc(n.GREATER);break;case zI:n.depthFunc(n.NOTEQUAL);break;default:n.depthFunc(n.LEQUAL)}ee=ge}},setLocked:function(ge){N=ge},setClear:function(ge){te!==ge&&(n.clearDepth(ge),te=ge)},reset:function(){N=!1,Ae=null,ee=null,te=null}}}function i(){let N=!1,Ae=null,ee=null,te=null,ge=null,qe=null,dt=null,Pt=null,Nt=null;return{setTest:function(xt){N||(xt?xe(n.STENCIL_TEST):pe(n.STENCIL_TEST))},setMask:function(xt){Ae!==xt&&!N&&(n.stencilMask(xt),Ae=xt)},setFunc:function(xt,dn,yn){(ee!==xt||te!==dn||ge!==yn)&&(n.stencilFunc(xt,dn,yn),ee=xt,te=dn,ge=yn)},setOp:function(xt,dn,yn){(qe!==xt||dt!==dn||Pt!==yn)&&(n.stencilOp(xt,dn,yn),qe=xt,dt=dn,Pt=yn)},setLocked:function(xt){N=xt},setClear:function(xt){Nt!==xt&&(n.clearStencil(xt),Nt=xt)},reset:function(){N=!1,Ae=null,ee=null,te=null,ge=null,qe=null,dt=null,Pt=null,Nt=null}}}const r=new e,s=new t,l=new i,c=new WeakMap,u=new WeakMap;let d={},h={},m=new WeakMap,p=[],x=null,y=!1,S=null,v=null,g=null,P=null,w=null,C=null,z=null,L=new an(0,0,0),D=0,V=!1,R=null,T=null,O=null,Z=null,W=null;const K=n.getParameter(n.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let ne=!1,Q=0;const se=n.getParameter(n.VERSION);se.indexOf("WebGL")!==-1?(Q=parseFloat(/^WebGL (\d)/.exec(se)[1]),ne=Q>=1):se.indexOf("OpenGL ES")!==-1&&(Q=parseFloat(/^OpenGL ES (\d)/.exec(se)[1]),ne=Q>=2);let G=null,de={};const le=n.getParameter(n.SCISSOR_BOX),X=n.getParameter(n.VIEWPORT),he=new Ai().fromArray(le),He=new Ai().fromArray(X);function Y(N,Ae,ee,te){const ge=new Uint8Array(4),qe=n.createTexture();n.bindTexture(N,qe),n.texParameteri(N,n.TEXTURE_MIN_FILTER,n.NEAREST),n.texParameteri(N,n.TEXTURE_MAG_FILTER,n.NEAREST);for(let dt=0;dt<ee;dt++)N===n.TEXTURE_3D||N===n.TEXTURE_2D_ARRAY?n.texImage3D(Ae,0,n.RGBA,1,1,te,0,n.RGBA,n.UNSIGNED_BYTE,ge):n.texImage2D(Ae+dt,0,n.RGBA,1,1,0,n.RGBA,n.UNSIGNED_BYTE,ge);return qe}const ie={};ie[n.TEXTURE_2D]=Y(n.TEXTURE_2D,n.TEXTURE_2D,1),ie[n.TEXTURE_CUBE_MAP]=Y(n.TEXTURE_CUBE_MAP,n.TEXTURE_CUBE_MAP_POSITIVE_X,6),ie[n.TEXTURE_2D_ARRAY]=Y(n.TEXTURE_2D_ARRAY,n.TEXTURE_2D_ARRAY,1,1),ie[n.TEXTURE_3D]=Y(n.TEXTURE_3D,n.TEXTURE_3D,1,1),r.setClear(0,0,0,1),s.setClear(1),l.setClear(0),xe(n.DEPTH_TEST),s.setFunc(Dm),Ve(!1),ut(XM),xe(n.CULL_FACE),nt(mo);function xe(N){d[N]!==!0&&(n.enable(N),d[N]=!0)}function pe(N){d[N]!==!1&&(n.disable(N),d[N]=!1)}function Oe(N,Ae){return h[N]!==Ae?(n.bindFramebuffer(N,Ae),h[N]=Ae,N===n.DRAW_FRAMEBUFFER&&(h[n.FRAMEBUFFER]=Ae),N===n.FRAMEBUFFER&&(h[n.DRAW_FRAMEBUFFER]=Ae),!0):!1}function Ne(N,Ae){let ee=p,te=!1;if(N){ee=m.get(Ae),ee===void 0&&(ee=[],m.set(Ae,ee));const ge=N.textures;if(ee.length!==ge.length||ee[0]!==n.COLOR_ATTACHMENT0){for(let qe=0,dt=ge.length;qe<dt;qe++)ee[qe]=n.COLOR_ATTACHMENT0+qe;ee.length=ge.length,te=!0}}else ee[0]!==n.BACK&&(ee[0]=n.BACK,te=!0);te&&n.drawBuffers(ee)}function Ye(N){return x!==N?(n.useProgram(N),x=N,!0):!1}const U={[gl]:n.FUNC_ADD,[gI]:n.FUNC_SUBTRACT,[vI]:n.FUNC_REVERSE_SUBTRACT};U[_I]=n.MIN,U[xI]=n.MAX;const Je={[yI]:n.ZERO,[SI]:n.ONE,[MI]:n.SRC_COLOR,[N_]:n.SRC_ALPHA,[RI]:n.SRC_ALPHA_SATURATE,[AI]:n.DST_COLOR,[wI]:n.DST_ALPHA,[EI]:n.ONE_MINUS_SRC_COLOR,[U_]:n.ONE_MINUS_SRC_ALPHA,[bI]:n.ONE_MINUS_DST_COLOR,[TI]:n.ONE_MINUS_DST_ALPHA,[CI]:n.CONSTANT_COLOR,[PI]:n.ONE_MINUS_CONSTANT_COLOR,[LI]:n.CONSTANT_ALPHA,[II]:n.ONE_MINUS_CONSTANT_ALPHA};function nt(N,Ae,ee,te,ge,qe,dt,Pt,Nt,xt){if(N===mo){y===!0&&(pe(n.BLEND),y=!1);return}if(y===!1&&(xe(n.BLEND),y=!0),N!==mI){if(N!==S||xt!==V){if((v!==gl||w!==gl)&&(n.blendEquation(n.FUNC_ADD),v=gl,w=gl),xt)switch(N){case Eu:n.blendFuncSeparate(n.ONE,n.ONE_MINUS_SRC_ALPHA,n.ONE,n.ONE_MINUS_SRC_ALPHA);break;case qM:n.blendFunc(n.ONE,n.ONE);break;case jM:n.blendFuncSeparate(n.ZERO,n.ONE_MINUS_SRC_COLOR,n.ZERO,n.ONE);break;case YM:n.blendFuncSeparate(n.ZERO,n.SRC_COLOR,n.ZERO,n.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",N);break}else switch(N){case Eu:n.blendFuncSeparate(n.SRC_ALPHA,n.ONE_MINUS_SRC_ALPHA,n.ONE,n.ONE_MINUS_SRC_ALPHA);break;case qM:n.blendFunc(n.SRC_ALPHA,n.ONE);break;case jM:n.blendFuncSeparate(n.ZERO,n.ONE_MINUS_SRC_COLOR,n.ZERO,n.ONE);break;case YM:n.blendFunc(n.ZERO,n.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",N);break}g=null,P=null,C=null,z=null,L.set(0,0,0),D=0,S=N,V=xt}return}ge=ge||Ae,qe=qe||ee,dt=dt||te,(Ae!==v||ge!==w)&&(n.blendEquationSeparate(U[Ae],U[ge]),v=Ae,w=ge),(ee!==g||te!==P||qe!==C||dt!==z)&&(n.blendFuncSeparate(Je[ee],Je[te],Je[qe],Je[dt]),g=ee,P=te,C=qe,z=dt),(Pt.equals(L)===!1||Nt!==D)&&(n.blendColor(Pt.r,Pt.g,Pt.b,Nt),L.copy(Pt),D=Nt),S=N,V=!1}function Tt(N,Ae){N.side===sa?pe(n.CULL_FACE):xe(n.CULL_FACE);let ee=N.side===Vi;Ae&&(ee=!ee),Ve(ee),N.blending===Eu&&N.transparent===!1?nt(mo):nt(N.blending,N.blendEquation,N.blendSrc,N.blendDst,N.blendEquationAlpha,N.blendSrcAlpha,N.blendDstAlpha,N.blendColor,N.blendAlpha,N.premultipliedAlpha),s.setFunc(N.depthFunc),s.setTest(N.depthTest),s.setMask(N.depthWrite),r.setMask(N.colorWrite);const te=N.stencilWrite;l.setTest(te),te&&(l.setMask(N.stencilWriteMask),l.setFunc(N.stencilFunc,N.stencilRef,N.stencilFuncMask),l.setOp(N.stencilFail,N.stencilZFail,N.stencilZPass)),Ke(N.polygonOffset,N.polygonOffsetFactor,N.polygonOffsetUnits),N.alphaToCoverage===!0?xe(n.SAMPLE_ALPHA_TO_COVERAGE):pe(n.SAMPLE_ALPHA_TO_COVERAGE)}function Ve(N){R!==N&&(N?n.frontFace(n.CW):n.frontFace(n.CCW),R=N)}function ut(N){N!==dI?(xe(n.CULL_FACE),N!==T&&(N===XM?n.cullFace(n.BACK):N===hI?n.cullFace(n.FRONT):n.cullFace(n.FRONT_AND_BACK))):pe(n.CULL_FACE),T=N}function tt(N){N!==O&&(ne&&n.lineWidth(N),O=N)}function Ke(N,Ae,ee){N?(xe(n.POLYGON_OFFSET_FILL),(Z!==Ae||W!==ee)&&(n.polygonOffset(Ae,ee),Z=Ae,W=ee)):pe(n.POLYGON_OFFSET_FILL)}function Lt(N){N?xe(n.SCISSOR_TEST):pe(n.SCISSOR_TEST)}function I(N){N===void 0&&(N=n.TEXTURE0+K-1),G!==N&&(n.activeTexture(N),G=N)}function E(N,Ae,ee){ee===void 0&&(G===null?ee=n.TEXTURE0+K-1:ee=G);let te=de[ee];te===void 0&&(te={type:void 0,texture:void 0},de[ee]=te),(te.type!==N||te.texture!==Ae)&&(G!==ee&&(n.activeTexture(ee),G=ee),n.bindTexture(N,Ae||ie[N]),te.type=N,te.texture=Ae)}function j(){const N=de[G];N!==void 0&&N.type!==void 0&&(n.bindTexture(N.type,null),N.type=void 0,N.texture=void 0)}function ae(){try{n.compressedTexImage2D.apply(n,arguments)}catch(N){console.error("THREE.WebGLState:",N)}}function ce(){try{n.compressedTexImage3D.apply(n,arguments)}catch(N){console.error("THREE.WebGLState:",N)}}function ue(){try{n.texSubImage2D.apply(n,arguments)}catch(N){console.error("THREE.WebGLState:",N)}}function Fe(){try{n.texSubImage3D.apply(n,arguments)}catch(N){console.error("THREE.WebGLState:",N)}}function Me(){try{n.compressedTexSubImage2D.apply(n,arguments)}catch(N){console.error("THREE.WebGLState:",N)}}function Se(){try{n.compressedTexSubImage3D.apply(n,arguments)}catch(N){console.error("THREE.WebGLState:",N)}}function Ze(){try{n.texStorage2D.apply(n,arguments)}catch(N){console.error("THREE.WebGLState:",N)}}function me(){try{n.texStorage3D.apply(n,arguments)}catch(N){console.error("THREE.WebGLState:",N)}}function Pe(){try{n.texImage2D.apply(n,arguments)}catch(N){console.error("THREE.WebGLState:",N)}}function it(){try{n.texImage3D.apply(n,arguments)}catch(N){console.error("THREE.WebGLState:",N)}}function Xe(N){he.equals(N)===!1&&(n.scissor(N.x,N.y,N.z,N.w),he.copy(N))}function Te(N){He.equals(N)===!1&&(n.viewport(N.x,N.y,N.z,N.w),He.copy(N))}function et(N,Ae){let ee=u.get(Ae);ee===void 0&&(ee=new WeakMap,u.set(Ae,ee));let te=ee.get(N);te===void 0&&(te=n.getUniformBlockIndex(Ae,N.name),ee.set(N,te))}function rt(N,Ae){const te=u.get(Ae).get(N);c.get(Ae)!==te&&(n.uniformBlockBinding(Ae,te,N.__bindingPointIndex),c.set(Ae,te))}function bt(){n.disable(n.BLEND),n.disable(n.CULL_FACE),n.disable(n.DEPTH_TEST),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SCISSOR_TEST),n.disable(n.STENCIL_TEST),n.disable(n.SAMPLE_ALPHA_TO_COVERAGE),n.blendEquation(n.FUNC_ADD),n.blendFunc(n.ONE,n.ZERO),n.blendFuncSeparate(n.ONE,n.ZERO,n.ONE,n.ZERO),n.blendColor(0,0,0,0),n.colorMask(!0,!0,!0,!0),n.clearColor(0,0,0,0),n.depthMask(!0),n.depthFunc(n.LESS),n.clearDepth(1),n.stencilMask(4294967295),n.stencilFunc(n.ALWAYS,0,4294967295),n.stencilOp(n.KEEP,n.KEEP,n.KEEP),n.clearStencil(0),n.cullFace(n.BACK),n.frontFace(n.CCW),n.polygonOffset(0,0),n.activeTexture(n.TEXTURE0),n.bindFramebuffer(n.FRAMEBUFFER,null),n.bindFramebuffer(n.DRAW_FRAMEBUFFER,null),n.bindFramebuffer(n.READ_FRAMEBUFFER,null),n.useProgram(null),n.lineWidth(1),n.scissor(0,0,n.canvas.width,n.canvas.height),n.viewport(0,0,n.canvas.width,n.canvas.height),d={},G=null,de={},h={},m=new WeakMap,p=[],x=null,y=!1,S=null,v=null,g=null,P=null,w=null,C=null,z=null,L=new an(0,0,0),D=0,V=!1,R=null,T=null,O=null,Z=null,W=null,he.set(0,0,n.canvas.width,n.canvas.height),He.set(0,0,n.canvas.width,n.canvas.height),r.reset(),s.reset(),l.reset()}return{buffers:{color:r,depth:s,stencil:l},enable:xe,disable:pe,bindFramebuffer:Oe,drawBuffers:Ne,useProgram:Ye,setBlending:nt,setMaterial:Tt,setFlipSided:Ve,setCullFace:ut,setLineWidth:tt,setPolygonOffset:Ke,setScissorTest:Lt,activeTexture:I,bindTexture:E,unbindTexture:j,compressedTexImage2D:ae,compressedTexImage3D:ce,texImage2D:Pe,texImage3D:it,updateUBOMapping:et,uniformBlockBinding:rt,texStorage2D:Ze,texStorage3D:me,texSubImage2D:ue,texSubImage3D:Fe,compressedTexSubImage2D:Me,compressedTexSubImage3D:Se,scissor:Xe,viewport:Te,reset:bt}}function vO(n,e,t,i,r,s,l){const c=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,u=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),d=new sn,h=new WeakMap;let m;const p=new WeakMap;let x=!1;try{x=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function y(I,E){return x?new OffscreenCanvas(I,E):zm("canvas")}function S(I,E,j){let ae=1;const ce=Lt(I);if((ce.width>j||ce.height>j)&&(ae=j/Math.max(ce.width,ce.height)),ae<1)if(typeof HTMLImageElement<"u"&&I instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&I instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&I instanceof ImageBitmap||typeof VideoFrame<"u"&&I instanceof VideoFrame){const ue=Math.floor(ae*ce.width),Fe=Math.floor(ae*ce.height);m===void 0&&(m=y(ue,Fe));const Me=E?y(ue,Fe):m;return Me.width=ue,Me.height=Fe,Me.getContext("2d").drawImage(I,0,0,ue,Fe),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+ce.width+"x"+ce.height+") to ("+ue+"x"+Fe+")."),Me}else return"data"in I&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+ce.width+"x"+ce.height+")."),I;return I}function v(I){return I.generateMipmaps&&I.minFilter!==br&&I.minFilter!==Qr}function g(I){n.generateMipmap(I)}function P(I,E,j,ae,ce=!1){if(I!==null){if(n[I]!==void 0)return n[I];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+I+"'")}let ue=E;if(E===n.RED&&(j===n.FLOAT&&(ue=n.R32F),j===n.HALF_FLOAT&&(ue=n.R16F),j===n.UNSIGNED_BYTE&&(ue=n.R8)),E===n.RED_INTEGER&&(j===n.UNSIGNED_BYTE&&(ue=n.R8UI),j===n.UNSIGNED_SHORT&&(ue=n.R16UI),j===n.UNSIGNED_INT&&(ue=n.R32UI),j===n.BYTE&&(ue=n.R8I),j===n.SHORT&&(ue=n.R16I),j===n.INT&&(ue=n.R32I)),E===n.RG&&(j===n.FLOAT&&(ue=n.RG32F),j===n.HALF_FLOAT&&(ue=n.RG16F),j===n.UNSIGNED_BYTE&&(ue=n.RG8)),E===n.RG_INTEGER&&(j===n.UNSIGNED_BYTE&&(ue=n.RG8UI),j===n.UNSIGNED_SHORT&&(ue=n.RG16UI),j===n.UNSIGNED_INT&&(ue=n.RG32UI),j===n.BYTE&&(ue=n.RG8I),j===n.SHORT&&(ue=n.RG16I),j===n.INT&&(ue=n.RG32I)),E===n.RGB&&j===n.UNSIGNED_INT_5_9_9_9_REV&&(ue=n.RGB9_E5),E===n.RGBA){const Fe=ce?Um:nn.getTransfer(ae);j===n.FLOAT&&(ue=n.RGBA32F),j===n.HALF_FLOAT&&(ue=n.RGBA16F),j===n.UNSIGNED_BYTE&&(ue=Fe===gn?n.SRGB8_ALPHA8:n.RGBA8),j===n.UNSIGNED_SHORT_4_4_4_4&&(ue=n.RGBA4),j===n.UNSIGNED_SHORT_5_5_5_1&&(ue=n.RGB5_A1)}return(ue===n.R16F||ue===n.R32F||ue===n.RG16F||ue===n.RG32F||ue===n.RGBA16F||ue===n.RGBA32F)&&e.get("EXT_color_buffer_float"),ue}function w(I,E){let j;return I?E===null||E===Wu||E===$u?j=n.DEPTH24_STENCIL8:E===uo?j=n.DEPTH32F_STENCIL8:E===Nm&&(j=n.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):E===null||E===Wu||E===$u?j=n.DEPTH_COMPONENT24:E===uo?j=n.DEPTH_COMPONENT32F:E===Nm&&(j=n.DEPTH_COMPONENT16),j}function C(I,E){return v(I)===!0||I.isFramebufferTexture&&I.minFilter!==br&&I.minFilter!==Qr?Math.log2(Math.max(E.width,E.height))+1:I.mipmaps!==void 0&&I.mipmaps.length>0?I.mipmaps.length:I.isCompressedTexture&&Array.isArray(I.image)?E.mipmaps.length:1}function z(I){const E=I.target;E.removeEventListener("dispose",z),D(E),E.isVideoTexture&&h.delete(E)}function L(I){const E=I.target;E.removeEventListener("dispose",L),R(E)}function D(I){const E=i.get(I);if(E.__webglInit===void 0)return;const j=I.source,ae=p.get(j);if(ae){const ce=ae[E.__cacheKey];ce.usedTimes--,ce.usedTimes===0&&V(I),Object.keys(ae).length===0&&p.delete(j)}i.remove(I)}function V(I){const E=i.get(I);n.deleteTexture(E.__webglTexture);const j=I.source,ae=p.get(j);delete ae[E.__cacheKey],l.memory.textures--}function R(I){const E=i.get(I);if(I.depthTexture&&I.depthTexture.dispose(),I.isWebGLCubeRenderTarget)for(let ae=0;ae<6;ae++){if(Array.isArray(E.__webglFramebuffer[ae]))for(let ce=0;ce<E.__webglFramebuffer[ae].length;ce++)n.deleteFramebuffer(E.__webglFramebuffer[ae][ce]);else n.deleteFramebuffer(E.__webglFramebuffer[ae]);E.__webglDepthbuffer&&n.deleteRenderbuffer(E.__webglDepthbuffer[ae])}else{if(Array.isArray(E.__webglFramebuffer))for(let ae=0;ae<E.__webglFramebuffer.length;ae++)n.deleteFramebuffer(E.__webglFramebuffer[ae]);else n.deleteFramebuffer(E.__webglFramebuffer);if(E.__webglDepthbuffer&&n.deleteRenderbuffer(E.__webglDepthbuffer),E.__webglMultisampledFramebuffer&&n.deleteFramebuffer(E.__webglMultisampledFramebuffer),E.__webglColorRenderbuffer)for(let ae=0;ae<E.__webglColorRenderbuffer.length;ae++)E.__webglColorRenderbuffer[ae]&&n.deleteRenderbuffer(E.__webglColorRenderbuffer[ae]);E.__webglDepthRenderbuffer&&n.deleteRenderbuffer(E.__webglDepthRenderbuffer)}const j=I.textures;for(let ae=0,ce=j.length;ae<ce;ae++){const ue=i.get(j[ae]);ue.__webglTexture&&(n.deleteTexture(ue.__webglTexture),l.memory.textures--),i.remove(j[ae])}i.remove(I)}let T=0;function O(){T=0}function Z(){const I=T;return I>=r.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+I+" texture units while this GPU supports only "+r.maxTextures),T+=1,I}function W(I){const E=[];return E.push(I.wrapS),E.push(I.wrapT),E.push(I.wrapR||0),E.push(I.magFilter),E.push(I.minFilter),E.push(I.anisotropy),E.push(I.internalFormat),E.push(I.format),E.push(I.type),E.push(I.generateMipmaps),E.push(I.premultiplyAlpha),E.push(I.flipY),E.push(I.unpackAlignment),E.push(I.colorSpace),E.join()}function K(I,E){const j=i.get(I);if(I.isVideoTexture&&tt(I),I.isRenderTargetTexture===!1&&I.version>0&&j.__version!==I.version){const ae=I.image;if(ae===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(ae.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{He(j,I,E);return}}t.bindTexture(n.TEXTURE_2D,j.__webglTexture,n.TEXTURE0+E)}function ne(I,E){const j=i.get(I);if(I.version>0&&j.__version!==I.version){He(j,I,E);return}t.bindTexture(n.TEXTURE_2D_ARRAY,j.__webglTexture,n.TEXTURE0+E)}function Q(I,E){const j=i.get(I);if(I.version>0&&j.__version!==I.version){He(j,I,E);return}t.bindTexture(n.TEXTURE_3D,j.__webglTexture,n.TEXTURE0+E)}function se(I,E){const j=i.get(I);if(I.version>0&&j.__version!==I.version){Y(j,I,E);return}t.bindTexture(n.TEXTURE_CUBE_MAP,j.__webglTexture,n.TEXTURE0+E)}const G={[k_]:n.REPEAT,[Sl]:n.CLAMP_TO_EDGE,[z_]:n.MIRRORED_REPEAT},de={[br]:n.NEAREST,[YI]:n.NEAREST_MIPMAP_NEAREST,[ip]:n.NEAREST_MIPMAP_LINEAR,[Qr]:n.LINEAR,[E1]:n.LINEAR_MIPMAP_NEAREST,[Ml]:n.LINEAR_MIPMAP_LINEAR},le={[uD]:n.NEVER,[gD]:n.ALWAYS,[fD]:n.LESS,[Ib]:n.LEQUAL,[dD]:n.EQUAL,[mD]:n.GEQUAL,[hD]:n.GREATER,[pD]:n.NOTEQUAL};function X(I,E){if(E.type===uo&&e.has("OES_texture_float_linear")===!1&&(E.magFilter===Qr||E.magFilter===E1||E.magFilter===ip||E.magFilter===Ml||E.minFilter===Qr||E.minFilter===E1||E.minFilter===ip||E.minFilter===Ml)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),n.texParameteri(I,n.TEXTURE_WRAP_S,G[E.wrapS]),n.texParameteri(I,n.TEXTURE_WRAP_T,G[E.wrapT]),(I===n.TEXTURE_3D||I===n.TEXTURE_2D_ARRAY)&&n.texParameteri(I,n.TEXTURE_WRAP_R,G[E.wrapR]),n.texParameteri(I,n.TEXTURE_MAG_FILTER,de[E.magFilter]),n.texParameteri(I,n.TEXTURE_MIN_FILTER,de[E.minFilter]),E.compareFunction&&(n.texParameteri(I,n.TEXTURE_COMPARE_MODE,n.COMPARE_REF_TO_TEXTURE),n.texParameteri(I,n.TEXTURE_COMPARE_FUNC,le[E.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){if(E.magFilter===br||E.minFilter!==ip&&E.minFilter!==Ml||E.type===uo&&e.has("OES_texture_float_linear")===!1)return;if(E.anisotropy>1||i.get(E).__currentAnisotropy){const j=e.get("EXT_texture_filter_anisotropic");n.texParameterf(I,j.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(E.anisotropy,r.getMaxAnisotropy())),i.get(E).__currentAnisotropy=E.anisotropy}}}function he(I,E){let j=!1;I.__webglInit===void 0&&(I.__webglInit=!0,E.addEventListener("dispose",z));const ae=E.source;let ce=p.get(ae);ce===void 0&&(ce={},p.set(ae,ce));const ue=W(E);if(ue!==I.__cacheKey){ce[ue]===void 0&&(ce[ue]={texture:n.createTexture(),usedTimes:0},l.memory.textures++,j=!0),ce[ue].usedTimes++;const Fe=ce[I.__cacheKey];Fe!==void 0&&(ce[I.__cacheKey].usedTimes--,Fe.usedTimes===0&&V(E)),I.__cacheKey=ue,I.__webglTexture=ce[ue].texture}return j}function He(I,E,j){let ae=n.TEXTURE_2D;(E.isDataArrayTexture||E.isCompressedArrayTexture)&&(ae=n.TEXTURE_2D_ARRAY),E.isData3DTexture&&(ae=n.TEXTURE_3D);const ce=he(I,E),ue=E.source;t.bindTexture(ae,I.__webglTexture,n.TEXTURE0+j);const Fe=i.get(ue);if(ue.version!==Fe.__version||ce===!0){t.activeTexture(n.TEXTURE0+j);const Me=nn.getPrimaries(nn.workingColorSpace),Se=E.colorSpace===oo?null:nn.getPrimaries(E.colorSpace),Ze=E.colorSpace===oo||Me===Se?n.NONE:n.BROWSER_DEFAULT_WEBGL;n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,E.flipY),n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,E.premultiplyAlpha),n.pixelStorei(n.UNPACK_ALIGNMENT,E.unpackAlignment),n.pixelStorei(n.UNPACK_COLORSPACE_CONVERSION_WEBGL,Ze);let me=S(E.image,!1,r.maxTextureSize);me=Ke(E,me);const Pe=s.convert(E.format,E.colorSpace),it=s.convert(E.type);let Xe=P(E.internalFormat,Pe,it,E.colorSpace,E.isVideoTexture);X(ae,E);let Te;const et=E.mipmaps,rt=E.isVideoTexture!==!0,bt=Fe.__version===void 0||ce===!0,N=ue.dataReady,Ae=C(E,me);if(E.isDepthTexture)Xe=w(E.format===Xu,E.type),bt&&(rt?t.texStorage2D(n.TEXTURE_2D,1,Xe,me.width,me.height):t.texImage2D(n.TEXTURE_2D,0,Xe,me.width,me.height,0,Pe,it,null));else if(E.isDataTexture)if(et.length>0){rt&&bt&&t.texStorage2D(n.TEXTURE_2D,Ae,Xe,et[0].width,et[0].height);for(let ee=0,te=et.length;ee<te;ee++)Te=et[ee],rt?N&&t.texSubImage2D(n.TEXTURE_2D,ee,0,0,Te.width,Te.height,Pe,it,Te.data):t.texImage2D(n.TEXTURE_2D,ee,Xe,Te.width,Te.height,0,Pe,it,Te.data);E.generateMipmaps=!1}else rt?(bt&&t.texStorage2D(n.TEXTURE_2D,Ae,Xe,me.width,me.height),N&&t.texSubImage2D(n.TEXTURE_2D,0,0,0,me.width,me.height,Pe,it,me.data)):t.texImage2D(n.TEXTURE_2D,0,Xe,me.width,me.height,0,Pe,it,me.data);else if(E.isCompressedTexture)if(E.isCompressedArrayTexture){rt&&bt&&t.texStorage3D(n.TEXTURE_2D_ARRAY,Ae,Xe,et[0].width,et[0].height,me.depth);for(let ee=0,te=et.length;ee<te;ee++)if(Te=et[ee],E.format!==ws)if(Pe!==null)if(rt){if(N)if(E.layerUpdates.size>0){for(const ge of E.layerUpdates){const qe=Te.width*Te.height;t.compressedTexSubImage3D(n.TEXTURE_2D_ARRAY,ee,0,0,ge,Te.width,Te.height,1,Pe,Te.data.slice(qe*ge,qe*(ge+1)),0,0)}E.clearLayerUpdates()}else t.compressedTexSubImage3D(n.TEXTURE_2D_ARRAY,ee,0,0,0,Te.width,Te.height,me.depth,Pe,Te.data,0,0)}else t.compressedTexImage3D(n.TEXTURE_2D_ARRAY,ee,Xe,Te.width,Te.height,me.depth,0,Te.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else rt?N&&t.texSubImage3D(n.TEXTURE_2D_ARRAY,ee,0,0,0,Te.width,Te.height,me.depth,Pe,it,Te.data):t.texImage3D(n.TEXTURE_2D_ARRAY,ee,Xe,Te.width,Te.height,me.depth,0,Pe,it,Te.data)}else{rt&&bt&&t.texStorage2D(n.TEXTURE_2D,Ae,Xe,et[0].width,et[0].height);for(let ee=0,te=et.length;ee<te;ee++)Te=et[ee],E.format!==ws?Pe!==null?rt?N&&t.compressedTexSubImage2D(n.TEXTURE_2D,ee,0,0,Te.width,Te.height,Pe,Te.data):t.compressedTexImage2D(n.TEXTURE_2D,ee,Xe,Te.width,Te.height,0,Te.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):rt?N&&t.texSubImage2D(n.TEXTURE_2D,ee,0,0,Te.width,Te.height,Pe,it,Te.data):t.texImage2D(n.TEXTURE_2D,ee,Xe,Te.width,Te.height,0,Pe,it,Te.data)}else if(E.isDataArrayTexture)if(rt){if(bt&&t.texStorage3D(n.TEXTURE_2D_ARRAY,Ae,Xe,me.width,me.height,me.depth),N)if(E.layerUpdates.size>0){let ee;switch(it){case n.UNSIGNED_BYTE:switch(Pe){case n.ALPHA:ee=1;break;case n.LUMINANCE:ee=1;break;case n.LUMINANCE_ALPHA:ee=2;break;case n.RGB:ee=3;break;case n.RGBA:ee=4;break;default:throw new Error(`Unknown texel size for format ${Pe}.`)}break;case n.UNSIGNED_SHORT_4_4_4_4:case n.UNSIGNED_SHORT_5_5_5_1:case n.UNSIGNED_SHORT_5_6_5:ee=1;break;default:throw new Error(`Unknown texel size for type ${it}.`)}const te=me.width*me.height*ee;for(const ge of E.layerUpdates)t.texSubImage3D(n.TEXTURE_2D_ARRAY,0,0,0,ge,me.width,me.height,1,Pe,it,me.data.slice(te*ge,te*(ge+1)));E.clearLayerUpdates()}else t.texSubImage3D(n.TEXTURE_2D_ARRAY,0,0,0,0,me.width,me.height,me.depth,Pe,it,me.data)}else t.texImage3D(n.TEXTURE_2D_ARRAY,0,Xe,me.width,me.height,me.depth,0,Pe,it,me.data);else if(E.isData3DTexture)rt?(bt&&t.texStorage3D(n.TEXTURE_3D,Ae,Xe,me.width,me.height,me.depth),N&&t.texSubImage3D(n.TEXTURE_3D,0,0,0,0,me.width,me.height,me.depth,Pe,it,me.data)):t.texImage3D(n.TEXTURE_3D,0,Xe,me.width,me.height,me.depth,0,Pe,it,me.data);else if(E.isFramebufferTexture){if(bt)if(rt)t.texStorage2D(n.TEXTURE_2D,Ae,Xe,me.width,me.height);else{let ee=me.width,te=me.height;for(let ge=0;ge<Ae;ge++)t.texImage2D(n.TEXTURE_2D,ge,Xe,ee,te,0,Pe,it,null),ee>>=1,te>>=1}}else if(et.length>0){if(rt&&bt){const ee=Lt(et[0]);t.texStorage2D(n.TEXTURE_2D,Ae,Xe,ee.width,ee.height)}for(let ee=0,te=et.length;ee<te;ee++)Te=et[ee],rt?N&&t.texSubImage2D(n.TEXTURE_2D,ee,0,0,Pe,it,Te):t.texImage2D(n.TEXTURE_2D,ee,Xe,Pe,it,Te);E.generateMipmaps=!1}else if(rt){if(bt){const ee=Lt(me);t.texStorage2D(n.TEXTURE_2D,Ae,Xe,ee.width,ee.height)}N&&t.texSubImage2D(n.TEXTURE_2D,0,0,0,Pe,it,me)}else t.texImage2D(n.TEXTURE_2D,0,Xe,Pe,it,me);v(E)&&g(ae),Fe.__version=ue.version,E.onUpdate&&E.onUpdate(E)}I.__version=E.version}function Y(I,E,j){if(E.image.length!==6)return;const ae=he(I,E),ce=E.source;t.bindTexture(n.TEXTURE_CUBE_MAP,I.__webglTexture,n.TEXTURE0+j);const ue=i.get(ce);if(ce.version!==ue.__version||ae===!0){t.activeTexture(n.TEXTURE0+j);const Fe=nn.getPrimaries(nn.workingColorSpace),Me=E.colorSpace===oo?null:nn.getPrimaries(E.colorSpace),Se=E.colorSpace===oo||Fe===Me?n.NONE:n.BROWSER_DEFAULT_WEBGL;n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,E.flipY),n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,E.premultiplyAlpha),n.pixelStorei(n.UNPACK_ALIGNMENT,E.unpackAlignment),n.pixelStorei(n.UNPACK_COLORSPACE_CONVERSION_WEBGL,Se);const Ze=E.isCompressedTexture||E.image[0].isCompressedTexture,me=E.image[0]&&E.image[0].isDataTexture,Pe=[];for(let te=0;te<6;te++)!Ze&&!me?Pe[te]=S(E.image[te],!0,r.maxCubemapSize):Pe[te]=me?E.image[te].image:E.image[te],Pe[te]=Ke(E,Pe[te]);const it=Pe[0],Xe=s.convert(E.format,E.colorSpace),Te=s.convert(E.type),et=P(E.internalFormat,Xe,Te,E.colorSpace),rt=E.isVideoTexture!==!0,bt=ue.__version===void 0||ae===!0,N=ce.dataReady;let Ae=C(E,it);X(n.TEXTURE_CUBE_MAP,E);let ee;if(Ze){rt&&bt&&t.texStorage2D(n.TEXTURE_CUBE_MAP,Ae,et,it.width,it.height);for(let te=0;te<6;te++){ee=Pe[te].mipmaps;for(let ge=0;ge<ee.length;ge++){const qe=ee[ge];E.format!==ws?Xe!==null?rt?N&&t.compressedTexSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+te,ge,0,0,qe.width,qe.height,Xe,qe.data):t.compressedTexImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+te,ge,et,qe.width,qe.height,0,qe.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):rt?N&&t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+te,ge,0,0,qe.width,qe.height,Xe,Te,qe.data):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+te,ge,et,qe.width,qe.height,0,Xe,Te,qe.data)}}}else{if(ee=E.mipmaps,rt&&bt){ee.length>0&&Ae++;const te=Lt(Pe[0]);t.texStorage2D(n.TEXTURE_CUBE_MAP,Ae,et,te.width,te.height)}for(let te=0;te<6;te++)if(me){rt?N&&t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+te,0,0,0,Pe[te].width,Pe[te].height,Xe,Te,Pe[te].data):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+te,0,et,Pe[te].width,Pe[te].height,0,Xe,Te,Pe[te].data);for(let ge=0;ge<ee.length;ge++){const dt=ee[ge].image[te].image;rt?N&&t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+te,ge+1,0,0,dt.width,dt.height,Xe,Te,dt.data):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+te,ge+1,et,dt.width,dt.height,0,Xe,Te,dt.data)}}else{rt?N&&t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+te,0,0,0,Xe,Te,Pe[te]):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+te,0,et,Xe,Te,Pe[te]);for(let ge=0;ge<ee.length;ge++){const qe=ee[ge];rt?N&&t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+te,ge+1,0,0,Xe,Te,qe.image[te]):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+te,ge+1,et,Xe,Te,qe.image[te])}}}v(E)&&g(n.TEXTURE_CUBE_MAP),ue.__version=ce.version,E.onUpdate&&E.onUpdate(E)}I.__version=E.version}function ie(I,E,j,ae,ce,ue){const Fe=s.convert(j.format,j.colorSpace),Me=s.convert(j.type),Se=P(j.internalFormat,Fe,Me,j.colorSpace);if(!i.get(E).__hasExternalTextures){const me=Math.max(1,E.width>>ue),Pe=Math.max(1,E.height>>ue);ce===n.TEXTURE_3D||ce===n.TEXTURE_2D_ARRAY?t.texImage3D(ce,ue,Se,me,Pe,E.depth,0,Fe,Me,null):t.texImage2D(ce,ue,Se,me,Pe,0,Fe,Me,null)}t.bindFramebuffer(n.FRAMEBUFFER,I),ut(E)?c.framebufferTexture2DMultisampleEXT(n.FRAMEBUFFER,ae,ce,i.get(j).__webglTexture,0,Ve(E)):(ce===n.TEXTURE_2D||ce>=n.TEXTURE_CUBE_MAP_POSITIVE_X&&ce<=n.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&n.framebufferTexture2D(n.FRAMEBUFFER,ae,ce,i.get(j).__webglTexture,ue),t.bindFramebuffer(n.FRAMEBUFFER,null)}function xe(I,E,j){if(n.bindRenderbuffer(n.RENDERBUFFER,I),E.depthBuffer){const ae=E.depthTexture,ce=ae&&ae.isDepthTexture?ae.type:null,ue=w(E.stencilBuffer,ce),Fe=E.stencilBuffer?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT,Me=Ve(E);ut(E)?c.renderbufferStorageMultisampleEXT(n.RENDERBUFFER,Me,ue,E.width,E.height):j?n.renderbufferStorageMultisample(n.RENDERBUFFER,Me,ue,E.width,E.height):n.renderbufferStorage(n.RENDERBUFFER,ue,E.width,E.height),n.framebufferRenderbuffer(n.FRAMEBUFFER,Fe,n.RENDERBUFFER,I)}else{const ae=E.textures;for(let ce=0;ce<ae.length;ce++){const ue=ae[ce],Fe=s.convert(ue.format,ue.colorSpace),Me=s.convert(ue.type),Se=P(ue.internalFormat,Fe,Me,ue.colorSpace),Ze=Ve(E);j&&ut(E)===!1?n.renderbufferStorageMultisample(n.RENDERBUFFER,Ze,Se,E.width,E.height):ut(E)?c.renderbufferStorageMultisampleEXT(n.RENDERBUFFER,Ze,Se,E.width,E.height):n.renderbufferStorage(n.RENDERBUFFER,Se,E.width,E.height)}}n.bindRenderbuffer(n.RENDERBUFFER,null)}function pe(I,E){if(E&&E.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(n.FRAMEBUFFER,I),!(E.depthTexture&&E.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!i.get(E.depthTexture).__webglTexture||E.depthTexture.image.width!==E.width||E.depthTexture.image.height!==E.height)&&(E.depthTexture.image.width=E.width,E.depthTexture.image.height=E.height,E.depthTexture.needsUpdate=!0),K(E.depthTexture,0);const ae=i.get(E.depthTexture).__webglTexture,ce=Ve(E);if(E.depthTexture.format===wu)ut(E)?c.framebufferTexture2DMultisampleEXT(n.FRAMEBUFFER,n.DEPTH_ATTACHMENT,n.TEXTURE_2D,ae,0,ce):n.framebufferTexture2D(n.FRAMEBUFFER,n.DEPTH_ATTACHMENT,n.TEXTURE_2D,ae,0);else if(E.depthTexture.format===Xu)ut(E)?c.framebufferTexture2DMultisampleEXT(n.FRAMEBUFFER,n.DEPTH_STENCIL_ATTACHMENT,n.TEXTURE_2D,ae,0,ce):n.framebufferTexture2D(n.FRAMEBUFFER,n.DEPTH_STENCIL_ATTACHMENT,n.TEXTURE_2D,ae,0);else throw new Error("Unknown depthTexture format")}function Oe(I){const E=i.get(I),j=I.isWebGLCubeRenderTarget===!0;if(I.depthTexture&&!E.__autoAllocateDepthBuffer){if(j)throw new Error("target.depthTexture not supported in Cube render targets");pe(E.__webglFramebuffer,I)}else if(j){E.__webglDepthbuffer=[];for(let ae=0;ae<6;ae++)t.bindFramebuffer(n.FRAMEBUFFER,E.__webglFramebuffer[ae]),E.__webglDepthbuffer[ae]=n.createRenderbuffer(),xe(E.__webglDepthbuffer[ae],I,!1)}else t.bindFramebuffer(n.FRAMEBUFFER,E.__webglFramebuffer),E.__webglDepthbuffer=n.createRenderbuffer(),xe(E.__webglDepthbuffer,I,!1);t.bindFramebuffer(n.FRAMEBUFFER,null)}function Ne(I,E,j){const ae=i.get(I);E!==void 0&&ie(ae.__webglFramebuffer,I,I.texture,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,0),j!==void 0&&Oe(I)}function Ye(I){const E=I.texture,j=i.get(I),ae=i.get(E);I.addEventListener("dispose",L);const ce=I.textures,ue=I.isWebGLCubeRenderTarget===!0,Fe=ce.length>1;if(Fe||(ae.__webglTexture===void 0&&(ae.__webglTexture=n.createTexture()),ae.__version=E.version,l.memory.textures++),ue){j.__webglFramebuffer=[];for(let Me=0;Me<6;Me++)if(E.mipmaps&&E.mipmaps.length>0){j.__webglFramebuffer[Me]=[];for(let Se=0;Se<E.mipmaps.length;Se++)j.__webglFramebuffer[Me][Se]=n.createFramebuffer()}else j.__webglFramebuffer[Me]=n.createFramebuffer()}else{if(E.mipmaps&&E.mipmaps.length>0){j.__webglFramebuffer=[];for(let Me=0;Me<E.mipmaps.length;Me++)j.__webglFramebuffer[Me]=n.createFramebuffer()}else j.__webglFramebuffer=n.createFramebuffer();if(Fe)for(let Me=0,Se=ce.length;Me<Se;Me++){const Ze=i.get(ce[Me]);Ze.__webglTexture===void 0&&(Ze.__webglTexture=n.createTexture(),l.memory.textures++)}if(I.samples>0&&ut(I)===!1){j.__webglMultisampledFramebuffer=n.createFramebuffer(),j.__webglColorRenderbuffer=[],t.bindFramebuffer(n.FRAMEBUFFER,j.__webglMultisampledFramebuffer);for(let Me=0;Me<ce.length;Me++){const Se=ce[Me];j.__webglColorRenderbuffer[Me]=n.createRenderbuffer(),n.bindRenderbuffer(n.RENDERBUFFER,j.__webglColorRenderbuffer[Me]);const Ze=s.convert(Se.format,Se.colorSpace),me=s.convert(Se.type),Pe=P(Se.internalFormat,Ze,me,Se.colorSpace,I.isXRRenderTarget===!0),it=Ve(I);n.renderbufferStorageMultisample(n.RENDERBUFFER,it,Pe,I.width,I.height),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0+Me,n.RENDERBUFFER,j.__webglColorRenderbuffer[Me])}n.bindRenderbuffer(n.RENDERBUFFER,null),I.depthBuffer&&(j.__webglDepthRenderbuffer=n.createRenderbuffer(),xe(j.__webglDepthRenderbuffer,I,!0)),t.bindFramebuffer(n.FRAMEBUFFER,null)}}if(ue){t.bindTexture(n.TEXTURE_CUBE_MAP,ae.__webglTexture),X(n.TEXTURE_CUBE_MAP,E);for(let Me=0;Me<6;Me++)if(E.mipmaps&&E.mipmaps.length>0)for(let Se=0;Se<E.mipmaps.length;Se++)ie(j.__webglFramebuffer[Me][Se],I,E,n.COLOR_ATTACHMENT0,n.TEXTURE_CUBE_MAP_POSITIVE_X+Me,Se);else ie(j.__webglFramebuffer[Me],I,E,n.COLOR_ATTACHMENT0,n.TEXTURE_CUBE_MAP_POSITIVE_X+Me,0);v(E)&&g(n.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(Fe){for(let Me=0,Se=ce.length;Me<Se;Me++){const Ze=ce[Me],me=i.get(Ze);t.bindTexture(n.TEXTURE_2D,me.__webglTexture),X(n.TEXTURE_2D,Ze),ie(j.__webglFramebuffer,I,Ze,n.COLOR_ATTACHMENT0+Me,n.TEXTURE_2D,0),v(Ze)&&g(n.TEXTURE_2D)}t.unbindTexture()}else{let Me=n.TEXTURE_2D;if((I.isWebGL3DRenderTarget||I.isWebGLArrayRenderTarget)&&(Me=I.isWebGL3DRenderTarget?n.TEXTURE_3D:n.TEXTURE_2D_ARRAY),t.bindTexture(Me,ae.__webglTexture),X(Me,E),E.mipmaps&&E.mipmaps.length>0)for(let Se=0;Se<E.mipmaps.length;Se++)ie(j.__webglFramebuffer[Se],I,E,n.COLOR_ATTACHMENT0,Me,Se);else ie(j.__webglFramebuffer,I,E,n.COLOR_ATTACHMENT0,Me,0);v(E)&&g(Me),t.unbindTexture()}I.depthBuffer&&Oe(I)}function U(I){const E=I.textures;for(let j=0,ae=E.length;j<ae;j++){const ce=E[j];if(v(ce)){const ue=I.isWebGLCubeRenderTarget?n.TEXTURE_CUBE_MAP:n.TEXTURE_2D,Fe=i.get(ce).__webglTexture;t.bindTexture(ue,Fe),g(ue),t.unbindTexture()}}}const Je=[],nt=[];function Tt(I){if(I.samples>0){if(ut(I)===!1){const E=I.textures,j=I.width,ae=I.height;let ce=n.COLOR_BUFFER_BIT;const ue=I.stencilBuffer?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT,Fe=i.get(I),Me=E.length>1;if(Me)for(let Se=0;Se<E.length;Se++)t.bindFramebuffer(n.FRAMEBUFFER,Fe.__webglMultisampledFramebuffer),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0+Se,n.RENDERBUFFER,null),t.bindFramebuffer(n.FRAMEBUFFER,Fe.__webglFramebuffer),n.framebufferTexture2D(n.DRAW_FRAMEBUFFER,n.COLOR_ATTACHMENT0+Se,n.TEXTURE_2D,null,0);t.bindFramebuffer(n.READ_FRAMEBUFFER,Fe.__webglMultisampledFramebuffer),t.bindFramebuffer(n.DRAW_FRAMEBUFFER,Fe.__webglFramebuffer);for(let Se=0;Se<E.length;Se++){if(I.resolveDepthBuffer&&(I.depthBuffer&&(ce|=n.DEPTH_BUFFER_BIT),I.stencilBuffer&&I.resolveStencilBuffer&&(ce|=n.STENCIL_BUFFER_BIT)),Me){n.framebufferRenderbuffer(n.READ_FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.RENDERBUFFER,Fe.__webglColorRenderbuffer[Se]);const Ze=i.get(E[Se]).__webglTexture;n.framebufferTexture2D(n.DRAW_FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,Ze,0)}n.blitFramebuffer(0,0,j,ae,0,0,j,ae,ce,n.NEAREST),u===!0&&(Je.length=0,nt.length=0,Je.push(n.COLOR_ATTACHMENT0+Se),I.depthBuffer&&I.resolveDepthBuffer===!1&&(Je.push(ue),nt.push(ue),n.invalidateFramebuffer(n.DRAW_FRAMEBUFFER,nt)),n.invalidateFramebuffer(n.READ_FRAMEBUFFER,Je))}if(t.bindFramebuffer(n.READ_FRAMEBUFFER,null),t.bindFramebuffer(n.DRAW_FRAMEBUFFER,null),Me)for(let Se=0;Se<E.length;Se++){t.bindFramebuffer(n.FRAMEBUFFER,Fe.__webglMultisampledFramebuffer),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0+Se,n.RENDERBUFFER,Fe.__webglColorRenderbuffer[Se]);const Ze=i.get(E[Se]).__webglTexture;t.bindFramebuffer(n.FRAMEBUFFER,Fe.__webglFramebuffer),n.framebufferTexture2D(n.DRAW_FRAMEBUFFER,n.COLOR_ATTACHMENT0+Se,n.TEXTURE_2D,Ze,0)}t.bindFramebuffer(n.DRAW_FRAMEBUFFER,Fe.__webglMultisampledFramebuffer)}else if(I.depthBuffer&&I.resolveDepthBuffer===!1&&u){const E=I.stencilBuffer?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT;n.invalidateFramebuffer(n.DRAW_FRAMEBUFFER,[E])}}}function Ve(I){return Math.min(r.maxSamples,I.samples)}function ut(I){const E=i.get(I);return I.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&E.__useRenderToTexture!==!1}function tt(I){const E=l.render.frame;h.get(I)!==E&&(h.set(I,E),I.update())}function Ke(I,E){const j=I.colorSpace,ae=I.format,ce=I.type;return I.isCompressedTexture===!0||I.isVideoTexture===!0||j!==Ro&&j!==oo&&(nn.getTransfer(j)===gn?(ae!==ws||ce!==Mo)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",j)),E}function Lt(I){return typeof HTMLImageElement<"u"&&I instanceof HTMLImageElement?(d.width=I.naturalWidth||I.width,d.height=I.naturalHeight||I.height):typeof VideoFrame<"u"&&I instanceof VideoFrame?(d.width=I.displayWidth,d.height=I.displayHeight):(d.width=I.width,d.height=I.height),d}this.allocateTextureUnit=Z,this.resetTextureUnits=O,this.setTexture2D=K,this.setTexture2DArray=ne,this.setTexture3D=Q,this.setTextureCube=se,this.rebindTextures=Ne,this.setupRenderTarget=Ye,this.updateRenderTargetMipmap=U,this.updateMultisampleRenderTarget=Tt,this.setupDepthRenderbuffer=Oe,this.setupFrameBufferTexture=ie,this.useMultisampledRTT=ut}function _O(n,e){function t(i,r=oo){let s;const l=nn.getTransfer(r);if(i===Mo)return n.UNSIGNED_BYTE;if(i===bb)return n.UNSIGNED_SHORT_4_4_4_4;if(i===Rb)return n.UNSIGNED_SHORT_5_5_5_1;if(i===QI)return n.UNSIGNED_INT_5_9_9_9_REV;if(i===KI)return n.BYTE;if(i===ZI)return n.SHORT;if(i===Nm)return n.UNSIGNED_SHORT;if(i===Ab)return n.INT;if(i===Wu)return n.UNSIGNED_INT;if(i===uo)return n.FLOAT;if(i===p0)return n.HALF_FLOAT;if(i===JI)return n.ALPHA;if(i===eD)return n.RGB;if(i===ws)return n.RGBA;if(i===tD)return n.LUMINANCE;if(i===nD)return n.LUMINANCE_ALPHA;if(i===wu)return n.DEPTH_COMPONENT;if(i===Xu)return n.DEPTH_STENCIL;if(i===iD)return n.RED;if(i===Cb)return n.RED_INTEGER;if(i===rD)return n.RG;if(i===Pb)return n.RG_INTEGER;if(i===Lb)return n.RGBA_INTEGER;if(i===w1||i===T1||i===A1||i===b1)if(l===gn)if(s=e.get("WEBGL_compressed_texture_s3tc_srgb"),s!==null){if(i===w1)return s.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(i===T1)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(i===A1)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(i===b1)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(s=e.get("WEBGL_compressed_texture_s3tc"),s!==null){if(i===w1)return s.COMPRESSED_RGB_S3TC_DXT1_EXT;if(i===T1)return s.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(i===A1)return s.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(i===b1)return s.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(i===KM||i===ZM||i===QM||i===JM)if(s=e.get("WEBGL_compressed_texture_pvrtc"),s!==null){if(i===KM)return s.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(i===ZM)return s.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(i===QM)return s.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(i===JM)return s.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(i===eE||i===tE||i===nE)if(s=e.get("WEBGL_compressed_texture_etc"),s!==null){if(i===eE||i===tE)return l===gn?s.COMPRESSED_SRGB8_ETC2:s.COMPRESSED_RGB8_ETC2;if(i===nE)return l===gn?s.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:s.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(i===iE||i===rE||i===sE||i===aE||i===oE||i===lE||i===cE||i===uE||i===fE||i===dE||i===hE||i===pE||i===mE||i===gE)if(s=e.get("WEBGL_compressed_texture_astc"),s!==null){if(i===iE)return l===gn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:s.COMPRESSED_RGBA_ASTC_4x4_KHR;if(i===rE)return l===gn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:s.COMPRESSED_RGBA_ASTC_5x4_KHR;if(i===sE)return l===gn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:s.COMPRESSED_RGBA_ASTC_5x5_KHR;if(i===aE)return l===gn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:s.COMPRESSED_RGBA_ASTC_6x5_KHR;if(i===oE)return l===gn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:s.COMPRESSED_RGBA_ASTC_6x6_KHR;if(i===lE)return l===gn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:s.COMPRESSED_RGBA_ASTC_8x5_KHR;if(i===cE)return l===gn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:s.COMPRESSED_RGBA_ASTC_8x6_KHR;if(i===uE)return l===gn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:s.COMPRESSED_RGBA_ASTC_8x8_KHR;if(i===fE)return l===gn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:s.COMPRESSED_RGBA_ASTC_10x5_KHR;if(i===dE)return l===gn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:s.COMPRESSED_RGBA_ASTC_10x6_KHR;if(i===hE)return l===gn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:s.COMPRESSED_RGBA_ASTC_10x8_KHR;if(i===pE)return l===gn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:s.COMPRESSED_RGBA_ASTC_10x10_KHR;if(i===mE)return l===gn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:s.COMPRESSED_RGBA_ASTC_12x10_KHR;if(i===gE)return l===gn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:s.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(i===R1||i===vE||i===_E)if(s=e.get("EXT_texture_compression_bptc"),s!==null){if(i===R1)return l===gn?s.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:s.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(i===vE)return s.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(i===_E)return s.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(i===sD||i===xE||i===yE||i===SE)if(s=e.get("EXT_texture_compression_rgtc"),s!==null){if(i===R1)return s.COMPRESSED_RED_RGTC1_EXT;if(i===xE)return s.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(i===yE)return s.COMPRESSED_RED_GREEN_RGTC2_EXT;if(i===SE)return s.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return i===$u?n.UNSIGNED_INT_24_8:n[i]!==void 0?n[i]:null}return{convert:t}}let xO=class extends Tr{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}},yu=class extends ma{constructor(){super(),this.isGroup=!0,this.type="Group"}};const yO={type:"move"};let tv=class{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new yu,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new yu,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new Re,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new Re),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new yu,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new Re,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new Re),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const i of e.hand.values())this._getHandJoint(t,i)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,i){let r=null,s=null,l=null;const c=this._targetRay,u=this._grip,d=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(d&&e.hand){l=!0;for(const S of e.hand.values()){const v=t.getJointPose(S,i),g=this._getHandJoint(d,S);v!==null&&(g.matrix.fromArray(v.transform.matrix),g.matrix.decompose(g.position,g.rotation,g.scale),g.matrixWorldNeedsUpdate=!0,g.jointRadius=v.radius),g.visible=v!==null}const h=d.joints["index-finger-tip"],m=d.joints["thumb-tip"],p=h.position.distanceTo(m.position),x=.02,y=.005;d.inputState.pinching&&p>x+y?(d.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!d.inputState.pinching&&p<=x-y&&(d.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else u!==null&&e.gripSpace&&(s=t.getPose(e.gripSpace,i),s!==null&&(u.matrix.fromArray(s.transform.matrix),u.matrix.decompose(u.position,u.rotation,u.scale),u.matrixWorldNeedsUpdate=!0,s.linearVelocity?(u.hasLinearVelocity=!0,u.linearVelocity.copy(s.linearVelocity)):u.hasLinearVelocity=!1,s.angularVelocity?(u.hasAngularVelocity=!0,u.angularVelocity.copy(s.angularVelocity)):u.hasAngularVelocity=!1));c!==null&&(r=t.getPose(e.targetRaySpace,i),r===null&&s!==null&&(r=s),r!==null&&(c.matrix.fromArray(r.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),c.matrixWorldNeedsUpdate=!0,r.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(r.linearVelocity)):c.hasLinearVelocity=!1,r.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(r.angularVelocity)):c.hasAngularVelocity=!1,this.dispatchEvent(yO)))}return c!==null&&(c.visible=r!==null),u!==null&&(u.visible=s!==null),d!==null&&(d.visible=l!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const i=new yu;i.matrixAutoUpdate=!1,i.visible=!1,e.joints[t.jointName]=i,e.add(i)}return e.joints[t.jointName]}};const SO=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,MO=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;let EO=class{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(e,t,i){if(this.texture===null){const r=new Ls,s=e.properties.get(r);s.__webglTexture=t.texture,(t.depthNear!=i.depthNear||t.depthFar!=i.depthFar)&&(this.depthNear=t.depthNear,this.depthFar=t.depthFar),this.texture=r}}getMesh(e){if(this.texture!==null&&this.mesh===null){const t=e.cameras[0].viewport,i=new Eo({vertexShader:SO,fragmentShader:MO,uniforms:{depthColor:{value:this.texture},depthWidth:{value:t.z},depthHeight:{value:t.w}}});this.mesh=new Ts(new Jb(20,20),i)}return this.mesh}reset(){this.texture=null,this.mesh=null}},wO=class extends sf{constructor(e,t){super();const i=this;let r=null,s=1,l=null,c="local-floor",u=1,d=null,h=null,m=null,p=null,x=null,y=null;const S=new EO,v=t.getContextAttributes();let g=null,P=null;const w=[],C=[],z=new sn;let L=null;const D=new Tr;D.layers.enable(1),D.viewport=new Ai;const V=new Tr;V.layers.enable(2),V.viewport=new Ai;const R=[D,V],T=new xO;T.layers.enable(1),T.layers.enable(2);let O=null,Z=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(Y){let ie=w[Y];return ie===void 0&&(ie=new tv,w[Y]=ie),ie.getTargetRaySpace()},this.getControllerGrip=function(Y){let ie=w[Y];return ie===void 0&&(ie=new tv,w[Y]=ie),ie.getGripSpace()},this.getHand=function(Y){let ie=w[Y];return ie===void 0&&(ie=new tv,w[Y]=ie),ie.getHandSpace()};function W(Y){const ie=C.indexOf(Y.inputSource);if(ie===-1)return;const xe=w[ie];xe!==void 0&&(xe.update(Y.inputSource,Y.frame,d||l),xe.dispatchEvent({type:Y.type,data:Y.inputSource}))}function K(){r.removeEventListener("select",W),r.removeEventListener("selectstart",W),r.removeEventListener("selectend",W),r.removeEventListener("squeeze",W),r.removeEventListener("squeezestart",W),r.removeEventListener("squeezeend",W),r.removeEventListener("end",K),r.removeEventListener("inputsourceschange",ne);for(let Y=0;Y<w.length;Y++){const ie=C[Y];ie!==null&&(C[Y]=null,w[Y].disconnect(ie))}O=null,Z=null,S.reset(),e.setRenderTarget(g),x=null,p=null,m=null,r=null,P=null,He.stop(),i.isPresenting=!1,e.setPixelRatio(L),e.setSize(z.width,z.height,!1),i.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(Y){s=Y,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(Y){c=Y,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return d||l},this.setReferenceSpace=function(Y){d=Y},this.getBaseLayer=function(){return p!==null?p:x},this.getBinding=function(){return m},this.getFrame=function(){return y},this.getSession=function(){return r},this.setSession=async function(Y){if(r=Y,r!==null){if(g=e.getRenderTarget(),r.addEventListener("select",W),r.addEventListener("selectstart",W),r.addEventListener("selectend",W),r.addEventListener("squeeze",W),r.addEventListener("squeezestart",W),r.addEventListener("squeezeend",W),r.addEventListener("end",K),r.addEventListener("inputsourceschange",ne),v.xrCompatible!==!0&&await t.makeXRCompatible(),L=e.getPixelRatio(),e.getSize(z),r.renderState.layers===void 0){const ie={antialias:v.antialias,alpha:!0,depth:v.depth,stencil:v.stencil,framebufferScaleFactor:s};x=new XRWebGLLayer(r,t,ie),r.updateRenderState({baseLayer:x}),e.setPixelRatio(1),e.setSize(x.framebufferWidth,x.framebufferHeight,!1),P=new Ol(x.framebufferWidth,x.framebufferHeight,{format:ws,type:Mo,colorSpace:e.outputColorSpace,stencilBuffer:v.stencil})}else{let ie=null,xe=null,pe=null;v.depth&&(pe=v.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,ie=v.stencil?Xu:wu,xe=v.stencil?$u:Wu);const Oe={colorFormat:t.RGBA8,depthFormat:pe,scaleFactor:s};m=new XRWebGLBinding(r,t),p=m.createProjectionLayer(Oe),r.updateRenderState({layers:[p]}),e.setPixelRatio(1),e.setSize(p.textureWidth,p.textureHeight,!1),P=new Ol(p.textureWidth,p.textureHeight,{format:ws,type:Mo,depthTexture:new t4(p.textureWidth,p.textureHeight,xe,void 0,void 0,void 0,void 0,void 0,void 0,ie),stencilBuffer:v.stencil,colorSpace:e.outputColorSpace,samples:v.antialias?4:0,resolveDepthBuffer:p.ignoreDepthValues===!1})}P.isXRRenderTarget=!0,this.setFoveation(u),d=null,l=await r.requestReferenceSpace(c),He.setContext(r),He.start(),i.isPresenting=!0,i.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(r!==null)return r.environmentBlendMode};function ne(Y){for(let ie=0;ie<Y.removed.length;ie++){const xe=Y.removed[ie],pe=C.indexOf(xe);pe>=0&&(C[pe]=null,w[pe].disconnect(xe))}for(let ie=0;ie<Y.added.length;ie++){const xe=Y.added[ie];let pe=C.indexOf(xe);if(pe===-1){for(let Ne=0;Ne<w.length;Ne++)if(Ne>=C.length){C.push(xe),pe=Ne;break}else if(C[Ne]===null){C[Ne]=xe,pe=Ne;break}if(pe===-1)break}const Oe=w[pe];Oe&&Oe.connect(xe)}}const Q=new Re,se=new Re;function G(Y,ie,xe){Q.setFromMatrixPosition(ie.matrixWorld),se.setFromMatrixPosition(xe.matrixWorld);const pe=Q.distanceTo(se),Oe=ie.projectionMatrix.elements,Ne=xe.projectionMatrix.elements,Ye=Oe[14]/(Oe[10]-1),U=Oe[14]/(Oe[10]+1),Je=(Oe[9]+1)/Oe[5],nt=(Oe[9]-1)/Oe[5],Tt=(Oe[8]-1)/Oe[0],Ve=(Ne[8]+1)/Ne[0],ut=Ye*Tt,tt=Ye*Ve,Ke=pe/(-Tt+Ve),Lt=Ke*-Tt;ie.matrixWorld.decompose(Y.position,Y.quaternion,Y.scale),Y.translateX(Lt),Y.translateZ(Ke),Y.matrixWorld.compose(Y.position,Y.quaternion,Y.scale),Y.matrixWorldInverse.copy(Y.matrixWorld).invert();const I=Ye+Ke,E=U+Ke,j=ut-Lt,ae=tt+(pe-Lt),ce=Je*U/E*I,ue=nt*U/E*I;Y.projectionMatrix.makePerspective(j,ae,ce,ue,I,E),Y.projectionMatrixInverse.copy(Y.projectionMatrix).invert()}function de(Y,ie){ie===null?Y.matrixWorld.copy(Y.matrix):Y.matrixWorld.multiplyMatrices(ie.matrixWorld,Y.matrix),Y.matrixWorldInverse.copy(Y.matrixWorld).invert()}this.updateCamera=function(Y){if(r===null)return;S.texture!==null&&(Y.near=S.depthNear,Y.far=S.depthFar),T.near=V.near=D.near=Y.near,T.far=V.far=D.far=Y.far,(O!==T.near||Z!==T.far)&&(r.updateRenderState({depthNear:T.near,depthFar:T.far}),O=T.near,Z=T.far,D.near=O,D.far=Z,V.near=O,V.far=Z,D.updateProjectionMatrix(),V.updateProjectionMatrix(),Y.updateProjectionMatrix());const ie=Y.parent,xe=T.cameras;de(T,ie);for(let pe=0;pe<xe.length;pe++)de(xe[pe],ie);xe.length===2?G(T,D,V):T.projectionMatrix.copy(D.projectionMatrix),le(Y,T,ie)};function le(Y,ie,xe){xe===null?Y.matrix.copy(ie.matrixWorld):(Y.matrix.copy(xe.matrixWorld),Y.matrix.invert(),Y.matrix.multiply(ie.matrixWorld)),Y.matrix.decompose(Y.position,Y.quaternion,Y.scale),Y.updateMatrixWorld(!0),Y.projectionMatrix.copy(ie.projectionMatrix),Y.projectionMatrixInverse.copy(ie.projectionMatrixInverse),Y.isPerspectiveCamera&&(Y.fov=B_*2*Math.atan(1/Y.projectionMatrix.elements[5]),Y.zoom=1)}this.getCamera=function(){return T},this.getFoveation=function(){if(!(p===null&&x===null))return u},this.setFoveation=function(Y){u=Y,p!==null&&(p.fixedFoveation=Y),x!==null&&x.fixedFoveation!==void 0&&(x.fixedFoveation=Y)},this.hasDepthSensing=function(){return S.texture!==null},this.getDepthSensingMesh=function(){return S.getMesh(T)};let X=null;function he(Y,ie){if(h=ie.getViewerPose(d||l),y=ie,h!==null){const xe=h.views;x!==null&&(e.setRenderTargetFramebuffer(P,x.framebuffer),e.setRenderTarget(P));let pe=!1;xe.length!==T.cameras.length&&(T.cameras.length=0,pe=!0);for(let Ne=0;Ne<xe.length;Ne++){const Ye=xe[Ne];let U=null;if(x!==null)U=x.getViewport(Ye);else{const nt=m.getViewSubImage(p,Ye);U=nt.viewport,Ne===0&&(e.setRenderTargetTextures(P,nt.colorTexture,p.ignoreDepthValues?void 0:nt.depthStencilTexture),e.setRenderTarget(P))}let Je=R[Ne];Je===void 0&&(Je=new Tr,Je.layers.enable(Ne),Je.viewport=new Ai,R[Ne]=Je),Je.matrix.fromArray(Ye.transform.matrix),Je.matrix.decompose(Je.position,Je.quaternion,Je.scale),Je.projectionMatrix.fromArray(Ye.projectionMatrix),Je.projectionMatrixInverse.copy(Je.projectionMatrix).invert(),Je.viewport.set(U.x,U.y,U.width,U.height),Ne===0&&(T.matrix.copy(Je.matrix),T.matrix.decompose(T.position,T.quaternion,T.scale)),pe===!0&&T.cameras.push(Je)}const Oe=r.enabledFeatures;if(Oe&&Oe.includes("depth-sensing")){const Ne=m.getDepthInformation(xe[0]);Ne&&Ne.isValid&&Ne.texture&&S.init(e,Ne,r.renderState)}}for(let xe=0;xe<w.length;xe++){const pe=C[xe],Oe=w[xe];pe!==null&&Oe!==void 0&&Oe.update(pe,ie,d||l)}X&&X(Y,ie),ie.detectedPlanes&&i.dispatchEvent({type:"planesdetected",data:ie}),y=null}const He=new Qb;He.setAnimationLoop(he),this.setAnimationLoop=function(Y){X=Y},this.dispose=function(){}}};const Zo=new kl,TO=new xi;function AO(n,e){function t(v,g){v.matrixAutoUpdate===!0&&v.updateMatrix(),g.value.copy(v.matrix)}function i(v,g){g.color.getRGB(v.fogColor.value,jb(n)),g.isFog?(v.fogNear.value=g.near,v.fogFar.value=g.far):g.isFogExp2&&(v.fogDensity.value=g.density)}function r(v,g,P,w,C){g.isMeshBasicMaterial||g.isMeshLambertMaterial?s(v,g):g.isMeshToonMaterial?(s(v,g),m(v,g)):g.isMeshPhongMaterial?(s(v,g),h(v,g)):g.isMeshStandardMaterial?(s(v,g),p(v,g),g.isMeshPhysicalMaterial&&x(v,g,C)):g.isMeshMatcapMaterial?(s(v,g),y(v,g)):g.isMeshDepthMaterial?s(v,g):g.isMeshDistanceMaterial?(s(v,g),S(v,g)):g.isMeshNormalMaterial?s(v,g):g.isLineBasicMaterial?(l(v,g),g.isLineDashedMaterial&&c(v,g)):g.isPointsMaterial?u(v,g,P,w):g.isSpriteMaterial?d(v,g):g.isShadowMaterial?(v.color.value.copy(g.color),v.opacity.value=g.opacity):g.isShaderMaterial&&(g.uniformsNeedUpdate=!1)}function s(v,g){v.opacity.value=g.opacity,g.color&&v.diffuse.value.copy(g.color),g.emissive&&v.emissive.value.copy(g.emissive).multiplyScalar(g.emissiveIntensity),g.map&&(v.map.value=g.map,t(g.map,v.mapTransform)),g.alphaMap&&(v.alphaMap.value=g.alphaMap,t(g.alphaMap,v.alphaMapTransform)),g.bumpMap&&(v.bumpMap.value=g.bumpMap,t(g.bumpMap,v.bumpMapTransform),v.bumpScale.value=g.bumpScale,g.side===Vi&&(v.bumpScale.value*=-1)),g.normalMap&&(v.normalMap.value=g.normalMap,t(g.normalMap,v.normalMapTransform),v.normalScale.value.copy(g.normalScale),g.side===Vi&&v.normalScale.value.negate()),g.displacementMap&&(v.displacementMap.value=g.displacementMap,t(g.displacementMap,v.displacementMapTransform),v.displacementScale.value=g.displacementScale,v.displacementBias.value=g.displacementBias),g.emissiveMap&&(v.emissiveMap.value=g.emissiveMap,t(g.emissiveMap,v.emissiveMapTransform)),g.specularMap&&(v.specularMap.value=g.specularMap,t(g.specularMap,v.specularMapTransform)),g.alphaTest>0&&(v.alphaTest.value=g.alphaTest);const P=e.get(g),w=P.envMap,C=P.envMapRotation;w&&(v.envMap.value=w,Zo.copy(C),Zo.x*=-1,Zo.y*=-1,Zo.z*=-1,w.isCubeTexture&&w.isRenderTargetTexture===!1&&(Zo.y*=-1,Zo.z*=-1),v.envMapRotation.value.setFromMatrix4(TO.makeRotationFromEuler(Zo)),v.flipEnvMap.value=w.isCubeTexture&&w.isRenderTargetTexture===!1?-1:1,v.reflectivity.value=g.reflectivity,v.ior.value=g.ior,v.refractionRatio.value=g.refractionRatio),g.lightMap&&(v.lightMap.value=g.lightMap,v.lightMapIntensity.value=g.lightMapIntensity,t(g.lightMap,v.lightMapTransform)),g.aoMap&&(v.aoMap.value=g.aoMap,v.aoMapIntensity.value=g.aoMapIntensity,t(g.aoMap,v.aoMapTransform))}function l(v,g){v.diffuse.value.copy(g.color),v.opacity.value=g.opacity,g.map&&(v.map.value=g.map,t(g.map,v.mapTransform))}function c(v,g){v.dashSize.value=g.dashSize,v.totalSize.value=g.dashSize+g.gapSize,v.scale.value=g.scale}function u(v,g,P,w){v.diffuse.value.copy(g.color),v.opacity.value=g.opacity,v.size.value=g.size*P,v.scale.value=w*.5,g.map&&(v.map.value=g.map,t(g.map,v.uvTransform)),g.alphaMap&&(v.alphaMap.value=g.alphaMap,t(g.alphaMap,v.alphaMapTransform)),g.alphaTest>0&&(v.alphaTest.value=g.alphaTest)}function d(v,g){v.diffuse.value.copy(g.color),v.opacity.value=g.opacity,v.rotation.value=g.rotation,g.map&&(v.map.value=g.map,t(g.map,v.mapTransform)),g.alphaMap&&(v.alphaMap.value=g.alphaMap,t(g.alphaMap,v.alphaMapTransform)),g.alphaTest>0&&(v.alphaTest.value=g.alphaTest)}function h(v,g){v.specular.value.copy(g.specular),v.shininess.value=Math.max(g.shininess,1e-4)}function m(v,g){g.gradientMap&&(v.gradientMap.value=g.gradientMap)}function p(v,g){v.metalness.value=g.metalness,g.metalnessMap&&(v.metalnessMap.value=g.metalnessMap,t(g.metalnessMap,v.metalnessMapTransform)),v.roughness.value=g.roughness,g.roughnessMap&&(v.roughnessMap.value=g.roughnessMap,t(g.roughnessMap,v.roughnessMapTransform)),g.envMap&&(v.envMapIntensity.value=g.envMapIntensity)}function x(v,g,P){v.ior.value=g.ior,g.sheen>0&&(v.sheenColor.value.copy(g.sheenColor).multiplyScalar(g.sheen),v.sheenRoughness.value=g.sheenRoughness,g.sheenColorMap&&(v.sheenColorMap.value=g.sheenColorMap,t(g.sheenColorMap,v.sheenColorMapTransform)),g.sheenRoughnessMap&&(v.sheenRoughnessMap.value=g.sheenRoughnessMap,t(g.sheenRoughnessMap,v.sheenRoughnessMapTransform))),g.clearcoat>0&&(v.clearcoat.value=g.clearcoat,v.clearcoatRoughness.value=g.clearcoatRoughness,g.clearcoatMap&&(v.clearcoatMap.value=g.clearcoatMap,t(g.clearcoatMap,v.clearcoatMapTransform)),g.clearcoatRoughnessMap&&(v.clearcoatRoughnessMap.value=g.clearcoatRoughnessMap,t(g.clearcoatRoughnessMap,v.clearcoatRoughnessMapTransform)),g.clearcoatNormalMap&&(v.clearcoatNormalMap.value=g.clearcoatNormalMap,t(g.clearcoatNormalMap,v.clearcoatNormalMapTransform),v.clearcoatNormalScale.value.copy(g.clearcoatNormalScale),g.side===Vi&&v.clearcoatNormalScale.value.negate())),g.dispersion>0&&(v.dispersion.value=g.dispersion),g.iridescence>0&&(v.iridescence.value=g.iridescence,v.iridescenceIOR.value=g.iridescenceIOR,v.iridescenceThicknessMinimum.value=g.iridescenceThicknessRange[0],v.iridescenceThicknessMaximum.value=g.iridescenceThicknessRange[1],g.iridescenceMap&&(v.iridescenceMap.value=g.iridescenceMap,t(g.iridescenceMap,v.iridescenceMapTransform)),g.iridescenceThicknessMap&&(v.iridescenceThicknessMap.value=g.iridescenceThicknessMap,t(g.iridescenceThicknessMap,v.iridescenceThicknessMapTransform))),g.transmission>0&&(v.transmission.value=g.transmission,v.transmissionSamplerMap.value=P.texture,v.transmissionSamplerSize.value.set(P.width,P.height),g.transmissionMap&&(v.transmissionMap.value=g.transmissionMap,t(g.transmissionMap,v.transmissionMapTransform)),v.thickness.value=g.thickness,g.thicknessMap&&(v.thicknessMap.value=g.thicknessMap,t(g.thicknessMap,v.thicknessMapTransform)),v.attenuationDistance.value=g.attenuationDistance,v.attenuationColor.value.copy(g.attenuationColor)),g.anisotropy>0&&(v.anisotropyVector.value.set(g.anisotropy*Math.cos(g.anisotropyRotation),g.anisotropy*Math.sin(g.anisotropyRotation)),g.anisotropyMap&&(v.anisotropyMap.value=g.anisotropyMap,t(g.anisotropyMap,v.anisotropyMapTransform))),v.specularIntensity.value=g.specularIntensity,v.specularColor.value.copy(g.specularColor),g.specularColorMap&&(v.specularColorMap.value=g.specularColorMap,t(g.specularColorMap,v.specularColorMapTransform)),g.specularIntensityMap&&(v.specularIntensityMap.value=g.specularIntensityMap,t(g.specularIntensityMap,v.specularIntensityMapTransform))}function y(v,g){g.matcap&&(v.matcap.value=g.matcap)}function S(v,g){const P=e.get(g).light;v.referencePosition.value.setFromMatrixPosition(P.matrixWorld),v.nearDistance.value=P.shadow.camera.near,v.farDistance.value=P.shadow.camera.far}return{refreshFogUniforms:i,refreshMaterialUniforms:r}}function bO(n,e,t,i){let r={},s={},l=[];const c=n.getParameter(n.MAX_UNIFORM_BUFFER_BINDINGS);function u(P,w){const C=w.program;i.uniformBlockBinding(P,C)}function d(P,w){let C=r[P.id];C===void 0&&(y(P),C=h(P),r[P.id]=C,P.addEventListener("dispose",v));const z=w.program;i.updateUBOMapping(P,z);const L=e.render.frame;s[P.id]!==L&&(p(P),s[P.id]=L)}function h(P){const w=m();P.__bindingPointIndex=w;const C=n.createBuffer(),z=P.__size,L=P.usage;return n.bindBuffer(n.UNIFORM_BUFFER,C),n.bufferData(n.UNIFORM_BUFFER,z,L),n.bindBuffer(n.UNIFORM_BUFFER,null),n.bindBufferBase(n.UNIFORM_BUFFER,w,C),C}function m(){for(let P=0;P<c;P++)if(l.indexOf(P)===-1)return l.push(P),P;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function p(P){const w=r[P.id],C=P.uniforms,z=P.__cache;n.bindBuffer(n.UNIFORM_BUFFER,w);for(let L=0,D=C.length;L<D;L++){const V=Array.isArray(C[L])?C[L]:[C[L]];for(let R=0,T=V.length;R<T;R++){const O=V[R];if(x(O,L,R,z)===!0){const Z=O.__offset,W=Array.isArray(O.value)?O.value:[O.value];let K=0;for(let ne=0;ne<W.length;ne++){const Q=W[ne],se=S(Q);typeof Q=="number"||typeof Q=="boolean"?(O.__data[0]=Q,n.bufferSubData(n.UNIFORM_BUFFER,Z+K,O.__data)):Q.isMatrix3?(O.__data[0]=Q.elements[0],O.__data[1]=Q.elements[1],O.__data[2]=Q.elements[2],O.__data[3]=0,O.__data[4]=Q.elements[3],O.__data[5]=Q.elements[4],O.__data[6]=Q.elements[5],O.__data[7]=0,O.__data[8]=Q.elements[6],O.__data[9]=Q.elements[7],O.__data[10]=Q.elements[8],O.__data[11]=0):(Q.toArray(O.__data,K),K+=se.storage/Float32Array.BYTES_PER_ELEMENT)}n.bufferSubData(n.UNIFORM_BUFFER,Z,O.__data)}}}n.bindBuffer(n.UNIFORM_BUFFER,null)}function x(P,w,C,z){const L=P.value,D=w+"_"+C;if(z[D]===void 0)return typeof L=="number"||typeof L=="boolean"?z[D]=L:z[D]=L.clone(),!0;{const V=z[D];if(typeof L=="number"||typeof L=="boolean"){if(V!==L)return z[D]=L,!0}else if(V.equals(L)===!1)return V.copy(L),!0}return!1}function y(P){const w=P.uniforms;let C=0;const z=16;for(let D=0,V=w.length;D<V;D++){const R=Array.isArray(w[D])?w[D]:[w[D]];for(let T=0,O=R.length;T<O;T++){const Z=R[T],W=Array.isArray(Z.value)?Z.value:[Z.value];for(let K=0,ne=W.length;K<ne;K++){const Q=W[K],se=S(Q),G=C%z;G!==0&&z-G<se.boundary&&(C+=z-G),Z.__data=new Float32Array(se.storage/Float32Array.BYTES_PER_ELEMENT),Z.__offset=C,C+=se.storage}}}const L=C%z;return L>0&&(C+=z-L),P.__size=C,P.__cache={},this}function S(P){const w={boundary:0,storage:0};return typeof P=="number"||typeof P=="boolean"?(w.boundary=4,w.storage=4):P.isVector2?(w.boundary=8,w.storage=8):P.isVector3||P.isColor?(w.boundary=16,w.storage=12):P.isVector4?(w.boundary=16,w.storage=16):P.isMatrix3?(w.boundary=48,w.storage=48):P.isMatrix4?(w.boundary=64,w.storage=64):P.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",P),w}function v(P){const w=P.target;w.removeEventListener("dispose",v);const C=l.indexOf(w.__bindingPointIndex);l.splice(C,1),n.deleteBuffer(r[w.id]),delete r[w.id],delete s[w.id]}function g(){for(const P in r)n.deleteBuffer(r[P]);l=[],r={},s={}}return{bind:u,update:d,dispose:g}}let RO=class{constructor(e={}){const{canvas:t=_D(),context:i=null,depth:r=!0,stencil:s=!1,alpha:l=!1,antialias:c=!1,premultipliedAlpha:u=!0,preserveDrawingBuffer:d=!1,powerPreference:h="default",failIfMajorPerformanceCaveat:m=!1}=e;this.isWebGLRenderer=!0;let p;if(i!==null){if(typeof WebGLRenderingContext<"u"&&i instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");p=i.getContextAttributes().alpha}else p=l;const x=new Uint32Array(4),y=new Int32Array(4);let S=null,v=null;const g=[],P=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this._outputColorSpace=ps,this.toneMapping=go,this.toneMappingExposure=1;const w=this;let C=!1,z=0,L=0,D=null,V=-1,R=null;const T=new Ai,O=new Ai;let Z=null;const W=new an(0);let K=0,ne=t.width,Q=t.height,se=1,G=null,de=null;const le=new Ai(0,0,ne,Q),X=new Ai(0,0,ne,Q);let he=!1;const He=new Zb;let Y=!1,ie=!1;const xe=new xi,pe=new Re,Oe={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let Ne=!1;function Ye(){return D===null?se:1}let U=i;function Je(A,k){return t.getContext(A,k)}try{const A={alpha:!0,depth:r,stencil:s,antialias:c,premultipliedAlpha:u,preserveDrawingBuffer:d,powerPreference:h,failIfMajorPerformanceCaveat:m};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${Ix}`),t.addEventListener("webglcontextlost",Ae,!1),t.addEventListener("webglcontextrestored",ee,!1),t.addEventListener("webglcontextcreationerror",te,!1),U===null){const k="webgl2";if(U=Je(k,A),U===null)throw Je(k)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(A){throw console.error("THREE.WebGLRenderer: "+A.message),A}let nt,Tt,Ve,ut,tt,Ke,Lt,I,E,j,ae,ce,ue,Fe,Me,Se,Ze,me,Pe,it,Xe,Te,et,rt;function bt(){nt=new OU(U),nt.init(),Te=new _O(U,nt),Tt=new CU(U,nt,e,Te),Ve=new gO(U),ut=new zU(U),tt=new nO,Ke=new vO(U,nt,Ve,tt,Tt,Te,ut),Lt=new LU(w),I=new UU(w),E=new $D(U),et=new bU(U,E),j=new FU(U,E,ut,et),ae=new HU(U,j,E,ut),Pe=new BU(U,Tt,Ke),Se=new PU(tt),ce=new tO(w,Lt,I,nt,Tt,et,Se),ue=new AO(w,tt),Fe=new rO,Me=new uO(nt),me=new AU(w,Lt,I,Ve,ae,p,u),Ze=new mO(w,ae,Tt),rt=new bO(U,ut,Tt,Ve),it=new RU(U,nt,ut),Xe=new kU(U,nt,ut),ut.programs=ce.programs,w.capabilities=Tt,w.extensions=nt,w.properties=tt,w.renderLists=Fe,w.shadowMap=Ze,w.state=Ve,w.info=ut}bt();const N=new wO(w,U);this.xr=N,this.getContext=function(){return U},this.getContextAttributes=function(){return U.getContextAttributes()},this.forceContextLoss=function(){const A=nt.get("WEBGL_lose_context");A&&A.loseContext()},this.forceContextRestore=function(){const A=nt.get("WEBGL_lose_context");A&&A.restoreContext()},this.getPixelRatio=function(){return se},this.setPixelRatio=function(A){A!==void 0&&(se=A,this.setSize(ne,Q,!1))},this.getSize=function(A){return A.set(ne,Q)},this.setSize=function(A,k,$=!0){if(N.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}ne=A,Q=k,t.width=Math.floor(A*se),t.height=Math.floor(k*se),$===!0&&(t.style.width=A+"px",t.style.height=k+"px"),this.setViewport(0,0,A,k)},this.getDrawingBufferSize=function(A){return A.set(ne*se,Q*se).floor()},this.setDrawingBufferSize=function(A,k,$){ne=A,Q=k,se=$,t.width=Math.floor(A*$),t.height=Math.floor(k*$),this.setViewport(0,0,A,k)},this.getCurrentViewport=function(A){return A.copy(T)},this.getViewport=function(A){return A.copy(le)},this.setViewport=function(A,k,$,q){A.isVector4?le.set(A.x,A.y,A.z,A.w):le.set(A,k,$,q),Ve.viewport(T.copy(le).multiplyScalar(se).round())},this.getScissor=function(A){return A.copy(X)},this.setScissor=function(A,k,$,q){A.isVector4?X.set(A.x,A.y,A.z,A.w):X.set(A,k,$,q),Ve.scissor(O.copy(X).multiplyScalar(se).round())},this.getScissorTest=function(){return he},this.setScissorTest=function(A){Ve.setScissorTest(he=A)},this.setOpaqueSort=function(A){G=A},this.setTransparentSort=function(A){de=A},this.getClearColor=function(A){return A.copy(me.getClearColor())},this.setClearColor=function(){me.setClearColor.apply(me,arguments)},this.getClearAlpha=function(){return me.getClearAlpha()},this.setClearAlpha=function(){me.setClearAlpha.apply(me,arguments)},this.clear=function(A=!0,k=!0,$=!0){let q=0;if(A){let H=!1;if(D!==null){const ve=D.texture.format;H=ve===Lb||ve===Pb||ve===Cb}if(H){const ve=D.texture.type,be=ve===Mo||ve===Wu||ve===Nm||ve===$u||ve===bb||ve===Rb,Ce=me.getClearColor(),Le=me.getClearAlpha(),De=Ce.r,$e=Ce.g,ke=Ce.b;be?(x[0]=De,x[1]=$e,x[2]=ke,x[3]=Le,U.clearBufferuiv(U.COLOR,0,x)):(y[0]=De,y[1]=$e,y[2]=ke,y[3]=Le,U.clearBufferiv(U.COLOR,0,y))}else q|=U.COLOR_BUFFER_BIT}k&&(q|=U.DEPTH_BUFFER_BIT),$&&(q|=U.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),U.clear(q)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",Ae,!1),t.removeEventListener("webglcontextrestored",ee,!1),t.removeEventListener("webglcontextcreationerror",te,!1),Fe.dispose(),Me.dispose(),tt.dispose(),Lt.dispose(),I.dispose(),ae.dispose(),et.dispose(),rt.dispose(),ce.dispose(),N.dispose(),N.removeEventListener("sessionstart",dn),N.removeEventListener("sessionend",yn),In.stop()};function Ae(A){A.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),C=!0}function ee(){console.log("THREE.WebGLRenderer: Context Restored."),C=!1;const A=ut.autoReset,k=Ze.enabled,$=Ze.autoUpdate,q=Ze.needsUpdate,H=Ze.type;bt(),ut.autoReset=A,Ze.enabled=k,Ze.autoUpdate=$,Ze.needsUpdate=q,Ze.type=H}function te(A){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",A.statusMessage)}function ge(A){const k=A.target;k.removeEventListener("dispose",ge),qe(k)}function qe(A){dt(A),tt.remove(A)}function dt(A){const k=tt.get(A).programs;k!==void 0&&(k.forEach(function($){ce.releaseProgram($)}),A.isShaderMaterial&&ce.releaseShaderCache(A))}this.renderBufferDirect=function(A,k,$,q,H,ve){k===null&&(k=Oe);const be=H.isMesh&&H.matrixWorld.determinant()<0,Ce=hf(A,k,$,q,H);Ve.setMaterial(q,be);let Le=$.index,De=1;if(q.wireframe===!0){if(Le=j.getWireframeAttribute($),Le===void 0)return;De=2}const $e=$.drawRange,ke=$.attributes.position;let pt=$e.start*De,At=($e.start+$e.count)*De;ve!==null&&(pt=Math.max(pt,ve.start*De),At=Math.min(At,(ve.start+ve.count)*De)),Le!==null?(pt=Math.max(pt,0),At=Math.min(At,Le.count)):ke!=null&&(pt=Math.max(pt,0),At=Math.min(At,ke.count));const Rt=At-pt;if(Rt<0||Rt===1/0)return;et.setup(H,q,Ce,$,Le);let Qt,mt=it;if(Le!==null&&(Qt=E.get(Le),mt=Xe,mt.setIndex(Qt)),H.isMesh)q.wireframe===!0?(Ve.setLineWidth(q.wireframeLinewidth*Ye()),mt.setMode(U.LINES)):mt.setMode(U.TRIANGLES);else if(H.isLine){let Ie=q.linewidth;Ie===void 0&&(Ie=1),Ve.setLineWidth(Ie*Ye()),H.isLineSegments?mt.setMode(U.LINES):H.isLineLoop?mt.setMode(U.LINE_LOOP):mt.setMode(U.LINE_STRIP)}else H.isPoints?mt.setMode(U.POINTS):H.isSprite&&mt.setMode(U.TRIANGLES);if(H.isBatchedMesh)H._multiDrawInstances!==null?mt.renderMultiDrawInstances(H._multiDrawStarts,H._multiDrawCounts,H._multiDrawCount,H._multiDrawInstances):mt.renderMultiDraw(H._multiDrawStarts,H._multiDrawCounts,H._multiDrawCount);else if(H.isInstancedMesh)mt.renderInstances(pt,Rt,H.count);else if($.isInstancedBufferGeometry){const Ie=$._maxInstanceCount!==void 0?$._maxInstanceCount:1/0,$t=Math.min($.instanceCount,Ie);mt.renderInstances(pt,Rt,$t)}else mt.render(pt,Rt)};function Pt(A,k,$){A.transparent===!0&&A.side===sa&&A.forceSinglePass===!1?(A.side=Vi,A.needsUpdate=!0,Pi(A,k,$),A.side=da,A.needsUpdate=!0,Pi(A,k,$),A.side=sa):Pi(A,k,$)}this.compile=function(A,k,$=null){$===null&&($=A),v=Me.get($),v.init(k),P.push(v),$.traverseVisible(function(H){H.isLight&&H.layers.test(k.layers)&&(v.pushLight(H),H.castShadow&&v.pushShadow(H))}),A!==$&&A.traverseVisible(function(H){H.isLight&&H.layers.test(k.layers)&&(v.pushLight(H),H.castShadow&&v.pushShadow(H))}),v.setupLights();const q=new Set;return A.traverse(function(H){const ve=H.material;if(ve)if(Array.isArray(ve))for(let be=0;be<ve.length;be++){const Ce=ve[be];Pt(Ce,$,H),q.add(Ce)}else Pt(ve,$,H),q.add(ve)}),P.pop(),v=null,q},this.compileAsync=function(A,k,$=null){const q=this.compile(A,k,$);return new Promise(H=>{function ve(){if(q.forEach(function(be){tt.get(be).currentProgram.isReady()&&q.delete(be)}),q.size===0){H(A);return}setTimeout(ve,10)}nt.get("KHR_parallel_shader_compile")!==null?ve():setTimeout(ve,10)})};let Nt=null;function xt(A){Nt&&Nt(A)}function dn(){In.stop()}function yn(){In.start()}const In=new Qb;In.setAnimationLoop(xt),typeof self<"u"&&In.setContext(self),this.setAnimationLoop=function(A){Nt=A,N.setAnimationLoop(A),A===null?In.stop():In.start()},N.addEventListener("sessionstart",dn),N.addEventListener("sessionend",yn),this.render=function(A,k){if(k!==void 0&&k.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(C===!0)return;if(A.matrixWorldAutoUpdate===!0&&A.updateMatrixWorld(),k.parent===null&&k.matrixWorldAutoUpdate===!0&&k.updateMatrixWorld(),N.enabled===!0&&N.isPresenting===!0&&(N.cameraAutoUpdate===!0&&N.updateCamera(k),k=N.getCamera()),A.isScene===!0&&A.onBeforeRender(w,A,k,D),v=Me.get(A,P.length),v.init(k),P.push(v),xe.multiplyMatrices(k.projectionMatrix,k.matrixWorldInverse),He.setFromProjectionMatrix(xe),ie=this.localClippingEnabled,Y=Se.init(this.clippingPlanes,ie),S=Fe.get(A,g.length),S.init(),g.push(S),N.enabled===!0&&N.isPresenting===!0){const ve=w.xr.getDepthSensingMesh();ve!==null&&Ir(ve,k,-1/0,w.sortObjects)}Ir(A,k,0,w.sortObjects),S.finish(),w.sortObjects===!0&&S.sort(G,de),Ne=N.enabled===!1||N.isPresenting===!1||N.hasDepthSensing()===!1,Ne&&me.addToRenderList(S,A),this.info.render.frame++,Y===!0&&Se.beginShadows();const $=v.state.shadowsArray;Ze.render($,A,k),Y===!0&&Se.endShadows(),this.info.autoReset===!0&&this.info.reset();const q=S.opaque,H=S.transmissive;if(v.setupLights(),k.isArrayCamera){const ve=k.cameras;if(H.length>0)for(let be=0,Ce=ve.length;be<Ce;be++){const Le=ve[be];Po(q,H,A,Le)}Ne&&me.render(A);for(let be=0,Ce=ve.length;be<Ce;be++){const Le=ve[be];Dr(S,A,Le,Le.viewport)}}else H.length>0&&Po(q,H,A,k),Ne&&me.render(A),Dr(S,A,k);D!==null&&(Ke.updateMultisampleRenderTarget(D),Ke.updateRenderTargetMipmap(D)),A.isScene===!0&&A.onAfterRender(w,A,k),et.resetDefaultState(),V=-1,R=null,P.pop(),P.length>0?(v=P[P.length-1],Y===!0&&Se.setGlobalState(w.clippingPlanes,v.state.camera)):v=null,g.pop(),g.length>0?S=g[g.length-1]:S=null};function Ir(A,k,$,q){if(A.visible===!1)return;if(A.layers.test(k.layers)){if(A.isGroup)$=A.renderOrder;else if(A.isLOD)A.autoUpdate===!0&&A.update(k);else if(A.isLight)v.pushLight(A),A.castShadow&&v.pushShadow(A);else if(A.isSprite){if(!A.frustumCulled||He.intersectsSprite(A)){q&&pe.setFromMatrixPosition(A.matrixWorld).applyMatrix4(xe);const be=ae.update(A),Ce=A.material;Ce.visible&&S.push(A,be,Ce,$,pe.z,null)}}else if((A.isMesh||A.isLine||A.isPoints)&&(!A.frustumCulled||He.intersectsObject(A))){const be=ae.update(A),Ce=A.material;if(q&&(A.boundingSphere!==void 0?(A.boundingSphere===null&&A.computeBoundingSphere(),pe.copy(A.boundingSphere.center)):(be.boundingSphere===null&&be.computeBoundingSphere(),pe.copy(be.boundingSphere.center)),pe.applyMatrix4(A.matrixWorld).applyMatrix4(xe)),Array.isArray(Ce)){const Le=be.groups;for(let De=0,$e=Le.length;De<$e;De++){const ke=Le[De],pt=Ce[ke.materialIndex];pt&&pt.visible&&S.push(A,be,pt,$,pe.z,ke)}}else Ce.visible&&S.push(A,be,Ce,$,pe.z,null)}}const ve=A.children;for(let be=0,Ce=ve.length;be<Ce;be++)Ir(ve[be],k,$,q)}function Dr(A,k,$,q){const H=A.opaque,ve=A.transmissive,be=A.transparent;v.setupLightsView($),Y===!0&&Se.setGlobalState(w.clippingPlanes,$),q&&Ve.viewport(T.copy(q)),H.length>0&&yi(H,k,$),ve.length>0&&yi(ve,k,$),be.length>0&&yi(be,k,$),Ve.buffers.depth.setTest(!0),Ve.buffers.depth.setMask(!0),Ve.buffers.color.setMask(!0),Ve.setPolygonOffset(!1)}function Po(A,k,$,q){if(($.isScene===!0?$.overrideMaterial:null)!==null)return;v.state.transmissionRenderTarget[q.id]===void 0&&(v.state.transmissionRenderTarget[q.id]=new Ol(1,1,{generateMipmaps:!0,type:nt.has("EXT_color_buffer_half_float")||nt.has("EXT_color_buffer_float")?p0:Mo,minFilter:Ml,samples:4,stencilBuffer:s,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:nn.workingColorSpace}));const ve=v.state.transmissionRenderTarget[q.id],be=q.viewport||T;ve.setSize(be.z,be.w);const Ce=w.getRenderTarget();w.setRenderTarget(ve),w.getClearColor(W),K=w.getClearAlpha(),K<1&&w.setClearColor(16777215,.5),Ne?me.render($):w.clear();const Le=w.toneMapping;w.toneMapping=go;const De=q.viewport;if(q.viewport!==void 0&&(q.viewport=void 0),v.setupLightsView(q),Y===!0&&Se.setGlobalState(w.clippingPlanes,q),yi(A,$,q),Ke.updateMultisampleRenderTarget(ve),Ke.updateRenderTargetMipmap(ve),nt.has("WEBGL_multisampled_render_to_texture")===!1){let $e=!1;for(let ke=0,pt=k.length;ke<pt;ke++){const At=k[ke],Rt=At.object,Qt=At.geometry,mt=At.material,Ie=At.group;if(mt.side===sa&&Rt.layers.test(q.layers)){const $t=mt.side;mt.side=Vi,mt.needsUpdate=!0,ls(Rt,$,q,Qt,mt,Ie),mt.side=$t,mt.needsUpdate=!0,$e=!0}}$e===!0&&(Ke.updateMultisampleRenderTarget(ve),Ke.updateRenderTargetMipmap(ve))}w.setRenderTarget(Ce),w.setClearColor(W,K),De!==void 0&&(q.viewport=De),w.toneMapping=Le}function yi(A,k,$){const q=k.isScene===!0?k.overrideMaterial:null;for(let H=0,ve=A.length;H<ve;H++){const be=A[H],Ce=be.object,Le=be.geometry,De=q===null?be.material:q,$e=be.group;Ce.layers.test($.layers)&&ls(Ce,k,$,Le,De,$e)}}function ls(A,k,$,q,H,ve){A.onBeforeRender(w,k,$,q,H,ve),A.modelViewMatrix.multiplyMatrices($.matrixWorldInverse,A.matrixWorld),A.normalMatrix.getNormalMatrix(A.modelViewMatrix),H.onBeforeRender(w,k,$,q,A,ve),H.transparent===!0&&H.side===sa&&H.forceSinglePass===!1?(H.side=Vi,H.needsUpdate=!0,w.renderBufferDirect($,k,q,H,A,ve),H.side=da,H.needsUpdate=!0,w.renderBufferDirect($,k,q,H,A,ve),H.side=sa):w.renderBufferDirect($,k,q,H,A,ve),A.onAfterRender(w,k,$,q,H,ve)}function Pi(A,k,$){k.isScene!==!0&&(k=Oe);const q=tt.get(A),H=v.state.lights,ve=v.state.shadowsArray,be=H.state.version,Ce=ce.getParameters(A,H.state,ve,k,$),Le=ce.getProgramCacheKey(Ce);let De=q.programs;q.environment=A.isMeshStandardMaterial?k.environment:null,q.fog=k.fog,q.envMap=(A.isMeshStandardMaterial?I:Lt).get(A.envMap||q.environment),q.envMapRotation=q.environment!==null&&A.envMap===null?k.environmentRotation:A.envMapRotation,De===void 0&&(A.addEventListener("dispose",ge),De=new Map,q.programs=De);let $e=De.get(Le);if($e!==void 0){if(q.currentProgram===$e&&q.lightsStateVersion===be)return Lo(A,Ce),$e}else Ce.uniforms=ce.getUniforms(A),A.onBuild($,Ce,w),A.onBeforeCompile(Ce,w),$e=ce.acquireProgram(Ce,Le),De.set(Le,$e),q.uniforms=Ce.uniforms;const ke=q.uniforms;return(!A.isShaderMaterial&&!A.isRawShaderMaterial||A.clipping===!0)&&(ke.clippingPlanes=Se.uniform),Lo(A,Ce),q.needsLights=Nr(A),q.lightsStateVersion=be,q.needsLights&&(ke.ambientLightColor.value=H.state.ambient,ke.lightProbe.value=H.state.probe,ke.directionalLights.value=H.state.directional,ke.directionalLightShadows.value=H.state.directionalShadow,ke.spotLights.value=H.state.spot,ke.spotLightShadows.value=H.state.spotShadow,ke.rectAreaLights.value=H.state.rectArea,ke.ltc_1.value=H.state.rectAreaLTC1,ke.ltc_2.value=H.state.rectAreaLTC2,ke.pointLights.value=H.state.point,ke.pointLightShadows.value=H.state.pointShadow,ke.hemisphereLights.value=H.state.hemi,ke.directionalShadowMap.value=H.state.directionalShadowMap,ke.directionalShadowMatrix.value=H.state.directionalShadowMatrix,ke.spotShadowMap.value=H.state.spotShadowMap,ke.spotLightMatrix.value=H.state.spotLightMatrix,ke.spotLightMap.value=H.state.spotLightMap,ke.pointShadowMap.value=H.state.pointShadowMap,ke.pointShadowMatrix.value=H.state.pointShadowMatrix),q.currentProgram=$e,q.uniformsList=null,$e}function Ds(A){if(A.uniformsList===null){const k=A.currentProgram.getUniforms();A.uniformsList=mm.seqWithValue(k.seq,A.uniforms)}return A.uniformsList}function Lo(A,k){const $=tt.get(A);$.outputColorSpace=k.outputColorSpace,$.batching=k.batching,$.batchingColor=k.batchingColor,$.instancing=k.instancing,$.instancingColor=k.instancingColor,$.instancingMorph=k.instancingMorph,$.skinning=k.skinning,$.morphTargets=k.morphTargets,$.morphNormals=k.morphNormals,$.morphColors=k.morphColors,$.morphTargetsCount=k.morphTargetsCount,$.numClippingPlanes=k.numClippingPlanes,$.numIntersection=k.numClipIntersection,$.vertexAlphas=k.vertexAlphas,$.vertexTangents=k.vertexTangents,$.toneMapping=k.toneMapping}function hf(A,k,$,q,H){k.isScene!==!0&&(k=Oe),Ke.resetTextureUnits();const ve=k.fog,be=q.isMeshStandardMaterial?k.environment:null,Ce=D===null?w.outputColorSpace:D.isXRRenderTarget===!0?D.texture.colorSpace:Ro,Le=(q.isMeshStandardMaterial?I:Lt).get(q.envMap||be),De=q.vertexColors===!0&&!!$.attributes.color&&$.attributes.color.itemSize===4,$e=!!$.attributes.tangent&&(!!q.normalMap||q.anisotropy>0),ke=!!$.morphAttributes.position,pt=!!$.morphAttributes.normal,At=!!$.morphAttributes.color;let Rt=go;q.toneMapped&&(D===null||D.isXRRenderTarget===!0)&&(Rt=w.toneMapping);const Qt=$.morphAttributes.position||$.morphAttributes.normal||$.morphAttributes.color,mt=Qt!==void 0?Qt.length:0,Ie=tt.get(q),$t=v.state.lights;if(Y===!0&&(ie===!0||A!==R)){const ln=A===R&&q.id===V;Se.setState(q,A,ln)}let ct=!1;q.version===Ie.__version?(Ie.needsLights&&Ie.lightsStateVersion!==$t.state.version||Ie.outputColorSpace!==Ce||H.isBatchedMesh&&Ie.batching===!1||!H.isBatchedMesh&&Ie.batching===!0||H.isBatchedMesh&&Ie.batchingColor===!0&&H.colorTexture===null||H.isBatchedMesh&&Ie.batchingColor===!1&&H.colorTexture!==null||H.isInstancedMesh&&Ie.instancing===!1||!H.isInstancedMesh&&Ie.instancing===!0||H.isSkinnedMesh&&Ie.skinning===!1||!H.isSkinnedMesh&&Ie.skinning===!0||H.isInstancedMesh&&Ie.instancingColor===!0&&H.instanceColor===null||H.isInstancedMesh&&Ie.instancingColor===!1&&H.instanceColor!==null||H.isInstancedMesh&&Ie.instancingMorph===!0&&H.morphTexture===null||H.isInstancedMesh&&Ie.instancingMorph===!1&&H.morphTexture!==null||Ie.envMap!==Le||q.fog===!0&&Ie.fog!==ve||Ie.numClippingPlanes!==void 0&&(Ie.numClippingPlanes!==Se.numPlanes||Ie.numIntersection!==Se.numIntersection)||Ie.vertexAlphas!==De||Ie.vertexTangents!==$e||Ie.morphTargets!==ke||Ie.morphNormals!==pt||Ie.morphColors!==At||Ie.toneMapping!==Rt||Ie.morphTargetsCount!==mt)&&(ct=!0):(ct=!0,Ie.__version=q.version);let Dn=Ie.currentProgram;ct===!0&&(Dn=Pi(q,k,H));let Ur=!1,ri=!1,ur=!1;const It=Dn.getUniforms(),En=Ie.uniforms;if(Ve.useProgram(Dn.program)&&(Ur=!0,ri=!0,ur=!0),q.id!==V&&(V=q.id,ri=!0),Ur||R!==A){It.setValue(U,"projectionMatrix",A.projectionMatrix),It.setValue(U,"viewMatrix",A.matrixWorldInverse);const ln=It.map.cameraPosition;ln!==void 0&&ln.setValue(U,pe.setFromMatrixPosition(A.matrixWorld)),Tt.logarithmicDepthBuffer&&It.setValue(U,"logDepthBufFC",2/(Math.log(A.far+1)/Math.LN2)),(q.isMeshPhongMaterial||q.isMeshToonMaterial||q.isMeshLambertMaterial||q.isMeshBasicMaterial||q.isMeshStandardMaterial||q.isShaderMaterial)&&It.setValue(U,"isOrthographic",A.isOrthographicCamera===!0),R!==A&&(R=A,ri=!0,ur=!0)}if(H.isSkinnedMesh){It.setOptional(U,H,"bindMatrix"),It.setOptional(U,H,"bindMatrixInverse");const ln=H.skeleton;ln&&(ln.boneTexture===null&&ln.computeBoneTexture(),It.setValue(U,"boneTexture",ln.boneTexture,Ke))}H.isBatchedMesh&&(It.setOptional(U,H,"batchingTexture"),It.setValue(U,"batchingTexture",H._matricesTexture,Ke),It.setOptional(U,H,"batchingColorTexture"),H._colorsTexture!==null&&It.setValue(U,"batchingColorTexture",H._colorsTexture,Ke));const fr=$.morphAttributes;if((fr.position!==void 0||fr.normal!==void 0||fr.color!==void 0)&&Pe.update(H,$,Dn),(ri||Ie.receiveShadow!==H.receiveShadow)&&(Ie.receiveShadow=H.receiveShadow,It.setValue(U,"receiveShadow",H.receiveShadow)),q.isMeshGouraudMaterial&&q.envMap!==null&&(En.envMap.value=Le,En.flipEnvMap.value=Le.isCubeTexture&&Le.isRenderTargetTexture===!1?-1:1),q.isMeshStandardMaterial&&q.envMap===null&&k.environment!==null&&(En.envMapIntensity.value=k.environmentIntensity),ri&&(It.setValue(U,"toneMappingExposure",w.toneMappingExposure),Ie.needsLights&&pf(En,ur),ve&&q.fog===!0&&ue.refreshFogUniforms(En,ve),ue.refreshMaterialUniforms(En,q,se,Q,v.state.transmissionRenderTarget[A.id]),mm.upload(U,Ds(Ie),En,Ke)),q.isShaderMaterial&&q.uniformsNeedUpdate===!0&&(mm.upload(U,Ds(Ie),En,Ke),q.uniformsNeedUpdate=!1),q.isSpriteMaterial&&It.setValue(U,"center",H.center),It.setValue(U,"modelViewMatrix",H.modelViewMatrix),It.setValue(U,"normalMatrix",H.normalMatrix),It.setValue(U,"modelMatrix",H.matrixWorld),q.isShaderMaterial||q.isRawShaderMaterial){const ln=q.uniformsGroups;for(let Ns=0,Io=ln.length;Ns<Io;Ns++){const _a=ln[Ns];rt.update(_a,Dn),rt.bind(_a,Dn)}}return Dn}function pf(A,k){A.ambientLightColor.needsUpdate=k,A.lightProbe.needsUpdate=k,A.directionalLights.needsUpdate=k,A.directionalLightShadows.needsUpdate=k,A.pointLights.needsUpdate=k,A.pointLightShadows.needsUpdate=k,A.spotLights.needsUpdate=k,A.spotLightShadows.needsUpdate=k,A.rectAreaLights.needsUpdate=k,A.hemisphereLights.needsUpdate=k}function Nr(A){return A.isMeshLambertMaterial||A.isMeshToonMaterial||A.isMeshPhongMaterial||A.isMeshStandardMaterial||A.isShadowMaterial||A.isShaderMaterial&&A.lights===!0}this.getActiveCubeFace=function(){return z},this.getActiveMipmapLevel=function(){return L},this.getRenderTarget=function(){return D},this.setRenderTargetTextures=function(A,k,$){tt.get(A.texture).__webglTexture=k,tt.get(A.depthTexture).__webglTexture=$;const q=tt.get(A);q.__hasExternalTextures=!0,q.__autoAllocateDepthBuffer=$===void 0,q.__autoAllocateDepthBuffer||nt.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),q.__useRenderToTexture=!1)},this.setRenderTargetFramebuffer=function(A,k){const $=tt.get(A);$.__webglFramebuffer=k,$.__useDefaultFramebuffer=k===void 0},this.setRenderTarget=function(A,k=0,$=0){D=A,z=k,L=$;let q=!0,H=null,ve=!1,be=!1;if(A){const Le=tt.get(A);Le.__useDefaultFramebuffer!==void 0?(Ve.bindFramebuffer(U.FRAMEBUFFER,null),q=!1):Le.__webglFramebuffer===void 0?Ke.setupRenderTarget(A):Le.__hasExternalTextures&&Ke.rebindTextures(A,tt.get(A.texture).__webglTexture,tt.get(A.depthTexture).__webglTexture);const De=A.texture;(De.isData3DTexture||De.isDataArrayTexture||De.isCompressedArrayTexture)&&(be=!0);const $e=tt.get(A).__webglFramebuffer;A.isWebGLCubeRenderTarget?(Array.isArray($e[k])?H=$e[k][$]:H=$e[k],ve=!0):A.samples>0&&Ke.useMultisampledRTT(A)===!1?H=tt.get(A).__webglMultisampledFramebuffer:Array.isArray($e)?H=$e[$]:H=$e,T.copy(A.viewport),O.copy(A.scissor),Z=A.scissorTest}else T.copy(le).multiplyScalar(se).floor(),O.copy(X).multiplyScalar(se).floor(),Z=he;if(Ve.bindFramebuffer(U.FRAMEBUFFER,H)&&q&&Ve.drawBuffers(A,H),Ve.viewport(T),Ve.scissor(O),Ve.setScissorTest(Z),ve){const Le=tt.get(A.texture);U.framebufferTexture2D(U.FRAMEBUFFER,U.COLOR_ATTACHMENT0,U.TEXTURE_CUBE_MAP_POSITIVE_X+k,Le.__webglTexture,$)}else if(be){const Le=tt.get(A.texture),De=k||0;U.framebufferTextureLayer(U.FRAMEBUFFER,U.COLOR_ATTACHMENT0,Le.__webglTexture,$||0,De)}V=-1},this.readRenderTargetPixels=function(A,k,$,q,H,ve,be){if(!(A&&A.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Ce=tt.get(A).__webglFramebuffer;if(A.isWebGLCubeRenderTarget&&be!==void 0&&(Ce=Ce[be]),Ce){Ve.bindFramebuffer(U.FRAMEBUFFER,Ce);try{const Le=A.texture,De=Le.format,$e=Le.type;if(!Tt.textureFormatReadable(De)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(!Tt.textureTypeReadable($e)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}k>=0&&k<=A.width-q&&$>=0&&$<=A.height-H&&U.readPixels(k,$,q,H,Te.convert(De),Te.convert($e),ve)}finally{const Le=D!==null?tt.get(D).__webglFramebuffer:null;Ve.bindFramebuffer(U.FRAMEBUFFER,Le)}}},this.readRenderTargetPixelsAsync=async function(A,k,$,q,H,ve,be){if(!(A&&A.isWebGLRenderTarget))throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let Ce=tt.get(A).__webglFramebuffer;if(A.isWebGLCubeRenderTarget&&be!==void 0&&(Ce=Ce[be]),Ce){Ve.bindFramebuffer(U.FRAMEBUFFER,Ce);try{const Le=A.texture,De=Le.format,$e=Le.type;if(!Tt.textureFormatReadable(De))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!Tt.textureTypeReadable($e))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");if(k>=0&&k<=A.width-q&&$>=0&&$<=A.height-H){const ke=U.createBuffer();U.bindBuffer(U.PIXEL_PACK_BUFFER,ke),U.bufferData(U.PIXEL_PACK_BUFFER,ve.byteLength,U.STREAM_READ),U.readPixels(k,$,q,H,Te.convert(De),Te.convert($e),0),U.flush();const pt=U.fenceSync(U.SYNC_GPU_COMMANDS_COMPLETE,0);await xD(U,pt,4);try{U.bindBuffer(U.PIXEL_PACK_BUFFER,ke),U.getBufferSubData(U.PIXEL_PACK_BUFFER,0,ve)}finally{U.deleteBuffer(ke),U.deleteSync(pt)}return ve}}finally{const Le=D!==null?tt.get(D).__webglFramebuffer:null;Ve.bindFramebuffer(U.FRAMEBUFFER,Le)}}},this.copyFramebufferToTexture=function(A,k=null,$=0){A.isTexture!==!0&&(console.warn("WebGLRenderer: copyFramebufferToTexture function signature has changed."),k=arguments[0]||null,A=arguments[1]);const q=Math.pow(2,-$),H=Math.floor(A.image.width*q),ve=Math.floor(A.image.height*q),be=k!==null?k.x:0,Ce=k!==null?k.y:0;Ke.setTexture2D(A,0),U.copyTexSubImage2D(U.TEXTURE_2D,$,0,0,be,Ce,H,ve),Ve.unbindTexture()},this.copyTextureToTexture=function(A,k,$=null,q=null,H=0){A.isTexture!==!0&&(console.warn("WebGLRenderer: copyTextureToTexture function signature has changed."),q=arguments[0]||null,A=arguments[1],k=arguments[2],H=arguments[3]||0,$=null);let ve,be,Ce,Le,De,$e;$!==null?(ve=$.max.x-$.min.x,be=$.max.y-$.min.y,Ce=$.min.x,Le=$.min.y):(ve=A.image.width,be=A.image.height,Ce=0,Le=0),q!==null?(De=q.x,$e=q.y):(De=0,$e=0);const ke=Te.convert(k.format),pt=Te.convert(k.type);Ke.setTexture2D(k,0),U.pixelStorei(U.UNPACK_FLIP_Y_WEBGL,k.flipY),U.pixelStorei(U.UNPACK_PREMULTIPLY_ALPHA_WEBGL,k.premultiplyAlpha),U.pixelStorei(U.UNPACK_ALIGNMENT,k.unpackAlignment);const At=U.getParameter(U.UNPACK_ROW_LENGTH),Rt=U.getParameter(U.UNPACK_IMAGE_HEIGHT),Qt=U.getParameter(U.UNPACK_SKIP_PIXELS),mt=U.getParameter(U.UNPACK_SKIP_ROWS),Ie=U.getParameter(U.UNPACK_SKIP_IMAGES),$t=A.isCompressedTexture?A.mipmaps[H]:A.image;U.pixelStorei(U.UNPACK_ROW_LENGTH,$t.width),U.pixelStorei(U.UNPACK_IMAGE_HEIGHT,$t.height),U.pixelStorei(U.UNPACK_SKIP_PIXELS,Ce),U.pixelStorei(U.UNPACK_SKIP_ROWS,Le),A.isDataTexture?U.texSubImage2D(U.TEXTURE_2D,H,De,$e,ve,be,ke,pt,$t.data):A.isCompressedTexture?U.compressedTexSubImage2D(U.TEXTURE_2D,H,De,$e,$t.width,$t.height,ke,$t.data):U.texSubImage2D(U.TEXTURE_2D,H,De,$e,ke,pt,$t),U.pixelStorei(U.UNPACK_ROW_LENGTH,At),U.pixelStorei(U.UNPACK_IMAGE_HEIGHT,Rt),U.pixelStorei(U.UNPACK_SKIP_PIXELS,Qt),U.pixelStorei(U.UNPACK_SKIP_ROWS,mt),U.pixelStorei(U.UNPACK_SKIP_IMAGES,Ie),H===0&&k.generateMipmaps&&U.generateMipmap(U.TEXTURE_2D),Ve.unbindTexture()},this.copyTextureToTexture3D=function(A,k,$=null,q=null,H=0){A.isTexture!==!0&&(console.warn("WebGLRenderer: copyTextureToTexture3D function signature has changed."),$=arguments[0]||null,q=arguments[1]||null,A=arguments[2],k=arguments[3],H=arguments[4]||0);let ve,be,Ce,Le,De,$e,ke,pt,At;const Rt=A.isCompressedTexture?A.mipmaps[H]:A.image;$!==null?(ve=$.max.x-$.min.x,be=$.max.y-$.min.y,Ce=$.max.z-$.min.z,Le=$.min.x,De=$.min.y,$e=$.min.z):(ve=Rt.width,be=Rt.height,Ce=Rt.depth,Le=0,De=0,$e=0),q!==null?(ke=q.x,pt=q.y,At=q.z):(ke=0,pt=0,At=0);const Qt=Te.convert(k.format),mt=Te.convert(k.type);let Ie;if(k.isData3DTexture)Ke.setTexture3D(k,0),Ie=U.TEXTURE_3D;else if(k.isDataArrayTexture||k.isCompressedArrayTexture)Ke.setTexture2DArray(k,0),Ie=U.TEXTURE_2D_ARRAY;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}U.pixelStorei(U.UNPACK_FLIP_Y_WEBGL,k.flipY),U.pixelStorei(U.UNPACK_PREMULTIPLY_ALPHA_WEBGL,k.premultiplyAlpha),U.pixelStorei(U.UNPACK_ALIGNMENT,k.unpackAlignment);const $t=U.getParameter(U.UNPACK_ROW_LENGTH),ct=U.getParameter(U.UNPACK_IMAGE_HEIGHT),Dn=U.getParameter(U.UNPACK_SKIP_PIXELS),Ur=U.getParameter(U.UNPACK_SKIP_ROWS),ri=U.getParameter(U.UNPACK_SKIP_IMAGES);U.pixelStorei(U.UNPACK_ROW_LENGTH,Rt.width),U.pixelStorei(U.UNPACK_IMAGE_HEIGHT,Rt.height),U.pixelStorei(U.UNPACK_SKIP_PIXELS,Le),U.pixelStorei(U.UNPACK_SKIP_ROWS,De),U.pixelStorei(U.UNPACK_SKIP_IMAGES,$e),A.isDataTexture||A.isData3DTexture?U.texSubImage3D(Ie,H,ke,pt,At,ve,be,Ce,Qt,mt,Rt.data):k.isCompressedArrayTexture?U.compressedTexSubImage3D(Ie,H,ke,pt,At,ve,be,Ce,Qt,Rt.data):U.texSubImage3D(Ie,H,ke,pt,At,ve,be,Ce,Qt,mt,Rt),U.pixelStorei(U.UNPACK_ROW_LENGTH,$t),U.pixelStorei(U.UNPACK_IMAGE_HEIGHT,ct),U.pixelStorei(U.UNPACK_SKIP_PIXELS,Dn),U.pixelStorei(U.UNPACK_SKIP_ROWS,Ur),U.pixelStorei(U.UNPACK_SKIP_IMAGES,ri),H===0&&k.generateMipmaps&&U.generateMipmap(Ie),Ve.unbindTexture()},this.initRenderTarget=function(A){tt.get(A).__webglFramebuffer===void 0&&Ke.setupRenderTarget(A)},this.initTexture=function(A){A.isCubeTexture?Ke.setTextureCube(A,0):A.isData3DTexture?Ke.setTexture3D(A,0):A.isDataArrayTexture||A.isCompressedArrayTexture?Ke.setTexture2DArray(A,0):Ke.setTexture2D(A,0),Ve.unbindTexture()},this.resetState=function(){z=0,L=0,D=null,Ve.reset(),et.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return oa}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorSpace=e===Dx?"display-p3":"srgb",t.unpackColorSpace=nn.workingColorSpace===m0?"display-p3":"srgb"}},CO=class extends ma{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new kl,this.environmentIntensity=1,this.environmentRotation=new kl,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentIntensity=e.environmentIntensity,this.environmentRotation.copy(e.environmentRotation),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(t.object.environmentIntensity=this.environmentIntensity),t.object.environmentRotation=this.environmentRotation.toArray(),t}};class kx extends af{constructor(e=.5,t=1,i=32,r=1,s=0,l=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:i,phiSegments:r,thetaStart:s,thetaLength:l},i=Math.max(3,i),r=Math.max(1,r);const c=[],u=[],d=[],h=[];let m=e;const p=(t-e)/r,x=new Re,y=new sn;for(let S=0;S<=r;S++){for(let v=0;v<=i;v++){const g=s+v/i*l;x.x=m*Math.cos(g),x.y=m*Math.sin(g),u.push(x.x,x.y,x.z),d.push(0,0,1),y.x=(x.x/t+1)/2,y.y=(x.y/t+1)/2,h.push(y.x,y.y)}m+=p}for(let S=0;S<r;S++){const v=S*(i+1);for(let g=0;g<i;g++){const P=g+v,w=P,C=P+i+1,z=P+i+2,L=P+1;c.push(w,C,L),c.push(C,z,L)}}this.setIndex(c),this.setAttribute("position",new Cs(u,3)),this.setAttribute("normal",new Cs(d,3)),this.setAttribute("uv",new Cs(h,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new kx(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Ix}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Ix);class d3{constructor(e,t){Ge(this,"t1");Ge(this,"t2");Ge(this,"_position");Ge(this,"_quaternion");Ge(this,"_rotation");Ge(this,"_scale");this.t1=e,this.t2=t}get time(){return this.t1.time-this.t2.time}get position(){return this._position??(this._position=this.t1.position.clone().sub(this.t2.position))}get quaternion(){return this._quaternion??(this._quaternion=this.t2.quaternion.clone().invert().premultiply(this.t1.quaternion))}get rotation(){return this._rotation??(this._rotation=new Rn().setFromQuaternion(this.quaternion))}get scale(){return this._scale??(this._scale=this.t1.scale.clone().sub(this.t2.scale))}}class PO{constructor(e){Ge(this,"cancel");Ge(this,"previous");Ge(this,"memo");Ge(this,"event");Ge(this,"initial");Ge(this,"current");Ge(this,"first");Ge(this,"last");Ge(this,"_delta");Ge(this,"_offset");this.cancel=e}start(e,t){this.event=e,this.previous=void 0,this.current=t,this.initial=t,this.first=!0,this.last=!1,this.memo=void 0,this._delta=void 0,this._offset=void 0}update(e,t){this.event=e,this.previous=this.current,this.current=t,this.first=!1,this.last=!1,this._delta=void 0,this._offset=void 0}end(e){this.event=e,this.first=!1,this.last=!0,this._delta=void 0,this._offset=void 0}get delta(){if(this.previous!=null)return this._delta??(this._delta=new d3(this.current,this.previous))}get offset(){return this._offset??(this._offset=new d3(this.current,this.initial))}}function h3(n,e){if(n.details.type==="sphere")return!1;if(n.details.type==="lines"){const{line:t}=n.details;return e.copy(t.end).sub(t.start).normalize(),!0}return n.details.type==="screen-ray"?(e.copy(n.details.direction),!0):(e.set(0,0,-1).applyQuaternion(n.pointerQuaternion),!0)}const nv=new bo,LO=new bo,IO={x:"XYZ",y:"YXZ",z:"ZXY"};function zx(n,e,t,i,r,s){nv.copy(t),r!=null&&nv.premultiply(LO.copy(r).invert());const l=new Qe,c=new un,u=new Qe;nv.decompose(l,c,u),g3(l,i.initialTargetPosition,s.translate??!0);let d;const h=s.rotate??!0;if(h===!1)c.copy(i.initialTargetQuaternion),d=i.initialTargetRotation.clone();else if(Array.isArray(h)||h===!0||typeof h!="string"&&!Array.isArray(h)&&h.x===!0&&h.y===!0&&h.z===!0)d=new Rn().setFromQuaternion(c,i.initialTargetRotation.order);else if(typeof h=="string"){const m=IO[h];d=new Rn().setFromQuaternion(c,m);for(const p of m){const x=p.toLowerCase();x!==h&&(d[x]=0)}d.order=i.initialTargetRotation.order,c.setFromEuler(d)}else d=OO(c,i.initialTargetRotation,h);return g3(u,i.initialTargetScale,s.scale??!0),{pointerAmount:e,position:l,quaternion:c,rotation:d,scale:u,time:n}}const Cc=new nx,Pc=new Qe,Lc=new Qe,DO=new Qe,NO=new un;function p3(n,e,t){return Cc.normal.copy(n),Cc.constant=0,UO(Pc,Cc.normal),Lc.copy(Pc),Lc.applyQuaternion(NO.copy(e).invert().premultiply(t)),Cc.projectPoint(Pc,Pc).normalize(),Cc.projectPoint(Lc,Lc).normalize(),(DO.crossVectors(Pc,Cc.normal).dot(Lc)<0?1:-1)*Pc.angleTo(Lc)}function UO(n,e){if(e.x===0){n.set(1,0,0);return}if(e.y===0){n.set(0,1,0);return}if(e.z===0){n.set(0,0,1);return}n.set(-e.y,e.x,0)}function OO(n,e,t){let i="",r="";for(const c of e.order)t[c.toLowerCase()]===!1?r+=c:i+=c;const s=i+r,l=new Rn().setFromQuaternion(n,s);for(const c of s){const u=c.toLowerCase();l[u]=gm(u,l[u],e[u],t)}return n.setFromEuler(l),l}const iv=new Qe,m3=new nx,FO=new Qe,kO=new Qe;function g3(n,e,t){if(Array.isArray(t)){switch(t.length){case 0:n.copy(e);return;case 1:n.sub(e),o4(n,t[0]instanceof Qe?t[0]:iv.fromArray(t[0])),n.add(e);return;case 2:iv.crossVectors(t[0]instanceof Qe?t[0]:FO.fromArray(t[0]),t[1]instanceof Qe?t[1]:kO.fromArray(t[1])),m3.setFromNormalAndCoplanarPoint(iv,e),m3.projectPoint(n,n);return}return}n.x=gm("x",n.x,e.x,t),n.y=gm("y",n.y,e.y,t),n.z=gm("z",n.z,e.z,t)}function gm(n,e,t,i){if(typeof i=="boolean")return i?e:t;if(typeof i=="string")return i===n?e:t;const r=i[n];return r===!1?t:Array.isArray(r)?NC(e,...r):e}function Au(n=!0,e,t,i,r,s){if(n){switch(e.length){case 0:case 3:return;case 1:BO(t,...e,i,r,s);return;case 2:zO(...e,t,i,r,s);return}throw new Error(`space cannot be ${e.length}D but received (${e.map(l=>l.toArray().join("/")).join("; ")})`)}}const vm={x:new Qe(1,0,0),y:new Qe(0,1,0),z:new Qe(0,0,1)};function bu(n,e,t,i,r){if(i!==!1){if(i===!0){n[0]=vm.x,n[1]=vm.y,n[2]=vm.z;return}if(typeof i=="string"){sd(n,e,t,i,r);return}if(Array.isArray(i)){for(const s of i)sd(n,e,t,s,r);return}i.x!==!1&&sd(n,e,t,"x",r),i.y!==!1&&sd(n,e,t,"y",r),i.z!==!1&&sd(n,e,t,"z",r)}}const Qo=new un,Ap=new Rn,$r=new Qe,Ic=new Qe,Jo=new Qe;function sd(n,e,t,i,r){if(Array.isArray(i)?$r.set(...i):i instanceof Qe?$r.copy(i):$r.copy(vm[i]),r==="translate"){$r.applyQuaternion(e),bp(n,$r);return}if(r==="scale"){Array.isArray(i)?Qo.identity():Qo.setFromEuler(t),Qo.premultiply(e),$r.applyQuaternion(Qo),bp(n,$r);return}if(Array.isArray(i))Ap.set(0,0,0);else{Ap.copy(t);for(let s=2;s>=0;s--){const l=t.order[s].toLowerCase();if(Ap[l]=0,l===i)break}}Qo.setFromEuler(Ap).premultiply(e),$r.normalize(),Ic.set(0,1,0),$r.dot(Ic)>.99&&Ic.set(0,0,1),Jo.crossVectors($r,Ic).normalize(),Ic.copy(Jo),Jo.applyQuaternion(Qo),bp(n,Jo),Jo.crossVectors($r,Ic).normalize(),Jo.applyQuaternion(Qo),bp(n,Jo)}const v3=new Qe;function bp(n,e){if(n.length!==3){if(n.length===0){n.push(e.clone());return}if(n.length===1){Math.abs(n[0].dot(e))<.999&&n.push(e.clone());return}v3.crossVectors(n[0],n[1]),!(Math.abs(v3.dot(e))<.001)&&n.push(e.clone())}}const ad=new nx,rv=new Qe,Ed=new Qe;function zO(n,e,t,i,r,s){rv.crossVectors(n,e).normalize(),ad.setFromNormalAndCoplanarPoint(rv,t);const l=s==null?0:Math.abs(rv.dot(s));if(s==null||l<.01){ad.projectPoint(r,r);return}const u=-ad.distanceToPoint(i)/s.dot(ad.normal);if(u<0){ad.projectPoint(r,r);return}Ed.copy(r),r.copy(i).addScaledVector(s,u)}function BO(n,e,t,i,r){const s=r==null?0:1-Math.abs(e.dot(r));if(r==null||s<.001){_3(i,n,e);return}Ed.subVectors(t,n);const l=e.dot(r),c=e.dot(Ed),u=r.dot(Ed),d=1-l*l,h=(c-l*u)/d;if((l*c-u)/d<0){_3(i,n,e);return}Ed.copy(i),i.copy(n).addScaledVector(e,h)}function _3(n,e,t){n.sub(e),o4(n,t),n.add(e)}function o4(n,e){const t=n.dot(e);n.copy(e).multiplyScalar(t)}const sv=new bo,Rp=new bo,Cp=new Qe,HO=new Qe,el=new un,VO=new Qe(1,1,1),av=[];function GO(n,e,t,i,r){return i==null?el.identity():i.decompose(Cp,el,HO),av.length=0,bu(av,el,t.initialTargetRotation,r.translate??!0,"translate"),Rp.makeRotationFromQuaternion(el.copy(e.initialPointerWorldQuaternion).invert()).multiply(sv.makeTranslation(Cp.copy(e.initialPointerWorldPoint).negate())),t.initialTargetParentWorldMatrix!=null&&Rp.multiply(t.initialTargetParentWorldMatrix),Au(r.projectRays,av,e.initialPointerWorldPoint,e.pointerWorldOrigin,Cp.copy(e.pointerWorldPoint),e.pointerWorldDirection),el.copy(e.pointerWorldQuaternion),(r.rotate??!0)===!1&&el.copy(e.initialPointerWorldQuaternion),sv.compose(Cp,el,VO).multiply(Rp).multiply(Rp.compose(t.initialTargetPosition,t.initialTargetQuaternion,t.initialTargetScale)),zx(n,1,sv,t,i,r)}const Dc=new Qe,od=new Qe,Wn=new Qe,Xa=new Qe,WO=new Qe,x3=new Qe,Nc=new Qe,y3=new bo,ld=new bo,Pp=new bo,hs=new un,cd=new un,Uc=[];function $O(n,e,t,i,r,s){r==null?hs.identity():r.decompose(Wn,hs,Xa),Uc.length=0,bu(Uc,hs,i.initialTargetRotation,s.translate??!0,"translate"),bu(Uc,hs,i.initialTargetRotation,s.rotate??!0,"rotate"),bu(Uc,hs,i.initialTargetRotation,s.scale??!0,"scale"),Au(s.projectRays,Uc,e.initialPointerWorldPoint,e.pointerWorldOrigin,Wn.copy(e.pointerWorldPoint),e.pointerWorldDirection),Au(s.projectRays,Uc,t.initialPointerWorldPoint,t.pointerWorldOrigin,Xa.copy(t.pointerWorldPoint),t.pointerWorldDirection),Dc.copy(t.initialPointerWorldPoint).sub(e.initialPointerWorldPoint),od.copy(Xa).sub(Wn),Wn.copy(Dc),i.prevTwoPointerDeltaRotation!=null&&Wn.applyQuaternion(i.prevTwoPointerDeltaRotation),Wn.normalize(),Xa.copy(od).normalize(),hs.setFromUnitVectors(Wn,Xa),i.prevTwoPointerDeltaRotation==null?i.prevTwoPointerDeltaRotation=new un:hs.multiply(i.prevTwoPointerDeltaRotation),i.prevTwoPointerDeltaRotation.copy(hs);const l=(p3(Xa,e.prevPointerWorldQuaternion,e.pointerWorldQuaternion)+p3(Xa,t.prevPointerWorldQuaternion,t.pointerWorldQuaternion))*.5+(i.prevAngle??0);if(i.prevAngle=l,hs.premultiply(cd.setFromAxisAngle(Xa,l)),typeof s.scale=="object"&&(s.scale.uniform??!1))Nc.setScalar(od.length()/Dc.length());else{Pp.compose(i.initialTargetPosition,i.initialTargetQuaternion,i.initialTargetScale),i.initialTargetParentWorldMatrix!=null&&Pp.premultiply(i.initialTargetParentWorldMatrix),Pp.decompose(WO,cd,x3),Wn.copy(Dc).applyQuaternion(cd.invert()).divide(x3),Wn.x=Math.abs(Wn.x),Wn.y=Math.abs(Wn.y),Wn.z=Math.abs(Wn.z);const c=Math.max(...Wn.toArray());Wn.divideScalar(c),Nc.set(1,1,1),Nc.addScaledVector(Wn,od.length()/Dc.length()-1)}return y3.makeTranslation(Wn.copy(od).multiplyScalar(.5).add(e.pointerWorldPoint)).multiply(ld.makeRotationFromQuaternion(hs)).multiply(ld.makeRotationFromQuaternion(cd.invert())).multiply(ld.makeScale(Nc.x,Nc.y,Nc.z)).multiply(ld.makeRotationFromQuaternion(cd.invert())).multiply(ld.makeTranslation(Wn.copy(Dc).multiplyScalar(.5).add(e.initialPointerWorldPoint).negate())).multiply(Pp),zx(n,2,y3,i,r,s)}const An=new Qe,xr=new Qe,ov=new Qe,qa=new Qe,tl=new Qe,yr=new un,nr=new un,ja=new bo,js=new Qe,Oc=[];function XO(n,e,t,i,r,s){if(r==null?yr.identity():r.decompose(An,yr,xr),Oc.length=0,s.translate==="as-scale"&&bu(Oc,yr,t.initialTargetRotation,s.scale??!0,"scale"),s.translate!="as-scale"&&bu(Oc,yr,t.initialTargetRotation,s.rotate??!0,"rotate"),ja.makeTranslation(t.initialTargetPosition),t.initialTargetParentWorldMatrix!=null&&ja.premultiply(t.initialTargetParentWorldMatrix),qa.setFromMatrixPosition(ja),Au(s.projectRays,Oc,e.initialPointerWorldPoint,e.pointerWorldOrigin,qa,void 0),qa.negate().add(e.initialPointerWorldPoint),tl.setFromMatrixPosition(i),Au(s.projectRays,Oc,e.initialPointerWorldPoint,e.pointerWorldOrigin,tl,void 0),Au(s.projectRays,Oc,e.initialPointerWorldPoint,e.pointerWorldOrigin,xr.copy(e.pointerWorldPoint),e.pointerWorldDirection),tl.negate().add(xr),s.translate==="as-scale"?yr.copy(t.initialTargetQuaternion):(An.copy(qa),t.prevTranslateAsDeltaRotation!=null&&An.applyQuaternion(t.prevTranslateAsDeltaRotation),An.normalize(),xr.copy(tl).normalize(),yr.setFromUnitVectors(An,xr),t.prevTranslateAsDeltaRotation==null?t.prevTranslateAsDeltaRotation=new un:yr.multiply(t.prevTranslateAsDeltaRotation),t.prevTranslateAsDeltaRotation.copy(yr),t.initialTargetParentWorldMatrix!=null&&(nr.setFromRotationMatrix(t.initialTargetParentWorldMatrix),yr.multiply(nr.normalize()),yr.premultiply(nr.invert())),yr.multiply(t.initialTargetQuaternion)),s.translate==="as-rotate")js.set(1,1,1);else if(typeof s.scale=="object"&&(s.scale.uniform??!1))js.setScalar(tl.length()/qa.length());else if(s.translate==="as-rotate-and-scale"){ja.compose(t.initialTargetPosition,t.initialTargetQuaternion,t.initialTargetScale),t.initialTargetParentWorldMatrix!=null&&ja.premultiply(t.initialTargetParentWorldMatrix),ja.decompose(xr,nr,ov),An.copy(qa).applyQuaternion(nr.invert()).divide(ov),An.x=Math.abs(An.x),An.y=Math.abs(An.y),An.z=Math.abs(An.z);const l=Math.max(...An.toArray());An.divideScalar(l),js.set(1,1,1),js.addScaledVector(An,tl.length()/qa.length()-1)}else t.initialTargetParentWorldMatrix!=null?(t.initialTargetParentWorldMatrix.decompose(An,nr,xr),nr.multiply(t.initialTargetQuaternion)):nr.copy(t.initialTargetQuaternion),An.copy(qa).applyQuaternion(nr.invert()),r!=null?(r.decompose(xr,nr,ov),nr.multiply(t.initialTargetQuaternion)):nr.copy(t.initialTargetQuaternion),xr.copy(tl).applyQuaternion(nr.invert()),js.x=Math.abs(An.x)<.001?1:Math.abs(xr.x/An.x),js.y=Math.abs(An.y)<.001?1:Math.abs(xr.y/An.y),js.z=Math.abs(An.z)<.001?1:Math.abs(xr.z/An.z);return js.multiply(t.initialTargetScale),ja.compose(t.initialTargetPosition,yr,js),zx(n,1,ja,t,void 0,s)}const S3=new Qe;class qO{constructor(e,t=()=>({})){Ge(this,"target");Ge(this,"getOptions");Ge(this,"outputState");Ge(this,"latestMoveEvent");Ge(this,"inputState",new Map);Ge(this,"capturedObjects",new Map);Ge(this,"initialTargetPosition",new Qe);Ge(this,"initialTargetQuaternion",new un);Ge(this,"initialTargetRotation",new Rn);Ge(this,"initialTargetScale",new Qe);Ge(this,"initialTargetParentWorldMatrix");Ge(this,"prevTwoPointerDeltaRotation");Ge(this,"prevTranslateAsDeltaRotation");Ge(this,"prevAngle");Ge(this,"handlers",{onPointerDown:this.onPointerDown.bind(this),onPointerMove:this.onPointerMove.bind(this),onPointerUp:this.onPointerUp.bind(this)});this.target=e,this.getOptions=t,this.outputState=new PO(this.cancel.bind(this))}firstOnPointer(e){const t=this.getTarget();if(t==null)return;const i=h3(e,S3)?S3.clone():void 0;e.intersection.details.type,this.inputState.set(e.pointerId,{pointerWorldDirection:i,pointerWorldPoint:e.point,pointerWorldOrigin:e.pointerPosition,pointerWorldQuaternion:e.pointerQuaternion,initialPointerWorldPoint:e.point.clone(),initialPointerWorldDirection:i==null?void 0:i.clone(),initialPointerWorldQuaternion:e.pointerQuaternion.clone(),prevPointerWorldQuaternion:e.pointerQuaternion}),this.save(),this.inputState.size===1&&this.outputState.start(e,{pointerAmount:1,time:e.timeStamp,position:this.initialTargetPosition.clone(),quaternion:this.initialTargetQuaternion.clone(),rotation:this.initialTargetRotation.clone(),scale:this.initialTargetScale.clone()}),this.outputState.memo=this.apply(t)}onPointerDown(e){this.stopPropagation(e),this.capturePointer(e.pointerId,e.object)&&this.firstOnPointer(e)}onPointerMove(e){if(!this.capturedObjects.has(e.pointerId))return;this.stopPropagation(e);const t=this.inputState.get(e.pointerId);if(t==null){this.firstOnPointer(e);return}this.latestMoveEvent=e,t.pointerWorldPoint=e.point,t.prevPointerWorldQuaternion=t.pointerWorldQuaternion,t.pointerWorldQuaternion=e.pointerQuaternion,t.pointerWorldOrigin=e.pointerPosition,t.pointerWorldDirection!=null&&h3(e,t.pointerWorldDirection)}cancel(){if(this.capturedObjects.size===0)return;for(const[t,i]of this.capturedObjects)i.releasePointerCapture(t);this.capturedObjects.clear(),this.inputState.clear(),this.outputState.end(void 0);const e=this.getTarget();e!=null&&this.apply(e)}onPointerUp(e){this.capturedObjects.has(e.pointerId)&&(this.stopPropagation(e),this.releasePointer(e.pointerId,e.object,e))}update(e){var s,l,c;const t=this.getTarget();if(t==null||this.inputState.size===0||this.latestMoveEvent==null&&(this.getOptions().alwaysUpdate??!1)===!1)return;const i=this.getOptions();let r;if(i.translate==="as-rotate"||i.translate==="as-rotate-and-scale"||i.translate==="as-scale"){i.translate,this.prevTwoPointerDeltaRotation=void 0,this.prevAngle=void 0;const[u]=this.inputState.values(),d=t.matrixWorld,h=(s=t.parent)==null?void 0:s.matrixWorld;r=XO(e,u,this,d,h,i)}else if(this.inputState.size===1){this.prevTwoPointerDeltaRotation=void 0,this.prevAngle=void 0,this.prevTranslateAsDeltaRotation=void 0;const[u]=this.inputState.values();r=GO(e,u,this,(l=t.parent)==null?void 0:l.matrixWorld,i)}else{this.prevTranslateAsDeltaRotation=void 0;const[u,d]=this.inputState.values();r=$O(e,u,d,this,(c=t.parent)==null?void 0:c.matrixWorld,i)}this.outputState.update(this.latestMoveEvent,r),this.outputState.memo=this.apply(t),this.latestMoveEvent=void 0}getTarget(){var e;return this.target instanceof zT?this.target:(e=this.target)==null?void 0:e.current}capturePointer(e,t){if(this.capturedObjects.has(e))return!1;const{multitouch:i,translate:r}=this.getOptions();return((i??!0)===!1||typeof r=="string")&&this.capturedObjects.size===1?!1:(this.capturedObjects.set(e,t),t.setPointerCapture(e),!0)}releasePointer(e,t,i){const r=this.getTarget();if(!(r==null||!this.capturedObjects.delete(e))){if(this.inputState.delete(e),t.releasePointerCapture(e),this.inputState.size>0){this.save();return}this.outputState.end(i),this.apply(r)}}stopPropagation(e){var t;e==null||!(((t=this.getOptions())==null?void 0:t.stopPropagation)??!0)||e.stopPropagation()}apply(e){return(this.getOptions().apply??l4)(this.outputState,e)}getState(){return this.inputState.size===0?void 0:this.outputState}save(){var t,i;const e=this.getTarget();if(e!=null){e.updateWorldMatrix(!0,!1),this.prevAngle=void 0,this.prevTwoPointerDeltaRotation=void 0,this.prevTranslateAsDeltaRotation=void 0,this.initialTargetParentWorldMatrix=(t=e.parent)==null?void 0:t.matrixWorld.clone(),e.matrixAutoUpdate?(this.initialTargetPosition.copy(e.position),this.initialTargetQuaternion.copy(e.quaternion),this.initialTargetRotation.copy(e.rotation),this.initialTargetScale.copy(e.scale)):(e.matrix.decompose(this.initialTargetPosition,this.initialTargetQuaternion,this.initialTargetScale),this.initialTargetRotation.setFromQuaternion(this.initialTargetQuaternion,e.rotation.order));for(const r of this.inputState.values())r.pointerWorldDirection!=null&&((i=r.initialPointerWorldDirection)==null||i.copy(r.pointerWorldDirection)),r.initialPointerWorldPoint.copy(r.pointerWorldPoint),r.initialPointerWorldQuaternion.copy(r.pointerWorldQuaternion)}}bind(e){const{onPointerDown:t,onPointerMove:i,onPointerUp:r}=this.handlers;return e.addEventListener("pointerdown",t),e.addEventListener("pointermove",i),e.addEventListener("pointerup",r),()=>{e.removeEventListener("pointerdown",t),e.removeEventListener("pointermove",i),e.removeEventListener("pointerup",r),this.cancel()}}capture(e,t){return this.capturePointer(e,t)?()=>this.releasePointer(e,t,void 0):jO}}function jO(){}function l4(n,e){e.position.copy(n.current.position),e.rotation.order=n.current.rotation.order,e.quaternion.copy(n.current.quaternion),e.scale.copy(n.current.scale)}class YO{constructor(e,t){Ge(this,"target");Ge(this,"getOptions");Ge(this,"handles",[]);Ge(this,"hoveredTagMap",new Map);Ge(this,"hoverSubscriptions",[]);Ge(this,"applySubscriptions",[]);Ge(this,"space");this.target=e,this.getOptions=t}getSpace(){return this.space??"world"}getTarget(){return this.target instanceof zT?this.target:this.target.current}getHandleOptions(e,t){var s;const i=(s=this.getOptions)==null?void 0:s.call(this),r=t==null?void 0:t();return{...i,...r,apply:(l,c)=>{var u;return this.onApply(e,l,c),(u=(r==null?void 0:r.apply)??(i==null?void 0:i.apply)??l4)==null?void 0:u(l,c)}}}registerHandle(e,t,i){const r={object:t,store:e,tag:i};this.handles.push(r);const s=e.bind(t),l=this.onPointerEnter.bind(this,i),c=this.onPointerLeave.bind(this);return t.addEventListener("pointerenter",l),t.addEventListener("pointerleave",c),()=>{const u=this.handles.indexOf(r);u!=-1&&this.handles.splice(u,1),s(),e.cancel()}}subscribeHover(e){return this.hoverSubscriptions.push(e),e(Array.from(this.hoveredTagMap.values())),()=>{const t=this.hoverSubscriptions.indexOf(e);t!==-1&&this.hoverSubscriptions.splice(t,1)}}subscribeApply(e){return this.applySubscriptions.push(e),()=>{const t=this.applySubscriptions.indexOf(e);t!==-1&&this.applySubscriptions.splice(t,1)}}update(e){for(const{store:t}of this.handles)t.update(e)}onPointerEnter(e,t){this.hoveredTagMap.set(t.pointerId,e),this.updateHover()}onPointerLeave(e){this.hoveredTagMap.delete(e.pointerId),this.updateHover()}updateHover(){const e=Array.from(this.hoveredTagMap.values());for(const t of this.hoverSubscriptions)t(e)}onApply(e,t,i){for(const r of this.applySubscriptions)r(e,t,i)}}const Ri={depthTest:!1,depthWrite:!1,fog:!1,toneMapped:!1,transparent:!0};function os(n,e,t,{color:i,hoverColor:r,hoverOpacity:s,opacity:l}){if(!(r==null&&s==null))return r??(r=i),n.subscribeHover(c=>{const u=c.some(d=>d.includes(t));e.color.set(u?r:i),e.opacity=(u?s:l)??1})}const Lp=new un;class lv extends BT{constructor(t,i){super();Ge(this,"context");Ge(this,"rotationOffset");this.context=t,this.rotationOffset=i,this.renderOrder=1/0}update(){this.quaternion.setFromEuler(this.rotationOffset);const t=this.context.getTarget();this.context.getSpace()==="world"&&t!=null&&(t.getWorldQuaternion(Lp).invert(),this.quaternion.premultiply(Lp))}bind(t){this.geometry=new HT,this.geometry.setAttribute("position",new VT([-1e3,0,0,1e3,0,0],3)),this.material=new GT({...Ri,color:this.material.color??"white",opacity:this.material.opacity??1});const i=this.context.subscribeHover(s=>{const l=s.some(c=>c.includes(t));this.visible=l}),r=this.context.subscribeApply((s,l)=>{if(l.last){this.position.set(0,0,0);return}this.position.copy(l.initial.position).sub(l.current.position);const c=this.context.getTarget();c!=null&&(Lp.copy(c.quaternion).invert(),this.position.applyQuaternion(Lp))});return()=>{this.geometry.dispose(),this.material.dispose(),i(),r()}}}class ga extends ca{constructor(t,i,r,s){super();Ge(this,"context");Ge(this,"axis");Ge(this,"store");Ge(this,"options");Ge(this,"tag");this.context=t,this.axis=i,this.tag=(r??"")+i,this.store=new qO(t.target,()=>t.getHandleOptions(this.tag,s))}}function va(n,e=!0){if(e===!1)return!1;if(e===!0){const i={x:!1,y:!1,z:!1,e:!1};for(const r of n)i[r]=!0;return i}if(typeof e=="string")return e===n?{x:!1,y:!1,z:!1,e:!1,[n]:!0}:!1;const t={x:!1,y:!1,z:!1,e:!1};for(const i of n){const r=e[i]??!0;if(r===!1)return!1;t[i]=r}return t}const M3=new Qe,E3=new Qe;function Bx(n,e,t,i){if(!t)return i;let r;return e instanceof UC?r=(e.top-e.bottom)/e.zoom:(e.getWorldPosition(M3),n.getWorldPosition(E3),r=M3.distanceTo(E3)*Math.min(1.9*Math.tan(Math.PI*e.fov/360)/e.zoom,7)),r*i/4}const c4=new Pd(0,.04,.1,12);c4.translate(0,.05,0);const u4=new Pd(.0075,.0075,.5,3);u4.translate(0,.25,0);const KO=new Rn(0,0,-Math.PI/2),ZO=new Rn(0,0,Math.PI/2);class Fc extends ga{constructor(t,i,r="",s,l=!1,c=!0){super(t,i,r,()=>({scale:!1,rotate:!1,translate:s!=null?[s]:this.options,multitouch:!1}));Ge(this,"invert");Ge(this,"showArrowBody");this.invert=l,this.showArrowBody=c}bind(t,i,r){const s=va(this.axis,r);if(s===!1)return;this.options=s;const l=this.invert?ZO:KO,c=new $i(Ri),u=os(this.context,c,this.tag,{color:t,hoverColor:i}),d=new Hn(c4,c);d.renderOrder=1/0,d.position.x=this.invert?-.5:.5,d.rotation.copy(l),this.add(d);let h,m;if(this.showArrowBody){const y=new $i(Ri);h=os(this.context,y,this.tag,{color:t,hoverColor:16777024}),m=new Hn(u4,y),m.renderOrder=1/0,m.rotation.copy(l),this.add(m)}const p=new Hn(new Pd(.13,0,.6,4));p.pointerEventsOrder=1/0,p.position.x=this.invert?-.3:.3,p.rotation.copy(l),p.visible=!1,this.add(p);const x=this.context.registerHandle(this.store,p,this.tag);return()=>{c.dispose(),x(),u==null||u(),h==null||h(),this.remove(d),m!=null&&this.remove(m),this.remove(p)}}}class cv extends ga{constructor(e,t,i="",r){super(e,t,i,()=>({translate:r??this.options,scale:!1,rotate:!1,multitouch:!1}))}bind(e,t,i){const r=va(this.axis,i);if(r===!1)return;this.options=r;const s=new $i(Ri),l=os(this.context,s,this.tag,{opacity:.5,hoverOpacity:1,color:e,hoverColor:t}),c=new Hn(new Ld(.2,.2,.01),s);c.renderOrder=1/0,c.pointerEventsOrder=1/0,c.position.set(.15,.15,0);const u=this.context.registerHandle(this.store,c,this.tag);return this.add(c),()=>{s.dispose(),c.geometry.dispose(),u(),l==null||l(),this.remove(c)}}}new Qe;const w3=new un;function QO(n,e){const t=new Hn(new ym(.01,2),new $i(Ri));t.renderOrder=1/0,t.visible=!1,n.add(t);const i=new Hn(new ym(.01,2),new $i(Ri));i.renderOrder=1/0,i.visible=!1,n.add(i);const r=new HT;r.setAttribute("position",new VT([0,0,0,1,1,1],3));const s=new BT(r,new GT(Ri));s.renderOrder=1/0,s.visible=!1,n.add(s);const l=e.subscribeApply((c,u)=>{i.position.set(0,0,0),t.position.copy(u.initial.position).sub(u.current.position);const d=e.getTarget();d!=null&&(w3.copy(d.quaternion).invert(),t.position.applyQuaternion(w3)),s.position.set(0,0,0),s.scale.copy(t.position),t.visible=!u.last,s.visible=!u.last,i.visible=!u.last});return()=>{t.geometry.dispose(),t.material.dispose(),i.geometry.dispose(),i.material.dispose(),s.geometry.dispose(),s.material.dispose(),n.remove(t),n.remove(i),n.remove(s),l()}}class JO extends ga{constructor(e){super(e,"xyz","",()=>({translate:this.options,scale:!1,rotate:!1,multitouch:!1}))}bind(e){const t=va(this.axis,e);if(t===!1)return;this.options=t;const i=new $i(Ri),r=os(this.context,i,this.tag,{color:16777215,hoverColor:16776960,opacity:.25,hoverOpacity:1}),s=new Hn(new ym(.1,0),i);s.renderOrder=1/0,this.add(s);const l=new Hn(new ym(.2,0));l.pointerEventsOrder=1/0,l.visible=!1,this.add(l);const c=this.context.registerHandle(this.store,l,this.tag);return()=>{i.dispose(),s.geometry.dispose(),l.geometry.dispose(),c(),r==null||r(),this.remove(s),this.remove(l)}}}const T3=new Qe,Ei=new un,A3=new un,b3=new un().setFromEuler(new Rn(0,0,Math.PI/2)),R3=new un().setFromEuler(new Rn(0,-Math.PI/2,0)),eF=new un,tF=new un().setFromEuler(new Rn(0,-Math.PI/2,0)),nF=new un().setFromEuler(new Rn(Math.PI/2,0,0));class iF extends ca{constructor(t,i,r){super();Ge(this,"context");Ge(this,"size");Ge(this,"fixed");Ge(this,"free");Ge(this,"translationX");Ge(this,"translationY");Ge(this,"translationZ");Ge(this,"translationNegX");Ge(this,"translationNegY");Ge(this,"translationNegZ");Ge(this,"translationXY");Ge(this,"translationYZ");Ge(this,"translationXZ");Ge(this,"scaleGroup",new ca);Ge(this,"xAxis",new Qe);Ge(this,"yAxis",new Qe);Ge(this,"zAxis",new Qe);Ge(this,"negXAxis",new Qe);Ge(this,"negYAxis",new Qe);Ge(this,"negZAxis",new Qe);this.context=t,this.size=i,this.fixed=r,this.add(this.scaleGroup),this.free=new JO(this.context),this.scaleGroup.add(this.free),this.translationX=new Fc(this.context,"x",void 0,this.xAxis),this.scaleGroup.add(this.translationX),this.translationY=new Fc(this.context,"y",void 0,this.yAxis),this.scaleGroup.add(this.translationY),this.translationZ=new Fc(this.context,"z",void 0,this.zAxis),this.scaleGroup.add(this.translationZ),this.translationNegX=new Fc(this.context,"x",void 0,this.negXAxis,!0,!1),this.scaleGroup.add(this.translationNegX),this.translationNegY=new Fc(this.context,"y",void 0,this.negYAxis,!0,!1),this.scaleGroup.add(this.translationNegY),this.translationNegZ=new Fc(this.context,"z",void 0,this.negZAxis,!0,!1),this.scaleGroup.add(this.translationNegZ),this.translationXY=new cv(this.context,"xy",void 0,[this.xAxis,this.yAxis]),this.scaleGroup.add(this.translationXY),this.translationXZ=new cv(this.context,"xz",void 0,[this.xAxis,this.zAxis]),this.scaleGroup.add(this.translationXZ),this.translationYZ=new cv(this.context,"yz",void 0,[this.yAxis,this.zAxis]),this.scaleGroup.add(this.translationYZ)}update(t){this.updateWorldMatrix(!0,!1),this.xAxis.set(1,0,0),this.yAxis.set(0,1,0),this.zAxis.set(0,0,1),this.free.quaternion.identity(),this.translationX.quaternion.copy(A3),this.translationY.quaternion.copy(b3),this.translationZ.quaternion.copy(R3),this.translationNegX.quaternion.copy(A3),this.translationNegY.quaternion.copy(b3),this.translationNegZ.quaternion.copy(R3),this.translationXY.quaternion.copy(eF),this.translationYZ.quaternion.copy(tF),this.translationXZ.quaternion.copy(nF);const i=this.context.getSpace(),r=this.context.getTarget();i=="world"&&r!=null?(r.getWorldQuaternion(Ei).invert(),this.free.quaternion.premultiply(Ei),this.translationX.quaternion.premultiply(Ei),this.translationY.quaternion.premultiply(Ei),this.translationZ.quaternion.premultiply(Ei),this.translationNegX.quaternion.premultiply(Ei),this.translationNegY.quaternion.premultiply(Ei),this.translationNegZ.quaternion.premultiply(Ei),this.translationXY.quaternion.premultiply(Ei),this.translationYZ.quaternion.premultiply(Ei),this.translationXZ.quaternion.premultiply(Ei),r.parent!=null&&(r.parent.getWorldQuaternion(Ei).invert(),this.xAxis.applyQuaternion(Ei),this.yAxis.applyQuaternion(Ei),this.zAxis.applyQuaternion(Ei))):r!=null&&(this.xAxis.applyQuaternion(r.quaternion),this.yAxis.applyQuaternion(r.quaternion),this.zAxis.applyQuaternion(r.quaternion)),this.negXAxis.copy(this.xAxis).negate(),this.negYAxis.copy(this.yAxis).negate(),this.negZAxis.copy(this.zAxis).negate(),this.scaleGroup.scale.setScalar(1),r!=null&&(r.getWorldScale(T3),this.scaleGroup.scale.divide(T3)),this.scaleGroup.scale.multiplyScalar(Bx(this,t,this.fixed??!0,this.size??1))}bind(t){const i=QO(this,this.context),r=this.translationX.bind(16711680,16776960,t),s=this.translationY.bind(65280,16776960,t),l=this.translationZ.bind(255,16776960,t),c=this.translationNegX.bind(16711680,16776960,t),u=this.translationNegY.bind(65280,16776960,t),d=this.translationNegZ.bind(255,16776960,t),h=this.translationXY.bind(255,16776960,t),m=this.translationYZ.bind(16711680,16776960,t),p=this.translationXZ.bind(65280,16776960,t),x=this.free.bind(t);return()=>{i(),r==null||r(),s==null||s(),l==null||l(),c==null||c(),u==null||u(),d==null||d(),h==null||h(),m==null||m(),p==null||p(),x==null||x()}}}class rF extends ga{constructor(e){super(e,"xyz","",()=>({scale:{uniform:!0,...this.options},rotate:!1,translate:"as-scale",multitouch:!1}))}bind(e){const t=va(this.axis,e);if(t===!1)return;this.options=t;const i=new $i(Ri),r=os(this.context,i,this.tag,{opacity:.25,hoverOpacity:1,color:16777215,hoverColor:16776960}),s=new Hn(new Ld(.1,.1,.1),i);s.renderOrder=1/0,this.add(s);const l=new Hn(new Ld(.2,.2,.2));l.visible=!1,l.pointerEventsOrder=1/0,this.add(l);const c=this.context.registerHandle(this.store,l,this.tag);return()=>{i.dispose(),l.geometry.dispose(),s.geometry.dispose(),c(),r==null||r(),this.remove(l),this.remove(s)}}}const sF=new Rn(0,0,-Math.PI/2),aF=new Rn(0,0,Math.PI/2);class kc extends ga{constructor(t,i,r="",s=!1,l=!0){super(t,i,r,()=>({scale:this.options,rotate:!1,translate:"as-scale",multitouch:!1}));Ge(this,"invert");Ge(this,"showHandleLine");this.invert=s,this.showHandleLine=l}bind(t,i,r){const s=va(this.axis,r);if(s===!1)return;this.options=s;const l=this.invert?aF:sF,c=new ca;c.position.x=this.invert?-.5:.5,c.rotation.copy(l),this.add(c);const u=new $i(Ri),d=os(this.context,u,this.tag,{color:t,hoverColor:i}),h=new Hn(new Ld(.08,.08,.08),u);h.renderOrder=1/0,h.rotation.copy(l),c.add(h);let m,p,x;if(this.showHandleLine){x=new ca,x.rotation.copy(l),this.add(x);const g=new $i(Ri);m=os(this.context,g,this.tag,{color:t,hoverColor:i}),p=new Hn(new Pd(.0075,.0075,.5,3),g),p.renderOrder=1/0,p.position.y=.25,x.add(p)}const y=new ca;y.visible=!1,y.rotation.copy(l),y.position.x=this.invert?-.3:.3,this.add(y);const S=new Hn(new Pd(.2,0,.6,4));S.pointerEventsOrder=1/0,S.position.y=.04,y.add(S);const v=this.context.registerHandle(this.store,S,this.tag);return()=>{u.dispose(),S.geometry.dispose(),h.geometry.dispose(),p==null||p.geometry.dispose(),v(),d==null||d(),m==null||m(),this.remove(h),x!=null&&this.remove(x),this.remove(y),this.remove(c)}}}class uv extends ga{constructor(e,t,i=""){super(e,t,i,()=>({translate:"as-scale",scale:this.options,rotate:!1,multitouch:!1}))}bind(e,t,i){const r=va(this.axis,i);if(r===!1)return;this.options=r;const s=new $i(Ri),l=os(this.context,s,this.tag,{opacity:.5,hoverOpacity:1,color:e,hoverColor:t}),c=new Hn(new Ld(.2,.2,.01),s);c.renderOrder=1/0,c.pointerEventsOrder=1/0,c.position.set(.15,.15,0);const u=this.context.registerHandle(this.store,c,this.tag);return this.add(c),()=>{s.dispose(),c.geometry.dispose(),u(),l==null||l(),this.remove(c)}}}const C3=new Qe;class oF extends ca{constructor(t,i,r){super();Ge(this,"context");Ge(this,"size");Ge(this,"fixed");Ge(this,"free");Ge(this,"translationX");Ge(this,"translationY");Ge(this,"translationZ");Ge(this,"translationNegX");Ge(this,"translationNegY");Ge(this,"translationNegZ");Ge(this,"translationXY");Ge(this,"translationYZ");Ge(this,"translationXZ");this.context=t,this.size=i,this.fixed=r,this.free=new rF(this.context),this.add(this.free),this.translationX=new kc(this.context,"x"),this.add(this.translationX),this.translationY=new kc(this.context,"y"),this.translationY.rotation.z=Math.PI/2,this.add(this.translationY),this.translationZ=new kc(this.context,"z"),this.translationZ.rotation.y=-Math.PI/2,this.add(this.translationZ),this.translationNegX=new kc(this.context,"x",void 0,!0,!1),this.add(this.translationNegX),this.translationNegY=new kc(this.context,"y",void 0,!0,!1),this.translationNegY.rotation.z=Math.PI/2,this.add(this.translationNegY),this.translationNegZ=new kc(this.context,"z",void 0,!0,!1),this.translationNegZ.rotation.y=-Math.PI/2,this.add(this.translationNegZ),this.translationXY=new uv(this.context,"xy"),this.add(this.translationXY),this.translationXZ=new uv(this.context,"xz"),this.translationXZ.rotation.x=Math.PI/2,this.add(this.translationXZ),this.translationYZ=new uv(this.context,"yz"),this.translationYZ.rotation.y=-Math.PI/2,this.add(this.translationYZ)}update(t){this.updateWorldMatrix(!0,!1),this.scale.setScalar(1);const i=this.context.getTarget();i!=null&&(i.getWorldScale(C3),this.scale.divide(C3)),this.scale.multiplyScalar(Bx(this,t,this.fixed??!0,this.size??1))}bind(t){const i=this.translationX.bind(16711680,16776960,t),r=this.translationY.bind(65280,16776960,t),s=this.translationZ.bind(255,16776960,t),l=this.translationNegX.bind(16711680,16776960,t),c=this.translationNegY.bind(65280,16776960,t),u=this.translationNegZ.bind(255,16776960,t),d=this.translationXY.bind(255,16776960,t),h=this.translationYZ.bind(16711680,16776960,t),m=this.translationXZ.bind(65280,16776960,t),p=this.free.bind(t);return()=>{i==null||i(),r==null||r(),s==null||s(),l==null||l(),c==null||c(),u==null||u(),d==null||d(),h==null||h(),m==null||m(),p==null||p()}}}const P3={x:{vector1:new Qe(0,0,-1),vector2:new Qe(0,-1,0),rotationOffset:new un,axis:[1,0,0]},y:{vector1:new Qe(0,0,-1),vector2:new Qe(-1,0,-1),rotationOffset:new un().setFromEuler(new Rn(0,0,Math.PI/2)),axis:[0,1,0]},z:{vector1:new Qe(-1,0,0),vector2:new Qe(0,-1,0),rotationOffset:new un().setFromEuler(new Rn(0,Math.PI/2,0)),axis:[0,0,1]}},fv=new Qe,ud=new Qe,Ip=new Qe,nl=new Qe,Xr=new un;class dv extends ga{constructor(t,i,r=""){super(t,i,r,()=>({scale:!1,translate:"as-rotate",rotate:[this.direction],multitouch:!1}));Ge(this,"direction",new Qe(1,0,0))}update(t){const{rotationOffset:i,vector1:r,vector2:s}=P3[this.axis];t.getWorldPosition(fv),this.getWorldPosition(ud).sub(fv),Ip.copy(r),nl.copy(s);const l=this.context.getTarget(),c=this.context.getSpace();c==="local"&&l!=null&&(l.getWorldQuaternion(Xr),Ip.applyQuaternion(Xr),nl.applyQuaternion(Xr)),nl.crossVectors(Ip,nl);const u=ud.dot(nl);nl.multiplyScalar(u),ud.sub(nl),this.quaternion.setFromUnitVectors(Ip,ud.normalize()),c==="local"&&l!=null&&(l.getWorldQuaternion(Xr),this.quaternion.multiply(Xr)),this.quaternion.multiply(i),(l==null?void 0:l.parent)!=null?(l.parent.matrixWorld.decompose(fv,Xr,ud),Xr.invert(),this.quaternion.premultiply(Xr)):Xr.identity(),this.store.getState()==null&&(this.direction.fromArray(P3[this.axis].axis),this.direction.applyQuaternion(c==="local"&&l!=null?l==null?void 0:l.quaternion:Xr)),l!=null&&this.quaternion.premultiply(Xr.copy(l.quaternion).invert())}bind(t,i){const r=va(this.axis,i);if(r===!1)return;this.options=r;const s=new $i(Ri),l=os(this.context,s,this.tag,{color:t,hoverColor:16776960}),c=new Hn(Hx(.5,.5),s);c.renderOrder=1/0,this.add(c);const u=new Hn(new ix(.5,.1,4,24));u.visible=!1,u.pointerEventsOrder=1/0,u.rotation.set(0,-Math.PI/2,-Math.PI/2),this.add(u);const d=this.context.registerHandle(this.store,u,this.tag);return()=>{s.dispose(),u.geometry.dispose(),c.geometry.dispose(),d(),l==null||l(),this.remove(u),this.remove(c)}}}const hv=new Qe,pv=new Qe,lF=new Qe(1,0,0),fd=new un;class cF extends ga{constructor(e,t=""){super(e,"xyz",t,()=>({scale:!1,translate:"as-rotate",rotate:this.options,multitouch:!1}))}update(e){e.getWorldPosition(hv),this.getWorldPosition(pv).sub(hv),this.quaternion.setFromUnitVectors(lF,pv.normalize());const t=this.context.getTarget();(t==null?void 0:t.parent)!=null&&(t.parent.matrixWorld.decompose(hv,fd,pv),fd.invert(),this.quaternion.premultiply(fd)),t!=null&&(fd.copy(t.quaternion).invert(),this.quaternion.premultiply(fd))}bind(e){const t=va(this.axis,e);if(t===!1)return;this.options=t;const i=new $i(Ri),r=os(this.context,i,this.tag,{color:16777215,hoverColor:16776960,opacity:.25}),s=new Hn(Hx(.5,1),i);s.renderOrder=1/0,this.add(s);const l=new Hn(new OC(.25,10,8));l.visible=!1,l.pointerEventsOrder=1/0,this.add(l);const c=this.context.registerHandle(this.store,l,this.tag);return()=>{this.pointerEvents="none",i.dispose(),l.geometry.dispose(),s.geometry.dispose(),c(),r==null||r(),this.remove(l),this.remove(s)}}}const mv=new Qe,uF=new Qe,fF=new Qe(1,0,0),zc=new un;class dF extends ga{constructor(t,i=""){super(t,"e",i,()=>({scale:!1,translate:"as-rotate",rotate:[this.direction],multitouch:!1}));Ge(this,"direction",new Qe(1,0,0))}update(t){t.getWorldPosition(mv),this.getWorldPosition(this.direction).sub(mv).normalize(),this.quaternion.setFromUnitVectors(fF,this.direction);const i=this.context.getTarget();(i==null?void 0:i.parent)!=null&&(i.parent.matrixWorld.decompose(mv,zc,uF),zc.invert(),this.quaternion.premultiply(zc),this.direction.applyQuaternion(zc)),i!=null&&(zc.copy(i.quaternion).invert(),this.quaternion.premultiply(zc)),this.direction.negate()}bind(t){const i=va(this.axis,t);if(i===!1)return;this.options=i;const r=new $i(Ri),s=os(this.context,r,this.tag,{color:16776960,hoverColor:16776960,opacity:.5}),l=new Hn(Hx(.75,1),r);l.renderOrder=1/0,this.add(l);const c=new Hn(new ix(.75,.1,2,24),new $i({color:"white"}));c.visible=!1,c.rotation.y=Math.PI/2,c.pointerEventsOrder=1/0,this.add(c);const u=this.context.registerHandle(this.store,c,this.tag);return()=>{r.dispose(),c.geometry.dispose(),l.geometry.dispose(),u(),s==null||s(),this.remove(c),this.remove(l)}}}function Hx(n,e){const t=new ix(n,.0075,3,64,e*Math.PI*2);return t.rotateY(Math.PI/2),t.rotateX(Math.PI/2),t}const L3=new Qe;class hF extends ca{constructor(t,i,r){super();Ge(this,"context");Ge(this,"fixed");Ge(this,"size");Ge(this,"rotationX");Ge(this,"rotationY");Ge(this,"rotationZ");Ge(this,"free");Ge(this,"screen");this.context=t,this.fixed=i,this.size=r,this.rotationX=new dv(this.context,"x"),this.add(this.rotationX),this.rotationY=new dv(this.context,"y"),this.add(this.rotationY),this.rotationZ=new dv(this.context,"z"),this.add(this.rotationZ),this.free=new cF(this.context),this.add(this.free),this.screen=new dF(this.context),this.add(this.screen)}update(t){this.updateWorldMatrix(!0,!1),this.rotationX.update(t),this.rotationY.update(t),this.rotationZ.update(t),this.free.update(t),this.screen.update(t),this.scale.setScalar(1);const i=this.context.getTarget();i!=null&&(i.getWorldScale(L3),this.scale.divide(L3)),this.scale.multiplyScalar(Bx(this,t,this.fixed??!0,this.size??1))}bind(t){const i=this.rotationX.bind(16711680,t),r=this.rotationY.bind(65280,t),s=this.rotationZ.bind(255,t),l=this.screen.bind(t),c=this.free.bind(t);return()=>{i==null||i(),r==null||r(),s==null||s(),l==null||l(),c==null||c()}}}const pF=new Rn,mF=new Rn(0,0,Math.PI/2),gF=new Rn(0,-Math.PI/2,0);class vF extends ca{constructor(t){super();Ge(this,"xAxisHighlight");Ge(this,"yAxisHighlight");Ge(this,"zAxisHighlight");Ge(this,"handles");Ge(this,"context");this.context=new YO(this,t),this.xAxisHighlight=new lv(this.context,pF),this.add(this.xAxisHighlight),this.yAxisHighlight=new lv(this.context,mF),this.add(this.yAxisHighlight),this.zAxisHighlight=new lv(this.context,gF),this.add(this.zAxisHighlight)}set space(t){this.context.space=t}get space(){return this.context.space}update(t,i){var r;this.context.update(t),this.xAxisHighlight.update(),this.yAxisHighlight.update(),this.zAxisHighlight.update(),(r=this.handles)==null||r.update(i)}bind(t,i){const r=this.xAxisHighlight.bind("x"),s=this.yAxisHighlight.bind("y"),l=this.zAxisHighlight.bind("z");switch(t){case"rotate":this.handles=new hF(this.context);break;case"scale":this.handles=new oF(this.context);break;case"translate":this.handles=new iF(this.context);break}this.add(this.handles);const c=this.handles.bind(i);return()=>{this.handles!=null&&this.remove(this.handles),this.handles=void 0,c(),r(),s(),l()}}}new Qe(0,0,1);new Qe(0,1,0);new Qe;new Qe;new Rn;new Qe;new Bl;new Qe;new Qe;new Qe;new Bl;new Bl;new Qe;new Qe;new Bl;new Bl;new Bl;new Bl;new Qe;new Qe;const _F=2;class xF{constructor(e){this.xrDevice=e,this.combinedCameraPosition=new Re,this.isPointerLocked=!1,this.vec3=new Re,this.quat=new Fl,this.keyState={ShiftLeft:!1,KeyW:!1,KeyA:!1,KeyS:!1,KeyD:!1,ArrowUp:!1,ArrowDown:!1},this.lastTime=0,this.scene=new CO,this.camera=new Tr(50,window.innerWidth/window.innerHeight,.1,40),this.playerRig=new yu,this.cameraRig=new yu,this.scene.add(this.playerRig),this.playerRig.add(this.cameraRig),this.cameraRig.position.fromArray(e.position.vec3),this.cameraRig.quaternion.fromArray(e.quaternion.quat),this.cameraRig.add(this.camera),this.camera.position.x-=e.ipd/2;const t=new Ts(new kx(.25,.27,32),new Ux({color:16777215,side:da}));t.rotateX(-Math.PI/2),this.scene.add(t),this.renderer=new RO({alpha:!0}),this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.setSize(window.innerWidth,window.innerHeight),this.renderer.setClearColor(0,0),this.renderer.domElement.style.position="fixed",this.renderer.domElement.style.top="50vh",this.renderer.domElement.style.left="50vw",this.renderer.domElement.style.transform="translate(-50%, -50%)",this.transformHandles=new Map,["left","right"].forEach(i=>{const r=new vF;r.scale.setScalar(.1),r.position.fromArray(e.controllers[i].position.vec3),r.quaternion.fromArray(e.controllers[i].quaternion.quat),this.cameraRig.attach(r),r.userData={defaultPosition:r.position.toArray(),defaultQuaternion:r.quaternion.toArray()},r.userData.setMode=s=>{var l,c;(c=(l=r.userData).modeCleanup)===null||c===void 0||c.call(l),r.userData.modeCleanup=r.bind(s),r.userData.mode=s},r.userData.setMode("translate"),r.space="local",this.transformHandles.set(i,r),r.addEventListener("click",()=>{r.userData.mode==="translate"?r.userData.setMode("rotate"):r.userData.setMode("translate")})}),window.transformHandles=this.transformHandles,this.mouseMoveHandler=i=>{if(!this.isPointerLocked)return;const r=i.movementX||i.mozMovementX||i.webkitMovementX||0,s=i.movementY||i.mozMovementY||i.webkitMovementY||0;this.playerRig.rotation.y-=r*.002,this.cameraRig.rotation.x-=s*.002,e.quaternion.copy(this.cameraRig.getWorldQuaternion(new Fl))},this.cameraRig.getWorldPosition(this.combinedCameraPosition),this.headsetDefaultPosition=this.cameraRig.position.clone(),this.headsetDefaultQuaternion=this.cameraRig.quaternion.clone(),this.forwardHtmlEvents=kC(this.renderer.domElement,()=>this.camera,this.scene).update,document.addEventListener("pointerlockchange",this.pointerLockChangeHandler.bind(this),!1),document.addEventListener("mozpointerlockchange",this.pointerLockChangeHandler.bind(this),!1),document.addEventListener("webkitpointerlockchange",this.pointerLockChangeHandler.bind(this),!1),document.addEventListener("keydown",this.keyDownHandler.bind(this),!1),document.addEventListener("keyup",this.keyUpHandler.bind(this),!1)}lockPointer(){this.renderer.domElement.requestPointerLock=this.renderer.domElement.requestPointerLock||this.renderer.domElement.mozRequestPointerLock||this.renderer.domElement.webkitRequestPointerLock,this.renderer.domElement.requestPointerLock()}pointerLockChangeHandler(){this.isPointerLocked=document.pointerLockElement===this.renderer.domElement||document.mozPointerLockElement===this.renderer.domElement||document.webkitPointerLockElement===this.renderer.domElement,this.isPointerLocked?(document.addEventListener("mousemove",this.mouseMoveHandler,!1),Object.values(this.transformHandles).forEach(e=>{e.visible=!1})):(document.removeEventListener("mousemove",this.mouseMoveHandler,!1),Object.values(this.transformHandles).forEach(e=>{e.visible=!0}))}keyDownHandler(e){const{keyState:t}=this;e.code in t&&(t[e.code]=!0),t.ShiftLeft&&t.ArrowUp&&(this.cameraRig.position.y+=.05),t.ShiftLeft&&t.ArrowDown&&(this.cameraRig.position.y-=.05)}keyUpHandler(e){const{keyState:t}=this;e.code in t&&(t[e.code]=!1)}movePlayerRig(e){const{playerRig:t,keyState:i,vec3:r}=this;r.set((i.KeyD?1:0)-(i.KeyA?1:0),0,(i.KeyS?1:0)-(i.KeyW?1:0)),r.lengthSq()>0&&i.ShiftLeft&&(r.normalize().multiplyScalar(_F*e).applyQuaternion(t.quaternion),t.position.add(r))}resetDeviceTransforms(){const{playerRig:e,cameraRig:t,transformHandles:i}=this;t.position.copy(this.headsetDefaultPosition),t.quaternion.copy(this.headsetDefaultQuaternion),e.position.set(0,0,0),e.quaternion.set(0,0,0,1),i.forEach(r=>{r.position.fromArray(r.userData.defaultPosition),r.quaternion.fromArray(r.userData.defaultQuaternion)})}syncDeviceTransforms(){const{xrDevice:e,cameraRig:t,transformHandles:i}=this;e.position.copy(t.getWorldPosition(this.vec3)),e.quaternion.copy(t.getWorldQuaternion(this.quat)),i.forEach((r,s)=>{const l=e.primaryInputMode==="controller"?e.controllers[s]:e.hands[s];l.position.copy(r.getWorldPosition(this.vec3)),l.quaternion.copy(r.getWorldQuaternion(this.quat))})}renderScene(e){const t=this.xrDevice.fovy/Math.PI*180;let i=!1;this.camera.fov!==t&&(this.camera.fov=t,i=!0);const r=this.xrDevice.canvasDimensions;if(r){const l=this.renderer.domElement;(l.width!==r.width||l.height!==r.height)&&(this.camera.aspect=r.width/r.height,this.renderer.setSize(r.width,r.height),i=!0)}i&&this.camera.updateProjectionMatrix(),this.isPointerLocked?this.cameraRig.getWorldPosition(this.combinedCameraPosition):(this.cameraRig.position.y=this.combinedCameraPosition.y,this.playerRig.position.x=this.combinedCameraPosition.x,this.playerRig.position.z=this.combinedCameraPosition.z),this.forwardHtmlEvents(),this.transformHandles.forEach((l,c)=>{var u;const d=!!(!((u=this.xrDevice.controllers[c])===null||u===void 0)&&u.connected);l.visible=d&&!this.isPointerLocked,d&&l.update(e,this.camera)});const s=Math.min((e-this.lastTime)/1e3,.1);this.movePlayerRig(s),this.syncDeviceTransforms(),this.renderer.render(this.scene,this.camera),this.lastTime=e}get domElement(){return this.renderer.domElement}dispose(){this.renderer.dispose(),document.removeEventListener("pointerlockchange",this.pointerLockChangeHandler.bind(this),!1),document.removeEventListener("mozpointerlockchange",this.pointerLockChangeHandler.bind(this),!1),document.removeEventListener("webkitpointerlockchange",this.pointerLockChangeHandler.bind(this),!1),document.removeEventListener("mousemove",this.mouseMoveHandler,!1),document.removeEventListener("keydown",this.keyDownHandler.bind(this),!1),document.removeEventListener("keyup",this.keyUpHandler.bind(this),!1)}}const yF="1.1.1";var Dp={},gv={exports:{}},Fi={},vv={exports:{}},_v={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var I3;function SF(){return I3||(I3=1,function(n){function e(G,de){var le=G.length;G.push(de);e:for(;0<le;){var X=le-1>>>1,he=G[X];if(0<r(he,de))G[X]=de,G[le]=he,le=X;else break e}}function t(G){return G.length===0?null:G[0]}function i(G){if(G.length===0)return null;var de=G[0],le=G.pop();if(le!==de){G[0]=le;e:for(var X=0,he=G.length,He=he>>>1;X<He;){var Y=2*(X+1)-1,ie=G[Y],xe=Y+1,pe=G[xe];if(0>r(ie,le))xe<he&&0>r(pe,ie)?(G[X]=pe,G[xe]=le,X=xe):(G[X]=ie,G[Y]=le,X=Y);else if(xe<he&&0>r(pe,le))G[X]=pe,G[xe]=le,X=xe;else break e}}return de}function r(G,de){var le=G.sortIndex-de.sortIndex;return le!==0?le:G.id-de.id}if(typeof performance=="object"&&typeof performance.now=="function"){var s=performance;n.unstable_now=function(){return s.now()}}else{var l=Date,c=l.now();n.unstable_now=function(){return l.now()-c}}var u=[],d=[],h=1,m=null,p=3,x=!1,y=!1,S=!1,v=typeof setTimeout=="function"?setTimeout:null,g=typeof clearTimeout=="function"?clearTimeout:null,P=typeof setImmediate<"u"?setImmediate:null;typeof navigator<"u"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function w(G){for(var de=t(d);de!==null;){if(de.callback===null)i(d);else if(de.startTime<=G)i(d),de.sortIndex=de.expirationTime,e(u,de);else break;de=t(d)}}function C(G){if(S=!1,w(G),!y)if(t(u)!==null)y=!0,Q(z);else{var de=t(d);de!==null&&se(C,de.startTime-G)}}function z(G,de){y=!1,S&&(S=!1,g(V),V=-1),x=!0;var le=p;try{for(w(de),m=t(u);m!==null&&(!(m.expirationTime>de)||G&&!O());){var X=m.callback;if(typeof X=="function"){m.callback=null,p=m.priorityLevel;var he=X(m.expirationTime<=de);de=n.unstable_now(),typeof he=="function"?m.callback=he:m===t(u)&&i(u),w(de)}else i(u);m=t(u)}if(m!==null)var He=!0;else{var Y=t(d);Y!==null&&se(C,Y.startTime-de),He=!1}return He}finally{m=null,p=le,x=!1}}var L=!1,D=null,V=-1,R=5,T=-1;function O(){return!(n.unstable_now()-T<R)}function Z(){if(D!==null){var G=n.unstable_now();T=G;var de=!0;try{de=D(!0,G)}finally{de?W():(L=!1,D=null)}}else L=!1}var W;if(typeof P=="function")W=function(){P(Z)};else if(typeof MessageChannel<"u"){var K=new MessageChannel,ne=K.port2;K.port1.onmessage=Z,W=function(){ne.postMessage(null)}}else W=function(){v(Z,0)};function Q(G){D=G,L||(L=!0,W())}function se(G,de){V=v(function(){G(n.unstable_now())},de)}n.unstable_IdlePriority=5,n.unstable_ImmediatePriority=1,n.unstable_LowPriority=4,n.unstable_NormalPriority=3,n.unstable_Profiling=null,n.unstable_UserBlockingPriority=2,n.unstable_cancelCallback=function(G){G.callback=null},n.unstable_continueExecution=function(){y||x||(y=!0,Q(z))},n.unstable_forceFrameRate=function(G){0>G||125<G?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):R=0<G?Math.floor(1e3/G):5},n.unstable_getCurrentPriorityLevel=function(){return p},n.unstable_getFirstCallbackNode=function(){return t(u)},n.unstable_next=function(G){switch(p){case 1:case 2:case 3:var de=3;break;default:de=p}var le=p;p=de;try{return G()}finally{p=le}},n.unstable_pauseExecution=function(){},n.unstable_requestPaint=function(){},n.unstable_runWithPriority=function(G,de){switch(G){case 1:case 2:case 3:case 4:case 5:break;default:G=3}var le=p;p=G;try{return de()}finally{p=le}},n.unstable_scheduleCallback=function(G,de,le){var X=n.unstable_now();switch(typeof le=="object"&&le!==null?(le=le.delay,le=typeof le=="number"&&0<le?X+le:X):le=X,G){case 1:var he=-1;break;case 2:he=250;break;case 5:he=1073741823;break;case 4:he=1e4;break;default:he=5e3}return he=le+he,G={id:h++,callback:de,priorityLevel:G,startTime:le,expirationTime:he,sortIndex:-1},le>X?(G.sortIndex=le,e(d,G),t(u)===null&&G===t(d)&&(S?(g(V),V=-1):S=!0,se(C,le-X))):(G.sortIndex=he,e(u,G),y||x||(y=!0,Q(z))),G},n.unstable_shouldYield=O,n.unstable_wrapCallback=function(G){var de=p;return function(){var le=p;p=de;try{return G.apply(this,arguments)}finally{p=le}}}}(_v)),_v}var D3;function MF(){return D3||(D3=1,vv.exports=SF()),vv.exports}/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var N3;function EF(){if(N3)return Fi;N3=1;var n=cx(),e=MF();function t(a){for(var o="https://reactjs.org/docs/error-decoder.html?invariant="+a,f=1;f<arguments.length;f++)o+="&args[]="+encodeURIComponent(arguments[f]);return"Minified React error #"+a+"; visit "+o+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var i=new Set,r={};function s(a,o){l(a,o),l(a+"Capture",o)}function l(a,o){for(r[a]=o,a=0;a<o.length;a++)i.add(o[a])}var c=!(typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"),u=Object.prototype.hasOwnProperty,d=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,h={},m={};function p(a){return u.call(m,a)?!0:u.call(h,a)?!1:d.test(a)?m[a]=!0:(h[a]=!0,!1)}function x(a,o,f,_){if(f!==null&&f.type===0)return!1;switch(typeof o){case"function":case"symbol":return!0;case"boolean":return _?!1:f!==null?!f.acceptsBooleans:(a=a.toLowerCase().slice(0,5),a!=="data-"&&a!=="aria-");default:return!1}}function y(a,o,f,_){if(o===null||typeof o>"u"||x(a,o,f,_))return!0;if(_)return!1;if(f!==null)switch(f.type){case 3:return!o;case 4:return o===!1;case 5:return isNaN(o);case 6:return isNaN(o)||1>o}return!1}function S(a,o,f,_,M,b,F){this.acceptsBooleans=o===2||o===3||o===4,this.attributeName=_,this.attributeNamespace=M,this.mustUseProperty=f,this.propertyName=a,this.type=o,this.sanitizeURL=b,this.removeEmptyString=F}var v={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a){v[a]=new S(a,0,!1,a,null,!1,!1)}),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(a){var o=a[0];v[o]=new S(o,1,!1,a[1],null,!1,!1)}),["contentEditable","draggable","spellCheck","value"].forEach(function(a){v[a]=new S(a,2,!1,a.toLowerCase(),null,!1,!1)}),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(a){v[a]=new S(a,2,!1,a,null,!1,!1)}),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a){v[a]=new S(a,3,!1,a.toLowerCase(),null,!1,!1)}),["checked","multiple","muted","selected"].forEach(function(a){v[a]=new S(a,3,!0,a,null,!1,!1)}),["capture","download"].forEach(function(a){v[a]=new S(a,4,!1,a,null,!1,!1)}),["cols","rows","size","span"].forEach(function(a){v[a]=new S(a,6,!1,a,null,!1,!1)}),["rowSpan","start"].forEach(function(a){v[a]=new S(a,5,!1,a.toLowerCase(),null,!1,!1)});var g=/[\-:]([a-z])/g;function P(a){return a[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a){var o=a.replace(g,P);v[o]=new S(o,1,!1,a,null,!1,!1)}),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a){var o=a.replace(g,P);v[o]=new S(o,1,!1,a,"http://www.w3.org/1999/xlink",!1,!1)}),["xml:base","xml:lang","xml:space"].forEach(function(a){var o=a.replace(g,P);v[o]=new S(o,1,!1,a,"http://www.w3.org/XML/1998/namespace",!1,!1)}),["tabIndex","crossOrigin"].forEach(function(a){v[a]=new S(a,1,!1,a.toLowerCase(),null,!1,!1)}),v.xlinkHref=new S("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach(function(a){v[a]=new S(a,1,!1,a.toLowerCase(),null,!0,!0)});function w(a,o,f,_){var M=v.hasOwnProperty(o)?v[o]:null;(M!==null?M.type!==0:_||!(2<o.length)||o[0]!=="o"&&o[0]!=="O"||o[1]!=="n"&&o[1]!=="N")&&(y(o,f,M,_)&&(f=null),_||M===null?p(o)&&(f===null?a.removeAttribute(o):a.setAttribute(o,""+f)):M.mustUseProperty?a[M.propertyName]=f===null?M.type===3?!1:"":f:(o=M.attributeName,_=M.attributeNamespace,f===null?a.removeAttribute(o):(M=M.type,f=M===3||M===4&&f===!0?"":""+f,_?a.setAttributeNS(_,o,f):a.setAttribute(o,f))))}var C=n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,z=Symbol.for("react.element"),L=Symbol.for("react.portal"),D=Symbol.for("react.fragment"),V=Symbol.for("react.strict_mode"),R=Symbol.for("react.profiler"),T=Symbol.for("react.provider"),O=Symbol.for("react.context"),Z=Symbol.for("react.forward_ref"),W=Symbol.for("react.suspense"),K=Symbol.for("react.suspense_list"),ne=Symbol.for("react.memo"),Q=Symbol.for("react.lazy"),se=Symbol.for("react.offscreen"),G=Symbol.iterator;function de(a){return a===null||typeof a!="object"?null:(a=G&&a[G]||a["@@iterator"],typeof a=="function"?a:null)}var le=Object.assign,X;function he(a){if(X===void 0)try{throw Error()}catch(f){var o=f.stack.trim().match(/\n( *(at )?)/);X=o&&o[1]||""}return`
`+X+a}var He=!1;function Y(a,o){if(!a||He)return"";He=!0;var f=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(o)if(o=function(){throw Error()},Object.defineProperty(o.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(o,[])}catch(we){var _=we}Reflect.construct(a,[],o)}else{try{o.call()}catch(we){_=we}a.call(o.prototype)}else{try{throw Error()}catch(we){_=we}a()}}catch(we){if(we&&_&&typeof we.stack=="string"){for(var M=we.stack.split(`
`),b=_.stack.split(`
`),F=M.length-1,J=b.length-1;1<=F&&0<=J&&M[F]!==b[J];)J--;for(;1<=F&&0<=J;F--,J--)if(M[F]!==b[J]){if(F!==1||J!==1)do if(F--,J--,0>J||M[F]!==b[J]){var re=`
`+M[F].replace(" at new "," at ");return a.displayName&&re.includes("<anonymous>")&&(re=re.replace("<anonymous>",a.displayName)),re}while(1<=F&&0<=J);break}}}finally{He=!1,Error.prepareStackTrace=f}return(a=a?a.displayName||a.name:"")?he(a):""}function ie(a){switch(a.tag){case 5:return he(a.type);case 16:return he("Lazy");case 13:return he("Suspense");case 19:return he("SuspenseList");case 0:case 2:case 15:return a=Y(a.type,!1),a;case 11:return a=Y(a.type.render,!1),a;case 1:return a=Y(a.type,!0),a;default:return""}}function xe(a){if(a==null)return null;if(typeof a=="function")return a.displayName||a.name||null;if(typeof a=="string")return a;switch(a){case D:return"Fragment";case L:return"Portal";case R:return"Profiler";case V:return"StrictMode";case W:return"Suspense";case K:return"SuspenseList"}if(typeof a=="object")switch(a.$$typeof){case O:return(a.displayName||"Context")+".Consumer";case T:return(a._context.displayName||"Context")+".Provider";case Z:var o=a.render;return a=a.displayName,a||(a=o.displayName||o.name||"",a=a!==""?"ForwardRef("+a+")":"ForwardRef"),a;case ne:return o=a.displayName||null,o!==null?o:xe(a.type)||"Memo";case Q:o=a._payload,a=a._init;try{return xe(a(o))}catch{}}return null}function pe(a){var o=a.type;switch(a.tag){case 24:return"Cache";case 9:return(o.displayName||"Context")+".Consumer";case 10:return(o._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return a=o.render,a=a.displayName||a.name||"",o.displayName||(a!==""?"ForwardRef("+a+")":"ForwardRef");case 7:return"Fragment";case 5:return o;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return xe(o);case 8:return o===V?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if(typeof o=="function")return o.displayName||o.name||null;if(typeof o=="string")return o}return null}function Oe(a){switch(typeof a){case"boolean":case"number":case"string":case"undefined":return a;case"object":return a;default:return""}}function Ne(a){var o=a.type;return(a=a.nodeName)&&a.toLowerCase()==="input"&&(o==="checkbox"||o==="radio")}function Ye(a){var o=Ne(a)?"checked":"value",f=Object.getOwnPropertyDescriptor(a.constructor.prototype,o),_=""+a[o];if(!a.hasOwnProperty(o)&&typeof f<"u"&&typeof f.get=="function"&&typeof f.set=="function"){var M=f.get,b=f.set;return Object.defineProperty(a,o,{configurable:!0,get:function(){return M.call(this)},set:function(F){_=""+F,b.call(this,F)}}),Object.defineProperty(a,o,{enumerable:f.enumerable}),{getValue:function(){return _},setValue:function(F){_=""+F},stopTracking:function(){a._valueTracker=null,delete a[o]}}}}function U(a){a._valueTracker||(a._valueTracker=Ye(a))}function Je(a){if(!a)return!1;var o=a._valueTracker;if(!o)return!0;var f=o.getValue(),_="";return a&&(_=Ne(a)?a.checked?"true":"false":a.value),a=_,a!==f?(o.setValue(a),!0):!1}function nt(a){if(a=a||(typeof document<"u"?document:void 0),typeof a>"u")return null;try{return a.activeElement||a.body}catch{return a.body}}function Tt(a,o){var f=o.checked;return le({},o,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:f??a._wrapperState.initialChecked})}function Ve(a,o){var f=o.defaultValue==null?"":o.defaultValue,_=o.checked!=null?o.checked:o.defaultChecked;f=Oe(o.value!=null?o.value:f),a._wrapperState={initialChecked:_,initialValue:f,controlled:o.type==="checkbox"||o.type==="radio"?o.checked!=null:o.value!=null}}function ut(a,o){o=o.checked,o!=null&&w(a,"checked",o,!1)}function tt(a,o){ut(a,o);var f=Oe(o.value),_=o.type;if(f!=null)_==="number"?(f===0&&a.value===""||a.value!=f)&&(a.value=""+f):a.value!==""+f&&(a.value=""+f);else if(_==="submit"||_==="reset"){a.removeAttribute("value");return}o.hasOwnProperty("value")?Lt(a,o.type,f):o.hasOwnProperty("defaultValue")&&Lt(a,o.type,Oe(o.defaultValue)),o.checked==null&&o.defaultChecked!=null&&(a.defaultChecked=!!o.defaultChecked)}function Ke(a,o,f){if(o.hasOwnProperty("value")||o.hasOwnProperty("defaultValue")){var _=o.type;if(!(_!=="submit"&&_!=="reset"||o.value!==void 0&&o.value!==null))return;o=""+a._wrapperState.initialValue,f||o===a.value||(a.value=o),a.defaultValue=o}f=a.name,f!==""&&(a.name=""),a.defaultChecked=!!a._wrapperState.initialChecked,f!==""&&(a.name=f)}function Lt(a,o,f){(o!=="number"||nt(a.ownerDocument)!==a)&&(f==null?a.defaultValue=""+a._wrapperState.initialValue:a.defaultValue!==""+f&&(a.defaultValue=""+f))}var I=Array.isArray;function E(a,o,f,_){if(a=a.options,o){o={};for(var M=0;M<f.length;M++)o["$"+f[M]]=!0;for(f=0;f<a.length;f++)M=o.hasOwnProperty("$"+a[f].value),a[f].selected!==M&&(a[f].selected=M),M&&_&&(a[f].defaultSelected=!0)}else{for(f=""+Oe(f),o=null,M=0;M<a.length;M++){if(a[M].value===f){a[M].selected=!0,_&&(a[M].defaultSelected=!0);return}o!==null||a[M].disabled||(o=a[M])}o!==null&&(o.selected=!0)}}function j(a,o){if(o.dangerouslySetInnerHTML!=null)throw Error(t(91));return le({},o,{value:void 0,defaultValue:void 0,children:""+a._wrapperState.initialValue})}function ae(a,o){var f=o.value;if(f==null){if(f=o.children,o=o.defaultValue,f!=null){if(o!=null)throw Error(t(92));if(I(f)){if(1<f.length)throw Error(t(93));f=f[0]}o=f}o==null&&(o=""),f=o}a._wrapperState={initialValue:Oe(f)}}function ce(a,o){var f=Oe(o.value),_=Oe(o.defaultValue);f!=null&&(f=""+f,f!==a.value&&(a.value=f),o.defaultValue==null&&a.defaultValue!==f&&(a.defaultValue=f)),_!=null&&(a.defaultValue=""+_)}function ue(a){var o=a.textContent;o===a._wrapperState.initialValue&&o!==""&&o!==null&&(a.value=o)}function Fe(a){switch(a){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Me(a,o){return a==null||a==="http://www.w3.org/1999/xhtml"?Fe(o):a==="http://www.w3.org/2000/svg"&&o==="foreignObject"?"http://www.w3.org/1999/xhtml":a}var Se,Ze=function(a){return typeof MSApp<"u"&&MSApp.execUnsafeLocalFunction?function(o,f,_,M){MSApp.execUnsafeLocalFunction(function(){return a(o,f,_,M)})}:a}(function(a,o){if(a.namespaceURI!=="http://www.w3.org/2000/svg"||"innerHTML"in a)a.innerHTML=o;else{for(Se=Se||document.createElement("div"),Se.innerHTML="<svg>"+o.valueOf().toString()+"</svg>",o=Se.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;o.firstChild;)a.appendChild(o.firstChild)}});function me(a,o){if(o){var f=a.firstChild;if(f&&f===a.lastChild&&f.nodeType===3){f.nodeValue=o;return}}a.textContent=o}var Pe={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},it=["Webkit","ms","Moz","O"];Object.keys(Pe).forEach(function(a){it.forEach(function(o){o=o+a.charAt(0).toUpperCase()+a.substring(1),Pe[o]=Pe[a]})});function Xe(a,o,f){return o==null||typeof o=="boolean"||o===""?"":f||typeof o!="number"||o===0||Pe.hasOwnProperty(a)&&Pe[a]?(""+o).trim():o+"px"}function Te(a,o){a=a.style;for(var f in o)if(o.hasOwnProperty(f)){var _=f.indexOf("--")===0,M=Xe(f,o[f],_);f==="float"&&(f="cssFloat"),_?a.setProperty(f,M):a[f]=M}}var et=le({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function rt(a,o){if(o){if(et[a]&&(o.children!=null||o.dangerouslySetInnerHTML!=null))throw Error(t(137,a));if(o.dangerouslySetInnerHTML!=null){if(o.children!=null)throw Error(t(60));if(typeof o.dangerouslySetInnerHTML!="object"||!("__html"in o.dangerouslySetInnerHTML))throw Error(t(61))}if(o.style!=null&&typeof o.style!="object")throw Error(t(62))}}function bt(a,o){if(a.indexOf("-")===-1)return typeof o.is=="string";switch(a){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var N=null;function Ae(a){return a=a.target||a.srcElement||window,a.correspondingUseElement&&(a=a.correspondingUseElement),a.nodeType===3?a.parentNode:a}var ee=null,te=null,ge=null;function qe(a){if(a=If(a)){if(typeof ee!="function")throw Error(t(280));var o=a.stateNode;o&&(o=hh(o),ee(a.stateNode,a.type,o))}}function dt(a){te?ge?ge.push(a):ge=[a]:te=a}function Pt(){if(te){var a=te,o=ge;if(ge=te=null,qe(a),o)for(a=0;a<o.length;a++)qe(o[a])}}function Nt(a,o){return a(o)}function xt(){}var dn=!1;function yn(a,o,f){if(dn)return a(o,f);dn=!0;try{return Nt(a,o,f)}finally{dn=!1,(te!==null||ge!==null)&&(xt(),Pt())}}function In(a,o){var f=a.stateNode;if(f===null)return null;var _=hh(f);if(_===null)return null;f=_[o];e:switch(o){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(_=!_.disabled)||(a=a.type,_=!(a==="button"||a==="input"||a==="select"||a==="textarea")),a=!_;break e;default:a=!1}if(a)return null;if(f&&typeof f!="function")throw Error(t(231,o,typeof f));return f}var Ir=!1;if(c)try{var Dr={};Object.defineProperty(Dr,"passive",{get:function(){Ir=!0}}),window.addEventListener("test",Dr,Dr),window.removeEventListener("test",Dr,Dr)}catch{Ir=!1}function Po(a,o,f,_,M,b,F,J,re){var we=Array.prototype.slice.call(arguments,3);try{o.apply(f,we)}catch(Be){this.onError(Be)}}var yi=!1,ls=null,Pi=!1,Ds=null,Lo={onError:function(a){yi=!0,ls=a}};function hf(a,o,f,_,M,b,F,J,re){yi=!1,ls=null,Po.apply(Lo,arguments)}function pf(a,o,f,_,M,b,F,J,re){if(hf.apply(this,arguments),yi){if(yi){var we=ls;yi=!1,ls=null}else throw Error(t(198));Pi||(Pi=!0,Ds=we)}}function Nr(a){var o=a,f=a;if(a.alternate)for(;o.return;)o=o.return;else{a=o;do o=a,(o.flags&4098)!==0&&(f=o.return),a=o.return;while(a)}return o.tag===3?f:null}function A(a){if(a.tag===13){var o=a.memoizedState;if(o===null&&(a=a.alternate,a!==null&&(o=a.memoizedState)),o!==null)return o.dehydrated}return null}function k(a){if(Nr(a)!==a)throw Error(t(188))}function $(a){var o=a.alternate;if(!o){if(o=Nr(a),o===null)throw Error(t(188));return o!==a?null:a}for(var f=a,_=o;;){var M=f.return;if(M===null)break;var b=M.alternate;if(b===null){if(_=M.return,_!==null){f=_;continue}break}if(M.child===b.child){for(b=M.child;b;){if(b===f)return k(M),a;if(b===_)return k(M),o;b=b.sibling}throw Error(t(188))}if(f.return!==_.return)f=M,_=b;else{for(var F=!1,J=M.child;J;){if(J===f){F=!0,f=M,_=b;break}if(J===_){F=!0,_=M,f=b;break}J=J.sibling}if(!F){for(J=b.child;J;){if(J===f){F=!0,f=b,_=M;break}if(J===_){F=!0,_=b,f=M;break}J=J.sibling}if(!F)throw Error(t(189))}}if(f.alternate!==_)throw Error(t(190))}if(f.tag!==3)throw Error(t(188));return f.stateNode.current===f?a:o}function q(a){return a=$(a),a!==null?H(a):null}function H(a){if(a.tag===5||a.tag===6)return a;for(a=a.child;a!==null;){var o=H(a);if(o!==null)return o;a=a.sibling}return null}var ve=e.unstable_scheduleCallback,be=e.unstable_cancelCallback,Ce=e.unstable_shouldYield,Le=e.unstable_requestPaint,De=e.unstable_now,$e=e.unstable_getCurrentPriorityLevel,ke=e.unstable_ImmediatePriority,pt=e.unstable_UserBlockingPriority,At=e.unstable_NormalPriority,Rt=e.unstable_LowPriority,Qt=e.unstable_IdlePriority,mt=null,Ie=null;function $t(a){if(Ie&&typeof Ie.onCommitFiberRoot=="function")try{Ie.onCommitFiberRoot(mt,a,void 0,(a.current.flags&128)===128)}catch{}}var ct=Math.clz32?Math.clz32:ri,Dn=Math.log,Ur=Math.LN2;function ri(a){return a>>>=0,a===0?32:31-(Dn(a)/Ur|0)|0}var ur=64,It=4194304;function En(a){switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return a&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return a}}function fr(a,o){var f=a.pendingLanes;if(f===0)return 0;var _=0,M=a.suspendedLanes,b=a.pingedLanes,F=f&268435455;if(F!==0){var J=F&~M;J!==0?_=En(J):(b&=F,b!==0&&(_=En(b)))}else F=f&~M,F!==0?_=En(F):b!==0&&(_=En(b));if(_===0)return 0;if(o!==0&&o!==_&&(o&M)===0&&(M=_&-_,b=o&-o,M>=b||M===16&&(b&4194240)!==0))return o;if((_&4)!==0&&(_|=f&16),o=a.entangledLanes,o!==0)for(a=a.entanglements,o&=_;0<o;)f=31-ct(o),M=1<<f,_|=a[f],o&=~M;return _}function ln(a,o){switch(a){case 1:case 2:case 4:return o+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return o+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function Ns(a,o){for(var f=a.suspendedLanes,_=a.pingedLanes,M=a.expirationTimes,b=a.pendingLanes;0<b;){var F=31-ct(b),J=1<<F,re=M[F];re===-1?((J&f)===0||(J&_)!==0)&&(M[F]=ln(J,o)):re<=o&&(a.expiredLanes|=J),b&=~J}}function Io(a){return a=a.pendingLanes&-1073741825,a!==0?a:a&1073741824?1073741824:0}function _a(){var a=ur;return ur<<=1,(ur&4194240)===0&&(ur=64),a}function E0(a){for(var o=[],f=0;31>f;f++)o.push(a);return o}function mf(a,o,f){a.pendingLanes|=o,o!==536870912&&(a.suspendedLanes=0,a.pingedLanes=0),a=a.eventTimes,o=31-ct(o),a[o]=f}function Y4(a,o){var f=a.pendingLanes&~o;a.pendingLanes=o,a.suspendedLanes=0,a.pingedLanes=0,a.expiredLanes&=o,a.mutableReadLanes&=o,a.entangledLanes&=o,o=a.entanglements;var _=a.eventTimes;for(a=a.expirationTimes;0<f;){var M=31-ct(f),b=1<<M;o[M]=0,_[M]=-1,a[M]=-1,f&=~b}}function w0(a,o){var f=a.entangledLanes|=o;for(a=a.entanglements;f;){var _=31-ct(f),M=1<<_;M&o|a[_]&o&&(a[_]|=o),f&=~M}}var tn=0;function jx(a){return a&=-a,1<a?4<a?(a&268435455)!==0?16:536870912:4:1}var Yx,T0,Kx,Zx,Qx,A0=!1,Qd=[],xa=null,ya=null,Sa=null,gf=new Map,vf=new Map,Ma=[],K4="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Jx(a,o){switch(a){case"focusin":case"focusout":xa=null;break;case"dragenter":case"dragleave":ya=null;break;case"mouseover":case"mouseout":Sa=null;break;case"pointerover":case"pointerout":gf.delete(o.pointerId);break;case"gotpointercapture":case"lostpointercapture":vf.delete(o.pointerId)}}function _f(a,o,f,_,M,b){return a===null||a.nativeEvent!==b?(a={blockedOn:o,domEventName:f,eventSystemFlags:_,nativeEvent:b,targetContainers:[M]},o!==null&&(o=If(o),o!==null&&T0(o)),a):(a.eventSystemFlags|=_,o=a.targetContainers,M!==null&&o.indexOf(M)===-1&&o.push(M),a)}function Z4(a,o,f,_,M){switch(o){case"focusin":return xa=_f(xa,a,o,f,_,M),!0;case"dragenter":return ya=_f(ya,a,o,f,_,M),!0;case"mouseover":return Sa=_f(Sa,a,o,f,_,M),!0;case"pointerover":var b=M.pointerId;return gf.set(b,_f(gf.get(b)||null,a,o,f,_,M)),!0;case"gotpointercapture":return b=M.pointerId,vf.set(b,_f(vf.get(b)||null,a,o,f,_,M)),!0}return!1}function ey(a){var o=Do(a.target);if(o!==null){var f=Nr(o);if(f!==null){if(o=f.tag,o===13){if(o=A(f),o!==null){a.blockedOn=o,Qx(a.priority,function(){Kx(f)});return}}else if(o===3&&f.stateNode.current.memoizedState.isDehydrated){a.blockedOn=f.tag===3?f.stateNode.containerInfo:null;return}}}a.blockedOn=null}function Jd(a){if(a.blockedOn!==null)return!1;for(var o=a.targetContainers;0<o.length;){var f=R0(a.domEventName,a.eventSystemFlags,o[0],a.nativeEvent);if(f===null){f=a.nativeEvent;var _=new f.constructor(f.type,f);N=_,f.target.dispatchEvent(_),N=null}else return o=If(f),o!==null&&T0(o),a.blockedOn=f,!1;o.shift()}return!0}function ty(a,o,f){Jd(a)&&f.delete(o)}function Q4(){A0=!1,xa!==null&&Jd(xa)&&(xa=null),ya!==null&&Jd(ya)&&(ya=null),Sa!==null&&Jd(Sa)&&(Sa=null),gf.forEach(ty),vf.forEach(ty)}function xf(a,o){a.blockedOn===o&&(a.blockedOn=null,A0||(A0=!0,e.unstable_scheduleCallback(e.unstable_NormalPriority,Q4)))}function yf(a){function o(M){return xf(M,a)}if(0<Qd.length){xf(Qd[0],a);for(var f=1;f<Qd.length;f++){var _=Qd[f];_.blockedOn===a&&(_.blockedOn=null)}}for(xa!==null&&xf(xa,a),ya!==null&&xf(ya,a),Sa!==null&&xf(Sa,a),gf.forEach(o),vf.forEach(o),f=0;f<Ma.length;f++)_=Ma[f],_.blockedOn===a&&(_.blockedOn=null);for(;0<Ma.length&&(f=Ma[0],f.blockedOn===null);)ey(f),f.blockedOn===null&&Ma.shift()}var Vl=C.ReactCurrentBatchConfig,eh=!0;function J4(a,o,f,_){var M=tn,b=Vl.transition;Vl.transition=null;try{tn=1,b0(a,o,f,_)}finally{tn=M,Vl.transition=b}}function eR(a,o,f,_){var M=tn,b=Vl.transition;Vl.transition=null;try{tn=4,b0(a,o,f,_)}finally{tn=M,Vl.transition=b}}function b0(a,o,f,_){if(eh){var M=R0(a,o,f,_);if(M===null)$0(a,o,_,th,f),Jx(a,_);else if(Z4(M,a,o,f,_))_.stopPropagation();else if(Jx(a,_),o&4&&-1<K4.indexOf(a)){for(;M!==null;){var b=If(M);if(b!==null&&Yx(b),b=R0(a,o,f,_),b===null&&$0(a,o,_,th,f),b===M)break;M=b}M!==null&&_.stopPropagation()}else $0(a,o,_,null,f)}}var th=null;function R0(a,o,f,_){if(th=null,a=Ae(_),a=Do(a),a!==null)if(o=Nr(a),o===null)a=null;else if(f=o.tag,f===13){if(a=A(o),a!==null)return a;a=null}else if(f===3){if(o.stateNode.current.memoizedState.isDehydrated)return o.tag===3?o.stateNode.containerInfo:null;a=null}else o!==a&&(a=null);return th=a,null}function ny(a){switch(a){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch($e()){case ke:return 1;case pt:return 4;case At:case Rt:return 16;case Qt:return 536870912;default:return 16}default:return 16}}var Ea=null,C0=null,nh=null;function iy(){if(nh)return nh;var a,o=C0,f=o.length,_,M="value"in Ea?Ea.value:Ea.textContent,b=M.length;for(a=0;a<f&&o[a]===M[a];a++);var F=f-a;for(_=1;_<=F&&o[f-_]===M[b-_];_++);return nh=M.slice(a,1<_?1-_:void 0)}function ih(a){var o=a.keyCode;return"charCode"in a?(a=a.charCode,a===0&&o===13&&(a=13)):a=o,a===10&&(a=13),32<=a||a===13?a:0}function rh(){return!0}function ry(){return!1}function ji(a){function o(f,_,M,b,F){this._reactName=f,this._targetInst=M,this.type=_,this.nativeEvent=b,this.target=F,this.currentTarget=null;for(var J in a)a.hasOwnProperty(J)&&(f=a[J],this[J]=f?f(b):b[J]);return this.isDefaultPrevented=(b.defaultPrevented!=null?b.defaultPrevented:b.returnValue===!1)?rh:ry,this.isPropagationStopped=ry,this}return le(o.prototype,{preventDefault:function(){this.defaultPrevented=!0;var f=this.nativeEvent;f&&(f.preventDefault?f.preventDefault():typeof f.returnValue!="unknown"&&(f.returnValue=!1),this.isDefaultPrevented=rh)},stopPropagation:function(){var f=this.nativeEvent;f&&(f.stopPropagation?f.stopPropagation():typeof f.cancelBubble!="unknown"&&(f.cancelBubble=!0),this.isPropagationStopped=rh)},persist:function(){},isPersistent:rh}),o}var Gl={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},P0=ji(Gl),Sf=le({},Gl,{view:0,detail:0}),tR=ji(Sf),L0,I0,Mf,sh=le({},Sf,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:N0,button:0,buttons:0,relatedTarget:function(a){return a.relatedTarget===void 0?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){return"movementX"in a?a.movementX:(a!==Mf&&(Mf&&a.type==="mousemove"?(L0=a.screenX-Mf.screenX,I0=a.screenY-Mf.screenY):I0=L0=0,Mf=a),L0)},movementY:function(a){return"movementY"in a?a.movementY:I0}}),sy=ji(sh),nR=le({},sh,{dataTransfer:0}),iR=ji(nR),rR=le({},Sf,{relatedTarget:0}),D0=ji(rR),sR=le({},Gl,{animationName:0,elapsedTime:0,pseudoElement:0}),aR=ji(sR),oR=le({},Gl,{clipboardData:function(a){return"clipboardData"in a?a.clipboardData:window.clipboardData}}),lR=ji(oR),cR=le({},Gl,{data:0}),ay=ji(cR),uR={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},fR={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},dR={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function hR(a){var o=this.nativeEvent;return o.getModifierState?o.getModifierState(a):(a=dR[a])?!!o[a]:!1}function N0(){return hR}var pR=le({},Sf,{key:function(a){if(a.key){var o=uR[a.key]||a.key;if(o!=="Unidentified")return o}return a.type==="keypress"?(a=ih(a),a===13?"Enter":String.fromCharCode(a)):a.type==="keydown"||a.type==="keyup"?fR[a.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:N0,charCode:function(a){return a.type==="keypress"?ih(a):0},keyCode:function(a){return a.type==="keydown"||a.type==="keyup"?a.keyCode:0},which:function(a){return a.type==="keypress"?ih(a):a.type==="keydown"||a.type==="keyup"?a.keyCode:0}}),mR=ji(pR),gR=le({},sh,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),oy=ji(gR),vR=le({},Sf,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:N0}),_R=ji(vR),xR=le({},Gl,{propertyName:0,elapsedTime:0,pseudoElement:0}),yR=ji(xR),SR=le({},sh,{deltaX:function(a){return"deltaX"in a?a.deltaX:"wheelDeltaX"in a?-a.wheelDeltaX:0},deltaY:function(a){return"deltaY"in a?a.deltaY:"wheelDeltaY"in a?-a.wheelDeltaY:"wheelDelta"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),MR=ji(SR),ER=[9,13,27,32],U0=c&&"CompositionEvent"in window,Ef=null;c&&"documentMode"in document&&(Ef=document.documentMode);var wR=c&&"TextEvent"in window&&!Ef,ly=c&&(!U0||Ef&&8<Ef&&11>=Ef),cy=" ",uy=!1;function fy(a,o){switch(a){case"keyup":return ER.indexOf(o.keyCode)!==-1;case"keydown":return o.keyCode!==229;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function dy(a){return a=a.detail,typeof a=="object"&&"data"in a?a.data:null}var Wl=!1;function TR(a,o){switch(a){case"compositionend":return dy(o);case"keypress":return o.which!==32?null:(uy=!0,cy);case"textInput":return a=o.data,a===cy&&uy?null:a;default:return null}}function AR(a,o){if(Wl)return a==="compositionend"||!U0&&fy(a,o)?(a=iy(),nh=C0=Ea=null,Wl=!1,a):null;switch(a){case"paste":return null;case"keypress":if(!(o.ctrlKey||o.altKey||o.metaKey)||o.ctrlKey&&o.altKey){if(o.char&&1<o.char.length)return o.char;if(o.which)return String.fromCharCode(o.which)}return null;case"compositionend":return ly&&o.locale!=="ko"?null:o.data;default:return null}}var bR={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function hy(a){var o=a&&a.nodeName&&a.nodeName.toLowerCase();return o==="input"?!!bR[a.type]:o==="textarea"}function py(a,o,f,_){dt(_),o=uh(o,"onChange"),0<o.length&&(f=new P0("onChange","change",null,f,_),a.push({event:f,listeners:o}))}var wf=null,Tf=null;function RR(a){Iy(a,0)}function ah(a){var o=Yl(a);if(Je(o))return a}function CR(a,o){if(a==="change")return o}var my=!1;if(c){var O0;if(c){var F0="oninput"in document;if(!F0){var gy=document.createElement("div");gy.setAttribute("oninput","return;"),F0=typeof gy.oninput=="function"}O0=F0}else O0=!1;my=O0&&(!document.documentMode||9<document.documentMode)}function vy(){wf&&(wf.detachEvent("onpropertychange",_y),Tf=wf=null)}function _y(a){if(a.propertyName==="value"&&ah(Tf)){var o=[];py(o,Tf,a,Ae(a)),yn(RR,o)}}function PR(a,o,f){a==="focusin"?(vy(),wf=o,Tf=f,wf.attachEvent("onpropertychange",_y)):a==="focusout"&&vy()}function LR(a){if(a==="selectionchange"||a==="keyup"||a==="keydown")return ah(Tf)}function IR(a,o){if(a==="click")return ah(o)}function DR(a,o){if(a==="input"||a==="change")return ah(o)}function NR(a,o){return a===o&&(a!==0||1/a===1/o)||a!==a&&o!==o}var Or=typeof Object.is=="function"?Object.is:NR;function Af(a,o){if(Or(a,o))return!0;if(typeof a!="object"||a===null||typeof o!="object"||o===null)return!1;var f=Object.keys(a),_=Object.keys(o);if(f.length!==_.length)return!1;for(_=0;_<f.length;_++){var M=f[_];if(!u.call(o,M)||!Or(a[M],o[M]))return!1}return!0}function xy(a){for(;a&&a.firstChild;)a=a.firstChild;return a}function yy(a,o){var f=xy(a);a=0;for(var _;f;){if(f.nodeType===3){if(_=a+f.textContent.length,a<=o&&_>=o)return{node:f,offset:o-a};a=_}e:{for(;f;){if(f.nextSibling){f=f.nextSibling;break e}f=f.parentNode}f=void 0}f=xy(f)}}function Sy(a,o){return a&&o?a===o?!0:a&&a.nodeType===3?!1:o&&o.nodeType===3?Sy(a,o.parentNode):"contains"in a?a.contains(o):a.compareDocumentPosition?!!(a.compareDocumentPosition(o)&16):!1:!1}function My(){for(var a=window,o=nt();o instanceof a.HTMLIFrameElement;){try{var f=typeof o.contentWindow.location.href=="string"}catch{f=!1}if(f)a=o.contentWindow;else break;o=nt(a.document)}return o}function k0(a){var o=a&&a.nodeName&&a.nodeName.toLowerCase();return o&&(o==="input"&&(a.type==="text"||a.type==="search"||a.type==="tel"||a.type==="url"||a.type==="password")||o==="textarea"||a.contentEditable==="true")}function UR(a){var o=My(),f=a.focusedElem,_=a.selectionRange;if(o!==f&&f&&f.ownerDocument&&Sy(f.ownerDocument.documentElement,f)){if(_!==null&&k0(f)){if(o=_.start,a=_.end,a===void 0&&(a=o),"selectionStart"in f)f.selectionStart=o,f.selectionEnd=Math.min(a,f.value.length);else if(a=(o=f.ownerDocument||document)&&o.defaultView||window,a.getSelection){a=a.getSelection();var M=f.textContent.length,b=Math.min(_.start,M);_=_.end===void 0?b:Math.min(_.end,M),!a.extend&&b>_&&(M=_,_=b,b=M),M=yy(f,b);var F=yy(f,_);M&&F&&(a.rangeCount!==1||a.anchorNode!==M.node||a.anchorOffset!==M.offset||a.focusNode!==F.node||a.focusOffset!==F.offset)&&(o=o.createRange(),o.setStart(M.node,M.offset),a.removeAllRanges(),b>_?(a.addRange(o),a.extend(F.node,F.offset)):(o.setEnd(F.node,F.offset),a.addRange(o)))}}for(o=[],a=f;a=a.parentNode;)a.nodeType===1&&o.push({element:a,left:a.scrollLeft,top:a.scrollTop});for(typeof f.focus=="function"&&f.focus(),f=0;f<o.length;f++)a=o[f],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}}var OR=c&&"documentMode"in document&&11>=document.documentMode,$l=null,z0=null,bf=null,B0=!1;function Ey(a,o,f){var _=f.window===f?f.document:f.nodeType===9?f:f.ownerDocument;B0||$l==null||$l!==nt(_)||(_=$l,"selectionStart"in _&&k0(_)?_={start:_.selectionStart,end:_.selectionEnd}:(_=(_.ownerDocument&&_.ownerDocument.defaultView||window).getSelection(),_={anchorNode:_.anchorNode,anchorOffset:_.anchorOffset,focusNode:_.focusNode,focusOffset:_.focusOffset}),bf&&Af(bf,_)||(bf=_,_=uh(z0,"onSelect"),0<_.length&&(o=new P0("onSelect","select",null,o,f),a.push({event:o,listeners:_}),o.target=$l)))}function oh(a,o){var f={};return f[a.toLowerCase()]=o.toLowerCase(),f["Webkit"+a]="webkit"+o,f["Moz"+a]="moz"+o,f}var Xl={animationend:oh("Animation","AnimationEnd"),animationiteration:oh("Animation","AnimationIteration"),animationstart:oh("Animation","AnimationStart"),transitionend:oh("Transition","TransitionEnd")},H0={},wy={};c&&(wy=document.createElement("div").style,"AnimationEvent"in window||(delete Xl.animationend.animation,delete Xl.animationiteration.animation,delete Xl.animationstart.animation),"TransitionEvent"in window||delete Xl.transitionend.transition);function lh(a){if(H0[a])return H0[a];if(!Xl[a])return a;var o=Xl[a],f;for(f in o)if(o.hasOwnProperty(f)&&f in wy)return H0[a]=o[f];return a}var Ty=lh("animationend"),Ay=lh("animationiteration"),by=lh("animationstart"),Ry=lh("transitionend"),Cy=new Map,Py="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function wa(a,o){Cy.set(a,o),s(o,[a])}for(var V0=0;V0<Py.length;V0++){var G0=Py[V0],FR=G0.toLowerCase(),kR=G0[0].toUpperCase()+G0.slice(1);wa(FR,"on"+kR)}wa(Ty,"onAnimationEnd"),wa(Ay,"onAnimationIteration"),wa(by,"onAnimationStart"),wa("dblclick","onDoubleClick"),wa("focusin","onFocus"),wa("focusout","onBlur"),wa(Ry,"onTransitionEnd"),l("onMouseEnter",["mouseout","mouseover"]),l("onMouseLeave",["mouseout","mouseover"]),l("onPointerEnter",["pointerout","pointerover"]),l("onPointerLeave",["pointerout","pointerover"]),s("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),s("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),s("onBeforeInput",["compositionend","keypress","textInput","paste"]),s("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),s("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),s("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Rf="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),zR=new Set("cancel close invalid load scroll toggle".split(" ").concat(Rf));function Ly(a,o,f){var _=a.type||"unknown-event";a.currentTarget=f,pf(_,o,void 0,a),a.currentTarget=null}function Iy(a,o){o=(o&4)!==0;for(var f=0;f<a.length;f++){var _=a[f],M=_.event;_=_.listeners;e:{var b=void 0;if(o)for(var F=_.length-1;0<=F;F--){var J=_[F],re=J.instance,we=J.currentTarget;if(J=J.listener,re!==b&&M.isPropagationStopped())break e;Ly(M,J,we),b=re}else for(F=0;F<_.length;F++){if(J=_[F],re=J.instance,we=J.currentTarget,J=J.listener,re!==b&&M.isPropagationStopped())break e;Ly(M,J,we),b=re}}}if(Pi)throw a=Ds,Pi=!1,Ds=null,a}function hn(a,o){var f=o[Z0];f===void 0&&(f=o[Z0]=new Set);var _=a+"__bubble";f.has(_)||(Dy(o,a,2,!1),f.add(_))}function W0(a,o,f){var _=0;o&&(_|=4),Dy(f,a,_,o)}var ch="_reactListening"+Math.random().toString(36).slice(2);function Cf(a){if(!a[ch]){a[ch]=!0,i.forEach(function(f){f!=="selectionchange"&&(zR.has(f)||W0(f,!1,a),W0(f,!0,a))});var o=a.nodeType===9?a:a.ownerDocument;o===null||o[ch]||(o[ch]=!0,W0("selectionchange",!1,o))}}function Dy(a,o,f,_){switch(ny(o)){case 1:var M=J4;break;case 4:M=eR;break;default:M=b0}f=M.bind(null,o,f,a),M=void 0,!Ir||o!=="touchstart"&&o!=="touchmove"&&o!=="wheel"||(M=!0),_?M!==void 0?a.addEventListener(o,f,{capture:!0,passive:M}):a.addEventListener(o,f,!0):M!==void 0?a.addEventListener(o,f,{passive:M}):a.addEventListener(o,f,!1)}function $0(a,o,f,_,M){var b=_;if((o&1)===0&&(o&2)===0&&_!==null)e:for(;;){if(_===null)return;var F=_.tag;if(F===3||F===4){var J=_.stateNode.containerInfo;if(J===M||J.nodeType===8&&J.parentNode===M)break;if(F===4)for(F=_.return;F!==null;){var re=F.tag;if((re===3||re===4)&&(re=F.stateNode.containerInfo,re===M||re.nodeType===8&&re.parentNode===M))return;F=F.return}for(;J!==null;){if(F=Do(J),F===null)return;if(re=F.tag,re===5||re===6){_=b=F;continue e}J=J.parentNode}}_=_.return}yn(function(){var we=b,Be=Ae(f),We=[];e:{var ze=Cy.get(a);if(ze!==void 0){var ot=P0,gt=a;switch(a){case"keypress":if(ih(f)===0)break e;case"keydown":case"keyup":ot=mR;break;case"focusin":gt="focus",ot=D0;break;case"focusout":gt="blur",ot=D0;break;case"beforeblur":case"afterblur":ot=D0;break;case"click":if(f.button===2)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":ot=sy;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":ot=iR;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":ot=_R;break;case Ty:case Ay:case by:ot=aR;break;case Ry:ot=yR;break;case"scroll":ot=tR;break;case"wheel":ot=MR;break;case"copy":case"cut":case"paste":ot=lR;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":ot=oy}var vt=(o&4)!==0,Nn=!vt&&a==="scroll",_e=vt?ze!==null?ze+"Capture":null:ze;vt=[];for(var oe=we,ye;oe!==null;){ye=oe;var je=ye.stateNode;if(ye.tag===5&&je!==null&&(ye=je,_e!==null&&(je=In(oe,_e),je!=null&&vt.push(Pf(oe,je,ye)))),Nn)break;oe=oe.return}0<vt.length&&(ze=new ot(ze,gt,null,f,Be),We.push({event:ze,listeners:vt}))}}if((o&7)===0){e:{if(ze=a==="mouseover"||a==="pointerover",ot=a==="mouseout"||a==="pointerout",ze&&f!==N&&(gt=f.relatedTarget||f.fromElement)&&(Do(gt)||gt[Us]))break e;if((ot||ze)&&(ze=Be.window===Be?Be:(ze=Be.ownerDocument)?ze.defaultView||ze.parentWindow:window,ot?(gt=f.relatedTarget||f.toElement,ot=we,gt=gt?Do(gt):null,gt!==null&&(Nn=Nr(gt),gt!==Nn||gt.tag!==5&&gt.tag!==6)&&(gt=null)):(ot=null,gt=we),ot!==gt)){if(vt=sy,je="onMouseLeave",_e="onMouseEnter",oe="mouse",(a==="pointerout"||a==="pointerover")&&(vt=oy,je="onPointerLeave",_e="onPointerEnter",oe="pointer"),Nn=ot==null?ze:Yl(ot),ye=gt==null?ze:Yl(gt),ze=new vt(je,oe+"leave",ot,f,Be),ze.target=Nn,ze.relatedTarget=ye,je=null,Do(Be)===we&&(vt=new vt(_e,oe+"enter",gt,f,Be),vt.target=ye,vt.relatedTarget=Nn,je=vt),Nn=je,ot&&gt)t:{for(vt=ot,_e=gt,oe=0,ye=vt;ye;ye=ql(ye))oe++;for(ye=0,je=_e;je;je=ql(je))ye++;for(;0<oe-ye;)vt=ql(vt),oe--;for(;0<ye-oe;)_e=ql(_e),ye--;for(;oe--;){if(vt===_e||_e!==null&&vt===_e.alternate)break t;vt=ql(vt),_e=ql(_e)}vt=null}else vt=null;ot!==null&&Ny(We,ze,ot,vt,!1),gt!==null&&Nn!==null&&Ny(We,Nn,gt,vt,!0)}}e:{if(ze=we?Yl(we):window,ot=ze.nodeName&&ze.nodeName.toLowerCase(),ot==="select"||ot==="input"&&ze.type==="file")var yt=CR;else if(hy(ze))if(my)yt=DR;else{yt=LR;var Et=PR}else(ot=ze.nodeName)&&ot.toLowerCase()==="input"&&(ze.type==="checkbox"||ze.type==="radio")&&(yt=IR);if(yt&&(yt=yt(a,we))){py(We,yt,f,Be);break e}Et&&Et(a,ze,we),a==="focusout"&&(Et=ze._wrapperState)&&Et.controlled&&ze.type==="number"&&Lt(ze,"number",ze.value)}switch(Et=we?Yl(we):window,a){case"focusin":(hy(Et)||Et.contentEditable==="true")&&($l=Et,z0=we,bf=null);break;case"focusout":bf=z0=$l=null;break;case"mousedown":B0=!0;break;case"contextmenu":case"mouseup":case"dragend":B0=!1,Ey(We,f,Be);break;case"selectionchange":if(OR)break;case"keydown":case"keyup":Ey(We,f,Be)}var wt;if(U0)e:{switch(a){case"compositionstart":var Ct="onCompositionStart";break e;case"compositionend":Ct="onCompositionEnd";break e;case"compositionupdate":Ct="onCompositionUpdate";break e}Ct=void 0}else Wl?fy(a,f)&&(Ct="onCompositionEnd"):a==="keydown"&&f.keyCode===229&&(Ct="onCompositionStart");Ct&&(ly&&f.locale!=="ko"&&(Wl||Ct!=="onCompositionStart"?Ct==="onCompositionEnd"&&Wl&&(wt=iy()):(Ea=Be,C0="value"in Ea?Ea.value:Ea.textContent,Wl=!0)),Et=uh(we,Ct),0<Et.length&&(Ct=new ay(Ct,a,null,f,Be),We.push({event:Ct,listeners:Et}),wt?Ct.data=wt:(wt=dy(f),wt!==null&&(Ct.data=wt)))),(wt=wR?TR(a,f):AR(a,f))&&(we=uh(we,"onBeforeInput"),0<we.length&&(Be=new ay("onBeforeInput","beforeinput",null,f,Be),We.push({event:Be,listeners:we}),Be.data=wt))}Iy(We,o)})}function Pf(a,o,f){return{instance:a,listener:o,currentTarget:f}}function uh(a,o){for(var f=o+"Capture",_=[];a!==null;){var M=a,b=M.stateNode;M.tag===5&&b!==null&&(M=b,b=In(a,f),b!=null&&_.unshift(Pf(a,b,M)),b=In(a,o),b!=null&&_.push(Pf(a,b,M))),a=a.return}return _}function ql(a){if(a===null)return null;do a=a.return;while(a&&a.tag!==5);return a||null}function Ny(a,o,f,_,M){for(var b=o._reactName,F=[];f!==null&&f!==_;){var J=f,re=J.alternate,we=J.stateNode;if(re!==null&&re===_)break;J.tag===5&&we!==null&&(J=we,M?(re=In(f,b),re!=null&&F.unshift(Pf(f,re,J))):M||(re=In(f,b),re!=null&&F.push(Pf(f,re,J)))),f=f.return}F.length!==0&&a.push({event:o,listeners:F})}var BR=/\r\n?/g,HR=/\u0000|\uFFFD/g;function Uy(a){return(typeof a=="string"?a:""+a).replace(BR,`
`).replace(HR,"")}function fh(a,o,f){if(o=Uy(o),Uy(a)!==o&&f)throw Error(t(425))}function dh(){}var X0=null,q0=null;function j0(a,o){return a==="textarea"||a==="noscript"||typeof o.children=="string"||typeof o.children=="number"||typeof o.dangerouslySetInnerHTML=="object"&&o.dangerouslySetInnerHTML!==null&&o.dangerouslySetInnerHTML.__html!=null}var Y0=typeof setTimeout=="function"?setTimeout:void 0,VR=typeof clearTimeout=="function"?clearTimeout:void 0,Oy=typeof Promise=="function"?Promise:void 0,GR=typeof queueMicrotask=="function"?queueMicrotask:typeof Oy<"u"?function(a){return Oy.resolve(null).then(a).catch(WR)}:Y0;function WR(a){setTimeout(function(){throw a})}function K0(a,o){var f=o,_=0;do{var M=f.nextSibling;if(a.removeChild(f),M&&M.nodeType===8)if(f=M.data,f==="/$"){if(_===0){a.removeChild(M),yf(o);return}_--}else f!=="$"&&f!=="$?"&&f!=="$!"||_++;f=M}while(f);yf(o)}function Ta(a){for(;a!=null;a=a.nextSibling){var o=a.nodeType;if(o===1||o===3)break;if(o===8){if(o=a.data,o==="$"||o==="$!"||o==="$?")break;if(o==="/$")return null}}return a}function Fy(a){a=a.previousSibling;for(var o=0;a;){if(a.nodeType===8){var f=a.data;if(f==="$"||f==="$!"||f==="$?"){if(o===0)return a;o--}else f==="/$"&&o++}a=a.previousSibling}return null}var jl=Math.random().toString(36).slice(2),cs="__reactFiber$"+jl,Lf="__reactProps$"+jl,Us="__reactContainer$"+jl,Z0="__reactEvents$"+jl,$R="__reactListeners$"+jl,XR="__reactHandles$"+jl;function Do(a){var o=a[cs];if(o)return o;for(var f=a.parentNode;f;){if(o=f[Us]||f[cs]){if(f=o.alternate,o.child!==null||f!==null&&f.child!==null)for(a=Fy(a);a!==null;){if(f=a[cs])return f;a=Fy(a)}return o}a=f,f=a.parentNode}return null}function If(a){return a=a[cs]||a[Us],!a||a.tag!==5&&a.tag!==6&&a.tag!==13&&a.tag!==3?null:a}function Yl(a){if(a.tag===5||a.tag===6)return a.stateNode;throw Error(t(33))}function hh(a){return a[Lf]||null}var Q0=[],Kl=-1;function Aa(a){return{current:a}}function pn(a){0>Kl||(a.current=Q0[Kl],Q0[Kl]=null,Kl--)}function fn(a,o){Kl++,Q0[Kl]=a.current,a.current=o}var ba={},li=Aa(ba),Li=Aa(!1),No=ba;function Zl(a,o){var f=a.type.contextTypes;if(!f)return ba;var _=a.stateNode;if(_&&_.__reactInternalMemoizedUnmaskedChildContext===o)return _.__reactInternalMemoizedMaskedChildContext;var M={},b;for(b in f)M[b]=o[b];return _&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=o,a.__reactInternalMemoizedMaskedChildContext=M),M}function Ii(a){return a=a.childContextTypes,a!=null}function ph(){pn(Li),pn(li)}function ky(a,o,f){if(li.current!==ba)throw Error(t(168));fn(li,o),fn(Li,f)}function zy(a,o,f){var _=a.stateNode;if(o=o.childContextTypes,typeof _.getChildContext!="function")return f;_=_.getChildContext();for(var M in _)if(!(M in o))throw Error(t(108,pe(a)||"Unknown",M));return le({},f,_)}function mh(a){return a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||ba,No=li.current,fn(li,a),fn(Li,Li.current),!0}function By(a,o,f){var _=a.stateNode;if(!_)throw Error(t(169));f?(a=zy(a,o,No),_.__reactInternalMemoizedMergedChildContext=a,pn(Li),pn(li),fn(li,a)):pn(Li),fn(Li,f)}var Os=null,gh=!1,J0=!1;function Hy(a){Os===null?Os=[a]:Os.push(a)}function qR(a){gh=!0,Hy(a)}function Ra(){if(!J0&&Os!==null){J0=!0;var a=0,o=tn;try{var f=Os;for(tn=1;a<f.length;a++){var _=f[a];do _=_(!0);while(_!==null)}Os=null,gh=!1}catch(M){throw Os!==null&&(Os=Os.slice(a+1)),ve(ke,Ra),M}finally{tn=o,J0=!1}}return null}var Ql=[],Jl=0,vh=null,_h=0,dr=[],hr=0,Uo=null,Fs=1,ks="";function Oo(a,o){Ql[Jl++]=_h,Ql[Jl++]=vh,vh=a,_h=o}function Vy(a,o,f){dr[hr++]=Fs,dr[hr++]=ks,dr[hr++]=Uo,Uo=a;var _=Fs;a=ks;var M=32-ct(_)-1;_&=~(1<<M),f+=1;var b=32-ct(o)+M;if(30<b){var F=M-M%5;b=(_&(1<<F)-1).toString(32),_>>=F,M-=F,Fs=1<<32-ct(o)+M|f<<M|_,ks=b+a}else Fs=1<<b|f<<M|_,ks=a}function eg(a){a.return!==null&&(Oo(a,1),Vy(a,1,0))}function tg(a){for(;a===vh;)vh=Ql[--Jl],Ql[Jl]=null,_h=Ql[--Jl],Ql[Jl]=null;for(;a===Uo;)Uo=dr[--hr],dr[hr]=null,ks=dr[--hr],dr[hr]=null,Fs=dr[--hr],dr[hr]=null}var Yi=null,Ki=null,Sn=!1,Fr=null;function Gy(a,o){var f=vr(5,null,null,0);f.elementType="DELETED",f.stateNode=o,f.return=a,o=a.deletions,o===null?(a.deletions=[f],a.flags|=16):o.push(f)}function Wy(a,o){switch(a.tag){case 5:var f=a.type;return o=o.nodeType!==1||f.toLowerCase()!==o.nodeName.toLowerCase()?null:o,o!==null?(a.stateNode=o,Yi=a,Ki=Ta(o.firstChild),!0):!1;case 6:return o=a.pendingProps===""||o.nodeType!==3?null:o,o!==null?(a.stateNode=o,Yi=a,Ki=null,!0):!1;case 13:return o=o.nodeType!==8?null:o,o!==null?(f=Uo!==null?{id:Fs,overflow:ks}:null,a.memoizedState={dehydrated:o,treeContext:f,retryLane:1073741824},f=vr(18,null,null,0),f.stateNode=o,f.return=a,a.child=f,Yi=a,Ki=null,!0):!1;default:return!1}}function ng(a){return(a.mode&1)!==0&&(a.flags&128)===0}function ig(a){if(Sn){var o=Ki;if(o){var f=o;if(!Wy(a,o)){if(ng(a))throw Error(t(418));o=Ta(f.nextSibling);var _=Yi;o&&Wy(a,o)?Gy(_,f):(a.flags=a.flags&-4097|2,Sn=!1,Yi=a)}}else{if(ng(a))throw Error(t(418));a.flags=a.flags&-4097|2,Sn=!1,Yi=a}}}function $y(a){for(a=a.return;a!==null&&a.tag!==5&&a.tag!==3&&a.tag!==13;)a=a.return;Yi=a}function xh(a){if(a!==Yi)return!1;if(!Sn)return $y(a),Sn=!0,!1;var o;if((o=a.tag!==3)&&!(o=a.tag!==5)&&(o=a.type,o=o!=="head"&&o!=="body"&&!j0(a.type,a.memoizedProps)),o&&(o=Ki)){if(ng(a))throw Xy(),Error(t(418));for(;o;)Gy(a,o),o=Ta(o.nextSibling)}if($y(a),a.tag===13){if(a=a.memoizedState,a=a!==null?a.dehydrated:null,!a)throw Error(t(317));e:{for(a=a.nextSibling,o=0;a;){if(a.nodeType===8){var f=a.data;if(f==="/$"){if(o===0){Ki=Ta(a.nextSibling);break e}o--}else f!=="$"&&f!=="$!"&&f!=="$?"||o++}a=a.nextSibling}Ki=null}}else Ki=Yi?Ta(a.stateNode.nextSibling):null;return!0}function Xy(){for(var a=Ki;a;)a=Ta(a.nextSibling)}function ec(){Ki=Yi=null,Sn=!1}function rg(a){Fr===null?Fr=[a]:Fr.push(a)}var jR=C.ReactCurrentBatchConfig;function Df(a,o,f){if(a=f.ref,a!==null&&typeof a!="function"&&typeof a!="object"){if(f._owner){if(f=f._owner,f){if(f.tag!==1)throw Error(t(309));var _=f.stateNode}if(!_)throw Error(t(147,a));var M=_,b=""+a;return o!==null&&o.ref!==null&&typeof o.ref=="function"&&o.ref._stringRef===b?o.ref:(o=function(F){var J=M.refs;F===null?delete J[b]:J[b]=F},o._stringRef=b,o)}if(typeof a!="string")throw Error(t(284));if(!f._owner)throw Error(t(290,a))}return a}function yh(a,o){throw a=Object.prototype.toString.call(o),Error(t(31,a==="[object Object]"?"object with keys {"+Object.keys(o).join(", ")+"}":a))}function qy(a){var o=a._init;return o(a._payload)}function jy(a){function o(_e,oe){if(a){var ye=_e.deletions;ye===null?(_e.deletions=[oe],_e.flags|=16):ye.push(oe)}}function f(_e,oe){if(!a)return null;for(;oe!==null;)o(_e,oe),oe=oe.sibling;return null}function _(_e,oe){for(_e=new Map;oe!==null;)oe.key!==null?_e.set(oe.key,oe):_e.set(oe.index,oe),oe=oe.sibling;return _e}function M(_e,oe){return _e=Oa(_e,oe),_e.index=0,_e.sibling=null,_e}function b(_e,oe,ye){return _e.index=ye,a?(ye=_e.alternate,ye!==null?(ye=ye.index,ye<oe?(_e.flags|=2,oe):ye):(_e.flags|=2,oe)):(_e.flags|=1048576,oe)}function F(_e){return a&&_e.alternate===null&&(_e.flags|=2),_e}function J(_e,oe,ye,je){return oe===null||oe.tag!==6?(oe=Yg(ye,_e.mode,je),oe.return=_e,oe):(oe=M(oe,ye),oe.return=_e,oe)}function re(_e,oe,ye,je){var yt=ye.type;return yt===D?Be(_e,oe,ye.props.children,je,ye.key):oe!==null&&(oe.elementType===yt||typeof yt=="object"&&yt!==null&&yt.$$typeof===Q&&qy(yt)===oe.type)?(je=M(oe,ye.props),je.ref=Df(_e,oe,ye),je.return=_e,je):(je=Wh(ye.type,ye.key,ye.props,null,_e.mode,je),je.ref=Df(_e,oe,ye),je.return=_e,je)}function we(_e,oe,ye,je){return oe===null||oe.tag!==4||oe.stateNode.containerInfo!==ye.containerInfo||oe.stateNode.implementation!==ye.implementation?(oe=Kg(ye,_e.mode,je),oe.return=_e,oe):(oe=M(oe,ye.children||[]),oe.return=_e,oe)}function Be(_e,oe,ye,je,yt){return oe===null||oe.tag!==7?(oe=Wo(ye,_e.mode,je,yt),oe.return=_e,oe):(oe=M(oe,ye),oe.return=_e,oe)}function We(_e,oe,ye){if(typeof oe=="string"&&oe!==""||typeof oe=="number")return oe=Yg(""+oe,_e.mode,ye),oe.return=_e,oe;if(typeof oe=="object"&&oe!==null){switch(oe.$$typeof){case z:return ye=Wh(oe.type,oe.key,oe.props,null,_e.mode,ye),ye.ref=Df(_e,null,oe),ye.return=_e,ye;case L:return oe=Kg(oe,_e.mode,ye),oe.return=_e,oe;case Q:var je=oe._init;return We(_e,je(oe._payload),ye)}if(I(oe)||de(oe))return oe=Wo(oe,_e.mode,ye,null),oe.return=_e,oe;yh(_e,oe)}return null}function ze(_e,oe,ye,je){var yt=oe!==null?oe.key:null;if(typeof ye=="string"&&ye!==""||typeof ye=="number")return yt!==null?null:J(_e,oe,""+ye,je);if(typeof ye=="object"&&ye!==null){switch(ye.$$typeof){case z:return ye.key===yt?re(_e,oe,ye,je):null;case L:return ye.key===yt?we(_e,oe,ye,je):null;case Q:return yt=ye._init,ze(_e,oe,yt(ye._payload),je)}if(I(ye)||de(ye))return yt!==null?null:Be(_e,oe,ye,je,null);yh(_e,ye)}return null}function ot(_e,oe,ye,je,yt){if(typeof je=="string"&&je!==""||typeof je=="number")return _e=_e.get(ye)||null,J(oe,_e,""+je,yt);if(typeof je=="object"&&je!==null){switch(je.$$typeof){case z:return _e=_e.get(je.key===null?ye:je.key)||null,re(oe,_e,je,yt);case L:return _e=_e.get(je.key===null?ye:je.key)||null,we(oe,_e,je,yt);case Q:var Et=je._init;return ot(_e,oe,ye,Et(je._payload),yt)}if(I(je)||de(je))return _e=_e.get(ye)||null,Be(oe,_e,je,yt,null);yh(oe,je)}return null}function gt(_e,oe,ye,je){for(var yt=null,Et=null,wt=oe,Ct=oe=0,Zn=null;wt!==null&&Ct<ye.length;Ct++){wt.index>Ct?(Zn=wt,wt=null):Zn=wt.sibling;var Yt=ze(_e,wt,ye[Ct],je);if(Yt===null){wt===null&&(wt=Zn);break}a&&wt&&Yt.alternate===null&&o(_e,wt),oe=b(Yt,oe,Ct),Et===null?yt=Yt:Et.sibling=Yt,Et=Yt,wt=Zn}if(Ct===ye.length)return f(_e,wt),Sn&&Oo(_e,Ct),yt;if(wt===null){for(;Ct<ye.length;Ct++)wt=We(_e,ye[Ct],je),wt!==null&&(oe=b(wt,oe,Ct),Et===null?yt=wt:Et.sibling=wt,Et=wt);return Sn&&Oo(_e,Ct),yt}for(wt=_(_e,wt);Ct<ye.length;Ct++)Zn=ot(wt,_e,Ct,ye[Ct],je),Zn!==null&&(a&&Zn.alternate!==null&&wt.delete(Zn.key===null?Ct:Zn.key),oe=b(Zn,oe,Ct),Et===null?yt=Zn:Et.sibling=Zn,Et=Zn);return a&&wt.forEach(function(Fa){return o(_e,Fa)}),Sn&&Oo(_e,Ct),yt}function vt(_e,oe,ye,je){var yt=de(ye);if(typeof yt!="function")throw Error(t(150));if(ye=yt.call(ye),ye==null)throw Error(t(151));for(var Et=yt=null,wt=oe,Ct=oe=0,Zn=null,Yt=ye.next();wt!==null&&!Yt.done;Ct++,Yt=ye.next()){wt.index>Ct?(Zn=wt,wt=null):Zn=wt.sibling;var Fa=ze(_e,wt,Yt.value,je);if(Fa===null){wt===null&&(wt=Zn);break}a&&wt&&Fa.alternate===null&&o(_e,wt),oe=b(Fa,oe,Ct),Et===null?yt=Fa:Et.sibling=Fa,Et=Fa,wt=Zn}if(Yt.done)return f(_e,wt),Sn&&Oo(_e,Ct),yt;if(wt===null){for(;!Yt.done;Ct++,Yt=ye.next())Yt=We(_e,Yt.value,je),Yt!==null&&(oe=b(Yt,oe,Ct),Et===null?yt=Yt:Et.sibling=Yt,Et=Yt);return Sn&&Oo(_e,Ct),yt}for(wt=_(_e,wt);!Yt.done;Ct++,Yt=ye.next())Yt=ot(wt,_e,Ct,Yt.value,je),Yt!==null&&(a&&Yt.alternate!==null&&wt.delete(Yt.key===null?Ct:Yt.key),oe=b(Yt,oe,Ct),Et===null?yt=Yt:Et.sibling=Yt,Et=Yt);return a&&wt.forEach(function(bC){return o(_e,bC)}),Sn&&Oo(_e,Ct),yt}function Nn(_e,oe,ye,je){if(typeof ye=="object"&&ye!==null&&ye.type===D&&ye.key===null&&(ye=ye.props.children),typeof ye=="object"&&ye!==null){switch(ye.$$typeof){case z:e:{for(var yt=ye.key,Et=oe;Et!==null;){if(Et.key===yt){if(yt=ye.type,yt===D){if(Et.tag===7){f(_e,Et.sibling),oe=M(Et,ye.props.children),oe.return=_e,_e=oe;break e}}else if(Et.elementType===yt||typeof yt=="object"&&yt!==null&&yt.$$typeof===Q&&qy(yt)===Et.type){f(_e,Et.sibling),oe=M(Et,ye.props),oe.ref=Df(_e,Et,ye),oe.return=_e,_e=oe;break e}f(_e,Et);break}else o(_e,Et);Et=Et.sibling}ye.type===D?(oe=Wo(ye.props.children,_e.mode,je,ye.key),oe.return=_e,_e=oe):(je=Wh(ye.type,ye.key,ye.props,null,_e.mode,je),je.ref=Df(_e,oe,ye),je.return=_e,_e=je)}return F(_e);case L:e:{for(Et=ye.key;oe!==null;){if(oe.key===Et)if(oe.tag===4&&oe.stateNode.containerInfo===ye.containerInfo&&oe.stateNode.implementation===ye.implementation){f(_e,oe.sibling),oe=M(oe,ye.children||[]),oe.return=_e,_e=oe;break e}else{f(_e,oe);break}else o(_e,oe);oe=oe.sibling}oe=Kg(ye,_e.mode,je),oe.return=_e,_e=oe}return F(_e);case Q:return Et=ye._init,Nn(_e,oe,Et(ye._payload),je)}if(I(ye))return gt(_e,oe,ye,je);if(de(ye))return vt(_e,oe,ye,je);yh(_e,ye)}return typeof ye=="string"&&ye!==""||typeof ye=="number"?(ye=""+ye,oe!==null&&oe.tag===6?(f(_e,oe.sibling),oe=M(oe,ye),oe.return=_e,_e=oe):(f(_e,oe),oe=Yg(ye,_e.mode,je),oe.return=_e,_e=oe),F(_e)):f(_e,oe)}return Nn}var tc=jy(!0),Yy=jy(!1),Sh=Aa(null),Mh=null,nc=null,sg=null;function ag(){sg=nc=Mh=null}function og(a){var o=Sh.current;pn(Sh),a._currentValue=o}function lg(a,o,f){for(;a!==null;){var _=a.alternate;if((a.childLanes&o)!==o?(a.childLanes|=o,_!==null&&(_.childLanes|=o)):_!==null&&(_.childLanes&o)!==o&&(_.childLanes|=o),a===f)break;a=a.return}}function ic(a,o){Mh=a,sg=nc=null,a=a.dependencies,a!==null&&a.firstContext!==null&&((a.lanes&o)!==0&&(Di=!0),a.firstContext=null)}function pr(a){var o=a._currentValue;if(sg!==a)if(a={context:a,memoizedValue:o,next:null},nc===null){if(Mh===null)throw Error(t(308));nc=a,Mh.dependencies={lanes:0,firstContext:a}}else nc=nc.next=a;return o}var Fo=null;function cg(a){Fo===null?Fo=[a]:Fo.push(a)}function Ky(a,o,f,_){var M=o.interleaved;return M===null?(f.next=f,cg(o)):(f.next=M.next,M.next=f),o.interleaved=f,zs(a,_)}function zs(a,o){a.lanes|=o;var f=a.alternate;for(f!==null&&(f.lanes|=o),f=a,a=a.return;a!==null;)a.childLanes|=o,f=a.alternate,f!==null&&(f.childLanes|=o),f=a,a=a.return;return f.tag===3?f.stateNode:null}var Ca=!1;function ug(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Zy(a,o){a=a.updateQueue,o.updateQueue===a&&(o.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function Bs(a,o){return{eventTime:a,lane:o,tag:0,payload:null,callback:null,next:null}}function Pa(a,o,f){var _=a.updateQueue;if(_===null)return null;if(_=_.shared,(Xt&2)!==0){var M=_.pending;return M===null?o.next=o:(o.next=M.next,M.next=o),_.pending=o,zs(a,f)}return M=_.interleaved,M===null?(o.next=o,cg(_)):(o.next=M.next,M.next=o),_.interleaved=o,zs(a,f)}function Eh(a,o,f){if(o=o.updateQueue,o!==null&&(o=o.shared,(f&4194240)!==0)){var _=o.lanes;_&=a.pendingLanes,f|=_,o.lanes=f,w0(a,f)}}function Qy(a,o){var f=a.updateQueue,_=a.alternate;if(_!==null&&(_=_.updateQueue,f===_)){var M=null,b=null;if(f=f.firstBaseUpdate,f!==null){do{var F={eventTime:f.eventTime,lane:f.lane,tag:f.tag,payload:f.payload,callback:f.callback,next:null};b===null?M=b=F:b=b.next=F,f=f.next}while(f!==null);b===null?M=b=o:b=b.next=o}else M=b=o;f={baseState:_.baseState,firstBaseUpdate:M,lastBaseUpdate:b,shared:_.shared,effects:_.effects},a.updateQueue=f;return}a=f.lastBaseUpdate,a===null?f.firstBaseUpdate=o:a.next=o,f.lastBaseUpdate=o}function wh(a,o,f,_){var M=a.updateQueue;Ca=!1;var b=M.firstBaseUpdate,F=M.lastBaseUpdate,J=M.shared.pending;if(J!==null){M.shared.pending=null;var re=J,we=re.next;re.next=null,F===null?b=we:F.next=we,F=re;var Be=a.alternate;Be!==null&&(Be=Be.updateQueue,J=Be.lastBaseUpdate,J!==F&&(J===null?Be.firstBaseUpdate=we:J.next=we,Be.lastBaseUpdate=re))}if(b!==null){var We=M.baseState;F=0,Be=we=re=null,J=b;do{var ze=J.lane,ot=J.eventTime;if((_&ze)===ze){Be!==null&&(Be=Be.next={eventTime:ot,lane:0,tag:J.tag,payload:J.payload,callback:J.callback,next:null});e:{var gt=a,vt=J;switch(ze=o,ot=f,vt.tag){case 1:if(gt=vt.payload,typeof gt=="function"){We=gt.call(ot,We,ze);break e}We=gt;break e;case 3:gt.flags=gt.flags&-65537|128;case 0:if(gt=vt.payload,ze=typeof gt=="function"?gt.call(ot,We,ze):gt,ze==null)break e;We=le({},We,ze);break e;case 2:Ca=!0}}J.callback!==null&&J.lane!==0&&(a.flags|=64,ze=M.effects,ze===null?M.effects=[J]:ze.push(J))}else ot={eventTime:ot,lane:ze,tag:J.tag,payload:J.payload,callback:J.callback,next:null},Be===null?(we=Be=ot,re=We):Be=Be.next=ot,F|=ze;if(J=J.next,J===null){if(J=M.shared.pending,J===null)break;ze=J,J=ze.next,ze.next=null,M.lastBaseUpdate=ze,M.shared.pending=null}}while(!0);if(Be===null&&(re=We),M.baseState=re,M.firstBaseUpdate=we,M.lastBaseUpdate=Be,o=M.shared.interleaved,o!==null){M=o;do F|=M.lane,M=M.next;while(M!==o)}else b===null&&(M.shared.lanes=0);Bo|=F,a.lanes=F,a.memoizedState=We}}function Jy(a,o,f){if(a=o.effects,o.effects=null,a!==null)for(o=0;o<a.length;o++){var _=a[o],M=_.callback;if(M!==null){if(_.callback=null,_=f,typeof M!="function")throw Error(t(191,M));M.call(_)}}}var Nf={},us=Aa(Nf),Uf=Aa(Nf),Of=Aa(Nf);function ko(a){if(a===Nf)throw Error(t(174));return a}function fg(a,o){switch(fn(Of,o),fn(Uf,a),fn(us,Nf),a=o.nodeType,a){case 9:case 11:o=(o=o.documentElement)?o.namespaceURI:Me(null,"");break;default:a=a===8?o.parentNode:o,o=a.namespaceURI||null,a=a.tagName,o=Me(o,a)}pn(us),fn(us,o)}function rc(){pn(us),pn(Uf),pn(Of)}function e2(a){ko(Of.current);var o=ko(us.current),f=Me(o,a.type);o!==f&&(fn(Uf,a),fn(us,f))}function dg(a){Uf.current===a&&(pn(us),pn(Uf))}var wn=Aa(0);function Th(a){for(var o=a;o!==null;){if(o.tag===13){var f=o.memoizedState;if(f!==null&&(f=f.dehydrated,f===null||f.data==="$?"||f.data==="$!"))return o}else if(o.tag===19&&o.memoizedProps.revealOrder!==void 0){if((o.flags&128)!==0)return o}else if(o.child!==null){o.child.return=o,o=o.child;continue}if(o===a)break;for(;o.sibling===null;){if(o.return===null||o.return===a)return null;o=o.return}o.sibling.return=o.return,o=o.sibling}return null}var hg=[];function pg(){for(var a=0;a<hg.length;a++)hg[a]._workInProgressVersionPrimary=null;hg.length=0}var Ah=C.ReactCurrentDispatcher,mg=C.ReactCurrentBatchConfig,zo=0,Tn=null,Vn=null,Yn=null,bh=!1,Ff=!1,kf=0,YR=0;function ci(){throw Error(t(321))}function gg(a,o){if(o===null)return!1;for(var f=0;f<o.length&&f<a.length;f++)if(!Or(a[f],o[f]))return!1;return!0}function vg(a,o,f,_,M,b){if(zo=b,Tn=o,o.memoizedState=null,o.updateQueue=null,o.lanes=0,Ah.current=a===null||a.memoizedState===null?JR:eC,a=f(_,M),Ff){b=0;do{if(Ff=!1,kf=0,25<=b)throw Error(t(301));b+=1,Yn=Vn=null,o.updateQueue=null,Ah.current=tC,a=f(_,M)}while(Ff)}if(Ah.current=Ph,o=Vn!==null&&Vn.next!==null,zo=0,Yn=Vn=Tn=null,bh=!1,o)throw Error(t(300));return a}function _g(){var a=kf!==0;return kf=0,a}function fs(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return Yn===null?Tn.memoizedState=Yn=a:Yn=Yn.next=a,Yn}function mr(){if(Vn===null){var a=Tn.alternate;a=a!==null?a.memoizedState:null}else a=Vn.next;var o=Yn===null?Tn.memoizedState:Yn.next;if(o!==null)Yn=o,Vn=a;else{if(a===null)throw Error(t(310));Vn=a,a={memoizedState:Vn.memoizedState,baseState:Vn.baseState,baseQueue:Vn.baseQueue,queue:Vn.queue,next:null},Yn===null?Tn.memoizedState=Yn=a:Yn=Yn.next=a}return Yn}function zf(a,o){return typeof o=="function"?o(a):o}function xg(a){var o=mr(),f=o.queue;if(f===null)throw Error(t(311));f.lastRenderedReducer=a;var _=Vn,M=_.baseQueue,b=f.pending;if(b!==null){if(M!==null){var F=M.next;M.next=b.next,b.next=F}_.baseQueue=M=b,f.pending=null}if(M!==null){b=M.next,_=_.baseState;var J=F=null,re=null,we=b;do{var Be=we.lane;if((zo&Be)===Be)re!==null&&(re=re.next={lane:0,action:we.action,hasEagerState:we.hasEagerState,eagerState:we.eagerState,next:null}),_=we.hasEagerState?we.eagerState:a(_,we.action);else{var We={lane:Be,action:we.action,hasEagerState:we.hasEagerState,eagerState:we.eagerState,next:null};re===null?(J=re=We,F=_):re=re.next=We,Tn.lanes|=Be,Bo|=Be}we=we.next}while(we!==null&&we!==b);re===null?F=_:re.next=J,Or(_,o.memoizedState)||(Di=!0),o.memoizedState=_,o.baseState=F,o.baseQueue=re,f.lastRenderedState=_}if(a=f.interleaved,a!==null){M=a;do b=M.lane,Tn.lanes|=b,Bo|=b,M=M.next;while(M!==a)}else M===null&&(f.lanes=0);return[o.memoizedState,f.dispatch]}function yg(a){var o=mr(),f=o.queue;if(f===null)throw Error(t(311));f.lastRenderedReducer=a;var _=f.dispatch,M=f.pending,b=o.memoizedState;if(M!==null){f.pending=null;var F=M=M.next;do b=a(b,F.action),F=F.next;while(F!==M);Or(b,o.memoizedState)||(Di=!0),o.memoizedState=b,o.baseQueue===null&&(o.baseState=b),f.lastRenderedState=b}return[b,_]}function t2(){}function n2(a,o){var f=Tn,_=mr(),M=o(),b=!Or(_.memoizedState,M);if(b&&(_.memoizedState=M,Di=!0),_=_.queue,Sg(s2.bind(null,f,_,a),[a]),_.getSnapshot!==o||b||Yn!==null&&Yn.memoizedState.tag&1){if(f.flags|=2048,Bf(9,r2.bind(null,f,_,M,o),void 0,null),Kn===null)throw Error(t(349));(zo&30)!==0||i2(f,o,M)}return M}function i2(a,o,f){a.flags|=16384,a={getSnapshot:o,value:f},o=Tn.updateQueue,o===null?(o={lastEffect:null,stores:null},Tn.updateQueue=o,o.stores=[a]):(f=o.stores,f===null?o.stores=[a]:f.push(a))}function r2(a,o,f,_){o.value=f,o.getSnapshot=_,a2(o)&&o2(a)}function s2(a,o,f){return f(function(){a2(o)&&o2(a)})}function a2(a){var o=a.getSnapshot;a=a.value;try{var f=o();return!Or(a,f)}catch{return!0}}function o2(a){var o=zs(a,1);o!==null&&Hr(o,a,1,-1)}function l2(a){var o=fs();return typeof a=="function"&&(a=a()),o.memoizedState=o.baseState=a,a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:zf,lastRenderedState:a},o.queue=a,a=a.dispatch=QR.bind(null,Tn,a),[o.memoizedState,a]}function Bf(a,o,f,_){return a={tag:a,create:o,destroy:f,deps:_,next:null},o=Tn.updateQueue,o===null?(o={lastEffect:null,stores:null},Tn.updateQueue=o,o.lastEffect=a.next=a):(f=o.lastEffect,f===null?o.lastEffect=a.next=a:(_=f.next,f.next=a,a.next=_,o.lastEffect=a)),a}function c2(){return mr().memoizedState}function Rh(a,o,f,_){var M=fs();Tn.flags|=a,M.memoizedState=Bf(1|o,f,void 0,_===void 0?null:_)}function Ch(a,o,f,_){var M=mr();_=_===void 0?null:_;var b=void 0;if(Vn!==null){var F=Vn.memoizedState;if(b=F.destroy,_!==null&&gg(_,F.deps)){M.memoizedState=Bf(o,f,b,_);return}}Tn.flags|=a,M.memoizedState=Bf(1|o,f,b,_)}function u2(a,o){return Rh(8390656,8,a,o)}function Sg(a,o){return Ch(2048,8,a,o)}function f2(a,o){return Ch(4,2,a,o)}function d2(a,o){return Ch(4,4,a,o)}function h2(a,o){if(typeof o=="function")return a=a(),o(a),function(){o(null)};if(o!=null)return a=a(),o.current=a,function(){o.current=null}}function p2(a,o,f){return f=f!=null?f.concat([a]):null,Ch(4,4,h2.bind(null,o,a),f)}function Mg(){}function m2(a,o){var f=mr();o=o===void 0?null:o;var _=f.memoizedState;return _!==null&&o!==null&&gg(o,_[1])?_[0]:(f.memoizedState=[a,o],a)}function g2(a,o){var f=mr();o=o===void 0?null:o;var _=f.memoizedState;return _!==null&&o!==null&&gg(o,_[1])?_[0]:(a=a(),f.memoizedState=[a,o],a)}function v2(a,o,f){return(zo&21)===0?(a.baseState&&(a.baseState=!1,Di=!0),a.memoizedState=f):(Or(f,o)||(f=_a(),Tn.lanes|=f,Bo|=f,a.baseState=!0),o)}function KR(a,o){var f=tn;tn=f!==0&&4>f?f:4,a(!0);var _=mg.transition;mg.transition={};try{a(!1),o()}finally{tn=f,mg.transition=_}}function _2(){return mr().memoizedState}function ZR(a,o,f){var _=Na(a);if(f={lane:_,action:f,hasEagerState:!1,eagerState:null,next:null},x2(a))y2(o,f);else if(f=Ky(a,o,f,_),f!==null){var M=Mi();Hr(f,a,_,M),S2(f,o,_)}}function QR(a,o,f){var _=Na(a),M={lane:_,action:f,hasEagerState:!1,eagerState:null,next:null};if(x2(a))y2(o,M);else{var b=a.alternate;if(a.lanes===0&&(b===null||b.lanes===0)&&(b=o.lastRenderedReducer,b!==null))try{var F=o.lastRenderedState,J=b(F,f);if(M.hasEagerState=!0,M.eagerState=J,Or(J,F)){var re=o.interleaved;re===null?(M.next=M,cg(o)):(M.next=re.next,re.next=M),o.interleaved=M;return}}catch{}finally{}f=Ky(a,o,M,_),f!==null&&(M=Mi(),Hr(f,a,_,M),S2(f,o,_))}}function x2(a){var o=a.alternate;return a===Tn||o!==null&&o===Tn}function y2(a,o){Ff=bh=!0;var f=a.pending;f===null?o.next=o:(o.next=f.next,f.next=o),a.pending=o}function S2(a,o,f){if((f&4194240)!==0){var _=o.lanes;_&=a.pendingLanes,f|=_,o.lanes=f,w0(a,f)}}var Ph={readContext:pr,useCallback:ci,useContext:ci,useEffect:ci,useImperativeHandle:ci,useInsertionEffect:ci,useLayoutEffect:ci,useMemo:ci,useReducer:ci,useRef:ci,useState:ci,useDebugValue:ci,useDeferredValue:ci,useTransition:ci,useMutableSource:ci,useSyncExternalStore:ci,useId:ci,unstable_isNewReconciler:!1},JR={readContext:pr,useCallback:function(a,o){return fs().memoizedState=[a,o===void 0?null:o],a},useContext:pr,useEffect:u2,useImperativeHandle:function(a,o,f){return f=f!=null?f.concat([a]):null,Rh(4194308,4,h2.bind(null,o,a),f)},useLayoutEffect:function(a,o){return Rh(4194308,4,a,o)},useInsertionEffect:function(a,o){return Rh(4,2,a,o)},useMemo:function(a,o){var f=fs();return o=o===void 0?null:o,a=a(),f.memoizedState=[a,o],a},useReducer:function(a,o,f){var _=fs();return o=f!==void 0?f(o):o,_.memoizedState=_.baseState=o,a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:a,lastRenderedState:o},_.queue=a,a=a.dispatch=ZR.bind(null,Tn,a),[_.memoizedState,a]},useRef:function(a){var o=fs();return a={current:a},o.memoizedState=a},useState:l2,useDebugValue:Mg,useDeferredValue:function(a){return fs().memoizedState=a},useTransition:function(){var a=l2(!1),o=a[0];return a=KR.bind(null,a[1]),fs().memoizedState=a,[o,a]},useMutableSource:function(){},useSyncExternalStore:function(a,o,f){var _=Tn,M=fs();if(Sn){if(f===void 0)throw Error(t(407));f=f()}else{if(f=o(),Kn===null)throw Error(t(349));(zo&30)!==0||i2(_,o,f)}M.memoizedState=f;var b={value:f,getSnapshot:o};return M.queue=b,u2(s2.bind(null,_,b,a),[a]),_.flags|=2048,Bf(9,r2.bind(null,_,b,f,o),void 0,null),f},useId:function(){var a=fs(),o=Kn.identifierPrefix;if(Sn){var f=ks,_=Fs;f=(_&~(1<<32-ct(_)-1)).toString(32)+f,o=":"+o+"R"+f,f=kf++,0<f&&(o+="H"+f.toString(32)),o+=":"}else f=YR++,o=":"+o+"r"+f.toString(32)+":";return a.memoizedState=o},unstable_isNewReconciler:!1},eC={readContext:pr,useCallback:m2,useContext:pr,useEffect:Sg,useImperativeHandle:p2,useInsertionEffect:f2,useLayoutEffect:d2,useMemo:g2,useReducer:xg,useRef:c2,useState:function(){return xg(zf)},useDebugValue:Mg,useDeferredValue:function(a){var o=mr();return v2(o,Vn.memoizedState,a)},useTransition:function(){var a=xg(zf)[0],o=mr().memoizedState;return[a,o]},useMutableSource:t2,useSyncExternalStore:n2,useId:_2,unstable_isNewReconciler:!1},tC={readContext:pr,useCallback:m2,useContext:pr,useEffect:Sg,useImperativeHandle:p2,useInsertionEffect:f2,useLayoutEffect:d2,useMemo:g2,useReducer:yg,useRef:c2,useState:function(){return yg(zf)},useDebugValue:Mg,useDeferredValue:function(a){var o=mr();return Vn===null?o.memoizedState=a:v2(o,Vn.memoizedState,a)},useTransition:function(){var a=yg(zf)[0],o=mr().memoizedState;return[a,o]},useMutableSource:t2,useSyncExternalStore:n2,useId:_2,unstable_isNewReconciler:!1};function kr(a,o){if(a&&a.defaultProps){o=le({},o),a=a.defaultProps;for(var f in a)o[f]===void 0&&(o[f]=a[f]);return o}return o}function Eg(a,o,f,_){o=a.memoizedState,f=f(_,o),f=f==null?o:le({},o,f),a.memoizedState=f,a.lanes===0&&(a.updateQueue.baseState=f)}var Lh={isMounted:function(a){return(a=a._reactInternals)?Nr(a)===a:!1},enqueueSetState:function(a,o,f){a=a._reactInternals;var _=Mi(),M=Na(a),b=Bs(_,M);b.payload=o,f!=null&&(b.callback=f),o=Pa(a,b,M),o!==null&&(Hr(o,a,M,_),Eh(o,a,M))},enqueueReplaceState:function(a,o,f){a=a._reactInternals;var _=Mi(),M=Na(a),b=Bs(_,M);b.tag=1,b.payload=o,f!=null&&(b.callback=f),o=Pa(a,b,M),o!==null&&(Hr(o,a,M,_),Eh(o,a,M))},enqueueForceUpdate:function(a,o){a=a._reactInternals;var f=Mi(),_=Na(a),M=Bs(f,_);M.tag=2,o!=null&&(M.callback=o),o=Pa(a,M,_),o!==null&&(Hr(o,a,_,f),Eh(o,a,_))}};function M2(a,o,f,_,M,b,F){return a=a.stateNode,typeof a.shouldComponentUpdate=="function"?a.shouldComponentUpdate(_,b,F):o.prototype&&o.prototype.isPureReactComponent?!Af(f,_)||!Af(M,b):!0}function E2(a,o,f){var _=!1,M=ba,b=o.contextType;return typeof b=="object"&&b!==null?b=pr(b):(M=Ii(o)?No:li.current,_=o.contextTypes,b=(_=_!=null)?Zl(a,M):ba),o=new o(f,b),a.memoizedState=o.state!==null&&o.state!==void 0?o.state:null,o.updater=Lh,a.stateNode=o,o._reactInternals=a,_&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=M,a.__reactInternalMemoizedMaskedChildContext=b),o}function w2(a,o,f,_){a=o.state,typeof o.componentWillReceiveProps=="function"&&o.componentWillReceiveProps(f,_),typeof o.UNSAFE_componentWillReceiveProps=="function"&&o.UNSAFE_componentWillReceiveProps(f,_),o.state!==a&&Lh.enqueueReplaceState(o,o.state,null)}function wg(a,o,f,_){var M=a.stateNode;M.props=f,M.state=a.memoizedState,M.refs={},ug(a);var b=o.contextType;typeof b=="object"&&b!==null?M.context=pr(b):(b=Ii(o)?No:li.current,M.context=Zl(a,b)),M.state=a.memoizedState,b=o.getDerivedStateFromProps,typeof b=="function"&&(Eg(a,o,b,f),M.state=a.memoizedState),typeof o.getDerivedStateFromProps=="function"||typeof M.getSnapshotBeforeUpdate=="function"||typeof M.UNSAFE_componentWillMount!="function"&&typeof M.componentWillMount!="function"||(o=M.state,typeof M.componentWillMount=="function"&&M.componentWillMount(),typeof M.UNSAFE_componentWillMount=="function"&&M.UNSAFE_componentWillMount(),o!==M.state&&Lh.enqueueReplaceState(M,M.state,null),wh(a,f,M,_),M.state=a.memoizedState),typeof M.componentDidMount=="function"&&(a.flags|=4194308)}function sc(a,o){try{var f="",_=o;do f+=ie(_),_=_.return;while(_);var M=f}catch(b){M=`
Error generating stack: `+b.message+`
`+b.stack}return{value:a,source:o,stack:M,digest:null}}function Tg(a,o,f){return{value:a,source:null,stack:f??null,digest:o??null}}function Ag(a,o){try{console.error(o.value)}catch(f){setTimeout(function(){throw f})}}var nC=typeof WeakMap=="function"?WeakMap:Map;function T2(a,o,f){f=Bs(-1,f),f.tag=3,f.payload={element:null};var _=o.value;return f.callback=function(){kh||(kh=!0,Hg=_),Ag(a,o)},f}function A2(a,o,f){f=Bs(-1,f),f.tag=3;var _=a.type.getDerivedStateFromError;if(typeof _=="function"){var M=o.value;f.payload=function(){return _(M)},f.callback=function(){Ag(a,o)}}var b=a.stateNode;return b!==null&&typeof b.componentDidCatch=="function"&&(f.callback=function(){Ag(a,o),typeof _!="function"&&(Ia===null?Ia=new Set([this]):Ia.add(this));var F=o.stack;this.componentDidCatch(o.value,{componentStack:F!==null?F:""})}),f}function b2(a,o,f){var _=a.pingCache;if(_===null){_=a.pingCache=new nC;var M=new Set;_.set(o,M)}else M=_.get(o),M===void 0&&(M=new Set,_.set(o,M));M.has(f)||(M.add(f),a=gC.bind(null,a,o,f),o.then(a,a))}function R2(a){do{var o;if((o=a.tag===13)&&(o=a.memoizedState,o=o!==null?o.dehydrated!==null:!0),o)return a;a=a.return}while(a!==null);return null}function C2(a,o,f,_,M){return(a.mode&1)===0?(a===o?a.flags|=65536:(a.flags|=128,f.flags|=131072,f.flags&=-52805,f.tag===1&&(f.alternate===null?f.tag=17:(o=Bs(-1,1),o.tag=2,Pa(f,o,1))),f.lanes|=1),a):(a.flags|=65536,a.lanes=M,a)}var iC=C.ReactCurrentOwner,Di=!1;function Si(a,o,f,_){o.child=a===null?Yy(o,null,f,_):tc(o,a.child,f,_)}function P2(a,o,f,_,M){f=f.render;var b=o.ref;return ic(o,M),_=vg(a,o,f,_,b,M),f=_g(),a!==null&&!Di?(o.updateQueue=a.updateQueue,o.flags&=-2053,a.lanes&=~M,Hs(a,o,M)):(Sn&&f&&eg(o),o.flags|=1,Si(a,o,_,M),o.child)}function L2(a,o,f,_,M){if(a===null){var b=f.type;return typeof b=="function"&&!jg(b)&&b.defaultProps===void 0&&f.compare===null&&f.defaultProps===void 0?(o.tag=15,o.type=b,I2(a,o,b,_,M)):(a=Wh(f.type,null,_,o,o.mode,M),a.ref=o.ref,a.return=o,o.child=a)}if(b=a.child,(a.lanes&M)===0){var F=b.memoizedProps;if(f=f.compare,f=f!==null?f:Af,f(F,_)&&a.ref===o.ref)return Hs(a,o,M)}return o.flags|=1,a=Oa(b,_),a.ref=o.ref,a.return=o,o.child=a}function I2(a,o,f,_,M){if(a!==null){var b=a.memoizedProps;if(Af(b,_)&&a.ref===o.ref)if(Di=!1,o.pendingProps=_=b,(a.lanes&M)!==0)(a.flags&131072)!==0&&(Di=!0);else return o.lanes=a.lanes,Hs(a,o,M)}return bg(a,o,f,_,M)}function D2(a,o,f){var _=o.pendingProps,M=_.children,b=a!==null?a.memoizedState:null;if(_.mode==="hidden")if((o.mode&1)===0)o.memoizedState={baseLanes:0,cachePool:null,transitions:null},fn(oc,Zi),Zi|=f;else{if((f&1073741824)===0)return a=b!==null?b.baseLanes|f:f,o.lanes=o.childLanes=1073741824,o.memoizedState={baseLanes:a,cachePool:null,transitions:null},o.updateQueue=null,fn(oc,Zi),Zi|=a,null;o.memoizedState={baseLanes:0,cachePool:null,transitions:null},_=b!==null?b.baseLanes:f,fn(oc,Zi),Zi|=_}else b!==null?(_=b.baseLanes|f,o.memoizedState=null):_=f,fn(oc,Zi),Zi|=_;return Si(a,o,M,f),o.child}function N2(a,o){var f=o.ref;(a===null&&f!==null||a!==null&&a.ref!==f)&&(o.flags|=512,o.flags|=2097152)}function bg(a,o,f,_,M){var b=Ii(f)?No:li.current;return b=Zl(o,b),ic(o,M),f=vg(a,o,f,_,b,M),_=_g(),a!==null&&!Di?(o.updateQueue=a.updateQueue,o.flags&=-2053,a.lanes&=~M,Hs(a,o,M)):(Sn&&_&&eg(o),o.flags|=1,Si(a,o,f,M),o.child)}function U2(a,o,f,_,M){if(Ii(f)){var b=!0;mh(o)}else b=!1;if(ic(o,M),o.stateNode===null)Dh(a,o),E2(o,f,_),wg(o,f,_,M),_=!0;else if(a===null){var F=o.stateNode,J=o.memoizedProps;F.props=J;var re=F.context,we=f.contextType;typeof we=="object"&&we!==null?we=pr(we):(we=Ii(f)?No:li.current,we=Zl(o,we));var Be=f.getDerivedStateFromProps,We=typeof Be=="function"||typeof F.getSnapshotBeforeUpdate=="function";We||typeof F.UNSAFE_componentWillReceiveProps!="function"&&typeof F.componentWillReceiveProps!="function"||(J!==_||re!==we)&&w2(o,F,_,we),Ca=!1;var ze=o.memoizedState;F.state=ze,wh(o,_,F,M),re=o.memoizedState,J!==_||ze!==re||Li.current||Ca?(typeof Be=="function"&&(Eg(o,f,Be,_),re=o.memoizedState),(J=Ca||M2(o,f,J,_,ze,re,we))?(We||typeof F.UNSAFE_componentWillMount!="function"&&typeof F.componentWillMount!="function"||(typeof F.componentWillMount=="function"&&F.componentWillMount(),typeof F.UNSAFE_componentWillMount=="function"&&F.UNSAFE_componentWillMount()),typeof F.componentDidMount=="function"&&(o.flags|=4194308)):(typeof F.componentDidMount=="function"&&(o.flags|=4194308),o.memoizedProps=_,o.memoizedState=re),F.props=_,F.state=re,F.context=we,_=J):(typeof F.componentDidMount=="function"&&(o.flags|=4194308),_=!1)}else{F=o.stateNode,Zy(a,o),J=o.memoizedProps,we=o.type===o.elementType?J:kr(o.type,J),F.props=we,We=o.pendingProps,ze=F.context,re=f.contextType,typeof re=="object"&&re!==null?re=pr(re):(re=Ii(f)?No:li.current,re=Zl(o,re));var ot=f.getDerivedStateFromProps;(Be=typeof ot=="function"||typeof F.getSnapshotBeforeUpdate=="function")||typeof F.UNSAFE_componentWillReceiveProps!="function"&&typeof F.componentWillReceiveProps!="function"||(J!==We||ze!==re)&&w2(o,F,_,re),Ca=!1,ze=o.memoizedState,F.state=ze,wh(o,_,F,M);var gt=o.memoizedState;J!==We||ze!==gt||Li.current||Ca?(typeof ot=="function"&&(Eg(o,f,ot,_),gt=o.memoizedState),(we=Ca||M2(o,f,we,_,ze,gt,re)||!1)?(Be||typeof F.UNSAFE_componentWillUpdate!="function"&&typeof F.componentWillUpdate!="function"||(typeof F.componentWillUpdate=="function"&&F.componentWillUpdate(_,gt,re),typeof F.UNSAFE_componentWillUpdate=="function"&&F.UNSAFE_componentWillUpdate(_,gt,re)),typeof F.componentDidUpdate=="function"&&(o.flags|=4),typeof F.getSnapshotBeforeUpdate=="function"&&(o.flags|=1024)):(typeof F.componentDidUpdate!="function"||J===a.memoizedProps&&ze===a.memoizedState||(o.flags|=4),typeof F.getSnapshotBeforeUpdate!="function"||J===a.memoizedProps&&ze===a.memoizedState||(o.flags|=1024),o.memoizedProps=_,o.memoizedState=gt),F.props=_,F.state=gt,F.context=re,_=we):(typeof F.componentDidUpdate!="function"||J===a.memoizedProps&&ze===a.memoizedState||(o.flags|=4),typeof F.getSnapshotBeforeUpdate!="function"||J===a.memoizedProps&&ze===a.memoizedState||(o.flags|=1024),_=!1)}return Rg(a,o,f,_,b,M)}function Rg(a,o,f,_,M,b){N2(a,o);var F=(o.flags&128)!==0;if(!_&&!F)return M&&By(o,f,!1),Hs(a,o,b);_=o.stateNode,iC.current=o;var J=F&&typeof f.getDerivedStateFromError!="function"?null:_.render();return o.flags|=1,a!==null&&F?(o.child=tc(o,a.child,null,b),o.child=tc(o,null,J,b)):Si(a,o,J,b),o.memoizedState=_.state,M&&By(o,f,!0),o.child}function O2(a){var o=a.stateNode;o.pendingContext?ky(a,o.pendingContext,o.pendingContext!==o.context):o.context&&ky(a,o.context,!1),fg(a,o.containerInfo)}function F2(a,o,f,_,M){return ec(),rg(M),o.flags|=256,Si(a,o,f,_),o.child}var Cg={dehydrated:null,treeContext:null,retryLane:0};function Pg(a){return{baseLanes:a,cachePool:null,transitions:null}}function k2(a,o,f){var _=o.pendingProps,M=wn.current,b=!1,F=(o.flags&128)!==0,J;if((J=F)||(J=a!==null&&a.memoizedState===null?!1:(M&2)!==0),J?(b=!0,o.flags&=-129):(a===null||a.memoizedState!==null)&&(M|=1),fn(wn,M&1),a===null)return ig(o),a=o.memoizedState,a!==null&&(a=a.dehydrated,a!==null)?((o.mode&1)===0?o.lanes=1:a.data==="$!"?o.lanes=8:o.lanes=1073741824,null):(F=_.children,a=_.fallback,b?(_=o.mode,b=o.child,F={mode:"hidden",children:F},(_&1)===0&&b!==null?(b.childLanes=0,b.pendingProps=F):b=$h(F,_,0,null),a=Wo(a,_,f,null),b.return=o,a.return=o,b.sibling=a,o.child=b,o.child.memoizedState=Pg(f),o.memoizedState=Cg,a):Lg(o,F));if(M=a.memoizedState,M!==null&&(J=M.dehydrated,J!==null))return rC(a,o,F,_,J,M,f);if(b){b=_.fallback,F=o.mode,M=a.child,J=M.sibling;var re={mode:"hidden",children:_.children};return(F&1)===0&&o.child!==M?(_=o.child,_.childLanes=0,_.pendingProps=re,o.deletions=null):(_=Oa(M,re),_.subtreeFlags=M.subtreeFlags&14680064),J!==null?b=Oa(J,b):(b=Wo(b,F,f,null),b.flags|=2),b.return=o,_.return=o,_.sibling=b,o.child=_,_=b,b=o.child,F=a.child.memoizedState,F=F===null?Pg(f):{baseLanes:F.baseLanes|f,cachePool:null,transitions:F.transitions},b.memoizedState=F,b.childLanes=a.childLanes&~f,o.memoizedState=Cg,_}return b=a.child,a=b.sibling,_=Oa(b,{mode:"visible",children:_.children}),(o.mode&1)===0&&(_.lanes=f),_.return=o,_.sibling=null,a!==null&&(f=o.deletions,f===null?(o.deletions=[a],o.flags|=16):f.push(a)),o.child=_,o.memoizedState=null,_}function Lg(a,o){return o=$h({mode:"visible",children:o},a.mode,0,null),o.return=a,a.child=o}function Ih(a,o,f,_){return _!==null&&rg(_),tc(o,a.child,null,f),a=Lg(o,o.pendingProps.children),a.flags|=2,o.memoizedState=null,a}function rC(a,o,f,_,M,b,F){if(f)return o.flags&256?(o.flags&=-257,_=Tg(Error(t(422))),Ih(a,o,F,_)):o.memoizedState!==null?(o.child=a.child,o.flags|=128,null):(b=_.fallback,M=o.mode,_=$h({mode:"visible",children:_.children},M,0,null),b=Wo(b,M,F,null),b.flags|=2,_.return=o,b.return=o,_.sibling=b,o.child=_,(o.mode&1)!==0&&tc(o,a.child,null,F),o.child.memoizedState=Pg(F),o.memoizedState=Cg,b);if((o.mode&1)===0)return Ih(a,o,F,null);if(M.data==="$!"){if(_=M.nextSibling&&M.nextSibling.dataset,_)var J=_.dgst;return _=J,b=Error(t(419)),_=Tg(b,_,void 0),Ih(a,o,F,_)}if(J=(F&a.childLanes)!==0,Di||J){if(_=Kn,_!==null){switch(F&-F){case 4:M=2;break;case 16:M=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:M=32;break;case 536870912:M=268435456;break;default:M=0}M=(M&(_.suspendedLanes|F))!==0?0:M,M!==0&&M!==b.retryLane&&(b.retryLane=M,zs(a,M),Hr(_,a,M,-1))}return qg(),_=Tg(Error(t(421))),Ih(a,o,F,_)}return M.data==="$?"?(o.flags|=128,o.child=a.child,o=vC.bind(null,a),M._reactRetry=o,null):(a=b.treeContext,Ki=Ta(M.nextSibling),Yi=o,Sn=!0,Fr=null,a!==null&&(dr[hr++]=Fs,dr[hr++]=ks,dr[hr++]=Uo,Fs=a.id,ks=a.overflow,Uo=o),o=Lg(o,_.children),o.flags|=4096,o)}function z2(a,o,f){a.lanes|=o;var _=a.alternate;_!==null&&(_.lanes|=o),lg(a.return,o,f)}function Ig(a,o,f,_,M){var b=a.memoizedState;b===null?a.memoizedState={isBackwards:o,rendering:null,renderingStartTime:0,last:_,tail:f,tailMode:M}:(b.isBackwards=o,b.rendering=null,b.renderingStartTime=0,b.last=_,b.tail=f,b.tailMode=M)}function B2(a,o,f){var _=o.pendingProps,M=_.revealOrder,b=_.tail;if(Si(a,o,_.children,f),_=wn.current,(_&2)!==0)_=_&1|2,o.flags|=128;else{if(a!==null&&(a.flags&128)!==0)e:for(a=o.child;a!==null;){if(a.tag===13)a.memoizedState!==null&&z2(a,f,o);else if(a.tag===19)z2(a,f,o);else if(a.child!==null){a.child.return=a,a=a.child;continue}if(a===o)break e;for(;a.sibling===null;){if(a.return===null||a.return===o)break e;a=a.return}a.sibling.return=a.return,a=a.sibling}_&=1}if(fn(wn,_),(o.mode&1)===0)o.memoizedState=null;else switch(M){case"forwards":for(f=o.child,M=null;f!==null;)a=f.alternate,a!==null&&Th(a)===null&&(M=f),f=f.sibling;f=M,f===null?(M=o.child,o.child=null):(M=f.sibling,f.sibling=null),Ig(o,!1,M,f,b);break;case"backwards":for(f=null,M=o.child,o.child=null;M!==null;){if(a=M.alternate,a!==null&&Th(a)===null){o.child=M;break}a=M.sibling,M.sibling=f,f=M,M=a}Ig(o,!0,f,null,b);break;case"together":Ig(o,!1,null,null,void 0);break;default:o.memoizedState=null}return o.child}function Dh(a,o){(o.mode&1)===0&&a!==null&&(a.alternate=null,o.alternate=null,o.flags|=2)}function Hs(a,o,f){if(a!==null&&(o.dependencies=a.dependencies),Bo|=o.lanes,(f&o.childLanes)===0)return null;if(a!==null&&o.child!==a.child)throw Error(t(153));if(o.child!==null){for(a=o.child,f=Oa(a,a.pendingProps),o.child=f,f.return=o;a.sibling!==null;)a=a.sibling,f=f.sibling=Oa(a,a.pendingProps),f.return=o;f.sibling=null}return o.child}function sC(a,o,f){switch(o.tag){case 3:O2(o),ec();break;case 5:e2(o);break;case 1:Ii(o.type)&&mh(o);break;case 4:fg(o,o.stateNode.containerInfo);break;case 10:var _=o.type._context,M=o.memoizedProps.value;fn(Sh,_._currentValue),_._currentValue=M;break;case 13:if(_=o.memoizedState,_!==null)return _.dehydrated!==null?(fn(wn,wn.current&1),o.flags|=128,null):(f&o.child.childLanes)!==0?k2(a,o,f):(fn(wn,wn.current&1),a=Hs(a,o,f),a!==null?a.sibling:null);fn(wn,wn.current&1);break;case 19:if(_=(f&o.childLanes)!==0,(a.flags&128)!==0){if(_)return B2(a,o,f);o.flags|=128}if(M=o.memoizedState,M!==null&&(M.rendering=null,M.tail=null,M.lastEffect=null),fn(wn,wn.current),_)break;return null;case 22:case 23:return o.lanes=0,D2(a,o,f)}return Hs(a,o,f)}var H2,Dg,V2,G2;H2=function(a,o){for(var f=o.child;f!==null;){if(f.tag===5||f.tag===6)a.appendChild(f.stateNode);else if(f.tag!==4&&f.child!==null){f.child.return=f,f=f.child;continue}if(f===o)break;for(;f.sibling===null;){if(f.return===null||f.return===o)return;f=f.return}f.sibling.return=f.return,f=f.sibling}},Dg=function(){},V2=function(a,o,f,_){var M=a.memoizedProps;if(M!==_){a=o.stateNode,ko(us.current);var b=null;switch(f){case"input":M=Tt(a,M),_=Tt(a,_),b=[];break;case"select":M=le({},M,{value:void 0}),_=le({},_,{value:void 0}),b=[];break;case"textarea":M=j(a,M),_=j(a,_),b=[];break;default:typeof M.onClick!="function"&&typeof _.onClick=="function"&&(a.onclick=dh)}rt(f,_);var F;f=null;for(we in M)if(!_.hasOwnProperty(we)&&M.hasOwnProperty(we)&&M[we]!=null)if(we==="style"){var J=M[we];for(F in J)J.hasOwnProperty(F)&&(f||(f={}),f[F]="")}else we!=="dangerouslySetInnerHTML"&&we!=="children"&&we!=="suppressContentEditableWarning"&&we!=="suppressHydrationWarning"&&we!=="autoFocus"&&(r.hasOwnProperty(we)?b||(b=[]):(b=b||[]).push(we,null));for(we in _){var re=_[we];if(J=M!=null?M[we]:void 0,_.hasOwnProperty(we)&&re!==J&&(re!=null||J!=null))if(we==="style")if(J){for(F in J)!J.hasOwnProperty(F)||re&&re.hasOwnProperty(F)||(f||(f={}),f[F]="");for(F in re)re.hasOwnProperty(F)&&J[F]!==re[F]&&(f||(f={}),f[F]=re[F])}else f||(b||(b=[]),b.push(we,f)),f=re;else we==="dangerouslySetInnerHTML"?(re=re?re.__html:void 0,J=J?J.__html:void 0,re!=null&&J!==re&&(b=b||[]).push(we,re)):we==="children"?typeof re!="string"&&typeof re!="number"||(b=b||[]).push(we,""+re):we!=="suppressContentEditableWarning"&&we!=="suppressHydrationWarning"&&(r.hasOwnProperty(we)?(re!=null&&we==="onScroll"&&hn("scroll",a),b||J===re||(b=[])):(b=b||[]).push(we,re))}f&&(b=b||[]).push("style",f);var we=b;(o.updateQueue=we)&&(o.flags|=4)}},G2=function(a,o,f,_){f!==_&&(o.flags|=4)};function Hf(a,o){if(!Sn)switch(a.tailMode){case"hidden":o=a.tail;for(var f=null;o!==null;)o.alternate!==null&&(f=o),o=o.sibling;f===null?a.tail=null:f.sibling=null;break;case"collapsed":f=a.tail;for(var _=null;f!==null;)f.alternate!==null&&(_=f),f=f.sibling;_===null?o||a.tail===null?a.tail=null:a.tail.sibling=null:_.sibling=null}}function ui(a){var o=a.alternate!==null&&a.alternate.child===a.child,f=0,_=0;if(o)for(var M=a.child;M!==null;)f|=M.lanes|M.childLanes,_|=M.subtreeFlags&14680064,_|=M.flags&14680064,M.return=a,M=M.sibling;else for(M=a.child;M!==null;)f|=M.lanes|M.childLanes,_|=M.subtreeFlags,_|=M.flags,M.return=a,M=M.sibling;return a.subtreeFlags|=_,a.childLanes=f,o}function aC(a,o,f){var _=o.pendingProps;switch(tg(o),o.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return ui(o),null;case 1:return Ii(o.type)&&ph(),ui(o),null;case 3:return _=o.stateNode,rc(),pn(Li),pn(li),pg(),_.pendingContext&&(_.context=_.pendingContext,_.pendingContext=null),(a===null||a.child===null)&&(xh(o)?o.flags|=4:a===null||a.memoizedState.isDehydrated&&(o.flags&256)===0||(o.flags|=1024,Fr!==null&&(Wg(Fr),Fr=null))),Dg(a,o),ui(o),null;case 5:dg(o);var M=ko(Of.current);if(f=o.type,a!==null&&o.stateNode!=null)V2(a,o,f,_,M),a.ref!==o.ref&&(o.flags|=512,o.flags|=2097152);else{if(!_){if(o.stateNode===null)throw Error(t(166));return ui(o),null}if(a=ko(us.current),xh(o)){_=o.stateNode,f=o.type;var b=o.memoizedProps;switch(_[cs]=o,_[Lf]=b,a=(o.mode&1)!==0,f){case"dialog":hn("cancel",_),hn("close",_);break;case"iframe":case"object":case"embed":hn("load",_);break;case"video":case"audio":for(M=0;M<Rf.length;M++)hn(Rf[M],_);break;case"source":hn("error",_);break;case"img":case"image":case"link":hn("error",_),hn("load",_);break;case"details":hn("toggle",_);break;case"input":Ve(_,b),hn("invalid",_);break;case"select":_._wrapperState={wasMultiple:!!b.multiple},hn("invalid",_);break;case"textarea":ae(_,b),hn("invalid",_)}rt(f,b),M=null;for(var F in b)if(b.hasOwnProperty(F)){var J=b[F];F==="children"?typeof J=="string"?_.textContent!==J&&(b.suppressHydrationWarning!==!0&&fh(_.textContent,J,a),M=["children",J]):typeof J=="number"&&_.textContent!==""+J&&(b.suppressHydrationWarning!==!0&&fh(_.textContent,J,a),M=["children",""+J]):r.hasOwnProperty(F)&&J!=null&&F==="onScroll"&&hn("scroll",_)}switch(f){case"input":U(_),Ke(_,b,!0);break;case"textarea":U(_),ue(_);break;case"select":case"option":break;default:typeof b.onClick=="function"&&(_.onclick=dh)}_=M,o.updateQueue=_,_!==null&&(o.flags|=4)}else{F=M.nodeType===9?M:M.ownerDocument,a==="http://www.w3.org/1999/xhtml"&&(a=Fe(f)),a==="http://www.w3.org/1999/xhtml"?f==="script"?(a=F.createElement("div"),a.innerHTML="<script><\/script>",a=a.removeChild(a.firstChild)):typeof _.is=="string"?a=F.createElement(f,{is:_.is}):(a=F.createElement(f),f==="select"&&(F=a,_.multiple?F.multiple=!0:_.size&&(F.size=_.size))):a=F.createElementNS(a,f),a[cs]=o,a[Lf]=_,H2(a,o,!1,!1),o.stateNode=a;e:{switch(F=bt(f,_),f){case"dialog":hn("cancel",a),hn("close",a),M=_;break;case"iframe":case"object":case"embed":hn("load",a),M=_;break;case"video":case"audio":for(M=0;M<Rf.length;M++)hn(Rf[M],a);M=_;break;case"source":hn("error",a),M=_;break;case"img":case"image":case"link":hn("error",a),hn("load",a),M=_;break;case"details":hn("toggle",a),M=_;break;case"input":Ve(a,_),M=Tt(a,_),hn("invalid",a);break;case"option":M=_;break;case"select":a._wrapperState={wasMultiple:!!_.multiple},M=le({},_,{value:void 0}),hn("invalid",a);break;case"textarea":ae(a,_),M=j(a,_),hn("invalid",a);break;default:M=_}rt(f,M),J=M;for(b in J)if(J.hasOwnProperty(b)){var re=J[b];b==="style"?Te(a,re):b==="dangerouslySetInnerHTML"?(re=re?re.__html:void 0,re!=null&&Ze(a,re)):b==="children"?typeof re=="string"?(f!=="textarea"||re!=="")&&me(a,re):typeof re=="number"&&me(a,""+re):b!=="suppressContentEditableWarning"&&b!=="suppressHydrationWarning"&&b!=="autoFocus"&&(r.hasOwnProperty(b)?re!=null&&b==="onScroll"&&hn("scroll",a):re!=null&&w(a,b,re,F))}switch(f){case"input":U(a),Ke(a,_,!1);break;case"textarea":U(a),ue(a);break;case"option":_.value!=null&&a.setAttribute("value",""+Oe(_.value));break;case"select":a.multiple=!!_.multiple,b=_.value,b!=null?E(a,!!_.multiple,b,!1):_.defaultValue!=null&&E(a,!!_.multiple,_.defaultValue,!0);break;default:typeof M.onClick=="function"&&(a.onclick=dh)}switch(f){case"button":case"input":case"select":case"textarea":_=!!_.autoFocus;break e;case"img":_=!0;break e;default:_=!1}}_&&(o.flags|=4)}o.ref!==null&&(o.flags|=512,o.flags|=2097152)}return ui(o),null;case 6:if(a&&o.stateNode!=null)G2(a,o,a.memoizedProps,_);else{if(typeof _!="string"&&o.stateNode===null)throw Error(t(166));if(f=ko(Of.current),ko(us.current),xh(o)){if(_=o.stateNode,f=o.memoizedProps,_[cs]=o,(b=_.nodeValue!==f)&&(a=Yi,a!==null))switch(a.tag){case 3:fh(_.nodeValue,f,(a.mode&1)!==0);break;case 5:a.memoizedProps.suppressHydrationWarning!==!0&&fh(_.nodeValue,f,(a.mode&1)!==0)}b&&(o.flags|=4)}else _=(f.nodeType===9?f:f.ownerDocument).createTextNode(_),_[cs]=o,o.stateNode=_}return ui(o),null;case 13:if(pn(wn),_=o.memoizedState,a===null||a.memoizedState!==null&&a.memoizedState.dehydrated!==null){if(Sn&&Ki!==null&&(o.mode&1)!==0&&(o.flags&128)===0)Xy(),ec(),o.flags|=98560,b=!1;else if(b=xh(o),_!==null&&_.dehydrated!==null){if(a===null){if(!b)throw Error(t(318));if(b=o.memoizedState,b=b!==null?b.dehydrated:null,!b)throw Error(t(317));b[cs]=o}else ec(),(o.flags&128)===0&&(o.memoizedState=null),o.flags|=4;ui(o),b=!1}else Fr!==null&&(Wg(Fr),Fr=null),b=!0;if(!b)return o.flags&65536?o:null}return(o.flags&128)!==0?(o.lanes=f,o):(_=_!==null,_!==(a!==null&&a.memoizedState!==null)&&_&&(o.child.flags|=8192,(o.mode&1)!==0&&(a===null||(wn.current&1)!==0?Gn===0&&(Gn=3):qg())),o.updateQueue!==null&&(o.flags|=4),ui(o),null);case 4:return rc(),Dg(a,o),a===null&&Cf(o.stateNode.containerInfo),ui(o),null;case 10:return og(o.type._context),ui(o),null;case 17:return Ii(o.type)&&ph(),ui(o),null;case 19:if(pn(wn),b=o.memoizedState,b===null)return ui(o),null;if(_=(o.flags&128)!==0,F=b.rendering,F===null)if(_)Hf(b,!1);else{if(Gn!==0||a!==null&&(a.flags&128)!==0)for(a=o.child;a!==null;){if(F=Th(a),F!==null){for(o.flags|=128,Hf(b,!1),_=F.updateQueue,_!==null&&(o.updateQueue=_,o.flags|=4),o.subtreeFlags=0,_=f,f=o.child;f!==null;)b=f,a=_,b.flags&=14680066,F=b.alternate,F===null?(b.childLanes=0,b.lanes=a,b.child=null,b.subtreeFlags=0,b.memoizedProps=null,b.memoizedState=null,b.updateQueue=null,b.dependencies=null,b.stateNode=null):(b.childLanes=F.childLanes,b.lanes=F.lanes,b.child=F.child,b.subtreeFlags=0,b.deletions=null,b.memoizedProps=F.memoizedProps,b.memoizedState=F.memoizedState,b.updateQueue=F.updateQueue,b.type=F.type,a=F.dependencies,b.dependencies=a===null?null:{lanes:a.lanes,firstContext:a.firstContext}),f=f.sibling;return fn(wn,wn.current&1|2),o.child}a=a.sibling}b.tail!==null&&De()>lc&&(o.flags|=128,_=!0,Hf(b,!1),o.lanes=4194304)}else{if(!_)if(a=Th(F),a!==null){if(o.flags|=128,_=!0,f=a.updateQueue,f!==null&&(o.updateQueue=f,o.flags|=4),Hf(b,!0),b.tail===null&&b.tailMode==="hidden"&&!F.alternate&&!Sn)return ui(o),null}else 2*De()-b.renderingStartTime>lc&&f!==1073741824&&(o.flags|=128,_=!0,Hf(b,!1),o.lanes=4194304);b.isBackwards?(F.sibling=o.child,o.child=F):(f=b.last,f!==null?f.sibling=F:o.child=F,b.last=F)}return b.tail!==null?(o=b.tail,b.rendering=o,b.tail=o.sibling,b.renderingStartTime=De(),o.sibling=null,f=wn.current,fn(wn,_?f&1|2:f&1),o):(ui(o),null);case 22:case 23:return Xg(),_=o.memoizedState!==null,a!==null&&a.memoizedState!==null!==_&&(o.flags|=8192),_&&(o.mode&1)!==0?(Zi&1073741824)!==0&&(ui(o),o.subtreeFlags&6&&(o.flags|=8192)):ui(o),null;case 24:return null;case 25:return null}throw Error(t(156,o.tag))}function oC(a,o){switch(tg(o),o.tag){case 1:return Ii(o.type)&&ph(),a=o.flags,a&65536?(o.flags=a&-65537|128,o):null;case 3:return rc(),pn(Li),pn(li),pg(),a=o.flags,(a&65536)!==0&&(a&128)===0?(o.flags=a&-65537|128,o):null;case 5:return dg(o),null;case 13:if(pn(wn),a=o.memoizedState,a!==null&&a.dehydrated!==null){if(o.alternate===null)throw Error(t(340));ec()}return a=o.flags,a&65536?(o.flags=a&-65537|128,o):null;case 19:return pn(wn),null;case 4:return rc(),null;case 10:return og(o.type._context),null;case 22:case 23:return Xg(),null;case 24:return null;default:return null}}var Nh=!1,fi=!1,lC=typeof WeakSet=="function"?WeakSet:Set,ht=null;function ac(a,o){var f=a.ref;if(f!==null)if(typeof f=="function")try{f(null)}catch(_){Cn(a,o,_)}else f.current=null}function Ng(a,o,f){try{f()}catch(_){Cn(a,o,_)}}var W2=!1;function cC(a,o){if(X0=eh,a=My(),k0(a)){if("selectionStart"in a)var f={start:a.selectionStart,end:a.selectionEnd};else e:{f=(f=a.ownerDocument)&&f.defaultView||window;var _=f.getSelection&&f.getSelection();if(_&&_.rangeCount!==0){f=_.anchorNode;var M=_.anchorOffset,b=_.focusNode;_=_.focusOffset;try{f.nodeType,b.nodeType}catch{f=null;break e}var F=0,J=-1,re=-1,we=0,Be=0,We=a,ze=null;t:for(;;){for(var ot;We!==f||M!==0&&We.nodeType!==3||(J=F+M),We!==b||_!==0&&We.nodeType!==3||(re=F+_),We.nodeType===3&&(F+=We.nodeValue.length),(ot=We.firstChild)!==null;)ze=We,We=ot;for(;;){if(We===a)break t;if(ze===f&&++we===M&&(J=F),ze===b&&++Be===_&&(re=F),(ot=We.nextSibling)!==null)break;We=ze,ze=We.parentNode}We=ot}f=J===-1||re===-1?null:{start:J,end:re}}else f=null}f=f||{start:0,end:0}}else f=null;for(q0={focusedElem:a,selectionRange:f},eh=!1,ht=o;ht!==null;)if(o=ht,a=o.child,(o.subtreeFlags&1028)!==0&&a!==null)a.return=o,ht=a;else for(;ht!==null;){o=ht;try{var gt=o.alternate;if((o.flags&1024)!==0)switch(o.tag){case 0:case 11:case 15:break;case 1:if(gt!==null){var vt=gt.memoizedProps,Nn=gt.memoizedState,_e=o.stateNode,oe=_e.getSnapshotBeforeUpdate(o.elementType===o.type?vt:kr(o.type,vt),Nn);_e.__reactInternalSnapshotBeforeUpdate=oe}break;case 3:var ye=o.stateNode.containerInfo;ye.nodeType===1?ye.textContent="":ye.nodeType===9&&ye.documentElement&&ye.removeChild(ye.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(t(163))}}catch(je){Cn(o,o.return,je)}if(a=o.sibling,a!==null){a.return=o.return,ht=a;break}ht=o.return}return gt=W2,W2=!1,gt}function Vf(a,o,f){var _=o.updateQueue;if(_=_!==null?_.lastEffect:null,_!==null){var M=_=_.next;do{if((M.tag&a)===a){var b=M.destroy;M.destroy=void 0,b!==void 0&&Ng(o,f,b)}M=M.next}while(M!==_)}}function Uh(a,o){if(o=o.updateQueue,o=o!==null?o.lastEffect:null,o!==null){var f=o=o.next;do{if((f.tag&a)===a){var _=f.create;f.destroy=_()}f=f.next}while(f!==o)}}function Ug(a){var o=a.ref;if(o!==null){var f=a.stateNode;switch(a.tag){case 5:a=f;break;default:a=f}typeof o=="function"?o(a):o.current=a}}function $2(a){var o=a.alternate;o!==null&&(a.alternate=null,$2(o)),a.child=null,a.deletions=null,a.sibling=null,a.tag===5&&(o=a.stateNode,o!==null&&(delete o[cs],delete o[Lf],delete o[Z0],delete o[$R],delete o[XR])),a.stateNode=null,a.return=null,a.dependencies=null,a.memoizedProps=null,a.memoizedState=null,a.pendingProps=null,a.stateNode=null,a.updateQueue=null}function X2(a){return a.tag===5||a.tag===3||a.tag===4}function q2(a){e:for(;;){for(;a.sibling===null;){if(a.return===null||X2(a.return))return null;a=a.return}for(a.sibling.return=a.return,a=a.sibling;a.tag!==5&&a.tag!==6&&a.tag!==18;){if(a.flags&2||a.child===null||a.tag===4)continue e;a.child.return=a,a=a.child}if(!(a.flags&2))return a.stateNode}}function Og(a,o,f){var _=a.tag;if(_===5||_===6)a=a.stateNode,o?f.nodeType===8?f.parentNode.insertBefore(a,o):f.insertBefore(a,o):(f.nodeType===8?(o=f.parentNode,o.insertBefore(a,f)):(o=f,o.appendChild(a)),f=f._reactRootContainer,f!=null||o.onclick!==null||(o.onclick=dh));else if(_!==4&&(a=a.child,a!==null))for(Og(a,o,f),a=a.sibling;a!==null;)Og(a,o,f),a=a.sibling}function Fg(a,o,f){var _=a.tag;if(_===5||_===6)a=a.stateNode,o?f.insertBefore(a,o):f.appendChild(a);else if(_!==4&&(a=a.child,a!==null))for(Fg(a,o,f),a=a.sibling;a!==null;)Fg(a,o,f),a=a.sibling}var si=null,zr=!1;function La(a,o,f){for(f=f.child;f!==null;)j2(a,o,f),f=f.sibling}function j2(a,o,f){if(Ie&&typeof Ie.onCommitFiberUnmount=="function")try{Ie.onCommitFiberUnmount(mt,f)}catch{}switch(f.tag){case 5:fi||ac(f,o);case 6:var _=si,M=zr;si=null,La(a,o,f),si=_,zr=M,si!==null&&(zr?(a=si,f=f.stateNode,a.nodeType===8?a.parentNode.removeChild(f):a.removeChild(f)):si.removeChild(f.stateNode));break;case 18:si!==null&&(zr?(a=si,f=f.stateNode,a.nodeType===8?K0(a.parentNode,f):a.nodeType===1&&K0(a,f),yf(a)):K0(si,f.stateNode));break;case 4:_=si,M=zr,si=f.stateNode.containerInfo,zr=!0,La(a,o,f),si=_,zr=M;break;case 0:case 11:case 14:case 15:if(!fi&&(_=f.updateQueue,_!==null&&(_=_.lastEffect,_!==null))){M=_=_.next;do{var b=M,F=b.destroy;b=b.tag,F!==void 0&&((b&2)!==0||(b&4)!==0)&&Ng(f,o,F),M=M.next}while(M!==_)}La(a,o,f);break;case 1:if(!fi&&(ac(f,o),_=f.stateNode,typeof _.componentWillUnmount=="function"))try{_.props=f.memoizedProps,_.state=f.memoizedState,_.componentWillUnmount()}catch(J){Cn(f,o,J)}La(a,o,f);break;case 21:La(a,o,f);break;case 22:f.mode&1?(fi=(_=fi)||f.memoizedState!==null,La(a,o,f),fi=_):La(a,o,f);break;default:La(a,o,f)}}function Y2(a){var o=a.updateQueue;if(o!==null){a.updateQueue=null;var f=a.stateNode;f===null&&(f=a.stateNode=new lC),o.forEach(function(_){var M=_C.bind(null,a,_);f.has(_)||(f.add(_),_.then(M,M))})}}function Br(a,o){var f=o.deletions;if(f!==null)for(var _=0;_<f.length;_++){var M=f[_];try{var b=a,F=o,J=F;e:for(;J!==null;){switch(J.tag){case 5:si=J.stateNode,zr=!1;break e;case 3:si=J.stateNode.containerInfo,zr=!0;break e;case 4:si=J.stateNode.containerInfo,zr=!0;break e}J=J.return}if(si===null)throw Error(t(160));j2(b,F,M),si=null,zr=!1;var re=M.alternate;re!==null&&(re.return=null),M.return=null}catch(we){Cn(M,o,we)}}if(o.subtreeFlags&12854)for(o=o.child;o!==null;)K2(o,a),o=o.sibling}function K2(a,o){var f=a.alternate,_=a.flags;switch(a.tag){case 0:case 11:case 14:case 15:if(Br(o,a),ds(a),_&4){try{Vf(3,a,a.return),Uh(3,a)}catch(vt){Cn(a,a.return,vt)}try{Vf(5,a,a.return)}catch(vt){Cn(a,a.return,vt)}}break;case 1:Br(o,a),ds(a),_&512&&f!==null&&ac(f,f.return);break;case 5:if(Br(o,a),ds(a),_&512&&f!==null&&ac(f,f.return),a.flags&32){var M=a.stateNode;try{me(M,"")}catch(vt){Cn(a,a.return,vt)}}if(_&4&&(M=a.stateNode,M!=null)){var b=a.memoizedProps,F=f!==null?f.memoizedProps:b,J=a.type,re=a.updateQueue;if(a.updateQueue=null,re!==null)try{J==="input"&&b.type==="radio"&&b.name!=null&&ut(M,b),bt(J,F);var we=bt(J,b);for(F=0;F<re.length;F+=2){var Be=re[F],We=re[F+1];Be==="style"?Te(M,We):Be==="dangerouslySetInnerHTML"?Ze(M,We):Be==="children"?me(M,We):w(M,Be,We,we)}switch(J){case"input":tt(M,b);break;case"textarea":ce(M,b);break;case"select":var ze=M._wrapperState.wasMultiple;M._wrapperState.wasMultiple=!!b.multiple;var ot=b.value;ot!=null?E(M,!!b.multiple,ot,!1):ze!==!!b.multiple&&(b.defaultValue!=null?E(M,!!b.multiple,b.defaultValue,!0):E(M,!!b.multiple,b.multiple?[]:"",!1))}M[Lf]=b}catch(vt){Cn(a,a.return,vt)}}break;case 6:if(Br(o,a),ds(a),_&4){if(a.stateNode===null)throw Error(t(162));M=a.stateNode,b=a.memoizedProps;try{M.nodeValue=b}catch(vt){Cn(a,a.return,vt)}}break;case 3:if(Br(o,a),ds(a),_&4&&f!==null&&f.memoizedState.isDehydrated)try{yf(o.containerInfo)}catch(vt){Cn(a,a.return,vt)}break;case 4:Br(o,a),ds(a);break;case 13:Br(o,a),ds(a),M=a.child,M.flags&8192&&(b=M.memoizedState!==null,M.stateNode.isHidden=b,!b||M.alternate!==null&&M.alternate.memoizedState!==null||(Bg=De())),_&4&&Y2(a);break;case 22:if(Be=f!==null&&f.memoizedState!==null,a.mode&1?(fi=(we=fi)||Be,Br(o,a),fi=we):Br(o,a),ds(a),_&8192){if(we=a.memoizedState!==null,(a.stateNode.isHidden=we)&&!Be&&(a.mode&1)!==0)for(ht=a,Be=a.child;Be!==null;){for(We=ht=Be;ht!==null;){switch(ze=ht,ot=ze.child,ze.tag){case 0:case 11:case 14:case 15:Vf(4,ze,ze.return);break;case 1:ac(ze,ze.return);var gt=ze.stateNode;if(typeof gt.componentWillUnmount=="function"){_=ze,f=ze.return;try{o=_,gt.props=o.memoizedProps,gt.state=o.memoizedState,gt.componentWillUnmount()}catch(vt){Cn(_,f,vt)}}break;case 5:ac(ze,ze.return);break;case 22:if(ze.memoizedState!==null){J2(We);continue}}ot!==null?(ot.return=ze,ht=ot):J2(We)}Be=Be.sibling}e:for(Be=null,We=a;;){if(We.tag===5){if(Be===null){Be=We;try{M=We.stateNode,we?(b=M.style,typeof b.setProperty=="function"?b.setProperty("display","none","important"):b.display="none"):(J=We.stateNode,re=We.memoizedProps.style,F=re!=null&&re.hasOwnProperty("display")?re.display:null,J.style.display=Xe("display",F))}catch(vt){Cn(a,a.return,vt)}}}else if(We.tag===6){if(Be===null)try{We.stateNode.nodeValue=we?"":We.memoizedProps}catch(vt){Cn(a,a.return,vt)}}else if((We.tag!==22&&We.tag!==23||We.memoizedState===null||We===a)&&We.child!==null){We.child.return=We,We=We.child;continue}if(We===a)break e;for(;We.sibling===null;){if(We.return===null||We.return===a)break e;Be===We&&(Be=null),We=We.return}Be===We&&(Be=null),We.sibling.return=We.return,We=We.sibling}}break;case 19:Br(o,a),ds(a),_&4&&Y2(a);break;case 21:break;default:Br(o,a),ds(a)}}function ds(a){var o=a.flags;if(o&2){try{e:{for(var f=a.return;f!==null;){if(X2(f)){var _=f;break e}f=f.return}throw Error(t(160))}switch(_.tag){case 5:var M=_.stateNode;_.flags&32&&(me(M,""),_.flags&=-33);var b=q2(a);Fg(a,b,M);break;case 3:case 4:var F=_.stateNode.containerInfo,J=q2(a);Og(a,J,F);break;default:throw Error(t(161))}}catch(re){Cn(a,a.return,re)}a.flags&=-3}o&4096&&(a.flags&=-4097)}function uC(a,o,f){ht=a,Z2(a)}function Z2(a,o,f){for(var _=(a.mode&1)!==0;ht!==null;){var M=ht,b=M.child;if(M.tag===22&&_){var F=M.memoizedState!==null||Nh;if(!F){var J=M.alternate,re=J!==null&&J.memoizedState!==null||fi;J=Nh;var we=fi;if(Nh=F,(fi=re)&&!we)for(ht=M;ht!==null;)F=ht,re=F.child,F.tag===22&&F.memoizedState!==null?eS(M):re!==null?(re.return=F,ht=re):eS(M);for(;b!==null;)ht=b,Z2(b),b=b.sibling;ht=M,Nh=J,fi=we}Q2(a)}else(M.subtreeFlags&8772)!==0&&b!==null?(b.return=M,ht=b):Q2(a)}}function Q2(a){for(;ht!==null;){var o=ht;if((o.flags&8772)!==0){var f=o.alternate;try{if((o.flags&8772)!==0)switch(o.tag){case 0:case 11:case 15:fi||Uh(5,o);break;case 1:var _=o.stateNode;if(o.flags&4&&!fi)if(f===null)_.componentDidMount();else{var M=o.elementType===o.type?f.memoizedProps:kr(o.type,f.memoizedProps);_.componentDidUpdate(M,f.memoizedState,_.__reactInternalSnapshotBeforeUpdate)}var b=o.updateQueue;b!==null&&Jy(o,b,_);break;case 3:var F=o.updateQueue;if(F!==null){if(f=null,o.child!==null)switch(o.child.tag){case 5:f=o.child.stateNode;break;case 1:f=o.child.stateNode}Jy(o,F,f)}break;case 5:var J=o.stateNode;if(f===null&&o.flags&4){f=J;var re=o.memoizedProps;switch(o.type){case"button":case"input":case"select":case"textarea":re.autoFocus&&f.focus();break;case"img":re.src&&(f.src=re.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(o.memoizedState===null){var we=o.alternate;if(we!==null){var Be=we.memoizedState;if(Be!==null){var We=Be.dehydrated;We!==null&&yf(We)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;default:throw Error(t(163))}fi||o.flags&512&&Ug(o)}catch(ze){Cn(o,o.return,ze)}}if(o===a){ht=null;break}if(f=o.sibling,f!==null){f.return=o.return,ht=f;break}ht=o.return}}function J2(a){for(;ht!==null;){var o=ht;if(o===a){ht=null;break}var f=o.sibling;if(f!==null){f.return=o.return,ht=f;break}ht=o.return}}function eS(a){for(;ht!==null;){var o=ht;try{switch(o.tag){case 0:case 11:case 15:var f=o.return;try{Uh(4,o)}catch(re){Cn(o,f,re)}break;case 1:var _=o.stateNode;if(typeof _.componentDidMount=="function"){var M=o.return;try{_.componentDidMount()}catch(re){Cn(o,M,re)}}var b=o.return;try{Ug(o)}catch(re){Cn(o,b,re)}break;case 5:var F=o.return;try{Ug(o)}catch(re){Cn(o,F,re)}}}catch(re){Cn(o,o.return,re)}if(o===a){ht=null;break}var J=o.sibling;if(J!==null){J.return=o.return,ht=J;break}ht=o.return}}var fC=Math.ceil,Oh=C.ReactCurrentDispatcher,kg=C.ReactCurrentOwner,gr=C.ReactCurrentBatchConfig,Xt=0,Kn=null,Un=null,ai=0,Zi=0,oc=Aa(0),Gn=0,Gf=null,Bo=0,Fh=0,zg=0,Wf=null,Ni=null,Bg=0,lc=1/0,Vs=null,kh=!1,Hg=null,Ia=null,zh=!1,Da=null,Bh=0,$f=0,Vg=null,Hh=-1,Vh=0;function Mi(){return(Xt&6)!==0?De():Hh!==-1?Hh:Hh=De()}function Na(a){return(a.mode&1)===0?1:(Xt&2)!==0&&ai!==0?ai&-ai:jR.transition!==null?(Vh===0&&(Vh=_a()),Vh):(a=tn,a!==0||(a=window.event,a=a===void 0?16:ny(a.type)),a)}function Hr(a,o,f,_){if(50<$f)throw $f=0,Vg=null,Error(t(185));mf(a,f,_),((Xt&2)===0||a!==Kn)&&(a===Kn&&((Xt&2)===0&&(Fh|=f),Gn===4&&Ua(a,ai)),Ui(a,_),f===1&&Xt===0&&(o.mode&1)===0&&(lc=De()+500,gh&&Ra()))}function Ui(a,o){var f=a.callbackNode;Ns(a,o);var _=fr(a,a===Kn?ai:0);if(_===0)f!==null&&be(f),a.callbackNode=null,a.callbackPriority=0;else if(o=_&-_,a.callbackPriority!==o){if(f!=null&&be(f),o===1)a.tag===0?qR(nS.bind(null,a)):Hy(nS.bind(null,a)),GR(function(){(Xt&6)===0&&Ra()}),f=null;else{switch(jx(_)){case 1:f=ke;break;case 4:f=pt;break;case 16:f=At;break;case 536870912:f=Qt;break;default:f=At}f=uS(f,tS.bind(null,a))}a.callbackPriority=o,a.callbackNode=f}}function tS(a,o){if(Hh=-1,Vh=0,(Xt&6)!==0)throw Error(t(327));var f=a.callbackNode;if(cc()&&a.callbackNode!==f)return null;var _=fr(a,a===Kn?ai:0);if(_===0)return null;if((_&30)!==0||(_&a.expiredLanes)!==0||o)o=Gh(a,_);else{o=_;var M=Xt;Xt|=2;var b=rS();(Kn!==a||ai!==o)&&(Vs=null,lc=De()+500,Vo(a,o));do try{pC();break}catch(J){iS(a,J)}while(!0);ag(),Oh.current=b,Xt=M,Un!==null?o=0:(Kn=null,ai=0,o=Gn)}if(o!==0){if(o===2&&(M=Io(a),M!==0&&(_=M,o=Gg(a,M))),o===1)throw f=Gf,Vo(a,0),Ua(a,_),Ui(a,De()),f;if(o===6)Ua(a,_);else{if(M=a.current.alternate,(_&30)===0&&!dC(M)&&(o=Gh(a,_),o===2&&(b=Io(a),b!==0&&(_=b,o=Gg(a,b))),o===1))throw f=Gf,Vo(a,0),Ua(a,_),Ui(a,De()),f;switch(a.finishedWork=M,a.finishedLanes=_,o){case 0:case 1:throw Error(t(345));case 2:Go(a,Ni,Vs);break;case 3:if(Ua(a,_),(_&130023424)===_&&(o=Bg+500-De(),10<o)){if(fr(a,0)!==0)break;if(M=a.suspendedLanes,(M&_)!==_){Mi(),a.pingedLanes|=a.suspendedLanes&M;break}a.timeoutHandle=Y0(Go.bind(null,a,Ni,Vs),o);break}Go(a,Ni,Vs);break;case 4:if(Ua(a,_),(_&4194240)===_)break;for(o=a.eventTimes,M=-1;0<_;){var F=31-ct(_);b=1<<F,F=o[F],F>M&&(M=F),_&=~b}if(_=M,_=De()-_,_=(120>_?120:480>_?480:1080>_?1080:1920>_?1920:3e3>_?3e3:4320>_?4320:1960*fC(_/1960))-_,10<_){a.timeoutHandle=Y0(Go.bind(null,a,Ni,Vs),_);break}Go(a,Ni,Vs);break;case 5:Go(a,Ni,Vs);break;default:throw Error(t(329))}}}return Ui(a,De()),a.callbackNode===f?tS.bind(null,a):null}function Gg(a,o){var f=Wf;return a.current.memoizedState.isDehydrated&&(Vo(a,o).flags|=256),a=Gh(a,o),a!==2&&(o=Ni,Ni=f,o!==null&&Wg(o)),a}function Wg(a){Ni===null?Ni=a:Ni.push.apply(Ni,a)}function dC(a){for(var o=a;;){if(o.flags&16384){var f=o.updateQueue;if(f!==null&&(f=f.stores,f!==null))for(var _=0;_<f.length;_++){var M=f[_],b=M.getSnapshot;M=M.value;try{if(!Or(b(),M))return!1}catch{return!1}}}if(f=o.child,o.subtreeFlags&16384&&f!==null)f.return=o,o=f;else{if(o===a)break;for(;o.sibling===null;){if(o.return===null||o.return===a)return!0;o=o.return}o.sibling.return=o.return,o=o.sibling}}return!0}function Ua(a,o){for(o&=~zg,o&=~Fh,a.suspendedLanes|=o,a.pingedLanes&=~o,a=a.expirationTimes;0<o;){var f=31-ct(o),_=1<<f;a[f]=-1,o&=~_}}function nS(a){if((Xt&6)!==0)throw Error(t(327));cc();var o=fr(a,0);if((o&1)===0)return Ui(a,De()),null;var f=Gh(a,o);if(a.tag!==0&&f===2){var _=Io(a);_!==0&&(o=_,f=Gg(a,_))}if(f===1)throw f=Gf,Vo(a,0),Ua(a,o),Ui(a,De()),f;if(f===6)throw Error(t(345));return a.finishedWork=a.current.alternate,a.finishedLanes=o,Go(a,Ni,Vs),Ui(a,De()),null}function $g(a,o){var f=Xt;Xt|=1;try{return a(o)}finally{Xt=f,Xt===0&&(lc=De()+500,gh&&Ra())}}function Ho(a){Da!==null&&Da.tag===0&&(Xt&6)===0&&cc();var o=Xt;Xt|=1;var f=gr.transition,_=tn;try{if(gr.transition=null,tn=1,a)return a()}finally{tn=_,gr.transition=f,Xt=o,(Xt&6)===0&&Ra()}}function Xg(){Zi=oc.current,pn(oc)}function Vo(a,o){a.finishedWork=null,a.finishedLanes=0;var f=a.timeoutHandle;if(f!==-1&&(a.timeoutHandle=-1,VR(f)),Un!==null)for(f=Un.return;f!==null;){var _=f;switch(tg(_),_.tag){case 1:_=_.type.childContextTypes,_!=null&&ph();break;case 3:rc(),pn(Li),pn(li),pg();break;case 5:dg(_);break;case 4:rc();break;case 13:pn(wn);break;case 19:pn(wn);break;case 10:og(_.type._context);break;case 22:case 23:Xg()}f=f.return}if(Kn=a,Un=a=Oa(a.current,null),ai=Zi=o,Gn=0,Gf=null,zg=Fh=Bo=0,Ni=Wf=null,Fo!==null){for(o=0;o<Fo.length;o++)if(f=Fo[o],_=f.interleaved,_!==null){f.interleaved=null;var M=_.next,b=f.pending;if(b!==null){var F=b.next;b.next=M,_.next=F}f.pending=_}Fo=null}return a}function iS(a,o){do{var f=Un;try{if(ag(),Ah.current=Ph,bh){for(var _=Tn.memoizedState;_!==null;){var M=_.queue;M!==null&&(M.pending=null),_=_.next}bh=!1}if(zo=0,Yn=Vn=Tn=null,Ff=!1,kf=0,kg.current=null,f===null||f.return===null){Gn=1,Gf=o,Un=null;break}e:{var b=a,F=f.return,J=f,re=o;if(o=ai,J.flags|=32768,re!==null&&typeof re=="object"&&typeof re.then=="function"){var we=re,Be=J,We=Be.tag;if((Be.mode&1)===0&&(We===0||We===11||We===15)){var ze=Be.alternate;ze?(Be.updateQueue=ze.updateQueue,Be.memoizedState=ze.memoizedState,Be.lanes=ze.lanes):(Be.updateQueue=null,Be.memoizedState=null)}var ot=R2(F);if(ot!==null){ot.flags&=-257,C2(ot,F,J,b,o),ot.mode&1&&b2(b,we,o),o=ot,re=we;var gt=o.updateQueue;if(gt===null){var vt=new Set;vt.add(re),o.updateQueue=vt}else gt.add(re);break e}else{if((o&1)===0){b2(b,we,o),qg();break e}re=Error(t(426))}}else if(Sn&&J.mode&1){var Nn=R2(F);if(Nn!==null){(Nn.flags&65536)===0&&(Nn.flags|=256),C2(Nn,F,J,b,o),rg(sc(re,J));break e}}b=re=sc(re,J),Gn!==4&&(Gn=2),Wf===null?Wf=[b]:Wf.push(b),b=F;do{switch(b.tag){case 3:b.flags|=65536,o&=-o,b.lanes|=o;var _e=T2(b,re,o);Qy(b,_e);break e;case 1:J=re;var oe=b.type,ye=b.stateNode;if((b.flags&128)===0&&(typeof oe.getDerivedStateFromError=="function"||ye!==null&&typeof ye.componentDidCatch=="function"&&(Ia===null||!Ia.has(ye)))){b.flags|=65536,o&=-o,b.lanes|=o;var je=A2(b,J,o);Qy(b,je);break e}}b=b.return}while(b!==null)}aS(f)}catch(yt){o=yt,Un===f&&f!==null&&(Un=f=f.return);continue}break}while(!0)}function rS(){var a=Oh.current;return Oh.current=Ph,a===null?Ph:a}function qg(){(Gn===0||Gn===3||Gn===2)&&(Gn=4),Kn===null||(Bo&268435455)===0&&(Fh&268435455)===0||Ua(Kn,ai)}function Gh(a,o){var f=Xt;Xt|=2;var _=rS();(Kn!==a||ai!==o)&&(Vs=null,Vo(a,o));do try{hC();break}catch(M){iS(a,M)}while(!0);if(ag(),Xt=f,Oh.current=_,Un!==null)throw Error(t(261));return Kn=null,ai=0,Gn}function hC(){for(;Un!==null;)sS(Un)}function pC(){for(;Un!==null&&!Ce();)sS(Un)}function sS(a){var o=cS(a.alternate,a,Zi);a.memoizedProps=a.pendingProps,o===null?aS(a):Un=o,kg.current=null}function aS(a){var o=a;do{var f=o.alternate;if(a=o.return,(o.flags&32768)===0){if(f=aC(f,o,Zi),f!==null){Un=f;return}}else{if(f=oC(f,o),f!==null){f.flags&=32767,Un=f;return}if(a!==null)a.flags|=32768,a.subtreeFlags=0,a.deletions=null;else{Gn=6,Un=null;return}}if(o=o.sibling,o!==null){Un=o;return}Un=o=a}while(o!==null);Gn===0&&(Gn=5)}function Go(a,o,f){var _=tn,M=gr.transition;try{gr.transition=null,tn=1,mC(a,o,f,_)}finally{gr.transition=M,tn=_}return null}function mC(a,o,f,_){do cc();while(Da!==null);if((Xt&6)!==0)throw Error(t(327));f=a.finishedWork;var M=a.finishedLanes;if(f===null)return null;if(a.finishedWork=null,a.finishedLanes=0,f===a.current)throw Error(t(177));a.callbackNode=null,a.callbackPriority=0;var b=f.lanes|f.childLanes;if(Y4(a,b),a===Kn&&(Un=Kn=null,ai=0),(f.subtreeFlags&2064)===0&&(f.flags&2064)===0||zh||(zh=!0,uS(At,function(){return cc(),null})),b=(f.flags&15990)!==0,(f.subtreeFlags&15990)!==0||b){b=gr.transition,gr.transition=null;var F=tn;tn=1;var J=Xt;Xt|=4,kg.current=null,cC(a,f),K2(f,a),UR(q0),eh=!!X0,q0=X0=null,a.current=f,uC(f),Le(),Xt=J,tn=F,gr.transition=b}else a.current=f;if(zh&&(zh=!1,Da=a,Bh=M),b=a.pendingLanes,b===0&&(Ia=null),$t(f.stateNode),Ui(a,De()),o!==null)for(_=a.onRecoverableError,f=0;f<o.length;f++)M=o[f],_(M.value,{componentStack:M.stack,digest:M.digest});if(kh)throw kh=!1,a=Hg,Hg=null,a;return(Bh&1)!==0&&a.tag!==0&&cc(),b=a.pendingLanes,(b&1)!==0?a===Vg?$f++:($f=0,Vg=a):$f=0,Ra(),null}function cc(){if(Da!==null){var a=jx(Bh),o=gr.transition,f=tn;try{if(gr.transition=null,tn=16>a?16:a,Da===null)var _=!1;else{if(a=Da,Da=null,Bh=0,(Xt&6)!==0)throw Error(t(331));var M=Xt;for(Xt|=4,ht=a.current;ht!==null;){var b=ht,F=b.child;if((ht.flags&16)!==0){var J=b.deletions;if(J!==null){for(var re=0;re<J.length;re++){var we=J[re];for(ht=we;ht!==null;){var Be=ht;switch(Be.tag){case 0:case 11:case 15:Vf(8,Be,b)}var We=Be.child;if(We!==null)We.return=Be,ht=We;else for(;ht!==null;){Be=ht;var ze=Be.sibling,ot=Be.return;if($2(Be),Be===we){ht=null;break}if(ze!==null){ze.return=ot,ht=ze;break}ht=ot}}}var gt=b.alternate;if(gt!==null){var vt=gt.child;if(vt!==null){gt.child=null;do{var Nn=vt.sibling;vt.sibling=null,vt=Nn}while(vt!==null)}}ht=b}}if((b.subtreeFlags&2064)!==0&&F!==null)F.return=b,ht=F;else e:for(;ht!==null;){if(b=ht,(b.flags&2048)!==0)switch(b.tag){case 0:case 11:case 15:Vf(9,b,b.return)}var _e=b.sibling;if(_e!==null){_e.return=b.return,ht=_e;break e}ht=b.return}}var oe=a.current;for(ht=oe;ht!==null;){F=ht;var ye=F.child;if((F.subtreeFlags&2064)!==0&&ye!==null)ye.return=F,ht=ye;else e:for(F=oe;ht!==null;){if(J=ht,(J.flags&2048)!==0)try{switch(J.tag){case 0:case 11:case 15:Uh(9,J)}}catch(yt){Cn(J,J.return,yt)}if(J===F){ht=null;break e}var je=J.sibling;if(je!==null){je.return=J.return,ht=je;break e}ht=J.return}}if(Xt=M,Ra(),Ie&&typeof Ie.onPostCommitFiberRoot=="function")try{Ie.onPostCommitFiberRoot(mt,a)}catch{}_=!0}return _}finally{tn=f,gr.transition=o}}return!1}function oS(a,o,f){o=sc(f,o),o=T2(a,o,1),a=Pa(a,o,1),o=Mi(),a!==null&&(mf(a,1,o),Ui(a,o))}function Cn(a,o,f){if(a.tag===3)oS(a,a,f);else for(;o!==null;){if(o.tag===3){oS(o,a,f);break}else if(o.tag===1){var _=o.stateNode;if(typeof o.type.getDerivedStateFromError=="function"||typeof _.componentDidCatch=="function"&&(Ia===null||!Ia.has(_))){a=sc(f,a),a=A2(o,a,1),o=Pa(o,a,1),a=Mi(),o!==null&&(mf(o,1,a),Ui(o,a));break}}o=o.return}}function gC(a,o,f){var _=a.pingCache;_!==null&&_.delete(o),o=Mi(),a.pingedLanes|=a.suspendedLanes&f,Kn===a&&(ai&f)===f&&(Gn===4||Gn===3&&(ai&130023424)===ai&&500>De()-Bg?Vo(a,0):zg|=f),Ui(a,o)}function lS(a,o){o===0&&((a.mode&1)===0?o=1:(o=It,It<<=1,(It&130023424)===0&&(It=4194304)));var f=Mi();a=zs(a,o),a!==null&&(mf(a,o,f),Ui(a,f))}function vC(a){var o=a.memoizedState,f=0;o!==null&&(f=o.retryLane),lS(a,f)}function _C(a,o){var f=0;switch(a.tag){case 13:var _=a.stateNode,M=a.memoizedState;M!==null&&(f=M.retryLane);break;case 19:_=a.stateNode;break;default:throw Error(t(314))}_!==null&&_.delete(o),lS(a,f)}var cS;cS=function(a,o,f){if(a!==null)if(a.memoizedProps!==o.pendingProps||Li.current)Di=!0;else{if((a.lanes&f)===0&&(o.flags&128)===0)return Di=!1,sC(a,o,f);Di=(a.flags&131072)!==0}else Di=!1,Sn&&(o.flags&1048576)!==0&&Vy(o,_h,o.index);switch(o.lanes=0,o.tag){case 2:var _=o.type;Dh(a,o),a=o.pendingProps;var M=Zl(o,li.current);ic(o,f),M=vg(null,o,_,a,M,f);var b=_g();return o.flags|=1,typeof M=="object"&&M!==null&&typeof M.render=="function"&&M.$$typeof===void 0?(o.tag=1,o.memoizedState=null,o.updateQueue=null,Ii(_)?(b=!0,mh(o)):b=!1,o.memoizedState=M.state!==null&&M.state!==void 0?M.state:null,ug(o),M.updater=Lh,o.stateNode=M,M._reactInternals=o,wg(o,_,a,f),o=Rg(null,o,_,!0,b,f)):(o.tag=0,Sn&&b&&eg(o),Si(null,o,M,f),o=o.child),o;case 16:_=o.elementType;e:{switch(Dh(a,o),a=o.pendingProps,M=_._init,_=M(_._payload),o.type=_,M=o.tag=yC(_),a=kr(_,a),M){case 0:o=bg(null,o,_,a,f);break e;case 1:o=U2(null,o,_,a,f);break e;case 11:o=P2(null,o,_,a,f);break e;case 14:o=L2(null,o,_,kr(_.type,a),f);break e}throw Error(t(306,_,""))}return o;case 0:return _=o.type,M=o.pendingProps,M=o.elementType===_?M:kr(_,M),bg(a,o,_,M,f);case 1:return _=o.type,M=o.pendingProps,M=o.elementType===_?M:kr(_,M),U2(a,o,_,M,f);case 3:e:{if(O2(o),a===null)throw Error(t(387));_=o.pendingProps,b=o.memoizedState,M=b.element,Zy(a,o),wh(o,_,null,f);var F=o.memoizedState;if(_=F.element,b.isDehydrated)if(b={element:_,isDehydrated:!1,cache:F.cache,pendingSuspenseBoundaries:F.pendingSuspenseBoundaries,transitions:F.transitions},o.updateQueue.baseState=b,o.memoizedState=b,o.flags&256){M=sc(Error(t(423)),o),o=F2(a,o,_,f,M);break e}else if(_!==M){M=sc(Error(t(424)),o),o=F2(a,o,_,f,M);break e}else for(Ki=Ta(o.stateNode.containerInfo.firstChild),Yi=o,Sn=!0,Fr=null,f=Yy(o,null,_,f),o.child=f;f;)f.flags=f.flags&-3|4096,f=f.sibling;else{if(ec(),_===M){o=Hs(a,o,f);break e}Si(a,o,_,f)}o=o.child}return o;case 5:return e2(o),a===null&&ig(o),_=o.type,M=o.pendingProps,b=a!==null?a.memoizedProps:null,F=M.children,j0(_,M)?F=null:b!==null&&j0(_,b)&&(o.flags|=32),N2(a,o),Si(a,o,F,f),o.child;case 6:return a===null&&ig(o),null;case 13:return k2(a,o,f);case 4:return fg(o,o.stateNode.containerInfo),_=o.pendingProps,a===null?o.child=tc(o,null,_,f):Si(a,o,_,f),o.child;case 11:return _=o.type,M=o.pendingProps,M=o.elementType===_?M:kr(_,M),P2(a,o,_,M,f);case 7:return Si(a,o,o.pendingProps,f),o.child;case 8:return Si(a,o,o.pendingProps.children,f),o.child;case 12:return Si(a,o,o.pendingProps.children,f),o.child;case 10:e:{if(_=o.type._context,M=o.pendingProps,b=o.memoizedProps,F=M.value,fn(Sh,_._currentValue),_._currentValue=F,b!==null)if(Or(b.value,F)){if(b.children===M.children&&!Li.current){o=Hs(a,o,f);break e}}else for(b=o.child,b!==null&&(b.return=o);b!==null;){var J=b.dependencies;if(J!==null){F=b.child;for(var re=J.firstContext;re!==null;){if(re.context===_){if(b.tag===1){re=Bs(-1,f&-f),re.tag=2;var we=b.updateQueue;if(we!==null){we=we.shared;var Be=we.pending;Be===null?re.next=re:(re.next=Be.next,Be.next=re),we.pending=re}}b.lanes|=f,re=b.alternate,re!==null&&(re.lanes|=f),lg(b.return,f,o),J.lanes|=f;break}re=re.next}}else if(b.tag===10)F=b.type===o.type?null:b.child;else if(b.tag===18){if(F=b.return,F===null)throw Error(t(341));F.lanes|=f,J=F.alternate,J!==null&&(J.lanes|=f),lg(F,f,o),F=b.sibling}else F=b.child;if(F!==null)F.return=b;else for(F=b;F!==null;){if(F===o){F=null;break}if(b=F.sibling,b!==null){b.return=F.return,F=b;break}F=F.return}b=F}Si(a,o,M.children,f),o=o.child}return o;case 9:return M=o.type,_=o.pendingProps.children,ic(o,f),M=pr(M),_=_(M),o.flags|=1,Si(a,o,_,f),o.child;case 14:return _=o.type,M=kr(_,o.pendingProps),M=kr(_.type,M),L2(a,o,_,M,f);case 15:return I2(a,o,o.type,o.pendingProps,f);case 17:return _=o.type,M=o.pendingProps,M=o.elementType===_?M:kr(_,M),Dh(a,o),o.tag=1,Ii(_)?(a=!0,mh(o)):a=!1,ic(o,f),E2(o,_,M),wg(o,_,M,f),Rg(null,o,_,!0,a,f);case 19:return B2(a,o,f);case 22:return D2(a,o,f)}throw Error(t(156,o.tag))};function uS(a,o){return ve(a,o)}function xC(a,o,f,_){this.tag=a,this.key=f,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=o,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=_,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function vr(a,o,f,_){return new xC(a,o,f,_)}function jg(a){return a=a.prototype,!(!a||!a.isReactComponent)}function yC(a){if(typeof a=="function")return jg(a)?1:0;if(a!=null){if(a=a.$$typeof,a===Z)return 11;if(a===ne)return 14}return 2}function Oa(a,o){var f=a.alternate;return f===null?(f=vr(a.tag,o,a.key,a.mode),f.elementType=a.elementType,f.type=a.type,f.stateNode=a.stateNode,f.alternate=a,a.alternate=f):(f.pendingProps=o,f.type=a.type,f.flags=0,f.subtreeFlags=0,f.deletions=null),f.flags=a.flags&14680064,f.childLanes=a.childLanes,f.lanes=a.lanes,f.child=a.child,f.memoizedProps=a.memoizedProps,f.memoizedState=a.memoizedState,f.updateQueue=a.updateQueue,o=a.dependencies,f.dependencies=o===null?null:{lanes:o.lanes,firstContext:o.firstContext},f.sibling=a.sibling,f.index=a.index,f.ref=a.ref,f}function Wh(a,o,f,_,M,b){var F=2;if(_=a,typeof a=="function")jg(a)&&(F=1);else if(typeof a=="string")F=5;else e:switch(a){case D:return Wo(f.children,M,b,o);case V:F=8,M|=8;break;case R:return a=vr(12,f,o,M|2),a.elementType=R,a.lanes=b,a;case W:return a=vr(13,f,o,M),a.elementType=W,a.lanes=b,a;case K:return a=vr(19,f,o,M),a.elementType=K,a.lanes=b,a;case se:return $h(f,M,b,o);default:if(typeof a=="object"&&a!==null)switch(a.$$typeof){case T:F=10;break e;case O:F=9;break e;case Z:F=11;break e;case ne:F=14;break e;case Q:F=16,_=null;break e}throw Error(t(130,a==null?a:typeof a,""))}return o=vr(F,f,o,M),o.elementType=a,o.type=_,o.lanes=b,o}function Wo(a,o,f,_){return a=vr(7,a,_,o),a.lanes=f,a}function $h(a,o,f,_){return a=vr(22,a,_,o),a.elementType=se,a.lanes=f,a.stateNode={isHidden:!1},a}function Yg(a,o,f){return a=vr(6,a,null,o),a.lanes=f,a}function Kg(a,o,f){return o=vr(4,a.children!==null?a.children:[],a.key,o),o.lanes=f,o.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation},o}function SC(a,o,f,_,M){this.tag=o,this.containerInfo=a,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=E0(0),this.expirationTimes=E0(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=E0(0),this.identifierPrefix=_,this.onRecoverableError=M,this.mutableSourceEagerHydrationData=null}function Zg(a,o,f,_,M,b,F,J,re){return a=new SC(a,o,f,J,re),o===1?(o=1,b===!0&&(o|=8)):o=0,b=vr(3,null,null,o),a.current=b,b.stateNode=a,b.memoizedState={element:_,isDehydrated:f,cache:null,transitions:null,pendingSuspenseBoundaries:null},ug(b),a}function MC(a,o,f){var _=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:L,key:_==null?null:""+_,children:a,containerInfo:o,implementation:f}}function fS(a){if(!a)return ba;a=a._reactInternals;e:{if(Nr(a)!==a||a.tag!==1)throw Error(t(170));var o=a;do{switch(o.tag){case 3:o=o.stateNode.context;break e;case 1:if(Ii(o.type)){o=o.stateNode.__reactInternalMemoizedMergedChildContext;break e}}o=o.return}while(o!==null);throw Error(t(171))}if(a.tag===1){var f=a.type;if(Ii(f))return zy(a,f,o)}return o}function dS(a,o,f,_,M,b,F,J,re){return a=Zg(f,_,!0,a,M,b,F,J,re),a.context=fS(null),f=a.current,_=Mi(),M=Na(f),b=Bs(_,M),b.callback=o??null,Pa(f,b,M),a.current.lanes=M,mf(a,M,_),Ui(a,_),a}function Xh(a,o,f,_){var M=o.current,b=Mi(),F=Na(M);return f=fS(f),o.context===null?o.context=f:o.pendingContext=f,o=Bs(b,F),o.payload={element:a},_=_===void 0?null:_,_!==null&&(o.callback=_),a=Pa(M,o,F),a!==null&&(Hr(a,M,F,b),Eh(a,M,F)),F}function qh(a){if(a=a.current,!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function hS(a,o){if(a=a.memoizedState,a!==null&&a.dehydrated!==null){var f=a.retryLane;a.retryLane=f!==0&&f<o?f:o}}function Qg(a,o){hS(a,o),(a=a.alternate)&&hS(a,o)}function EC(){return null}var pS=typeof reportError=="function"?reportError:function(a){console.error(a)};function Jg(a){this._internalRoot=a}jh.prototype.render=Jg.prototype.render=function(a){var o=this._internalRoot;if(o===null)throw Error(t(409));Xh(a,o,null,null)},jh.prototype.unmount=Jg.prototype.unmount=function(){var a=this._internalRoot;if(a!==null){this._internalRoot=null;var o=a.containerInfo;Ho(function(){Xh(null,a,null,null)}),o[Us]=null}};function jh(a){this._internalRoot=a}jh.prototype.unstable_scheduleHydration=function(a){if(a){var o=Zx();a={blockedOn:null,target:a,priority:o};for(var f=0;f<Ma.length&&o!==0&&o<Ma[f].priority;f++);Ma.splice(f,0,a),f===0&&ey(a)}};function e1(a){return!(!a||a.nodeType!==1&&a.nodeType!==9&&a.nodeType!==11)}function Yh(a){return!(!a||a.nodeType!==1&&a.nodeType!==9&&a.nodeType!==11&&(a.nodeType!==8||a.nodeValue!==" react-mount-point-unstable "))}function mS(){}function wC(a,o,f,_,M){if(M){if(typeof _=="function"){var b=_;_=function(){var we=qh(F);b.call(we)}}var F=dS(o,_,a,0,null,!1,!1,"",mS);return a._reactRootContainer=F,a[Us]=F.current,Cf(a.nodeType===8?a.parentNode:a),Ho(),F}for(;M=a.lastChild;)a.removeChild(M);if(typeof _=="function"){var J=_;_=function(){var we=qh(re);J.call(we)}}var re=Zg(a,0,!1,null,null,!1,!1,"",mS);return a._reactRootContainer=re,a[Us]=re.current,Cf(a.nodeType===8?a.parentNode:a),Ho(function(){Xh(o,re,f,_)}),re}function Kh(a,o,f,_,M){var b=f._reactRootContainer;if(b){var F=b;if(typeof M=="function"){var J=M;M=function(){var re=qh(F);J.call(re)}}Xh(o,F,a,M)}else F=wC(f,o,a,M,_);return qh(F)}Yx=function(a){switch(a.tag){case 3:var o=a.stateNode;if(o.current.memoizedState.isDehydrated){var f=En(o.pendingLanes);f!==0&&(w0(o,f|1),Ui(o,De()),(Xt&6)===0&&(lc=De()+500,Ra()))}break;case 13:Ho(function(){var _=zs(a,1);if(_!==null){var M=Mi();Hr(_,a,1,M)}}),Qg(a,1)}},T0=function(a){if(a.tag===13){var o=zs(a,134217728);if(o!==null){var f=Mi();Hr(o,a,134217728,f)}Qg(a,134217728)}},Kx=function(a){if(a.tag===13){var o=Na(a),f=zs(a,o);if(f!==null){var _=Mi();Hr(f,a,o,_)}Qg(a,o)}},Zx=function(){return tn},Qx=function(a,o){var f=tn;try{return tn=a,o()}finally{tn=f}},ee=function(a,o,f){switch(o){case"input":if(tt(a,f),o=f.name,f.type==="radio"&&o!=null){for(f=a;f.parentNode;)f=f.parentNode;for(f=f.querySelectorAll("input[name="+JSON.stringify(""+o)+'][type="radio"]'),o=0;o<f.length;o++){var _=f[o];if(_!==a&&_.form===a.form){var M=hh(_);if(!M)throw Error(t(90));Je(_),tt(_,M)}}}break;case"textarea":ce(a,f);break;case"select":o=f.value,o!=null&&E(a,!!f.multiple,o,!1)}},Nt=$g,xt=Ho;var TC={usingClientEntryPoint:!1,Events:[If,Yl,hh,dt,Pt,$g]},Xf={findFiberByHostInstance:Do,bundleType:0,version:"18.3.1",rendererPackageName:"react-dom"},AC={bundleType:Xf.bundleType,version:Xf.version,rendererPackageName:Xf.rendererPackageName,rendererConfig:Xf.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:C.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){return a=q(a),a===null?null:a.stateNode},findFiberByHostInstance:Xf.findFiberByHostInstance||EC,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.3.1-next-f1338f8080-20240426"};if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__<"u"){var Zh=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!Zh.isDisabled&&Zh.supportsFiber)try{mt=Zh.inject(AC),Ie=Zh}catch{}}return Fi.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=TC,Fi.createPortal=function(a,o){var f=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null;if(!e1(o))throw Error(t(200));return MC(a,o,null,f)},Fi.createRoot=function(a,o){if(!e1(a))throw Error(t(299));var f=!1,_="",M=pS;return o!=null&&(o.unstable_strictMode===!0&&(f=!0),o.identifierPrefix!==void 0&&(_=o.identifierPrefix),o.onRecoverableError!==void 0&&(M=o.onRecoverableError)),o=Zg(a,1,!1,null,null,f,!1,_,M),a[Us]=o.current,Cf(a.nodeType===8?a.parentNode:a),new Jg(o)},Fi.findDOMNode=function(a){if(a==null)return null;if(a.nodeType===1)return a;var o=a._reactInternals;if(o===void 0)throw typeof a.render=="function"?Error(t(188)):(a=Object.keys(a).join(","),Error(t(268,a)));return a=q(o),a=a===null?null:a.stateNode,a},Fi.flushSync=function(a){return Ho(a)},Fi.hydrate=function(a,o,f){if(!Yh(o))throw Error(t(200));return Kh(null,a,o,!0,f)},Fi.hydrateRoot=function(a,o,f){if(!e1(a))throw Error(t(405));var _=f!=null&&f.hydratedSources||null,M=!1,b="",F=pS;if(f!=null&&(f.unstable_strictMode===!0&&(M=!0),f.identifierPrefix!==void 0&&(b=f.identifierPrefix),f.onRecoverableError!==void 0&&(F=f.onRecoverableError)),o=dS(o,null,a,1,f??null,M,!1,b,F),a[Us]=o.current,Cf(a),_)for(a=0;a<_.length;a++)f=_[a],M=f._getVersion,M=M(f._source),o.mutableSourceEagerHydrationData==null?o.mutableSourceEagerHydrationData=[f,M]:o.mutableSourceEagerHydrationData.push(f,M);return new jh(o)},Fi.render=function(a,o,f){if(!Yh(o))throw Error(t(200));return Kh(null,a,o,!1,f)},Fi.unmountComponentAtNode=function(a){if(!Yh(a))throw Error(t(40));return a._reactRootContainer?(Ho(function(){Kh(null,null,a,!1,function(){a._reactRootContainer=null,a[Us]=null})}),!0):!1},Fi.unstable_batchedUpdates=$g,Fi.unstable_renderSubtreeIntoContainer=function(a,o,f,_){if(!Yh(f))throw Error(t(200));if(a==null||a._reactInternals===void 0)throw Error(t(38));return Kh(a,o,f,!1,_)},Fi.version="18.3.1-next-f1338f8080-20240426",Fi}var U3;function wF(){if(U3)return gv.exports;U3=1;function n(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(n)}catch(e){console.error(e)}}return n(),gv.exports=EF(),gv.exports}var O3;function TF(){if(O3)return Dp;O3=1;var n=wF();return Dp.createRoot=n.createRoot,Dp.hydrateRoot=n.hydrateRoot,Dp}var F3=TF();class AF{constructor(e){this.version=yF,e.ipd=0,Lx.getState().setInputMode(e.primaryInputMode),this.devUIContainer=document.createElement("div"),this.devUIContainer.style.position="fixed",this.devUIContainer.style.width="100vw",this.devUIContainer.style.height="100vh",this.devUIContainer.style.top="50vh",this.devUIContainer.style.left="50vw",this.devUIContainer.style.transform="translate(-50%, -50%)",this.devUIContainer.style.pointerEvents="none";const t=this.devUIContainer.attachShadow({mode:"open"});this.inputLayer=new xF(e),F3.createRoot(t).render(B.jsx(bF,{xrDevice:e,inputLayer:this.inputLayer,shadowRoot:t}));const r=()=>{const s=document.createElement("div");document.body.appendChild(s);const l=s.attachShadow({mode:"open"});F3.createRoot(l).render(B.jsx(RF,{xrDevice:e,shadowRoot:l}))};document.body?r():window.onload=r}render(e){this.inputLayer.renderScene(e)}get devUICanvas(){return this.inputLayer.domElement}}const bF=({xrDevice:n,inputLayer:e,shadowRoot:t})=>{const[i,r]=Wt.useState(!1);return Wt.useEffect(()=>{const s=()=>{const l=document.pointerLockElement||document.mozPointerLockElement||document.webkitPointerLockElement;r(!!l)};return document.addEventListener("pointerlockchange",s,!1),document.addEventListener("mozpointerlockchange",s,!1),document.addEventListener("webkitpointerlockchange",s,!1),()=>{document.removeEventListener("pointerlockchange",s,!1),document.removeEventListener("mozpointerlockchange",s,!1),document.removeEventListener("webkitpointerlockchange",s,!1)}},[]),B.jsx(cb,{target:t,disableCSSOMInjection:!0,children:B.jsxs("div",{style:{width:"100vw",height:"100vh",display:"flex",flexDirection:"column",justifyContent:"space-between",pointerEvents:"none"},children:[B.jsx(lI,{xrDevice:n,inputLayer:e}),B.jsx(fI,{xrDevice:n,inputLayer:e,pointerLocked:i}),B.jsx(rI,{xrDevice:n,inputLayer:e,pointerLocked:i})]})})},RF=({xrDevice:n,shadowRoot:e})=>{const[t,i]=Cr.useState(n.sessionOffered&&!n.activeSession);return Cr.useEffect(()=>{setInterval(()=>{i(n.sessionOffered&&!n.activeSession)},1e3)},[]),B.jsx(cb,{target:e,disableCSSOMInjection:!0,children:B.jsxs(I_,{style:{zIndex:899,position:"fixed",top:t?"8px":"-30px",display:"flex",flexDirection:"row",alignItems:"center",justifyItems:"space-between",left:"50vw",transform:"translateX(-50%)",transition:"all 0.2s ease-in-out",paddingLeft:"5px",gap:"3px"},children:[B.jsx(D_,{size:24}),B.jsx(Mr,{onClick:()=>{n.grantOfferedSession()},style:{fontSize:"16px"},children:"Enter XR"})]})})};/**
 * @license
 * Copyright 2010-2024 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Vx="165",CF=0,k3=1,PF=2,f4=1,LF=2,ta=3,wo=0,Gi=1,aa=2,vo=0,Ru=1,z3=2,B3=3,H3=4,IF=5,_l=100,DF=101,NF=102,UF=103,OF=104,FF=200,kF=201,zF=202,BF=203,G_=204,W_=205,HF=206,VF=207,GF=208,WF=209,$F=210,XF=211,qF=212,jF=213,YF=214,KF=0,ZF=1,QF=2,Bm=3,JF=4,ek=5,tk=6,nk=7,d4=0,ik=1,rk=2,_o=0,sk=1,ak=2,ok=3,lk=4,ck=5,uk=6,fk=7,h4=300,ju=301,Yu=302,$_=303,X_=304,_0=306,q_=1e3,El=1001,j_=1002,Rr=1003,dk=1004,Np=1005,Jr=1006,xv=1007,wl=1008,To=1009,hk=1010,pk=1011,Hm=1012,p4=1013,Ku=1014,fo=1015,x0=1016,m4=1017,g4=1018,Zu=1020,mk=35902,gk=1021,vk=1022,As=1023,_k=1024,xk=1025,Cu=1026,Qu=1027,yk=1028,v4=1029,Sk=1030,_4=1031,x4=1033,yv=33776,Sv=33777,Mv=33778,Ev=33779,V3=35840,G3=35841,W3=35842,$3=35843,X3=36196,q3=37492,j3=37496,Y3=37808,K3=37809,Z3=37810,Q3=37811,J3=37812,ew=37813,tw=37814,nw=37815,iw=37816,rw=37817,sw=37818,aw=37819,ow=37820,lw=37821,wv=36492,cw=36494,uw=36495,Mk=36283,fw=36284,dw=36285,hw=36286,Ek=3200,wk=3201,y4=0,Tk=1,lo="",ms="srgb",Co="srgb-linear",Gx="display-p3",y0="display-p3-linear",Vm="linear",vn="srgb",Gm="rec709",Wm="p3",Bc=7680,pw=519,Ak=512,bk=513,Rk=514,S4=515,Ck=516,Pk=517,Lk=518,Ik=519,mw=35044,gw="300 es",la=2e3,$m=2001;class lf{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const i=this._listeners;i[e]===void 0&&(i[e]=[]),i[e].indexOf(t)===-1&&i[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const i=this._listeners;return i[e]!==void 0&&i[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const r=this._listeners[e];if(r!==void 0){const s=r.indexOf(t);s!==-1&&r.splice(s,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const i=this._listeners[e.type];if(i!==void 0){e.target=this;const r=i.slice(0);for(let s=0,l=r.length;s<l;s++)r[s].call(this,e);e.target=null}}}const pi=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"],Tv=Math.PI/180,Y_=180/Math.PI;function jd(){const n=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(pi[n&255]+pi[n>>8&255]+pi[n>>16&255]+pi[n>>24&255]+"-"+pi[e&255]+pi[e>>8&255]+"-"+pi[e>>16&15|64]+pi[e>>24&255]+"-"+pi[t&63|128]+pi[t>>8&255]+"-"+pi[t>>16&255]+pi[t>>24&255]+pi[i&255]+pi[i>>8&255]+pi[i>>16&255]+pi[i>>24&255]).toLowerCase()}function Bi(n,e,t){return Math.max(e,Math.min(t,n))}function Dk(n,e){return(n%e+e)%e}function Av(n,e,t){return(1-t)*n+t*e}function dd(n,e){switch(e.constructor){case Float32Array:return n;case Uint32Array:return n/4294967295;case Uint16Array:return n/65535;case Uint8Array:return n/255;case Int32Array:return Math.max(n/2147483647,-1);case Int16Array:return Math.max(n/32767,-1);case Int8Array:return Math.max(n/127,-1);default:throw new Error("Invalid component type.")}}function ki(n,e){switch(e.constructor){case Float32Array:return n;case Uint32Array:return Math.round(n*4294967295);case Uint16Array:return Math.round(n*65535);case Uint8Array:return Math.round(n*255);case Int32Array:return Math.round(n*2147483647);case Int16Array:return Math.round(n*32767);case Int8Array:return Math.round(n*127);default:throw new Error("Invalid component type.")}}let Zt=class M4{constructor(e=0,t=0){M4.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,i=this.y,r=e.elements;return this.x=r[0]*t+r[3]*i+r[6],this.y=r[1]*t+r[4]*i+r[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const i=this.dot(e)/t;return Math.acos(Bi(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y;return t*t+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const i=Math.cos(t),r=Math.sin(t),s=this.x-e.x,l=this.y-e.y;return this.x=s*i-l*r+e.x,this.y=s*r+l*i+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}};class Dt{constructor(e,t,i,r,s,l,c,u,d){Dt.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,i,r,s,l,c,u,d)}set(e,t,i,r,s,l,c,u,d){const h=this.elements;return h[0]=e,h[1]=r,h[2]=c,h[3]=t,h[4]=s,h[5]=u,h[6]=i,h[7]=l,h[8]=d,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],this}extractBasis(e,t,i){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,r=t.elements,s=this.elements,l=i[0],c=i[3],u=i[6],d=i[1],h=i[4],m=i[7],p=i[2],x=i[5],y=i[8],S=r[0],v=r[3],g=r[6],P=r[1],w=r[4],C=r[7],z=r[2],L=r[5],D=r[8];return s[0]=l*S+c*P+u*z,s[3]=l*v+c*w+u*L,s[6]=l*g+c*C+u*D,s[1]=d*S+h*P+m*z,s[4]=d*v+h*w+m*L,s[7]=d*g+h*C+m*D,s[2]=p*S+x*P+y*z,s[5]=p*v+x*w+y*L,s[8]=p*g+x*C+y*D,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[1],r=e[2],s=e[3],l=e[4],c=e[5],u=e[6],d=e[7],h=e[8];return t*l*h-t*c*d-i*s*h+i*c*u+r*s*d-r*l*u}invert(){const e=this.elements,t=e[0],i=e[1],r=e[2],s=e[3],l=e[4],c=e[5],u=e[6],d=e[7],h=e[8],m=h*l-c*d,p=c*u-h*s,x=d*s-l*u,y=t*m+i*p+r*x;if(y===0)return this.set(0,0,0,0,0,0,0,0,0);const S=1/y;return e[0]=m*S,e[1]=(r*d-h*i)*S,e[2]=(c*i-r*l)*S,e[3]=p*S,e[4]=(h*t-r*u)*S,e[5]=(r*s-c*t)*S,e[6]=x*S,e[7]=(i*u-d*t)*S,e[8]=(l*t-i*s)*S,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,i,r,s,l,c){const u=Math.cos(s),d=Math.sin(s);return this.set(i*u,i*d,-i*(u*l+d*c)+l+e,-r*d,r*u,-r*(-d*l+u*c)+c+t,0,0,1),this}scale(e,t){return this.premultiply(bv.makeScale(e,t)),this}rotate(e){return this.premultiply(bv.makeRotation(-e)),this}translate(e,t){return this.premultiply(bv.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,i,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,i=e.elements;for(let r=0;r<9;r++)if(t[r]!==i[r])return!1;return!0}fromArray(e,t=0){for(let i=0;i<9;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const bv=new Dt;function E4(n){for(let e=n.length-1;e>=0;--e)if(n[e]>=65535)return!0;return!1}function Xm(n){return document.createElementNS("http://www.w3.org/1999/xhtml",n)}function Nk(){const n=Xm("canvas");return n.style.display="block",n}const vw={};function w4(n){n in vw||(vw[n]=!0,console.warn(n))}function Uk(n,e,t){return new Promise(function(i,r){function s(){switch(n.clientWaitSync(e,n.SYNC_FLUSH_COMMANDS_BIT,0)){case n.WAIT_FAILED:r();break;case n.TIMEOUT_EXPIRED:setTimeout(s,t);break;default:i()}}setTimeout(s,t)})}const _w=new Dt().set(.8224621,.177538,0,.0331941,.9668058,0,.0170827,.0723974,.9105199),xw=new Dt().set(1.2249401,-.2249404,0,-.0420569,1.0420571,0,-.0196376,-.0786361,1.0982735),Up={[Co]:{transfer:Vm,primaries:Gm,toReference:n=>n,fromReference:n=>n},[ms]:{transfer:vn,primaries:Gm,toReference:n=>n.convertSRGBToLinear(),fromReference:n=>n.convertLinearToSRGB()},[y0]:{transfer:Vm,primaries:Wm,toReference:n=>n.applyMatrix3(xw),fromReference:n=>n.applyMatrix3(_w)},[Gx]:{transfer:vn,primaries:Wm,toReference:n=>n.convertSRGBToLinear().applyMatrix3(xw),fromReference:n=>n.applyMatrix3(_w).convertLinearToSRGB()}},Ok=new Set([Co,y0]),rn={enabled:!0,_workingColorSpace:Co,get workingColorSpace(){return this._workingColorSpace},set workingColorSpace(n){if(!Ok.has(n))throw new Error(`Unsupported working color space, "${n}".`);this._workingColorSpace=n},convert:function(n,e,t){if(this.enabled===!1||e===t||!e||!t)return n;const i=Up[e].toReference,r=Up[t].fromReference;return r(i(n))},fromWorkingColorSpace:function(n,e){return this.convert(n,this._workingColorSpace,e)},toWorkingColorSpace:function(n,e){return this.convert(n,e,this._workingColorSpace)},getPrimaries:function(n){return Up[n].primaries},getTransfer:function(n){return n===lo?Vm:Up[n].transfer}};function Pu(n){return n<.04045?n*.0773993808:Math.pow(n*.9478672986+.0521327014,2.4)}function Rv(n){return n<.0031308?n*12.92:1.055*Math.pow(n,.41666)-.055}let Hc;class Fk{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{Hc===void 0&&(Hc=Xm("canvas")),Hc.width=e.width,Hc.height=e.height;const i=Hc.getContext("2d");e instanceof ImageData?i.putImageData(e,0,0):i.drawImage(e,0,0,e.width,e.height),t=Hc}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=Xm("canvas");t.width=e.width,t.height=e.height;const i=t.getContext("2d");i.drawImage(e,0,0,e.width,e.height);const r=i.getImageData(0,0,e.width,e.height),s=r.data;for(let l=0;l<s.length;l++)s[l]=Pu(s[l]/255)*255;return i.putImageData(r,0,0),t}else if(e.data){const t=e.data.slice(0);for(let i=0;i<t.length;i++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[i]=Math.floor(Pu(t[i]/255)*255):t[i]=Pu(t[i]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let kk=0;class T4{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:kk++}),this.uuid=jd(),this.data=e,this.dataReady=!0,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const i={uuid:this.uuid,url:""},r=this.data;if(r!==null){let s;if(Array.isArray(r)){s=[];for(let l=0,c=r.length;l<c;l++)r[l].isDataTexture?s.push(Cv(r[l].image)):s.push(Cv(r[l]))}else s=Cv(r);i.url=s}return t||(e.images[this.uuid]=i),i}}function Cv(n){return typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&n instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&n instanceof ImageBitmap?Fk.getDataURL(n):n.data?{data:Array.from(n.data),width:n.width,height:n.height,type:n.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let zk=0;class Wi extends lf{constructor(e=Wi.DEFAULT_IMAGE,t=Wi.DEFAULT_MAPPING,i=El,r=El,s=Jr,l=wl,c=As,u=To,d=Wi.DEFAULT_ANISOTROPY,h=lo){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:zk++}),this.uuid=jd(),this.name="",this.source=new T4(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=i,this.wrapT=r,this.magFilter=s,this.minFilter=l,this.anisotropy=d,this.format=c,this.internalFormat=null,this.type=u,this.offset=new Zt(0,0),this.repeat=new Zt(1,1),this.center=new Zt(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Dt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=h,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const i={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(i.userData=this.userData),t||(e.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==h4)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case q_:e.x=e.x-Math.floor(e.x);break;case El:e.x=e.x<0?0:1;break;case j_:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case q_:e.y=e.y-Math.floor(e.y);break;case El:e.y=e.y<0?0:1;break;case j_:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){e===!0&&this.pmremVersion++}}Wi.DEFAULT_IMAGE=null;Wi.DEFAULT_MAPPING=h4;Wi.DEFAULT_ANISOTROPY=1;class oi{constructor(e=0,t=0,i=0,r=1){oi.prototype.isVector4=!0,this.x=e,this.y=t,this.z=i,this.w=r}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,i,r){return this.x=e,this.y=t,this.z=i,this.w=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,i=this.y,r=this.z,s=this.w,l=e.elements;return this.x=l[0]*t+l[4]*i+l[8]*r+l[12]*s,this.y=l[1]*t+l[5]*i+l[9]*r+l[13]*s,this.z=l[2]*t+l[6]*i+l[10]*r+l[14]*s,this.w=l[3]*t+l[7]*i+l[11]*r+l[15]*s,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,i,r,s;const u=e.elements,d=u[0],h=u[4],m=u[8],p=u[1],x=u[5],y=u[9],S=u[2],v=u[6],g=u[10];if(Math.abs(h-p)<.01&&Math.abs(m-S)<.01&&Math.abs(y-v)<.01){if(Math.abs(h+p)<.1&&Math.abs(m+S)<.1&&Math.abs(y+v)<.1&&Math.abs(d+x+g-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const w=(d+1)/2,C=(x+1)/2,z=(g+1)/2,L=(h+p)/4,D=(m+S)/4,V=(y+v)/4;return w>C&&w>z?w<.01?(i=0,r=.707106781,s=.707106781):(i=Math.sqrt(w),r=L/i,s=D/i):C>z?C<.01?(i=.707106781,r=0,s=.707106781):(r=Math.sqrt(C),i=L/r,s=V/r):z<.01?(i=.707106781,r=.707106781,s=0):(s=Math.sqrt(z),i=D/s,r=V/s),this.set(i,r,s,t),this}let P=Math.sqrt((v-y)*(v-y)+(m-S)*(m-S)+(p-h)*(p-h));return Math.abs(P)<.001&&(P=1),this.x=(v-y)/P,this.y=(m-S)/P,this.z=(p-h)/P,this.w=Math.acos((d+x+g-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this.w=e.w+(t.w-e.w)*i,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Bk extends lf{constructor(e=1,t=1,i={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new oi(0,0,e,t),this.scissorTest=!1,this.viewport=new oi(0,0,e,t);const r={width:e,height:t,depth:1};i=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:Jr,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1},i);const s=new Wi(r,i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.colorSpace);s.flipY=!1,s.generateMipmaps=i.generateMipmaps,s.internalFormat=i.internalFormat,this.textures=[];const l=i.count;for(let c=0;c<l;c++)this.textures[c]=s.clone(),this.textures[c].isRenderTargetTexture=!0;this.depthBuffer=i.depthBuffer,this.stencilBuffer=i.stencilBuffer,this.resolveDepthBuffer=i.resolveDepthBuffer,this.resolveStencilBuffer=i.resolveStencilBuffer,this.depthTexture=i.depthTexture,this.samples=i.samples}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}setSize(e,t,i=1){if(this.width!==e||this.height!==t||this.depth!==i){this.width=e,this.height=t,this.depth=i;for(let r=0,s=this.textures.length;r<s;r++)this.textures[r].image.width=e,this.textures[r].image.height=t,this.textures[r].image.depth=i;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let i=0,r=e.textures.length;i<r;i++)this.textures[i]=e.textures[i].clone(),this.textures[i].isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new T4(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.resolveDepthBuffer=e.resolveDepthBuffer,this.resolveStencilBuffer=e.resolveStencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class zl extends Bk{constructor(e=1,t=1,i={}){super(e,t,i),this.isWebGLRenderTarget=!0}}class A4 extends Wi{constructor(e=null,t=1,i=1,r=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:i,depth:r},this.magFilter=Rr,this.minFilter=Rr,this.wrapR=El,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class Hk extends Wi{constructor(e=null,t=1,i=1,r=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:i,depth:r},this.magFilter=Rr,this.minFilter=Rr,this.wrapR=El,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}let cf=class{constructor(e=0,t=0,i=0,r=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=i,this._w=r}static slerpFlat(e,t,i,r,s,l,c){let u=i[r+0],d=i[r+1],h=i[r+2],m=i[r+3];const p=s[l+0],x=s[l+1],y=s[l+2],S=s[l+3];if(c===0){e[t+0]=u,e[t+1]=d,e[t+2]=h,e[t+3]=m;return}if(c===1){e[t+0]=p,e[t+1]=x,e[t+2]=y,e[t+3]=S;return}if(m!==S||u!==p||d!==x||h!==y){let v=1-c;const g=u*p+d*x+h*y+m*S,P=g>=0?1:-1,w=1-g*g;if(w>Number.EPSILON){const z=Math.sqrt(w),L=Math.atan2(z,g*P);v=Math.sin(v*L)/z,c=Math.sin(c*L)/z}const C=c*P;if(u=u*v+p*C,d=d*v+x*C,h=h*v+y*C,m=m*v+S*C,v===1-c){const z=1/Math.sqrt(u*u+d*d+h*h+m*m);u*=z,d*=z,h*=z,m*=z}}e[t]=u,e[t+1]=d,e[t+2]=h,e[t+3]=m}static multiplyQuaternionsFlat(e,t,i,r,s,l){const c=i[r],u=i[r+1],d=i[r+2],h=i[r+3],m=s[l],p=s[l+1],x=s[l+2],y=s[l+3];return e[t]=c*y+h*m+u*x-d*p,e[t+1]=u*y+h*p+d*m-c*x,e[t+2]=d*y+h*x+c*p-u*m,e[t+3]=h*y-c*m-u*p-d*x,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,i,r){return this._x=e,this._y=t,this._z=i,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){const i=e._x,r=e._y,s=e._z,l=e._order,c=Math.cos,u=Math.sin,d=c(i/2),h=c(r/2),m=c(s/2),p=u(i/2),x=u(r/2),y=u(s/2);switch(l){case"XYZ":this._x=p*h*m+d*x*y,this._y=d*x*m-p*h*y,this._z=d*h*y+p*x*m,this._w=d*h*m-p*x*y;break;case"YXZ":this._x=p*h*m+d*x*y,this._y=d*x*m-p*h*y,this._z=d*h*y-p*x*m,this._w=d*h*m+p*x*y;break;case"ZXY":this._x=p*h*m-d*x*y,this._y=d*x*m+p*h*y,this._z=d*h*y+p*x*m,this._w=d*h*m-p*x*y;break;case"ZYX":this._x=p*h*m-d*x*y,this._y=d*x*m+p*h*y,this._z=d*h*y-p*x*m,this._w=d*h*m+p*x*y;break;case"YZX":this._x=p*h*m+d*x*y,this._y=d*x*m+p*h*y,this._z=d*h*y-p*x*m,this._w=d*h*m-p*x*y;break;case"XZY":this._x=p*h*m-d*x*y,this._y=d*x*m-p*h*y,this._z=d*h*y+p*x*m,this._w=d*h*m+p*x*y;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+l)}return t===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const i=t/2,r=Math.sin(i);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,i=t[0],r=t[4],s=t[8],l=t[1],c=t[5],u=t[9],d=t[2],h=t[6],m=t[10],p=i+c+m;if(p>0){const x=.5/Math.sqrt(p+1);this._w=.25/x,this._x=(h-u)*x,this._y=(s-d)*x,this._z=(l-r)*x}else if(i>c&&i>m){const x=2*Math.sqrt(1+i-c-m);this._w=(h-u)/x,this._x=.25*x,this._y=(r+l)/x,this._z=(s+d)/x}else if(c>m){const x=2*Math.sqrt(1+c-i-m);this._w=(s-d)/x,this._x=(r+l)/x,this._y=.25*x,this._z=(u+h)/x}else{const x=2*Math.sqrt(1+m-i-c);this._w=(l-r)/x,this._x=(s+d)/x,this._y=(u+h)/x,this._z=.25*x}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let i=e.dot(t)+1;return i<Number.EPSILON?(i=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=i):(this._x=0,this._y=-e.z,this._z=e.y,this._w=i)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=i),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Bi(this.dot(e),-1,1)))}rotateTowards(e,t){const i=this.angleTo(e);if(i===0)return this;const r=Math.min(1,t/i);return this.slerp(e,r),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const i=e._x,r=e._y,s=e._z,l=e._w,c=t._x,u=t._y,d=t._z,h=t._w;return this._x=i*h+l*c+r*d-s*u,this._y=r*h+l*u+s*c-i*d,this._z=s*h+l*d+i*u-r*c,this._w=l*h-i*c-r*u-s*d,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const i=this._x,r=this._y,s=this._z,l=this._w;let c=l*e._w+i*e._x+r*e._y+s*e._z;if(c<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,c=-c):this.copy(e),c>=1)return this._w=l,this._x=i,this._y=r,this._z=s,this;const u=1-c*c;if(u<=Number.EPSILON){const x=1-t;return this._w=x*l+t*this._w,this._x=x*i+t*this._x,this._y=x*r+t*this._y,this._z=x*s+t*this._z,this.normalize(),this}const d=Math.sqrt(u),h=Math.atan2(d,c),m=Math.sin((1-t)*h)/d,p=Math.sin(t*h)/d;return this._w=l*m+this._w*p,this._x=i*m+this._x*p,this._y=r*m+this._y*p,this._z=s*m+this._z*p,this._onChangeCallback(),this}slerpQuaternions(e,t,i){return this.copy(e).slerp(t,i)}random(){const e=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),i=Math.random(),r=Math.sqrt(1-i),s=Math.sqrt(i);return this.set(r*Math.sin(e),r*Math.cos(e),s*Math.sin(t),s*Math.cos(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}},Ee=class b4{constructor(e=0,t=0,i=0){b4.prototype.isVector3=!0,this.x=e,this.y=t,this.z=i}set(e,t,i){return i===void 0&&(i=this.z),this.x=e,this.y=t,this.z=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(yw.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(yw.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,i=this.y,r=this.z,s=e.elements;return this.x=s[0]*t+s[3]*i+s[6]*r,this.y=s[1]*t+s[4]*i+s[7]*r,this.z=s[2]*t+s[5]*i+s[8]*r,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,i=this.y,r=this.z,s=e.elements,l=1/(s[3]*t+s[7]*i+s[11]*r+s[15]);return this.x=(s[0]*t+s[4]*i+s[8]*r+s[12])*l,this.y=(s[1]*t+s[5]*i+s[9]*r+s[13])*l,this.z=(s[2]*t+s[6]*i+s[10]*r+s[14])*l,this}applyQuaternion(e){const t=this.x,i=this.y,r=this.z,s=e.x,l=e.y,c=e.z,u=e.w,d=2*(l*r-c*i),h=2*(c*t-s*r),m=2*(s*i-l*t);return this.x=t+u*d+l*m-c*h,this.y=i+u*h+c*d-s*m,this.z=r+u*m+s*h-l*d,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,i=this.y,r=this.z,s=e.elements;return this.x=s[0]*t+s[4]*i+s[8]*r,this.y=s[1]*t+s[5]*i+s[9]*r,this.z=s[2]*t+s[6]*i+s[10]*r,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const i=e.x,r=e.y,s=e.z,l=t.x,c=t.y,u=t.z;return this.x=r*u-s*c,this.y=s*l-i*u,this.z=i*c-r*l,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const i=e.dot(this)/t;return this.copy(e).multiplyScalar(i)}projectOnPlane(e){return Pv.copy(this).projectOnVector(e),this.sub(Pv)}reflect(e){return this.sub(Pv.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const i=this.dot(e)/t;return Math.acos(Bi(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y,r=this.z-e.z;return t*t+i*i+r*r}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,i){const r=Math.sin(t)*e;return this.x=r*Math.sin(i),this.y=Math.cos(t)*e,this.z=r*Math.cos(i),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,i){return this.x=e*Math.sin(t),this.y=i,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),i=this.setFromMatrixColumn(e,1).length(),r=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=i,this.z=r,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=Math.random()*Math.PI*2,t=Math.random()*2-1,i=Math.sqrt(1-t*t);return this.x=i*Math.cos(e),this.y=t,this.z=i*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}};const Pv=new Ee,yw=new cf;class Yd{constructor(e=new Ee(1/0,1/0,1/0),t=new Ee(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t+=3)this.expandByPoint(qr.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,i=e.count;t<i;t++)this.expandByPoint(qr.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const i=qr.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const i=e.geometry;if(i!==void 0){const s=i.getAttribute("position");if(t===!0&&s!==void 0&&e.isInstancedMesh!==!0)for(let l=0,c=s.count;l<c;l++)e.isMesh===!0?e.getVertexPosition(l,qr):qr.fromBufferAttribute(s,l),qr.applyMatrix4(e.matrixWorld),this.expandByPoint(qr);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),Op.copy(e.boundingBox)):(i.boundingBox===null&&i.computeBoundingBox(),Op.copy(i.boundingBox)),Op.applyMatrix4(e.matrixWorld),this.union(Op)}const r=e.children;for(let s=0,l=r.length;s<l;s++)this.expandByObject(r[s],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,qr),qr.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,i;return e.normal.x>0?(t=e.normal.x*this.min.x,i=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,i=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,i+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,i+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,i+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,i+=e.normal.z*this.min.z),t<=-e.constant&&i>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(hd),Fp.subVectors(this.max,hd),Vc.subVectors(e.a,hd),Gc.subVectors(e.b,hd),Wc.subVectors(e.c,hd),Ya.subVectors(Gc,Vc),Ka.subVectors(Wc,Gc),il.subVectors(Vc,Wc);let t=[0,-Ya.z,Ya.y,0,-Ka.z,Ka.y,0,-il.z,il.y,Ya.z,0,-Ya.x,Ka.z,0,-Ka.x,il.z,0,-il.x,-Ya.y,Ya.x,0,-Ka.y,Ka.x,0,-il.y,il.x,0];return!Lv(t,Vc,Gc,Wc,Fp)||(t=[1,0,0,0,1,0,0,0,1],!Lv(t,Vc,Gc,Wc,Fp))?!1:(kp.crossVectors(Ya,Ka),t=[kp.x,kp.y,kp.z],Lv(t,Vc,Gc,Wc,Fp))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,qr).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(qr).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Ys[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Ys[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Ys[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Ys[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Ys[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Ys[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Ys[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Ys[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Ys),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Ys=[new Ee,new Ee,new Ee,new Ee,new Ee,new Ee,new Ee,new Ee],qr=new Ee,Op=new Yd,Vc=new Ee,Gc=new Ee,Wc=new Ee,Ya=new Ee,Ka=new Ee,il=new Ee,hd=new Ee,Fp=new Ee,kp=new Ee,rl=new Ee;function Lv(n,e,t,i,r){for(let s=0,l=n.length-3;s<=l;s+=3){rl.fromArray(n,s);const c=r.x*Math.abs(rl.x)+r.y*Math.abs(rl.y)+r.z*Math.abs(rl.z),u=e.dot(rl),d=t.dot(rl),h=i.dot(rl);if(Math.max(-Math.max(u,d,h),Math.min(u,d,h))>c)return!1}return!0}const Vk=new Yd,pd=new Ee,Iv=new Ee;class S0{constructor(e=new Ee,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const i=this.center;t!==void 0?i.copy(t):Vk.setFromPoints(e).getCenter(i);let r=0;for(let s=0,l=e.length;s<l;s++)r=Math.max(r,i.distanceToSquared(e[s]));return this.radius=Math.sqrt(r),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const i=this.center.distanceToSquared(e);return t.copy(e),i>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;pd.subVectors(e,this.center);const t=pd.lengthSq();if(t>this.radius*this.radius){const i=Math.sqrt(t),r=(i-this.radius)*.5;this.center.addScaledVector(pd,r/i),this.radius+=r}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(Iv.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(pd.copy(e.center).add(Iv)),this.expandByPoint(pd.copy(e.center).sub(Iv))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const Ks=new Ee,Dv=new Ee,zp=new Ee,Za=new Ee,Nv=new Ee,Bp=new Ee,Uv=new Ee;class Wx{constructor(e=new Ee,t=new Ee(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Ks)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const i=t.dot(this.direction);return i<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,i)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Ks.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Ks.copy(this.origin).addScaledVector(this.direction,t),Ks.distanceToSquared(e))}distanceSqToSegment(e,t,i,r){Dv.copy(e).add(t).multiplyScalar(.5),zp.copy(t).sub(e).normalize(),Za.copy(this.origin).sub(Dv);const s=e.distanceTo(t)*.5,l=-this.direction.dot(zp),c=Za.dot(this.direction),u=-Za.dot(zp),d=Za.lengthSq(),h=Math.abs(1-l*l);let m,p,x,y;if(h>0)if(m=l*u-c,p=l*c-u,y=s*h,m>=0)if(p>=-y)if(p<=y){const S=1/h;m*=S,p*=S,x=m*(m+l*p+2*c)+p*(l*m+p+2*u)+d}else p=s,m=Math.max(0,-(l*p+c)),x=-m*m+p*(p+2*u)+d;else p=-s,m=Math.max(0,-(l*p+c)),x=-m*m+p*(p+2*u)+d;else p<=-y?(m=Math.max(0,-(-l*s+c)),p=m>0?-s:Math.min(Math.max(-s,-u),s),x=-m*m+p*(p+2*u)+d):p<=y?(m=0,p=Math.min(Math.max(-s,-u),s),x=p*(p+2*u)+d):(m=Math.max(0,-(l*s+c)),p=m>0?s:Math.min(Math.max(-s,-u),s),x=-m*m+p*(p+2*u)+d);else p=l>0?-s:s,m=Math.max(0,-(l*p+c)),x=-m*m+p*(p+2*u)+d;return i&&i.copy(this.origin).addScaledVector(this.direction,m),r&&r.copy(Dv).addScaledVector(zp,p),x}intersectSphere(e,t){Ks.subVectors(e.center,this.origin);const i=Ks.dot(this.direction),r=Ks.dot(Ks)-i*i,s=e.radius*e.radius;if(r>s)return null;const l=Math.sqrt(s-r),c=i-l,u=i+l;return u<0?null:c<0?this.at(u,t):this.at(c,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const i=-(this.origin.dot(e.normal)+e.constant)/t;return i>=0?i:null}intersectPlane(e,t){const i=this.distanceToPlane(e);return i===null?null:this.at(i,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let i,r,s,l,c,u;const d=1/this.direction.x,h=1/this.direction.y,m=1/this.direction.z,p=this.origin;return d>=0?(i=(e.min.x-p.x)*d,r=(e.max.x-p.x)*d):(i=(e.max.x-p.x)*d,r=(e.min.x-p.x)*d),h>=0?(s=(e.min.y-p.y)*h,l=(e.max.y-p.y)*h):(s=(e.max.y-p.y)*h,l=(e.min.y-p.y)*h),i>l||s>r||((s>i||isNaN(i))&&(i=s),(l<r||isNaN(r))&&(r=l),m>=0?(c=(e.min.z-p.z)*m,u=(e.max.z-p.z)*m):(c=(e.max.z-p.z)*m,u=(e.min.z-p.z)*m),i>u||c>r)||((c>i||i!==i)&&(i=c),(u<r||r!==r)&&(r=u),r<0)?null:this.at(i>=0?i:r,t)}intersectsBox(e){return this.intersectBox(e,Ks)!==null}intersectTriangle(e,t,i,r,s){Nv.subVectors(t,e),Bp.subVectors(i,e),Uv.crossVectors(Nv,Bp);let l=this.direction.dot(Uv),c;if(l>0){if(r)return null;c=1}else if(l<0)c=-1,l=-l;else return null;Za.subVectors(this.origin,e);const u=c*this.direction.dot(Bp.crossVectors(Za,Bp));if(u<0)return null;const d=c*this.direction.dot(Nv.cross(Za));if(d<0||u+d>l)return null;const h=-c*Za.dot(Uv);return h<0?null:this.at(h/l,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class Ln{constructor(e,t,i,r,s,l,c,u,d,h,m,p,x,y,S,v){Ln.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,i,r,s,l,c,u,d,h,m,p,x,y,S,v)}set(e,t,i,r,s,l,c,u,d,h,m,p,x,y,S,v){const g=this.elements;return g[0]=e,g[4]=t,g[8]=i,g[12]=r,g[1]=s,g[5]=l,g[9]=c,g[13]=u,g[2]=d,g[6]=h,g[10]=m,g[14]=p,g[3]=x,g[7]=y,g[11]=S,g[15]=v,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new Ln().fromArray(this.elements)}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],t[9]=i[9],t[10]=i[10],t[11]=i[11],t[12]=i[12],t[13]=i[13],t[14]=i[14],t[15]=i[15],this}copyPosition(e){const t=this.elements,i=e.elements;return t[12]=i[12],t[13]=i[13],t[14]=i[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,i){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(e,t,i){return this.set(e.x,t.x,i.x,0,e.y,t.y,i.y,0,e.z,t.z,i.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,i=e.elements,r=1/$c.setFromMatrixColumn(e,0).length(),s=1/$c.setFromMatrixColumn(e,1).length(),l=1/$c.setFromMatrixColumn(e,2).length();return t[0]=i[0]*r,t[1]=i[1]*r,t[2]=i[2]*r,t[3]=0,t[4]=i[4]*s,t[5]=i[5]*s,t[6]=i[6]*s,t[7]=0,t[8]=i[8]*l,t[9]=i[9]*l,t[10]=i[10]*l,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,i=e.x,r=e.y,s=e.z,l=Math.cos(i),c=Math.sin(i),u=Math.cos(r),d=Math.sin(r),h=Math.cos(s),m=Math.sin(s);if(e.order==="XYZ"){const p=l*h,x=l*m,y=c*h,S=c*m;t[0]=u*h,t[4]=-u*m,t[8]=d,t[1]=x+y*d,t[5]=p-S*d,t[9]=-c*u,t[2]=S-p*d,t[6]=y+x*d,t[10]=l*u}else if(e.order==="YXZ"){const p=u*h,x=u*m,y=d*h,S=d*m;t[0]=p+S*c,t[4]=y*c-x,t[8]=l*d,t[1]=l*m,t[5]=l*h,t[9]=-c,t[2]=x*c-y,t[6]=S+p*c,t[10]=l*u}else if(e.order==="ZXY"){const p=u*h,x=u*m,y=d*h,S=d*m;t[0]=p-S*c,t[4]=-l*m,t[8]=y+x*c,t[1]=x+y*c,t[5]=l*h,t[9]=S-p*c,t[2]=-l*d,t[6]=c,t[10]=l*u}else if(e.order==="ZYX"){const p=l*h,x=l*m,y=c*h,S=c*m;t[0]=u*h,t[4]=y*d-x,t[8]=p*d+S,t[1]=u*m,t[5]=S*d+p,t[9]=x*d-y,t[2]=-d,t[6]=c*u,t[10]=l*u}else if(e.order==="YZX"){const p=l*u,x=l*d,y=c*u,S=c*d;t[0]=u*h,t[4]=S-p*m,t[8]=y*m+x,t[1]=m,t[5]=l*h,t[9]=-c*h,t[2]=-d*h,t[6]=x*m+y,t[10]=p-S*m}else if(e.order==="XZY"){const p=l*u,x=l*d,y=c*u,S=c*d;t[0]=u*h,t[4]=-m,t[8]=d*h,t[1]=p*m+S,t[5]=l*h,t[9]=x*m-y,t[2]=y*m-x,t[6]=c*h,t[10]=S*m+p}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(Gk,e,Wk)}lookAt(e,t,i){const r=this.elements;return ir.subVectors(e,t),ir.lengthSq()===0&&(ir.z=1),ir.normalize(),Qa.crossVectors(i,ir),Qa.lengthSq()===0&&(Math.abs(i.z)===1?ir.x+=1e-4:ir.z+=1e-4,ir.normalize(),Qa.crossVectors(i,ir)),Qa.normalize(),Hp.crossVectors(ir,Qa),r[0]=Qa.x,r[4]=Hp.x,r[8]=ir.x,r[1]=Qa.y,r[5]=Hp.y,r[9]=ir.y,r[2]=Qa.z,r[6]=Hp.z,r[10]=ir.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,r=t.elements,s=this.elements,l=i[0],c=i[4],u=i[8],d=i[12],h=i[1],m=i[5],p=i[9],x=i[13],y=i[2],S=i[6],v=i[10],g=i[14],P=i[3],w=i[7],C=i[11],z=i[15],L=r[0],D=r[4],V=r[8],R=r[12],T=r[1],O=r[5],Z=r[9],W=r[13],K=r[2],ne=r[6],Q=r[10],se=r[14],G=r[3],de=r[7],le=r[11],X=r[15];return s[0]=l*L+c*T+u*K+d*G,s[4]=l*D+c*O+u*ne+d*de,s[8]=l*V+c*Z+u*Q+d*le,s[12]=l*R+c*W+u*se+d*X,s[1]=h*L+m*T+p*K+x*G,s[5]=h*D+m*O+p*ne+x*de,s[9]=h*V+m*Z+p*Q+x*le,s[13]=h*R+m*W+p*se+x*X,s[2]=y*L+S*T+v*K+g*G,s[6]=y*D+S*O+v*ne+g*de,s[10]=y*V+S*Z+v*Q+g*le,s[14]=y*R+S*W+v*se+g*X,s[3]=P*L+w*T+C*K+z*G,s[7]=P*D+w*O+C*ne+z*de,s[11]=P*V+w*Z+C*Q+z*le,s[15]=P*R+w*W+C*se+z*X,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[4],r=e[8],s=e[12],l=e[1],c=e[5],u=e[9],d=e[13],h=e[2],m=e[6],p=e[10],x=e[14],y=e[3],S=e[7],v=e[11],g=e[15];return y*(+s*u*m-r*d*m-s*c*p+i*d*p+r*c*x-i*u*x)+S*(+t*u*x-t*d*p+s*l*p-r*l*x+r*d*h-s*u*h)+v*(+t*d*m-t*c*x-s*l*m+i*l*x+s*c*h-i*d*h)+g*(-r*c*h-t*u*m+t*c*p+r*l*m-i*l*p+i*u*h)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,i){const r=this.elements;return e.isVector3?(r[12]=e.x,r[13]=e.y,r[14]=e.z):(r[12]=e,r[13]=t,r[14]=i),this}invert(){const e=this.elements,t=e[0],i=e[1],r=e[2],s=e[3],l=e[4],c=e[5],u=e[6],d=e[7],h=e[8],m=e[9],p=e[10],x=e[11],y=e[12],S=e[13],v=e[14],g=e[15],P=m*v*d-S*p*d+S*u*x-c*v*x-m*u*g+c*p*g,w=y*p*d-h*v*d-y*u*x+l*v*x+h*u*g-l*p*g,C=h*S*d-y*m*d+y*c*x-l*S*x-h*c*g+l*m*g,z=y*m*u-h*S*u-y*c*p+l*S*p+h*c*v-l*m*v,L=t*P+i*w+r*C+s*z;if(L===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const D=1/L;return e[0]=P*D,e[1]=(S*p*s-m*v*s-S*r*x+i*v*x+m*r*g-i*p*g)*D,e[2]=(c*v*s-S*u*s+S*r*d-i*v*d-c*r*g+i*u*g)*D,e[3]=(m*u*s-c*p*s-m*r*d+i*p*d+c*r*x-i*u*x)*D,e[4]=w*D,e[5]=(h*v*s-y*p*s+y*r*x-t*v*x-h*r*g+t*p*g)*D,e[6]=(y*u*s-l*v*s-y*r*d+t*v*d+l*r*g-t*u*g)*D,e[7]=(l*p*s-h*u*s+h*r*d-t*p*d-l*r*x+t*u*x)*D,e[8]=C*D,e[9]=(y*m*s-h*S*s-y*i*x+t*S*x+h*i*g-t*m*g)*D,e[10]=(l*S*s-y*c*s+y*i*d-t*S*d-l*i*g+t*c*g)*D,e[11]=(h*c*s-l*m*s-h*i*d+t*m*d+l*i*x-t*c*x)*D,e[12]=z*D,e[13]=(h*S*r-y*m*r+y*i*p-t*S*p-h*i*v+t*m*v)*D,e[14]=(y*c*r-l*S*r-y*i*u+t*S*u+l*i*v-t*c*v)*D,e[15]=(l*m*r-h*c*r+h*i*u-t*m*u-l*i*p+t*c*p)*D,this}scale(e){const t=this.elements,i=e.x,r=e.y,s=e.z;return t[0]*=i,t[4]*=r,t[8]*=s,t[1]*=i,t[5]*=r,t[9]*=s,t[2]*=i,t[6]*=r,t[10]*=s,t[3]*=i,t[7]*=r,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],i=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],r=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,i,r))}makeTranslation(e,t,i){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,i,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),i=Math.sin(e);return this.set(1,0,0,0,0,t,-i,0,0,i,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,0,i,0,0,1,0,0,-i,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,0,i,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const i=Math.cos(t),r=Math.sin(t),s=1-i,l=e.x,c=e.y,u=e.z,d=s*l,h=s*c;return this.set(d*l+i,d*c-r*u,d*u+r*c,0,d*c+r*u,h*c+i,h*u-r*l,0,d*u-r*c,h*u+r*l,s*u*u+i,0,0,0,0,1),this}makeScale(e,t,i){return this.set(e,0,0,0,0,t,0,0,0,0,i,0,0,0,0,1),this}makeShear(e,t,i,r,s,l){return this.set(1,i,s,0,e,1,l,0,t,r,1,0,0,0,0,1),this}compose(e,t,i){const r=this.elements,s=t._x,l=t._y,c=t._z,u=t._w,d=s+s,h=l+l,m=c+c,p=s*d,x=s*h,y=s*m,S=l*h,v=l*m,g=c*m,P=u*d,w=u*h,C=u*m,z=i.x,L=i.y,D=i.z;return r[0]=(1-(S+g))*z,r[1]=(x+C)*z,r[2]=(y-w)*z,r[3]=0,r[4]=(x-C)*L,r[5]=(1-(p+g))*L,r[6]=(v+P)*L,r[7]=0,r[8]=(y+w)*D,r[9]=(v-P)*D,r[10]=(1-(p+S))*D,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,this}decompose(e,t,i){const r=this.elements;let s=$c.set(r[0],r[1],r[2]).length();const l=$c.set(r[4],r[5],r[6]).length(),c=$c.set(r[8],r[9],r[10]).length();this.determinant()<0&&(s=-s),e.x=r[12],e.y=r[13],e.z=r[14],jr.copy(this);const d=1/s,h=1/l,m=1/c;return jr.elements[0]*=d,jr.elements[1]*=d,jr.elements[2]*=d,jr.elements[4]*=h,jr.elements[5]*=h,jr.elements[6]*=h,jr.elements[8]*=m,jr.elements[9]*=m,jr.elements[10]*=m,t.setFromRotationMatrix(jr),i.x=s,i.y=l,i.z=c,this}makePerspective(e,t,i,r,s,l,c=la){const u=this.elements,d=2*s/(t-e),h=2*s/(i-r),m=(t+e)/(t-e),p=(i+r)/(i-r);let x,y;if(c===la)x=-(l+s)/(l-s),y=-2*l*s/(l-s);else if(c===$m)x=-l/(l-s),y=-l*s/(l-s);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+c);return u[0]=d,u[4]=0,u[8]=m,u[12]=0,u[1]=0,u[5]=h,u[9]=p,u[13]=0,u[2]=0,u[6]=0,u[10]=x,u[14]=y,u[3]=0,u[7]=0,u[11]=-1,u[15]=0,this}makeOrthographic(e,t,i,r,s,l,c=la){const u=this.elements,d=1/(t-e),h=1/(i-r),m=1/(l-s),p=(t+e)*d,x=(i+r)*h;let y,S;if(c===la)y=(l+s)*m,S=-2*m;else if(c===$m)y=s*m,S=-1*m;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+c);return u[0]=2*d,u[4]=0,u[8]=0,u[12]=-p,u[1]=0,u[5]=2*h,u[9]=0,u[13]=-x,u[2]=0,u[6]=0,u[10]=S,u[14]=-y,u[3]=0,u[7]=0,u[11]=0,u[15]=1,this}equals(e){const t=this.elements,i=e.elements;for(let r=0;r<16;r++)if(t[r]!==i[r])return!1;return!0}fromArray(e,t=0){for(let i=0;i<16;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e[t+9]=i[9],e[t+10]=i[10],e[t+11]=i[11],e[t+12]=i[12],e[t+13]=i[13],e[t+14]=i[14],e[t+15]=i[15],e}}const $c=new Ee,jr=new Ln,Gk=new Ee(0,0,0),Wk=new Ee(1,1,1),Qa=new Ee,Hp=new Ee,ir=new Ee,Sw=new Ln,Mw=new cf;class ha{constructor(e=0,t=0,i=0,r=ha.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=i,this._order=r}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,i,r=this._order){return this._x=e,this._y=t,this._z=i,this._order=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,i=!0){const r=e.elements,s=r[0],l=r[4],c=r[8],u=r[1],d=r[5],h=r[9],m=r[2],p=r[6],x=r[10];switch(t){case"XYZ":this._y=Math.asin(Bi(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-h,x),this._z=Math.atan2(-l,s)):(this._x=Math.atan2(p,d),this._z=0);break;case"YXZ":this._x=Math.asin(-Bi(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(c,x),this._z=Math.atan2(u,d)):(this._y=Math.atan2(-m,s),this._z=0);break;case"ZXY":this._x=Math.asin(Bi(p,-1,1)),Math.abs(p)<.9999999?(this._y=Math.atan2(-m,x),this._z=Math.atan2(-l,d)):(this._y=0,this._z=Math.atan2(u,s));break;case"ZYX":this._y=Math.asin(-Bi(m,-1,1)),Math.abs(m)<.9999999?(this._x=Math.atan2(p,x),this._z=Math.atan2(u,s)):(this._x=0,this._z=Math.atan2(-l,d));break;case"YZX":this._z=Math.asin(Bi(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(-h,d),this._y=Math.atan2(-m,s)):(this._x=0,this._y=Math.atan2(c,x));break;case"XZY":this._z=Math.asin(-Bi(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(p,d),this._y=Math.atan2(c,s)):(this._x=Math.atan2(-h,x),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,i===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,i){return Sw.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Sw,t,i)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return Mw.setFromEuler(this),this.setFromQuaternion(Mw,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}ha.DEFAULT_ORDER="XYZ";class $x{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let $k=0;const Ew=new Ee,Xc=new cf,Zs=new Ln,Vp=new Ee,md=new Ee,Xk=new Ee,qk=new cf,ww=new Ee(1,0,0),Tw=new Ee(0,1,0),Aw=new Ee(0,0,1),bw={type:"added"},jk={type:"removed"},qc={type:"childadded",child:null},Ov={type:"childremoved",child:null};class Ci extends lf{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:$k++}),this.uuid=jd(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Ci.DEFAULT_UP.clone();const e=new Ee,t=new ha,i=new cf,r=new Ee(1,1,1);function s(){i.setFromEuler(t,!1)}function l(){t.setFromQuaternion(i,void 0,!1)}t._onChange(s),i._onChange(l),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new Ln},normalMatrix:{value:new Dt}}),this.matrix=new Ln,this.matrixWorld=new Ln,this.matrixAutoUpdate=Ci.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=Ci.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new $x,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return Xc.setFromAxisAngle(e,t),this.quaternion.multiply(Xc),this}rotateOnWorldAxis(e,t){return Xc.setFromAxisAngle(e,t),this.quaternion.premultiply(Xc),this}rotateX(e){return this.rotateOnAxis(ww,e)}rotateY(e){return this.rotateOnAxis(Tw,e)}rotateZ(e){return this.rotateOnAxis(Aw,e)}translateOnAxis(e,t){return Ew.copy(e).applyQuaternion(this.quaternion),this.position.add(Ew.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(ww,e)}translateY(e){return this.translateOnAxis(Tw,e)}translateZ(e){return this.translateOnAxis(Aw,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(Zs.copy(this.matrixWorld).invert())}lookAt(e,t,i){e.isVector3?Vp.copy(e):Vp.set(e,t,i);const r=this.parent;this.updateWorldMatrix(!0,!1),md.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Zs.lookAt(md,Vp,this.up):Zs.lookAt(Vp,md,this.up),this.quaternion.setFromRotationMatrix(Zs),r&&(Zs.extractRotation(r.matrixWorld),Xc.setFromRotationMatrix(Zs),this.quaternion.premultiply(Xc.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent(bw),qc.child=e,this.dispatchEvent(qc),qc.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(jk),Ov.child=e,this.dispatchEvent(Ov),Ov.child=null),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),Zs.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Zs.multiply(e.parent.matrixWorld)),e.applyMatrix4(Zs),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent(bw),qc.child=e,this.dispatchEvent(qc),qc.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let i=0,r=this.children.length;i<r;i++){const l=this.children[i].getObjectByProperty(e,t);if(l!==void 0)return l}}getObjectsByProperty(e,t,i=[]){this[e]===t&&i.push(this);const r=this.children;for(let s=0,l=r.length;s<l;s++)r[s].getObjectsByProperty(e,t,i);return i}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(md,e,Xk),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(md,qk,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let i=0,r=t.length;i<r;i++)t[i].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let i=0,r=t.length;i<r;i++)t[i].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let i=0,r=t.length;i<r;i++){const s=t[i];(s.matrixWorldAutoUpdate===!0||e===!0)&&s.updateMatrixWorld(e)}}updateWorldMatrix(e,t){const i=this.parent;if(e===!0&&i!==null&&i.matrixWorldAutoUpdate===!0&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const r=this.children;for(let s=0,l=r.length;s<l;s++){const c=r[s];c.matrixWorldAutoUpdate===!0&&c.updateWorldMatrix(!1,!0)}}}toJSON(e){const t=e===void 0||typeof e=="string",i={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const r={};r.uuid=this.uuid,r.type=this.type,this.name!==""&&(r.name=this.name),this.castShadow===!0&&(r.castShadow=!0),this.receiveShadow===!0&&(r.receiveShadow=!0),this.visible===!1&&(r.visible=!1),this.frustumCulled===!1&&(r.frustumCulled=!1),this.renderOrder!==0&&(r.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),r.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(r.matrixAutoUpdate=!1),this.isInstancedMesh&&(r.type="InstancedMesh",r.count=this.count,r.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(r.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(r.type="BatchedMesh",r.perObjectFrustumCulled=this.perObjectFrustumCulled,r.sortObjects=this.sortObjects,r.drawRanges=this._drawRanges,r.reservedRanges=this._reservedRanges,r.visibility=this._visibility,r.active=this._active,r.bounds=this._bounds.map(c=>({boxInitialized:c.boxInitialized,boxMin:c.box.min.toArray(),boxMax:c.box.max.toArray(),sphereInitialized:c.sphereInitialized,sphereRadius:c.sphere.radius,sphereCenter:c.sphere.center.toArray()})),r.maxGeometryCount=this._maxGeometryCount,r.maxVertexCount=this._maxVertexCount,r.maxIndexCount=this._maxIndexCount,r.geometryInitialized=this._geometryInitialized,r.geometryCount=this._geometryCount,r.matricesTexture=this._matricesTexture.toJSON(e),this._colorsTexture!==null&&(r.colorsTexture=this._colorsTexture.toJSON(e)),this.boundingSphere!==null&&(r.boundingSphere={center:r.boundingSphere.center.toArray(),radius:r.boundingSphere.radius}),this.boundingBox!==null&&(r.boundingBox={min:r.boundingBox.min.toArray(),max:r.boundingBox.max.toArray()}));function s(c,u){return c[u.uuid]===void 0&&(c[u.uuid]=u.toJSON(e)),u.uuid}if(this.isScene)this.background&&(this.background.isColor?r.background=this.background.toJSON():this.background.isTexture&&(r.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(r.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){r.geometry=s(e.geometries,this.geometry);const c=this.geometry.parameters;if(c!==void 0&&c.shapes!==void 0){const u=c.shapes;if(Array.isArray(u))for(let d=0,h=u.length;d<h;d++){const m=u[d];s(e.shapes,m)}else s(e.shapes,u)}}if(this.isSkinnedMesh&&(r.bindMode=this.bindMode,r.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),r.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const c=[];for(let u=0,d=this.material.length;u<d;u++)c.push(s(e.materials,this.material[u]));r.material=c}else r.material=s(e.materials,this.material);if(this.children.length>0){r.children=[];for(let c=0;c<this.children.length;c++)r.children.push(this.children[c].toJSON(e).object)}if(this.animations.length>0){r.animations=[];for(let c=0;c<this.animations.length;c++){const u=this.animations[c];r.animations.push(s(e.animations,u))}}if(t){const c=l(e.geometries),u=l(e.materials),d=l(e.textures),h=l(e.images),m=l(e.shapes),p=l(e.skeletons),x=l(e.animations),y=l(e.nodes);c.length>0&&(i.geometries=c),u.length>0&&(i.materials=u),d.length>0&&(i.textures=d),h.length>0&&(i.images=h),m.length>0&&(i.shapes=m),p.length>0&&(i.skeletons=p),x.length>0&&(i.animations=x),y.length>0&&(i.nodes=y)}return i.object=r,i;function l(c){const u=[];for(const d in c){const h=c[d];delete h.metadata,u.push(h)}return u}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let i=0;i<e.children.length;i++){const r=e.children[i];this.add(r.clone())}return this}}Ci.DEFAULT_UP=new Ee(0,1,0);Ci.DEFAULT_MATRIX_AUTO_UPDATE=!0;Ci.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const Yr=new Ee,Qs=new Ee,Fv=new Ee,Js=new Ee,jc=new Ee,Yc=new Ee,Rw=new Ee,kv=new Ee,zv=new Ee,Bv=new Ee;class ys{constructor(e=new Ee,t=new Ee,i=new Ee){this.a=e,this.b=t,this.c=i}static getNormal(e,t,i,r){r.subVectors(i,t),Yr.subVectors(e,t),r.cross(Yr);const s=r.lengthSq();return s>0?r.multiplyScalar(1/Math.sqrt(s)):r.set(0,0,0)}static getBarycoord(e,t,i,r,s){Yr.subVectors(r,t),Qs.subVectors(i,t),Fv.subVectors(e,t);const l=Yr.dot(Yr),c=Yr.dot(Qs),u=Yr.dot(Fv),d=Qs.dot(Qs),h=Qs.dot(Fv),m=l*d-c*c;if(m===0)return s.set(0,0,0),null;const p=1/m,x=(d*u-c*h)*p,y=(l*h-c*u)*p;return s.set(1-x-y,y,x)}static containsPoint(e,t,i,r){return this.getBarycoord(e,t,i,r,Js)===null?!1:Js.x>=0&&Js.y>=0&&Js.x+Js.y<=1}static getInterpolation(e,t,i,r,s,l,c,u){return this.getBarycoord(e,t,i,r,Js)===null?(u.x=0,u.y=0,"z"in u&&(u.z=0),"w"in u&&(u.w=0),null):(u.setScalar(0),u.addScaledVector(s,Js.x),u.addScaledVector(l,Js.y),u.addScaledVector(c,Js.z),u)}static isFrontFacing(e,t,i,r){return Yr.subVectors(i,t),Qs.subVectors(e,t),Yr.cross(Qs).dot(r)<0}set(e,t,i){return this.a.copy(e),this.b.copy(t),this.c.copy(i),this}setFromPointsAndIndices(e,t,i,r){return this.a.copy(e[t]),this.b.copy(e[i]),this.c.copy(e[r]),this}setFromAttributeAndIndices(e,t,i,r){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,i),this.c.fromBufferAttribute(e,r),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Yr.subVectors(this.c,this.b),Qs.subVectors(this.a,this.b),Yr.cross(Qs).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return ys.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return ys.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,i,r,s){return ys.getInterpolation(e,this.a,this.b,this.c,t,i,r,s)}containsPoint(e){return ys.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return ys.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const i=this.a,r=this.b,s=this.c;let l,c;jc.subVectors(r,i),Yc.subVectors(s,i),kv.subVectors(e,i);const u=jc.dot(kv),d=Yc.dot(kv);if(u<=0&&d<=0)return t.copy(i);zv.subVectors(e,r);const h=jc.dot(zv),m=Yc.dot(zv);if(h>=0&&m<=h)return t.copy(r);const p=u*m-h*d;if(p<=0&&u>=0&&h<=0)return l=u/(u-h),t.copy(i).addScaledVector(jc,l);Bv.subVectors(e,s);const x=jc.dot(Bv),y=Yc.dot(Bv);if(y>=0&&x<=y)return t.copy(s);const S=x*d-u*y;if(S<=0&&d>=0&&y<=0)return c=d/(d-y),t.copy(i).addScaledVector(Yc,c);const v=h*y-x*m;if(v<=0&&m-h>=0&&x-y>=0)return Rw.subVectors(s,r),c=(m-h)/(m-h+(x-y)),t.copy(r).addScaledVector(Rw,c);const g=1/(v+S+p);return l=S*g,c=p*g,t.copy(i).addScaledVector(jc,l).addScaledVector(Yc,c)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const R4={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Ja={h:0,s:0,l:0},Gp={h:0,s:0,l:0};function Hv(n,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?n+(e-n)*6*t:t<1/2?e:t<2/3?n+(e-n)*6*(2/3-t):n}class jt{constructor(e,t,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,i)}set(e,t,i){if(t===void 0&&i===void 0){const r=e;r&&r.isColor?this.copy(r):typeof r=="number"?this.setHex(r):typeof r=="string"&&this.setStyle(r)}else this.setRGB(e,t,i);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=ms){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,rn.toWorkingColorSpace(this,t),this}setRGB(e,t,i,r=rn.workingColorSpace){return this.r=e,this.g=t,this.b=i,rn.toWorkingColorSpace(this,r),this}setHSL(e,t,i,r=rn.workingColorSpace){if(e=Dk(e,1),t=Bi(t,0,1),i=Bi(i,0,1),t===0)this.r=this.g=this.b=i;else{const s=i<=.5?i*(1+t):i+t-i*t,l=2*i-s;this.r=Hv(l,s,e+1/3),this.g=Hv(l,s,e),this.b=Hv(l,s,e-1/3)}return rn.toWorkingColorSpace(this,r),this}setStyle(e,t=ms){function i(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let r;if(r=/^(\w+)\(([^\)]*)\)/.exec(e)){let s;const l=r[1],c=r[2];switch(l){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return i(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,t);if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return i(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,t);break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return i(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(r=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=r[1],l=s.length;if(l===3)return this.setRGB(parseInt(s.charAt(0),16)/15,parseInt(s.charAt(1),16)/15,parseInt(s.charAt(2),16)/15,t);if(l===6)return this.setHex(parseInt(s,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=ms){const i=R4[e.toLowerCase()];return i!==void 0?this.setHex(i,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Pu(e.r),this.g=Pu(e.g),this.b=Pu(e.b),this}copyLinearToSRGB(e){return this.r=Rv(e.r),this.g=Rv(e.g),this.b=Rv(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=ms){return rn.fromWorkingColorSpace(mi.copy(this),e),Math.round(Bi(mi.r*255,0,255))*65536+Math.round(Bi(mi.g*255,0,255))*256+Math.round(Bi(mi.b*255,0,255))}getHexString(e=ms){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=rn.workingColorSpace){rn.fromWorkingColorSpace(mi.copy(this),t);const i=mi.r,r=mi.g,s=mi.b,l=Math.max(i,r,s),c=Math.min(i,r,s);let u,d;const h=(c+l)/2;if(c===l)u=0,d=0;else{const m=l-c;switch(d=h<=.5?m/(l+c):m/(2-l-c),l){case i:u=(r-s)/m+(r<s?6:0);break;case r:u=(s-i)/m+2;break;case s:u=(i-r)/m+4;break}u/=6}return e.h=u,e.s=d,e.l=h,e}getRGB(e,t=rn.workingColorSpace){return rn.fromWorkingColorSpace(mi.copy(this),t),e.r=mi.r,e.g=mi.g,e.b=mi.b,e}getStyle(e=ms){rn.fromWorkingColorSpace(mi.copy(this),e);const t=mi.r,i=mi.g,r=mi.b;return e!==ms?`color(${e} ${t.toFixed(3)} ${i.toFixed(3)} ${r.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(i*255)},${Math.round(r*255)})`}offsetHSL(e,t,i){return this.getHSL(Ja),this.setHSL(Ja.h+e,Ja.s+t,Ja.l+i)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,i){return this.r=e.r+(t.r-e.r)*i,this.g=e.g+(t.g-e.g)*i,this.b=e.b+(t.b-e.b)*i,this}lerpHSL(e,t){this.getHSL(Ja),e.getHSL(Gp);const i=Av(Ja.h,Gp.h,t),r=Av(Ja.s,Gp.s,t),s=Av(Ja.l,Gp.l,t);return this.setHSL(i,r,s),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,i=this.g,r=this.b,s=e.elements;return this.r=s[0]*t+s[3]*i+s[6]*r,this.g=s[1]*t+s[4]*i+s[7]*r,this.b=s[2]*t+s[5]*i+s[8]*r,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const mi=new jt;jt.NAMES=R4;let Yk=0;class uf extends lf{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:Yk++}),this.uuid=jd(),this.name="",this.type="Material",this.blending=Ru,this.side=wo,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=G_,this.blendDst=W_,this.blendEquation=_l,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new jt(0,0,0),this.blendAlpha=0,this.depthFunc=Bm,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=pw,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Bc,this.stencilZFail=Bc,this.stencilZPass=Bc,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const i=e[t];if(i===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const r=this[t];if(r===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}r&&r.isColor?r.set(i):r&&r.isVector3&&i&&i.isVector3?r.copy(i):this[t]=i}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const i={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),this.roughness!==void 0&&(i.roughness=this.roughness),this.metalness!==void 0&&(i.metalness=this.metalness),this.sheen!==void 0&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(i.shininess=this.shininess),this.clearcoat!==void 0&&(i.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(i.dispersion=this.dispersion),this.iridescence!==void 0&&(i.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(i.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(i.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(i.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(i.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(e).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(e).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(e).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(e).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(e).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(i.combine=this.combine)),this.envMapRotation!==void 0&&(i.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(i.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(i.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(i.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(i.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(i.size=this.size),this.shadowSide!==null&&(i.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==Ru&&(i.blending=this.blending),this.side!==wo&&(i.side=this.side),this.vertexColors===!0&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),this.transparent===!0&&(i.transparent=!0),this.blendSrc!==G_&&(i.blendSrc=this.blendSrc),this.blendDst!==W_&&(i.blendDst=this.blendDst),this.blendEquation!==_l&&(i.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(i.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(i.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(i.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(i.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(i.blendAlpha=this.blendAlpha),this.depthFunc!==Bm&&(i.depthFunc=this.depthFunc),this.depthTest===!1&&(i.depthTest=this.depthTest),this.depthWrite===!1&&(i.depthWrite=this.depthWrite),this.colorWrite===!1&&(i.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(i.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==pw&&(i.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(i.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(i.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==Bc&&(i.stencilFail=this.stencilFail),this.stencilZFail!==Bc&&(i.stencilZFail=this.stencilZFail),this.stencilZPass!==Bc&&(i.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(i.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(i.rotation=this.rotation),this.polygonOffset===!0&&(i.polygonOffset=!0),this.polygonOffsetFactor!==0&&(i.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(i.linewidth=this.linewidth),this.dashSize!==void 0&&(i.dashSize=this.dashSize),this.gapSize!==void 0&&(i.gapSize=this.gapSize),this.scale!==void 0&&(i.scale=this.scale),this.dithering===!0&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),this.alphaHash===!0&&(i.alphaHash=!0),this.alphaToCoverage===!0&&(i.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(i.premultipliedAlpha=!0),this.forceSinglePass===!0&&(i.forceSinglePass=!0),this.wireframe===!0&&(i.wireframe=!0),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(i.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(i.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(i.flatShading=!0),this.visible===!1&&(i.visible=!1),this.toneMapped===!1&&(i.toneMapped=!1),this.fog===!1&&(i.fog=!1),Object.keys(this.userData).length>0&&(i.userData=this.userData);function r(s){const l=[];for(const c in s){const u=s[c];delete u.metadata,l.push(u)}return l}if(t){const s=r(e.textures),l=r(e.images);s.length>0&&(i.textures=s),l.length>0&&(i.images=l)}return i}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let i=null;if(t!==null){const r=t.length;i=new Array(r);for(let s=0;s!==r;++s)i[s]=t[s].clone()}return this.clippingPlanes=i,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}class C4 extends uf{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new jt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new ha,this.combine=d4,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const Fn=new Ee,Wp=new Zt;class Pr{constructor(e,t,i=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=i,this.usage=mw,this._updateRange={offset:0,count:-1},this.updateRanges=[],this.gpuType=fo,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}get updateRange(){return w4("THREE.BufferAttribute: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead."),this._updateRange}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,i){e*=this.itemSize,i*=t.itemSize;for(let r=0,s=this.itemSize;r<s;r++)this.array[e+r]=t.array[i+r];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,i=this.count;t<i;t++)Wp.fromBufferAttribute(this,t),Wp.applyMatrix3(e),this.setXY(t,Wp.x,Wp.y);else if(this.itemSize===3)for(let t=0,i=this.count;t<i;t++)Fn.fromBufferAttribute(this,t),Fn.applyMatrix3(e),this.setXYZ(t,Fn.x,Fn.y,Fn.z);return this}applyMatrix4(e){for(let t=0,i=this.count;t<i;t++)Fn.fromBufferAttribute(this,t),Fn.applyMatrix4(e),this.setXYZ(t,Fn.x,Fn.y,Fn.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)Fn.fromBufferAttribute(this,t),Fn.applyNormalMatrix(e),this.setXYZ(t,Fn.x,Fn.y,Fn.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)Fn.fromBufferAttribute(this,t),Fn.transformDirection(e),this.setXYZ(t,Fn.x,Fn.y,Fn.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let i=this.array[e*this.itemSize+t];return this.normalized&&(i=dd(i,this.array)),i}setComponent(e,t,i){return this.normalized&&(i=ki(i,this.array)),this.array[e*this.itemSize+t]=i,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=dd(t,this.array)),t}setX(e,t){return this.normalized&&(t=ki(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=dd(t,this.array)),t}setY(e,t){return this.normalized&&(t=ki(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=dd(t,this.array)),t}setZ(e,t){return this.normalized&&(t=ki(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=dd(t,this.array)),t}setW(e,t){return this.normalized&&(t=ki(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,i){return e*=this.itemSize,this.normalized&&(t=ki(t,this.array),i=ki(i,this.array)),this.array[e+0]=t,this.array[e+1]=i,this}setXYZ(e,t,i,r){return e*=this.itemSize,this.normalized&&(t=ki(t,this.array),i=ki(i,this.array),r=ki(r,this.array)),this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=r,this}setXYZW(e,t,i,r,s){return e*=this.itemSize,this.normalized&&(t=ki(t,this.array),i=ki(i,this.array),r=ki(r,this.array),s=ki(s,this.array)),this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=r,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==mw&&(e.usage=this.usage),e}}class P4 extends Pr{constructor(e,t,i){super(new Uint16Array(e),t,i)}}class L4 extends Pr{constructor(e,t,i){super(new Uint32Array(e),t,i)}}class rs extends Pr{constructor(e,t,i){super(new Float32Array(e),t,i)}}let Kk=0;const Sr=new Ln,Vv=new Ci,Kc=new Ee,rr=new Yd,gd=new Yd,Jn=new Ee;class Is extends lf{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:Kk++}),this.uuid=jd(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(E4(e)?L4:P4)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,i=0){this.groups.push({start:e,count:t,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const i=this.attributes.normal;if(i!==void 0){const s=new Dt().getNormalMatrix(e);i.applyNormalMatrix(s),i.needsUpdate=!0}const r=this.attributes.tangent;return r!==void 0&&(r.transformDirection(e),r.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return Sr.makeRotationFromQuaternion(e),this.applyMatrix4(Sr),this}rotateX(e){return Sr.makeRotationX(e),this.applyMatrix4(Sr),this}rotateY(e){return Sr.makeRotationY(e),this.applyMatrix4(Sr),this}rotateZ(e){return Sr.makeRotationZ(e),this.applyMatrix4(Sr),this}translate(e,t,i){return Sr.makeTranslation(e,t,i),this.applyMatrix4(Sr),this}scale(e,t,i){return Sr.makeScale(e,t,i),this.applyMatrix4(Sr),this}lookAt(e){return Vv.lookAt(e),Vv.updateMatrix(),this.applyMatrix4(Vv.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Kc).negate(),this.translate(Kc.x,Kc.y,Kc.z),this}setFromPoints(e){const t=[];for(let i=0,r=e.length;i<r;i++){const s=e[i];t.push(s.x,s.y,s.z||0)}return this.setAttribute("position",new rs(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Yd);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new Ee(-1/0,-1/0,-1/0),new Ee(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let i=0,r=t.length;i<r;i++){const s=t[i];rr.setFromBufferAttribute(s),this.morphTargetsRelative?(Jn.addVectors(this.boundingBox.min,rr.min),this.boundingBox.expandByPoint(Jn),Jn.addVectors(this.boundingBox.max,rr.max),this.boundingBox.expandByPoint(Jn)):(this.boundingBox.expandByPoint(rr.min),this.boundingBox.expandByPoint(rr.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new S0);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new Ee,1/0);return}if(e){const i=this.boundingSphere.center;if(rr.setFromBufferAttribute(e),t)for(let s=0,l=t.length;s<l;s++){const c=t[s];gd.setFromBufferAttribute(c),this.morphTargetsRelative?(Jn.addVectors(rr.min,gd.min),rr.expandByPoint(Jn),Jn.addVectors(rr.max,gd.max),rr.expandByPoint(Jn)):(rr.expandByPoint(gd.min),rr.expandByPoint(gd.max))}rr.getCenter(i);let r=0;for(let s=0,l=e.count;s<l;s++)Jn.fromBufferAttribute(e,s),r=Math.max(r,i.distanceToSquared(Jn));if(t)for(let s=0,l=t.length;s<l;s++){const c=t[s],u=this.morphTargetsRelative;for(let d=0,h=c.count;d<h;d++)Jn.fromBufferAttribute(c,d),u&&(Kc.fromBufferAttribute(e,d),Jn.add(Kc)),r=Math.max(r,i.distanceToSquared(Jn))}this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const i=t.position,r=t.normal,s=t.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Pr(new Float32Array(4*i.count),4));const l=this.getAttribute("tangent"),c=[],u=[];for(let V=0;V<i.count;V++)c[V]=new Ee,u[V]=new Ee;const d=new Ee,h=new Ee,m=new Ee,p=new Zt,x=new Zt,y=new Zt,S=new Ee,v=new Ee;function g(V,R,T){d.fromBufferAttribute(i,V),h.fromBufferAttribute(i,R),m.fromBufferAttribute(i,T),p.fromBufferAttribute(s,V),x.fromBufferAttribute(s,R),y.fromBufferAttribute(s,T),h.sub(d),m.sub(d),x.sub(p),y.sub(p);const O=1/(x.x*y.y-y.x*x.y);isFinite(O)&&(S.copy(h).multiplyScalar(y.y).addScaledVector(m,-x.y).multiplyScalar(O),v.copy(m).multiplyScalar(x.x).addScaledVector(h,-y.x).multiplyScalar(O),c[V].add(S),c[R].add(S),c[T].add(S),u[V].add(v),u[R].add(v),u[T].add(v))}let P=this.groups;P.length===0&&(P=[{start:0,count:e.count}]);for(let V=0,R=P.length;V<R;++V){const T=P[V],O=T.start,Z=T.count;for(let W=O,K=O+Z;W<K;W+=3)g(e.getX(W+0),e.getX(W+1),e.getX(W+2))}const w=new Ee,C=new Ee,z=new Ee,L=new Ee;function D(V){z.fromBufferAttribute(r,V),L.copy(z);const R=c[V];w.copy(R),w.sub(z.multiplyScalar(z.dot(R))).normalize(),C.crossVectors(L,R);const O=C.dot(u[V])<0?-1:1;l.setXYZW(V,w.x,w.y,w.z,O)}for(let V=0,R=P.length;V<R;++V){const T=P[V],O=T.start,Z=T.count;for(let W=O,K=O+Z;W<K;W+=3)D(e.getX(W+0)),D(e.getX(W+1)),D(e.getX(W+2))}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let i=this.getAttribute("normal");if(i===void 0)i=new Pr(new Float32Array(t.count*3),3),this.setAttribute("normal",i);else for(let p=0,x=i.count;p<x;p++)i.setXYZ(p,0,0,0);const r=new Ee,s=new Ee,l=new Ee,c=new Ee,u=new Ee,d=new Ee,h=new Ee,m=new Ee;if(e)for(let p=0,x=e.count;p<x;p+=3){const y=e.getX(p+0),S=e.getX(p+1),v=e.getX(p+2);r.fromBufferAttribute(t,y),s.fromBufferAttribute(t,S),l.fromBufferAttribute(t,v),h.subVectors(l,s),m.subVectors(r,s),h.cross(m),c.fromBufferAttribute(i,y),u.fromBufferAttribute(i,S),d.fromBufferAttribute(i,v),c.add(h),u.add(h),d.add(h),i.setXYZ(y,c.x,c.y,c.z),i.setXYZ(S,u.x,u.y,u.z),i.setXYZ(v,d.x,d.y,d.z)}else for(let p=0,x=t.count;p<x;p+=3)r.fromBufferAttribute(t,p+0),s.fromBufferAttribute(t,p+1),l.fromBufferAttribute(t,p+2),h.subVectors(l,s),m.subVectors(r,s),h.cross(m),i.setXYZ(p+0,h.x,h.y,h.z),i.setXYZ(p+1,h.x,h.y,h.z),i.setXYZ(p+2,h.x,h.y,h.z);this.normalizeNormals(),i.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,i=e.count;t<i;t++)Jn.fromBufferAttribute(e,t),Jn.normalize(),e.setXYZ(t,Jn.x,Jn.y,Jn.z)}toNonIndexed(){function e(c,u){const d=c.array,h=c.itemSize,m=c.normalized,p=new d.constructor(u.length*h);let x=0,y=0;for(let S=0,v=u.length;S<v;S++){c.isInterleavedBufferAttribute?x=u[S]*c.data.stride+c.offset:x=u[S]*h;for(let g=0;g<h;g++)p[y++]=d[x++]}return new Pr(p,h,m)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new Is,i=this.index.array,r=this.attributes;for(const c in r){const u=r[c],d=e(u,i);t.setAttribute(c,d)}const s=this.morphAttributes;for(const c in s){const u=[],d=s[c];for(let h=0,m=d.length;h<m;h++){const p=d[h],x=e(p,i);u.push(x)}t.morphAttributes[c]=u}t.morphTargetsRelative=this.morphTargetsRelative;const l=this.groups;for(let c=0,u=l.length;c<u;c++){const d=l[c];t.addGroup(d.start,d.count,d.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const u=this.parameters;for(const d in u)u[d]!==void 0&&(e[d]=u[d]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const i=this.attributes;for(const u in i){const d=i[u];e.data.attributes[u]=d.toJSON(e.data)}const r={};let s=!1;for(const u in this.morphAttributes){const d=this.morphAttributes[u],h=[];for(let m=0,p=d.length;m<p;m++){const x=d[m];h.push(x.toJSON(e.data))}h.length>0&&(r[u]=h,s=!0)}s&&(e.data.morphAttributes=r,e.data.morphTargetsRelative=this.morphTargetsRelative);const l=this.groups;l.length>0&&(e.data.groups=JSON.parse(JSON.stringify(l)));const c=this.boundingSphere;return c!==null&&(e.data.boundingSphere={center:c.center.toArray(),radius:c.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const i=e.index;i!==null&&this.setIndex(i.clone(t));const r=e.attributes;for(const d in r){const h=r[d];this.setAttribute(d,h.clone(t))}const s=e.morphAttributes;for(const d in s){const h=[],m=s[d];for(let p=0,x=m.length;p<x;p++)h.push(m[p].clone(t));this.morphAttributes[d]=h}this.morphTargetsRelative=e.morphTargetsRelative;const l=e.groups;for(let d=0,h=l.length;d<h;d++){const m=l[d];this.addGroup(m.start,m.count,m.materialIndex)}const c=e.boundingBox;c!==null&&(this.boundingBox=c.clone());const u=e.boundingSphere;return u!==null&&(this.boundingSphere=u.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const Cw=new Ln,sl=new Wx,$p=new S0,Pw=new Ee,Zc=new Ee,Qc=new Ee,Jc=new Ee,Gv=new Ee,Xp=new Ee,qp=new Zt,jp=new Zt,Yp=new Zt,Lw=new Ee,Iw=new Ee,Dw=new Ee,Kp=new Ee,Zp=new Ee;class bs extends Ci{constructor(e=new Is,t=new C4){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,i=Object.keys(t);if(i.length>0){const r=t[i[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,l=r.length;s<l;s++){const c=r[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}getVertexPosition(e,t){const i=this.geometry,r=i.attributes.position,s=i.morphAttributes.position,l=i.morphTargetsRelative;t.fromBufferAttribute(r,e);const c=this.morphTargetInfluences;if(s&&c){Xp.set(0,0,0);for(let u=0,d=s.length;u<d;u++){const h=c[u],m=s[u];h!==0&&(Gv.fromBufferAttribute(m,e),l?Xp.addScaledVector(Gv,h):Xp.addScaledVector(Gv.sub(t),h))}t.add(Xp)}return t}raycast(e,t){const i=this.geometry,r=this.material,s=this.matrixWorld;r!==void 0&&(i.boundingSphere===null&&i.computeBoundingSphere(),$p.copy(i.boundingSphere),$p.applyMatrix4(s),sl.copy(e.ray).recast(e.near),!($p.containsPoint(sl.origin)===!1&&(sl.intersectSphere($p,Pw)===null||sl.origin.distanceToSquared(Pw)>(e.far-e.near)**2))&&(Cw.copy(s).invert(),sl.copy(e.ray).applyMatrix4(Cw),!(i.boundingBox!==null&&sl.intersectsBox(i.boundingBox)===!1)&&this._computeIntersections(e,t,sl)))}_computeIntersections(e,t,i){let r;const s=this.geometry,l=this.material,c=s.index,u=s.attributes.position,d=s.attributes.uv,h=s.attributes.uv1,m=s.attributes.normal,p=s.groups,x=s.drawRange;if(c!==null)if(Array.isArray(l))for(let y=0,S=p.length;y<S;y++){const v=p[y],g=l[v.materialIndex],P=Math.max(v.start,x.start),w=Math.min(c.count,Math.min(v.start+v.count,x.start+x.count));for(let C=P,z=w;C<z;C+=3){const L=c.getX(C),D=c.getX(C+1),V=c.getX(C+2);r=Qp(this,g,e,i,d,h,m,L,D,V),r&&(r.faceIndex=Math.floor(C/3),r.face.materialIndex=v.materialIndex,t.push(r))}}else{const y=Math.max(0,x.start),S=Math.min(c.count,x.start+x.count);for(let v=y,g=S;v<g;v+=3){const P=c.getX(v),w=c.getX(v+1),C=c.getX(v+2);r=Qp(this,l,e,i,d,h,m,P,w,C),r&&(r.faceIndex=Math.floor(v/3),t.push(r))}}else if(u!==void 0)if(Array.isArray(l))for(let y=0,S=p.length;y<S;y++){const v=p[y],g=l[v.materialIndex],P=Math.max(v.start,x.start),w=Math.min(u.count,Math.min(v.start+v.count,x.start+x.count));for(let C=P,z=w;C<z;C+=3){const L=C,D=C+1,V=C+2;r=Qp(this,g,e,i,d,h,m,L,D,V),r&&(r.faceIndex=Math.floor(C/3),r.face.materialIndex=v.materialIndex,t.push(r))}}else{const y=Math.max(0,x.start),S=Math.min(u.count,x.start+x.count);for(let v=y,g=S;v<g;v+=3){const P=v,w=v+1,C=v+2;r=Qp(this,l,e,i,d,h,m,P,w,C),r&&(r.faceIndex=Math.floor(v/3),t.push(r))}}}}function Zk(n,e,t,i,r,s,l,c){let u;if(e.side===Gi?u=i.intersectTriangle(l,s,r,!0,c):u=i.intersectTriangle(r,s,l,e.side===wo,c),u===null)return null;Zp.copy(c),Zp.applyMatrix4(n.matrixWorld);const d=t.ray.origin.distanceTo(Zp);return d<t.near||d>t.far?null:{distance:d,point:Zp.clone(),object:n}}function Qp(n,e,t,i,r,s,l,c,u,d){n.getVertexPosition(c,Zc),n.getVertexPosition(u,Qc),n.getVertexPosition(d,Jc);const h=Zk(n,e,t,i,Zc,Qc,Jc,Kp);if(h){r&&(qp.fromBufferAttribute(r,c),jp.fromBufferAttribute(r,u),Yp.fromBufferAttribute(r,d),h.uv=ys.getInterpolation(Kp,Zc,Qc,Jc,qp,jp,Yp,new Zt)),s&&(qp.fromBufferAttribute(s,c),jp.fromBufferAttribute(s,u),Yp.fromBufferAttribute(s,d),h.uv1=ys.getInterpolation(Kp,Zc,Qc,Jc,qp,jp,Yp,new Zt)),l&&(Lw.fromBufferAttribute(l,c),Iw.fromBufferAttribute(l,u),Dw.fromBufferAttribute(l,d),h.normal=ys.getInterpolation(Kp,Zc,Qc,Jc,Lw,Iw,Dw,new Ee),h.normal.dot(i.direction)>0&&h.normal.multiplyScalar(-1));const m={a:c,b:u,c:d,normal:new Ee,materialIndex:0};ys.getNormal(Zc,Qc,Jc,m.normal),h.face=m}return h}class ff extends Is{constructor(e=1,t=1,i=1,r=1,s=1,l=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:i,widthSegments:r,heightSegments:s,depthSegments:l};const c=this;r=Math.floor(r),s=Math.floor(s),l=Math.floor(l);const u=[],d=[],h=[],m=[];let p=0,x=0;y("z","y","x",-1,-1,i,t,e,l,s,0),y("z","y","x",1,-1,i,t,-e,l,s,1),y("x","z","y",1,1,e,i,t,r,l,2),y("x","z","y",1,-1,e,i,-t,r,l,3),y("x","y","z",1,-1,e,t,i,r,s,4),y("x","y","z",-1,-1,e,t,-i,r,s,5),this.setIndex(u),this.setAttribute("position",new rs(d,3)),this.setAttribute("normal",new rs(h,3)),this.setAttribute("uv",new rs(m,2));function y(S,v,g,P,w,C,z,L,D,V,R){const T=C/D,O=z/V,Z=C/2,W=z/2,K=L/2,ne=D+1,Q=V+1;let se=0,G=0;const de=new Ee;for(let le=0;le<Q;le++){const X=le*O-W;for(let he=0;he<ne;he++){const He=he*T-Z;de[S]=He*P,de[v]=X*w,de[g]=K,d.push(de.x,de.y,de.z),de[S]=0,de[v]=0,de[g]=L>0?1:-1,h.push(de.x,de.y,de.z),m.push(he/D),m.push(1-le/V),se+=1}}for(let le=0;le<V;le++)for(let X=0;X<D;X++){const he=p+X+ne*le,He=p+X+ne*(le+1),Y=p+(X+1)+ne*(le+1),ie=p+(X+1)+ne*le;u.push(he,He,ie),u.push(He,Y,ie),G+=6}c.addGroup(x,G,R),x+=G,p+=se}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ff(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Ju(n){const e={};for(const t in n){e[t]={};for(const i in n[t]){const r=n[t][i];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?r.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][i]=null):e[t][i]=r.clone():Array.isArray(r)?e[t][i]=r.slice():e[t][i]=r}}return e}function Ti(n){const e={};for(let t=0;t<n.length;t++){const i=Ju(n[t]);for(const r in i)e[r]=i[r]}return e}function Qk(n){const e=[];for(let t=0;t<n.length;t++)e.push(n[t].clone());return e}function I4(n){const e=n.getRenderTarget();return e===null?n.outputColorSpace:e.isXRRenderTarget===!0?e.texture.colorSpace:rn.workingColorSpace}const Jk={clone:Ju,merge:Ti};var ez=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,tz=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Ao extends uf{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=ez,this.fragmentShader=tz,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Ju(e.uniforms),this.uniformsGroups=Qk(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const r in this.uniforms){const l=this.uniforms[r].value;l&&l.isTexture?t.uniforms[r]={type:"t",value:l.toJSON(e).uuid}:l&&l.isColor?t.uniforms[r]={type:"c",value:l.getHex()}:l&&l.isVector2?t.uniforms[r]={type:"v2",value:l.toArray()}:l&&l.isVector3?t.uniforms[r]={type:"v3",value:l.toArray()}:l&&l.isVector4?t.uniforms[r]={type:"v4",value:l.toArray()}:l&&l.isMatrix3?t.uniforms[r]={type:"m3",value:l.toArray()}:l&&l.isMatrix4?t.uniforms[r]={type:"m4",value:l.toArray()}:t.uniforms[r]={value:l}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const i={};for(const r in this.extensions)this.extensions[r]===!0&&(i[r]=!0);return Object.keys(i).length>0&&(t.extensions=i),t}}class D4 extends Ci{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new Ln,this.projectionMatrix=new Ln,this.projectionMatrixInverse=new Ln,this.coordinateSystem=la}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const eo=new Ee,Nw=new Zt,Uw=new Zt;class Ar extends D4{constructor(e=50,t=1,i=.1,r=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=i,this.far=r,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=Y_*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(Tv*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return Y_*2*Math.atan(Math.tan(Tv*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,i){eo.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set(eo.x,eo.y).multiplyScalar(-e/eo.z),eo.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),i.set(eo.x,eo.y).multiplyScalar(-e/eo.z)}getViewSize(e,t){return this.getViewBounds(e,Nw,Uw),t.subVectors(Uw,Nw)}setViewOffset(e,t,i,r,s,l){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=r,this.view.width=s,this.view.height=l,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(Tv*.5*this.fov)/this.zoom,i=2*t,r=this.aspect*i,s=-.5*r;const l=this.view;if(this.view!==null&&this.view.enabled){const u=l.fullWidth,d=l.fullHeight;s+=l.offsetX*r/u,t-=l.offsetY*i/d,r*=l.width/u,i*=l.height/d}const c=this.filmOffset;c!==0&&(s+=e*c/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+r,t,t-i,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const eu=-90,tu=1;class nz extends Ci{constructor(e,t,i){super(),this.type="CubeCamera",this.renderTarget=i,this.coordinateSystem=null,this.activeMipmapLevel=0;const r=new Ar(eu,tu,e,t);r.layers=this.layers,this.add(r);const s=new Ar(eu,tu,e,t);s.layers=this.layers,this.add(s);const l=new Ar(eu,tu,e,t);l.layers=this.layers,this.add(l);const c=new Ar(eu,tu,e,t);c.layers=this.layers,this.add(c);const u=new Ar(eu,tu,e,t);u.layers=this.layers,this.add(u);const d=new Ar(eu,tu,e,t);d.layers=this.layers,this.add(d)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[i,r,s,l,c,u]=t;for(const d of t)this.remove(d);if(e===la)i.up.set(0,1,0),i.lookAt(1,0,0),r.up.set(0,1,0),r.lookAt(-1,0,0),s.up.set(0,0,-1),s.lookAt(0,1,0),l.up.set(0,0,1),l.lookAt(0,-1,0),c.up.set(0,1,0),c.lookAt(0,0,1),u.up.set(0,1,0),u.lookAt(0,0,-1);else if(e===$m)i.up.set(0,-1,0),i.lookAt(-1,0,0),r.up.set(0,-1,0),r.lookAt(1,0,0),s.up.set(0,0,1),s.lookAt(0,1,0),l.up.set(0,0,-1),l.lookAt(0,-1,0),c.up.set(0,-1,0),c.lookAt(0,0,1),u.up.set(0,-1,0),u.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const d of t)this.add(d),d.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:i,activeMipmapLevel:r}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[s,l,c,u,d,h]=this.children,m=e.getRenderTarget(),p=e.getActiveCubeFace(),x=e.getActiveMipmapLevel(),y=e.xr.enabled;e.xr.enabled=!1;const S=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,e.setRenderTarget(i,0,r),e.render(t,s),e.setRenderTarget(i,1,r),e.render(t,l),e.setRenderTarget(i,2,r),e.render(t,c),e.setRenderTarget(i,3,r),e.render(t,u),e.setRenderTarget(i,4,r),e.render(t,d),i.texture.generateMipmaps=S,e.setRenderTarget(i,5,r),e.render(t,h),e.setRenderTarget(m,p,x),e.xr.enabled=y,i.texture.needsPMREMUpdate=!0}}class N4 extends Wi{constructor(e,t,i,r,s,l,c,u,d,h){e=e!==void 0?e:[],t=t!==void 0?t:ju,super(e,t,i,r,s,l,c,u,d,h),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class iz extends zl{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const i={width:e,height:e,depth:1},r=[i,i,i,i,i,i];this.texture=new N4(r,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:Jr}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const i={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},r=new ff(5,5,5),s=new Ao({name:"CubemapFromEquirect",uniforms:Ju(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:Gi,blending:vo});s.uniforms.tEquirect.value=t;const l=new bs(r,s),c=t.minFilter;return t.minFilter===wl&&(t.minFilter=Jr),new nz(1,10,this).update(e,l),t.minFilter=c,l.geometry.dispose(),l.material.dispose(),this}clear(e,t,i,r){const s=e.getRenderTarget();for(let l=0;l<6;l++)e.setRenderTarget(this,l),e.clear(t,i,r);e.setRenderTarget(s)}}const Wv=new Ee,rz=new Ee,sz=new Dt;class dl{constructor(e=new Ee(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,i,r){return this.normal.set(e,t,i),this.constant=r,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,i){const r=Wv.subVectors(i,t).cross(rz.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(r,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const i=e.delta(Wv),r=this.normal.dot(i);if(r===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/r;return s<0||s>1?null:t.copy(e.start).addScaledVector(i,s)}intersectsLine(e){const t=this.distanceToPoint(e.start),i=this.distanceToPoint(e.end);return t<0&&i>0||i<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const i=t||sz.getNormalMatrix(e),r=this.coplanarPoint(Wv).applyMatrix4(e),s=this.normal.applyMatrix3(i).normalize();return this.constant=-r.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const al=new S0,Jp=new Ee;class U4{constructor(e=new dl,t=new dl,i=new dl,r=new dl,s=new dl,l=new dl){this.planes=[e,t,i,r,s,l]}set(e,t,i,r,s,l){const c=this.planes;return c[0].copy(e),c[1].copy(t),c[2].copy(i),c[3].copy(r),c[4].copy(s),c[5].copy(l),this}copy(e){const t=this.planes;for(let i=0;i<6;i++)t[i].copy(e.planes[i]);return this}setFromProjectionMatrix(e,t=la){const i=this.planes,r=e.elements,s=r[0],l=r[1],c=r[2],u=r[3],d=r[4],h=r[5],m=r[6],p=r[7],x=r[8],y=r[9],S=r[10],v=r[11],g=r[12],P=r[13],w=r[14],C=r[15];if(i[0].setComponents(u-s,p-d,v-x,C-g).normalize(),i[1].setComponents(u+s,p+d,v+x,C+g).normalize(),i[2].setComponents(u+l,p+h,v+y,C+P).normalize(),i[3].setComponents(u-l,p-h,v-y,C-P).normalize(),i[4].setComponents(u-c,p-m,v-S,C-w).normalize(),t===la)i[5].setComponents(u+c,p+m,v+S,C+w).normalize();else if(t===$m)i[5].setComponents(c,m,S,w).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),al.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),al.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(al)}intersectsSprite(e){return al.center.set(0,0,0),al.radius=.7071067811865476,al.applyMatrix4(e.matrixWorld),this.intersectsSphere(al)}intersectsSphere(e){const t=this.planes,i=e.center,r=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(i)<r)return!1;return!0}intersectsBox(e){const t=this.planes;for(let i=0;i<6;i++){const r=t[i];if(Jp.x=r.normal.x>0?e.max.x:e.min.x,Jp.y=r.normal.y>0?e.max.y:e.min.y,Jp.z=r.normal.z>0?e.max.z:e.min.z,r.distanceToPoint(Jp)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let i=0;i<6;i++)if(t[i].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function O4(){let n=null,e=!1,t=null,i=null;function r(s,l){t(s,l),i=n.requestAnimationFrame(r)}return{start:function(){e!==!0&&t!==null&&(i=n.requestAnimationFrame(r),e=!0)},stop:function(){n.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){n=s}}}function az(n){const e=new WeakMap;function t(c,u){const d=c.array,h=c.usage,m=d.byteLength,p=n.createBuffer();n.bindBuffer(u,p),n.bufferData(u,d,h),c.onUploadCallback();let x;if(d instanceof Float32Array)x=n.FLOAT;else if(d instanceof Uint16Array)c.isFloat16BufferAttribute?x=n.HALF_FLOAT:x=n.UNSIGNED_SHORT;else if(d instanceof Int16Array)x=n.SHORT;else if(d instanceof Uint32Array)x=n.UNSIGNED_INT;else if(d instanceof Int32Array)x=n.INT;else if(d instanceof Int8Array)x=n.BYTE;else if(d instanceof Uint8Array)x=n.UNSIGNED_BYTE;else if(d instanceof Uint8ClampedArray)x=n.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+d);return{buffer:p,type:x,bytesPerElement:d.BYTES_PER_ELEMENT,version:c.version,size:m}}function i(c,u,d){const h=u.array,m=u._updateRange,p=u.updateRanges;if(n.bindBuffer(d,c),m.count===-1&&p.length===0&&n.bufferSubData(d,0,h),p.length!==0){for(let x=0,y=p.length;x<y;x++){const S=p[x];n.bufferSubData(d,S.start*h.BYTES_PER_ELEMENT,h,S.start,S.count)}u.clearUpdateRanges()}m.count!==-1&&(n.bufferSubData(d,m.offset*h.BYTES_PER_ELEMENT,h,m.offset,m.count),m.count=-1),u.onUploadCallback()}function r(c){return c.isInterleavedBufferAttribute&&(c=c.data),e.get(c)}function s(c){c.isInterleavedBufferAttribute&&(c=c.data);const u=e.get(c);u&&(n.deleteBuffer(u.buffer),e.delete(c))}function l(c,u){if(c.isGLBufferAttribute){const h=e.get(c);(!h||h.version<c.version)&&e.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}c.isInterleavedBufferAttribute&&(c=c.data);const d=e.get(c);if(d===void 0)e.set(c,t(c,u));else if(d.version<c.version){if(d.size!==c.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");i(d.buffer,c,u),d.version=c.version}}return{get:r,remove:s,update:l}}class Kd extends Is{constructor(e=1,t=1,i=1,r=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:i,heightSegments:r};const s=e/2,l=t/2,c=Math.floor(i),u=Math.floor(r),d=c+1,h=u+1,m=e/c,p=t/u,x=[],y=[],S=[],v=[];for(let g=0;g<h;g++){const P=g*p-l;for(let w=0;w<d;w++){const C=w*m-s;y.push(C,-P,0),S.push(0,0,1),v.push(w/c),v.push(1-g/u)}}for(let g=0;g<u;g++)for(let P=0;P<c;P++){const w=P+d*g,C=P+d*(g+1),z=P+1+d*(g+1),L=P+1+d*g;x.push(w,C,L),x.push(C,z,L)}this.setIndex(x),this.setAttribute("position",new rs(y,3)),this.setAttribute("normal",new rs(S,3)),this.setAttribute("uv",new rs(v,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Kd(e.width,e.height,e.widthSegments,e.heightSegments)}}var oz=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,lz=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,cz=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,uz=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,fz=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,dz=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,hz=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,pz=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,mz=`#ifdef USE_BATCHING
	attribute float batchId;
	uniform highp sampler2D batchingTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`,gz=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( batchId );
#endif`,vz=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,_z=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,xz=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,yz=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,Sz=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,Mz=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,Ez=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,wz=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,Tz=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,Az=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,bz=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,Rz=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`,Cz=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( batchId );
	vColor.xyz *= batchingColor.xyz;
#endif`,Pz=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,Lz=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,Iz=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,Dz=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,Nz=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,Uz=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,Oz=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,Fz="gl_FragColor = linearToOutputTexel( gl_FragColor );",kz=`
const mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(
	vec3( 0.8224621, 0.177538, 0.0 ),
	vec3( 0.0331941, 0.9668058, 0.0 ),
	vec3( 0.0170827, 0.0723974, 0.9105199 )
);
const mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(
	vec3( 1.2249401, - 0.2249404, 0.0 ),
	vec3( - 0.0420569, 1.0420571, 0.0 ),
	vec3( - 0.0196376, - 0.0786361, 1.0982735 )
);
vec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {
	return vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );
}
vec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {
	return vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );
}
vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}
vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return sRGBTransferOETF( value );
}`,zz=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,Bz=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,Hz=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,Vz=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,Gz=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,Wz=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,$z=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,Xz=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,qz=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,jz=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,Yz=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,Kz=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,Zz=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,Qz=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,Jz=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,eB=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,tB=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,nB=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,iB=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,rB=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,sB=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,aB=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,oB=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,lB=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,cB=`#if defined( USE_LOGDEPTHBUF )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,uB=`#if defined( USE_LOGDEPTHBUF )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,fB=`#ifdef USE_LOGDEPTHBUF
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,dB=`#ifdef USE_LOGDEPTHBUF
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,hB=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,pB=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,mB=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,gB=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,vB=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,_B=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,xB=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,yB=`#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,SB=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,MB=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`,EB=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,wB=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,TB=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,AB=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,bB=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,RB=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,CB=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,PB=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,LB=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,IB=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,DB=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,NB=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,UB=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,OB=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,FB=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,kB=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,zB=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,BB=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,HB=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,VB=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return shadow;
	}
#endif`,GB=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,WB=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,$B=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,XB=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,qB=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,jB=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,YB=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,KB=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,ZB=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,QB=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,JB=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,eH=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,tH=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
		
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
		
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		
		#else
		
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,nH=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,iH=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,rH=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,sH=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const aH=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,oH=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,lH=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,cH=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,uH=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,fH=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,dH=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,hH=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,pH=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,mH=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,gH=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,vH=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,_H=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,xH=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,yH=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,SH=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,MH=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,EH=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,wH=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,TH=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,AH=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,bH=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,RH=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,CH=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,PH=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,LH=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,IH=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,DH=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,NH=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,UH=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,OH=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,FH=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,kH=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,zH=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,Ot={alphahash_fragment:oz,alphahash_pars_fragment:lz,alphamap_fragment:cz,alphamap_pars_fragment:uz,alphatest_fragment:fz,alphatest_pars_fragment:dz,aomap_fragment:hz,aomap_pars_fragment:pz,batching_pars_vertex:mz,batching_vertex:gz,begin_vertex:vz,beginnormal_vertex:_z,bsdfs:xz,iridescence_fragment:yz,bumpmap_pars_fragment:Sz,clipping_planes_fragment:Mz,clipping_planes_pars_fragment:Ez,clipping_planes_pars_vertex:wz,clipping_planes_vertex:Tz,color_fragment:Az,color_pars_fragment:bz,color_pars_vertex:Rz,color_vertex:Cz,common:Pz,cube_uv_reflection_fragment:Lz,defaultnormal_vertex:Iz,displacementmap_pars_vertex:Dz,displacementmap_vertex:Nz,emissivemap_fragment:Uz,emissivemap_pars_fragment:Oz,colorspace_fragment:Fz,colorspace_pars_fragment:kz,envmap_fragment:zz,envmap_common_pars_fragment:Bz,envmap_pars_fragment:Hz,envmap_pars_vertex:Vz,envmap_physical_pars_fragment:Jz,envmap_vertex:Gz,fog_vertex:Wz,fog_pars_vertex:$z,fog_fragment:Xz,fog_pars_fragment:qz,gradientmap_pars_fragment:jz,lightmap_pars_fragment:Yz,lights_lambert_fragment:Kz,lights_lambert_pars_fragment:Zz,lights_pars_begin:Qz,lights_toon_fragment:eB,lights_toon_pars_fragment:tB,lights_phong_fragment:nB,lights_phong_pars_fragment:iB,lights_physical_fragment:rB,lights_physical_pars_fragment:sB,lights_fragment_begin:aB,lights_fragment_maps:oB,lights_fragment_end:lB,logdepthbuf_fragment:cB,logdepthbuf_pars_fragment:uB,logdepthbuf_pars_vertex:fB,logdepthbuf_vertex:dB,map_fragment:hB,map_pars_fragment:pB,map_particle_fragment:mB,map_particle_pars_fragment:gB,metalnessmap_fragment:vB,metalnessmap_pars_fragment:_B,morphinstance_vertex:xB,morphcolor_vertex:yB,morphnormal_vertex:SB,morphtarget_pars_vertex:MB,morphtarget_vertex:EB,normal_fragment_begin:wB,normal_fragment_maps:TB,normal_pars_fragment:AB,normal_pars_vertex:bB,normal_vertex:RB,normalmap_pars_fragment:CB,clearcoat_normal_fragment_begin:PB,clearcoat_normal_fragment_maps:LB,clearcoat_pars_fragment:IB,iridescence_pars_fragment:DB,opaque_fragment:NB,packing:UB,premultiplied_alpha_fragment:OB,project_vertex:FB,dithering_fragment:kB,dithering_pars_fragment:zB,roughnessmap_fragment:BB,roughnessmap_pars_fragment:HB,shadowmap_pars_fragment:VB,shadowmap_pars_vertex:GB,shadowmap_vertex:WB,shadowmask_pars_fragment:$B,skinbase_vertex:XB,skinning_pars_vertex:qB,skinning_vertex:jB,skinnormal_vertex:YB,specularmap_fragment:KB,specularmap_pars_fragment:ZB,tonemapping_fragment:QB,tonemapping_pars_fragment:JB,transmission_fragment:eH,transmission_pars_fragment:tH,uv_pars_fragment:nH,uv_pars_vertex:iH,uv_vertex:rH,worldpos_vertex:sH,background_vert:aH,background_frag:oH,backgroundCube_vert:lH,backgroundCube_frag:cH,cube_vert:uH,cube_frag:fH,depth_vert:dH,depth_frag:hH,distanceRGBA_vert:pH,distanceRGBA_frag:mH,equirect_vert:gH,equirect_frag:vH,linedashed_vert:_H,linedashed_frag:xH,meshbasic_vert:yH,meshbasic_frag:SH,meshlambert_vert:MH,meshlambert_frag:EH,meshmatcap_vert:wH,meshmatcap_frag:TH,meshnormal_vert:AH,meshnormal_frag:bH,meshphong_vert:RH,meshphong_frag:CH,meshphysical_vert:PH,meshphysical_frag:LH,meshtoon_vert:IH,meshtoon_frag:DH,points_vert:NH,points_frag:UH,shadow_vert:OH,shadow_frag:FH,sprite_vert:kH,sprite_frag:zH},at={common:{diffuse:{value:new jt(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new Dt},alphaMap:{value:null},alphaMapTransform:{value:new Dt},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new Dt}},envmap:{envMap:{value:null},envMapRotation:{value:new Dt},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new Dt}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new Dt}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new Dt},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new Dt},normalScale:{value:new Zt(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new Dt},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new Dt}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new Dt}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new Dt}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new jt(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new jt(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new Dt},alphaTest:{value:0},uvTransform:{value:new Dt}},sprite:{diffuse:{value:new jt(16777215)},opacity:{value:1},center:{value:new Zt(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new Dt},alphaMap:{value:null},alphaMapTransform:{value:new Dt},alphaTest:{value:0}}},xs={basic:{uniforms:Ti([at.common,at.specularmap,at.envmap,at.aomap,at.lightmap,at.fog]),vertexShader:Ot.meshbasic_vert,fragmentShader:Ot.meshbasic_frag},lambert:{uniforms:Ti([at.common,at.specularmap,at.envmap,at.aomap,at.lightmap,at.emissivemap,at.bumpmap,at.normalmap,at.displacementmap,at.fog,at.lights,{emissive:{value:new jt(0)}}]),vertexShader:Ot.meshlambert_vert,fragmentShader:Ot.meshlambert_frag},phong:{uniforms:Ti([at.common,at.specularmap,at.envmap,at.aomap,at.lightmap,at.emissivemap,at.bumpmap,at.normalmap,at.displacementmap,at.fog,at.lights,{emissive:{value:new jt(0)},specular:{value:new jt(1118481)},shininess:{value:30}}]),vertexShader:Ot.meshphong_vert,fragmentShader:Ot.meshphong_frag},standard:{uniforms:Ti([at.common,at.envmap,at.aomap,at.lightmap,at.emissivemap,at.bumpmap,at.normalmap,at.displacementmap,at.roughnessmap,at.metalnessmap,at.fog,at.lights,{emissive:{value:new jt(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Ot.meshphysical_vert,fragmentShader:Ot.meshphysical_frag},toon:{uniforms:Ti([at.common,at.aomap,at.lightmap,at.emissivemap,at.bumpmap,at.normalmap,at.displacementmap,at.gradientmap,at.fog,at.lights,{emissive:{value:new jt(0)}}]),vertexShader:Ot.meshtoon_vert,fragmentShader:Ot.meshtoon_frag},matcap:{uniforms:Ti([at.common,at.bumpmap,at.normalmap,at.displacementmap,at.fog,{matcap:{value:null}}]),vertexShader:Ot.meshmatcap_vert,fragmentShader:Ot.meshmatcap_frag},points:{uniforms:Ti([at.points,at.fog]),vertexShader:Ot.points_vert,fragmentShader:Ot.points_frag},dashed:{uniforms:Ti([at.common,at.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Ot.linedashed_vert,fragmentShader:Ot.linedashed_frag},depth:{uniforms:Ti([at.common,at.displacementmap]),vertexShader:Ot.depth_vert,fragmentShader:Ot.depth_frag},normal:{uniforms:Ti([at.common,at.bumpmap,at.normalmap,at.displacementmap,{opacity:{value:1}}]),vertexShader:Ot.meshnormal_vert,fragmentShader:Ot.meshnormal_frag},sprite:{uniforms:Ti([at.sprite,at.fog]),vertexShader:Ot.sprite_vert,fragmentShader:Ot.sprite_frag},background:{uniforms:{uvTransform:{value:new Dt},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:Ot.background_vert,fragmentShader:Ot.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new Dt}},vertexShader:Ot.backgroundCube_vert,fragmentShader:Ot.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Ot.cube_vert,fragmentShader:Ot.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Ot.equirect_vert,fragmentShader:Ot.equirect_frag},distanceRGBA:{uniforms:Ti([at.common,at.displacementmap,{referencePosition:{value:new Ee},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Ot.distanceRGBA_vert,fragmentShader:Ot.distanceRGBA_frag},shadow:{uniforms:Ti([at.lights,at.fog,{color:{value:new jt(0)},opacity:{value:1}}]),vertexShader:Ot.shadow_vert,fragmentShader:Ot.shadow_frag}};xs.physical={uniforms:Ti([xs.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new Dt},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new Dt},clearcoatNormalScale:{value:new Zt(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new Dt},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new Dt},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new Dt},sheen:{value:0},sheenColor:{value:new jt(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new Dt},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new Dt},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new Dt},transmissionSamplerSize:{value:new Zt},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new Dt},attenuationDistance:{value:0},attenuationColor:{value:new jt(0)},specularColor:{value:new jt(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new Dt},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new Dt},anisotropyVector:{value:new Zt},anisotropyMap:{value:null},anisotropyMapTransform:{value:new Dt}}]),vertexShader:Ot.meshphysical_vert,fragmentShader:Ot.meshphysical_frag};const em={r:0,b:0,g:0},ol=new ha,BH=new Ln;function HH(n,e,t,i,r,s,l){const c=new jt(0);let u=s===!0?0:1,d,h,m=null,p=0,x=null;function y(P){let w=P.isScene===!0?P.background:null;return w&&w.isTexture&&(w=(P.backgroundBlurriness>0?t:e).get(w)),w}function S(P){let w=!1;const C=y(P);C===null?g(c,u):C&&C.isColor&&(g(C,1),w=!0);const z=n.xr.getEnvironmentBlendMode();z==="additive"?i.buffers.color.setClear(0,0,0,1,l):z==="alpha-blend"&&i.buffers.color.setClear(0,0,0,0,l),(n.autoClear||w)&&(i.buffers.depth.setTest(!0),i.buffers.depth.setMask(!0),i.buffers.color.setMask(!0),n.clear(n.autoClearColor,n.autoClearDepth,n.autoClearStencil))}function v(P,w){const C=y(w);C&&(C.isCubeTexture||C.mapping===_0)?(h===void 0&&(h=new bs(new ff(1,1,1),new Ao({name:"BackgroundCubeMaterial",uniforms:Ju(xs.backgroundCube.uniforms),vertexShader:xs.backgroundCube.vertexShader,fragmentShader:xs.backgroundCube.fragmentShader,side:Gi,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),h.geometry.deleteAttribute("uv"),h.onBeforeRender=function(z,L,D){this.matrixWorld.copyPosition(D.matrixWorld)},Object.defineProperty(h.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),r.update(h)),ol.copy(w.backgroundRotation),ol.x*=-1,ol.y*=-1,ol.z*=-1,C.isCubeTexture&&C.isRenderTargetTexture===!1&&(ol.y*=-1,ol.z*=-1),h.material.uniforms.envMap.value=C,h.material.uniforms.flipEnvMap.value=C.isCubeTexture&&C.isRenderTargetTexture===!1?-1:1,h.material.uniforms.backgroundBlurriness.value=w.backgroundBlurriness,h.material.uniforms.backgroundIntensity.value=w.backgroundIntensity,h.material.uniforms.backgroundRotation.value.setFromMatrix4(BH.makeRotationFromEuler(ol)),h.material.toneMapped=rn.getTransfer(C.colorSpace)!==vn,(m!==C||p!==C.version||x!==n.toneMapping)&&(h.material.needsUpdate=!0,m=C,p=C.version,x=n.toneMapping),h.layers.enableAll(),P.unshift(h,h.geometry,h.material,0,0,null)):C&&C.isTexture&&(d===void 0&&(d=new bs(new Kd(2,2),new Ao({name:"BackgroundMaterial",uniforms:Ju(xs.background.uniforms),vertexShader:xs.background.vertexShader,fragmentShader:xs.background.fragmentShader,side:wo,depthTest:!1,depthWrite:!1,fog:!1})),d.geometry.deleteAttribute("normal"),Object.defineProperty(d.material,"map",{get:function(){return this.uniforms.t2D.value}}),r.update(d)),d.material.uniforms.t2D.value=C,d.material.uniforms.backgroundIntensity.value=w.backgroundIntensity,d.material.toneMapped=rn.getTransfer(C.colorSpace)!==vn,C.matrixAutoUpdate===!0&&C.updateMatrix(),d.material.uniforms.uvTransform.value.copy(C.matrix),(m!==C||p!==C.version||x!==n.toneMapping)&&(d.material.needsUpdate=!0,m=C,p=C.version,x=n.toneMapping),d.layers.enableAll(),P.unshift(d,d.geometry,d.material,0,0,null))}function g(P,w){P.getRGB(em,I4(n)),i.buffers.color.setClear(em.r,em.g,em.b,w,l)}return{getClearColor:function(){return c},setClearColor:function(P,w=1){c.set(P),u=w,g(c,u)},getClearAlpha:function(){return u},setClearAlpha:function(P){u=P,g(c,u)},render:S,addToRenderList:v}}function VH(n,e){const t=n.getParameter(n.MAX_VERTEX_ATTRIBS),i={},r=p(null);let s=r,l=!1;function c(T,O,Z,W,K){let ne=!1;const Q=m(W,Z,O);s!==Q&&(s=Q,d(s.object)),ne=x(T,W,Z,K),ne&&y(T,W,Z,K),K!==null&&e.update(K,n.ELEMENT_ARRAY_BUFFER),(ne||l)&&(l=!1,C(T,O,Z,W),K!==null&&n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,e.get(K).buffer))}function u(){return n.createVertexArray()}function d(T){return n.bindVertexArray(T)}function h(T){return n.deleteVertexArray(T)}function m(T,O,Z){const W=Z.wireframe===!0;let K=i[T.id];K===void 0&&(K={},i[T.id]=K);let ne=K[O.id];ne===void 0&&(ne={},K[O.id]=ne);let Q=ne[W];return Q===void 0&&(Q=p(u()),ne[W]=Q),Q}function p(T){const O=[],Z=[],W=[];for(let K=0;K<t;K++)O[K]=0,Z[K]=0,W[K]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:O,enabledAttributes:Z,attributeDivisors:W,object:T,attributes:{},index:null}}function x(T,O,Z,W){const K=s.attributes,ne=O.attributes;let Q=0;const se=Z.getAttributes();for(const G in se)if(se[G].location>=0){const le=K[G];let X=ne[G];if(X===void 0&&(G==="instanceMatrix"&&T.instanceMatrix&&(X=T.instanceMatrix),G==="instanceColor"&&T.instanceColor&&(X=T.instanceColor)),le===void 0||le.attribute!==X||X&&le.data!==X.data)return!0;Q++}return s.attributesNum!==Q||s.index!==W}function y(T,O,Z,W){const K={},ne=O.attributes;let Q=0;const se=Z.getAttributes();for(const G in se)if(se[G].location>=0){let le=ne[G];le===void 0&&(G==="instanceMatrix"&&T.instanceMatrix&&(le=T.instanceMatrix),G==="instanceColor"&&T.instanceColor&&(le=T.instanceColor));const X={};X.attribute=le,le&&le.data&&(X.data=le.data),K[G]=X,Q++}s.attributes=K,s.attributesNum=Q,s.index=W}function S(){const T=s.newAttributes;for(let O=0,Z=T.length;O<Z;O++)T[O]=0}function v(T){g(T,0)}function g(T,O){const Z=s.newAttributes,W=s.enabledAttributes,K=s.attributeDivisors;Z[T]=1,W[T]===0&&(n.enableVertexAttribArray(T),W[T]=1),K[T]!==O&&(n.vertexAttribDivisor(T,O),K[T]=O)}function P(){const T=s.newAttributes,O=s.enabledAttributes;for(let Z=0,W=O.length;Z<W;Z++)O[Z]!==T[Z]&&(n.disableVertexAttribArray(Z),O[Z]=0)}function w(T,O,Z,W,K,ne,Q){Q===!0?n.vertexAttribIPointer(T,O,Z,K,ne):n.vertexAttribPointer(T,O,Z,W,K,ne)}function C(T,O,Z,W){S();const K=W.attributes,ne=Z.getAttributes(),Q=O.defaultAttributeValues;for(const se in ne){const G=ne[se];if(G.location>=0){let de=K[se];if(de===void 0&&(se==="instanceMatrix"&&T.instanceMatrix&&(de=T.instanceMatrix),se==="instanceColor"&&T.instanceColor&&(de=T.instanceColor)),de!==void 0){const le=de.normalized,X=de.itemSize,he=e.get(de);if(he===void 0)continue;const He=he.buffer,Y=he.type,ie=he.bytesPerElement,xe=Y===n.INT||Y===n.UNSIGNED_INT||de.gpuType===p4;if(de.isInterleavedBufferAttribute){const pe=de.data,Oe=pe.stride,Ne=de.offset;if(pe.isInstancedInterleavedBuffer){for(let Ye=0;Ye<G.locationSize;Ye++)g(G.location+Ye,pe.meshPerAttribute);T.isInstancedMesh!==!0&&W._maxInstanceCount===void 0&&(W._maxInstanceCount=pe.meshPerAttribute*pe.count)}else for(let Ye=0;Ye<G.locationSize;Ye++)v(G.location+Ye);n.bindBuffer(n.ARRAY_BUFFER,He);for(let Ye=0;Ye<G.locationSize;Ye++)w(G.location+Ye,X/G.locationSize,Y,le,Oe*ie,(Ne+X/G.locationSize*Ye)*ie,xe)}else{if(de.isInstancedBufferAttribute){for(let pe=0;pe<G.locationSize;pe++)g(G.location+pe,de.meshPerAttribute);T.isInstancedMesh!==!0&&W._maxInstanceCount===void 0&&(W._maxInstanceCount=de.meshPerAttribute*de.count)}else for(let pe=0;pe<G.locationSize;pe++)v(G.location+pe);n.bindBuffer(n.ARRAY_BUFFER,He);for(let pe=0;pe<G.locationSize;pe++)w(G.location+pe,X/G.locationSize,Y,le,X*ie,X/G.locationSize*pe*ie,xe)}}else if(Q!==void 0){const le=Q[se];if(le!==void 0)switch(le.length){case 2:n.vertexAttrib2fv(G.location,le);break;case 3:n.vertexAttrib3fv(G.location,le);break;case 4:n.vertexAttrib4fv(G.location,le);break;default:n.vertexAttrib1fv(G.location,le)}}}}P()}function z(){V();for(const T in i){const O=i[T];for(const Z in O){const W=O[Z];for(const K in W)h(W[K].object),delete W[K];delete O[Z]}delete i[T]}}function L(T){if(i[T.id]===void 0)return;const O=i[T.id];for(const Z in O){const W=O[Z];for(const K in W)h(W[K].object),delete W[K];delete O[Z]}delete i[T.id]}function D(T){for(const O in i){const Z=i[O];if(Z[T.id]===void 0)continue;const W=Z[T.id];for(const K in W)h(W[K].object),delete W[K];delete Z[T.id]}}function V(){R(),l=!0,s!==r&&(s=r,d(s.object))}function R(){r.geometry=null,r.program=null,r.wireframe=!1}return{setup:c,reset:V,resetDefaultState:R,dispose:z,releaseStatesOfGeometry:L,releaseStatesOfProgram:D,initAttributes:S,enableAttribute:v,disableUnusedAttributes:P}}function GH(n,e,t){let i;function r(d){i=d}function s(d,h){n.drawArrays(i,d,h),t.update(h,i,1)}function l(d,h,m){m!==0&&(n.drawArraysInstanced(i,d,h,m),t.update(h,i,m))}function c(d,h,m){if(m===0)return;const p=e.get("WEBGL_multi_draw");if(p===null)for(let x=0;x<m;x++)this.render(d[x],h[x]);else{p.multiDrawArraysWEBGL(i,d,0,h,0,m);let x=0;for(let y=0;y<m;y++)x+=h[y];t.update(x,i,1)}}function u(d,h,m,p){if(m===0)return;const x=e.get("WEBGL_multi_draw");if(x===null)for(let y=0;y<d.length;y++)l(d[y],h[y],p[y]);else{x.multiDrawArraysInstancedWEBGL(i,d,0,h,0,p,0,m);let y=0;for(let S=0;S<m;S++)y+=h[S];for(let S=0;S<p.length;S++)t.update(y,i,p[S])}}this.setMode=r,this.render=s,this.renderInstances=l,this.renderMultiDraw=c,this.renderMultiDrawInstances=u}function WH(n,e,t,i){let r;function s(){if(r!==void 0)return r;if(e.has("EXT_texture_filter_anisotropic")===!0){const L=e.get("EXT_texture_filter_anisotropic");r=n.getParameter(L.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else r=0;return r}function l(L){return!(L!==As&&i.convert(L)!==n.getParameter(n.IMPLEMENTATION_COLOR_READ_FORMAT))}function c(L){const D=L===x0&&(e.has("EXT_color_buffer_half_float")||e.has("EXT_color_buffer_float"));return!(L!==To&&i.convert(L)!==n.getParameter(n.IMPLEMENTATION_COLOR_READ_TYPE)&&L!==fo&&!D)}function u(L){if(L==="highp"){if(n.getShaderPrecisionFormat(n.VERTEX_SHADER,n.HIGH_FLOAT).precision>0&&n.getShaderPrecisionFormat(n.FRAGMENT_SHADER,n.HIGH_FLOAT).precision>0)return"highp";L="mediump"}return L==="mediump"&&n.getShaderPrecisionFormat(n.VERTEX_SHADER,n.MEDIUM_FLOAT).precision>0&&n.getShaderPrecisionFormat(n.FRAGMENT_SHADER,n.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let d=t.precision!==void 0?t.precision:"highp";const h=u(d);h!==d&&(console.warn("THREE.WebGLRenderer:",d,"not supported, using",h,"instead."),d=h);const m=t.logarithmicDepthBuffer===!0,p=n.getParameter(n.MAX_TEXTURE_IMAGE_UNITS),x=n.getParameter(n.MAX_VERTEX_TEXTURE_IMAGE_UNITS),y=n.getParameter(n.MAX_TEXTURE_SIZE),S=n.getParameter(n.MAX_CUBE_MAP_TEXTURE_SIZE),v=n.getParameter(n.MAX_VERTEX_ATTRIBS),g=n.getParameter(n.MAX_VERTEX_UNIFORM_VECTORS),P=n.getParameter(n.MAX_VARYING_VECTORS),w=n.getParameter(n.MAX_FRAGMENT_UNIFORM_VECTORS),C=x>0,z=n.getParameter(n.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:s,getMaxPrecision:u,textureFormatReadable:l,textureTypeReadable:c,precision:d,logarithmicDepthBuffer:m,maxTextures:p,maxVertexTextures:x,maxTextureSize:y,maxCubemapSize:S,maxAttributes:v,maxVertexUniforms:g,maxVaryings:P,maxFragmentUniforms:w,vertexTextures:C,maxSamples:z}}function $H(n){const e=this;let t=null,i=0,r=!1,s=!1;const l=new dl,c=new Dt,u={value:null,needsUpdate:!1};this.uniform=u,this.numPlanes=0,this.numIntersection=0,this.init=function(m,p){const x=m.length!==0||p||i!==0||r;return r=p,i=m.length,x},this.beginShadows=function(){s=!0,h(null)},this.endShadows=function(){s=!1},this.setGlobalState=function(m,p){t=h(m,p,0)},this.setState=function(m,p,x){const y=m.clippingPlanes,S=m.clipIntersection,v=m.clipShadows,g=n.get(m);if(!r||y===null||y.length===0||s&&!v)s?h(null):d();else{const P=s?0:i,w=P*4;let C=g.clippingState||null;u.value=C,C=h(y,p,w,x);for(let z=0;z!==w;++z)C[z]=t[z];g.clippingState=C,this.numIntersection=S?this.numPlanes:0,this.numPlanes+=P}};function d(){u.value!==t&&(u.value=t,u.needsUpdate=i>0),e.numPlanes=i,e.numIntersection=0}function h(m,p,x,y){const S=m!==null?m.length:0;let v=null;if(S!==0){if(v=u.value,y!==!0||v===null){const g=x+S*4,P=p.matrixWorldInverse;c.getNormalMatrix(P),(v===null||v.length<g)&&(v=new Float32Array(g));for(let w=0,C=x;w!==S;++w,C+=4)l.copy(m[w]).applyMatrix4(P,c),l.normal.toArray(v,C),v[C+3]=l.constant}u.value=v,u.needsUpdate=!0}return e.numPlanes=S,e.numIntersection=0,v}}function XH(n){let e=new WeakMap;function t(l,c){return c===$_?l.mapping=ju:c===X_&&(l.mapping=Yu),l}function i(l){if(l&&l.isTexture){const c=l.mapping;if(c===$_||c===X_)if(e.has(l)){const u=e.get(l).texture;return t(u,l.mapping)}else{const u=l.image;if(u&&u.height>0){const d=new iz(u.height);return d.fromEquirectangularTexture(n,l),e.set(l,d),l.addEventListener("dispose",r),t(d.texture,l.mapping)}else return null}}return l}function r(l){const c=l.target;c.removeEventListener("dispose",r);const u=e.get(c);u!==void 0&&(e.delete(c),u.dispose())}function s(){e=new WeakMap}return{get:i,dispose:s}}class qH extends D4{constructor(e=-1,t=1,i=1,r=-1,s=.1,l=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=i,this.bottom=r,this.near=s,this.far=l,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,i,r,s,l){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=r,this.view.width=s,this.view.height=l,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,r=(this.top+this.bottom)/2;let s=i-e,l=i+e,c=r+t,u=r-t;if(this.view!==null&&this.view.enabled){const d=(this.right-this.left)/this.view.fullWidth/this.zoom,h=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=d*this.view.offsetX,l=s+d*this.view.width,c-=h*this.view.offsetY,u=c-h*this.view.height}this.projectionMatrix.makeOrthographic(s,l,c,u,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}const Su=4,Ow=[.125,.215,.35,.446,.526,.582],xl=20,$v=new qH,Fw=new jt;let Xv=null,qv=0,jv=0,Yv=!1;const hl=(1+Math.sqrt(5))/2,nu=1/hl,kw=[new Ee(-hl,nu,0),new Ee(hl,nu,0),new Ee(-nu,0,hl),new Ee(nu,0,hl),new Ee(0,hl,-nu),new Ee(0,hl,nu),new Ee(-1,1,-1),new Ee(1,1,-1),new Ee(-1,1,1),new Ee(1,1,1)];class zw{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,i=.1,r=100){Xv=this._renderer.getRenderTarget(),qv=this._renderer.getActiveCubeFace(),jv=this._renderer.getActiveMipmapLevel(),Yv=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(256);const s=this._allocateTargets();return s.depthBuffer=!0,this._sceneToCubeUV(e,i,r,s),t>0&&this._blur(s,0,0,t),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=Vw(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=Hw(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Xv,qv,jv),this._renderer.xr.enabled=Yv,e.scissorTest=!1,tm(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===ju||e.mapping===Yu?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),Xv=this._renderer.getRenderTarget(),qv=this._renderer.getActiveCubeFace(),jv=this._renderer.getActiveMipmapLevel(),Yv=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const i=t||this._allocateTargets();return this._textureToCubeUV(e,i),this._applyPMREM(i),this._cleanup(i),i}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,i={magFilter:Jr,minFilter:Jr,generateMipmaps:!1,type:x0,format:As,colorSpace:Co,depthBuffer:!1},r=Bw(e,t,i);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=Bw(e,t,i);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=jH(s)),this._blurMaterial=YH(s,e,t)}return r}_compileMaterial(e){const t=new bs(this._lodPlanes[0],e);this._renderer.compile(t,$v)}_sceneToCubeUV(e,t,i,r){const c=new Ar(90,1,t,i),u=[1,-1,1,1,1,1],d=[1,1,1,-1,-1,-1],h=this._renderer,m=h.autoClear,p=h.toneMapping;h.getClearColor(Fw),h.toneMapping=_o,h.autoClear=!1;const x=new C4({name:"PMREM.Background",side:Gi,depthWrite:!1,depthTest:!1}),y=new bs(new ff,x);let S=!1;const v=e.background;v?v.isColor&&(x.color.copy(v),e.background=null,S=!0):(x.color.copy(Fw),S=!0);for(let g=0;g<6;g++){const P=g%3;P===0?(c.up.set(0,u[g],0),c.lookAt(d[g],0,0)):P===1?(c.up.set(0,0,u[g]),c.lookAt(0,d[g],0)):(c.up.set(0,u[g],0),c.lookAt(0,0,d[g]));const w=this._cubeSize;tm(r,P*w,g>2?w:0,w,w),h.setRenderTarget(r),S&&h.render(y,c),h.render(e,c)}y.geometry.dispose(),y.material.dispose(),h.toneMapping=p,h.autoClear=m,e.background=v}_textureToCubeUV(e,t){const i=this._renderer,r=e.mapping===ju||e.mapping===Yu;r?(this._cubemapMaterial===null&&(this._cubemapMaterial=Vw()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=Hw());const s=r?this._cubemapMaterial:this._equirectMaterial,l=new bs(this._lodPlanes[0],s),c=s.uniforms;c.envMap.value=e;const u=this._cubeSize;tm(t,0,0,3*u,2*u),i.setRenderTarget(t),i.render(l,$v)}_applyPMREM(e){const t=this._renderer,i=t.autoClear;t.autoClear=!1;const r=this._lodPlanes.length;for(let s=1;s<r;s++){const l=Math.sqrt(this._sigmas[s]*this._sigmas[s]-this._sigmas[s-1]*this._sigmas[s-1]),c=kw[(r-s-1)%kw.length];this._blur(e,s-1,s,l,c)}t.autoClear=i}_blur(e,t,i,r,s){const l=this._pingPongRenderTarget;this._halfBlur(e,l,t,i,r,"latitudinal",s),this._halfBlur(l,e,i,i,r,"longitudinal",s)}_halfBlur(e,t,i,r,s,l,c){const u=this._renderer,d=this._blurMaterial;l!=="latitudinal"&&l!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const h=3,m=new bs(this._lodPlanes[r],d),p=d.uniforms,x=this._sizeLods[i]-1,y=isFinite(s)?Math.PI/(2*x):2*Math.PI/(2*xl-1),S=s/y,v=isFinite(s)?1+Math.floor(h*S):xl;v>xl&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${v} samples when the maximum is set to ${xl}`);const g=[];let P=0;for(let D=0;D<xl;++D){const V=D/S,R=Math.exp(-V*V/2);g.push(R),D===0?P+=R:D<v&&(P+=2*R)}for(let D=0;D<g.length;D++)g[D]=g[D]/P;p.envMap.value=e.texture,p.samples.value=v,p.weights.value=g,p.latitudinal.value=l==="latitudinal",c&&(p.poleAxis.value=c);const{_lodMax:w}=this;p.dTheta.value=y,p.mipInt.value=w-i;const C=this._sizeLods[r],z=3*C*(r>w-Su?r-w+Su:0),L=4*(this._cubeSize-C);tm(t,z,L,3*C,2*C),u.setRenderTarget(t),u.render(m,$v)}}function jH(n){const e=[],t=[],i=[];let r=n;const s=n-Su+1+Ow.length;for(let l=0;l<s;l++){const c=Math.pow(2,r);t.push(c);let u=1/c;l>n-Su?u=Ow[l-n+Su-1]:l===0&&(u=0),i.push(u);const d=1/(c-2),h=-d,m=1+d,p=[h,h,m,h,m,m,h,h,m,m,h,m],x=6,y=6,S=3,v=2,g=1,P=new Float32Array(S*y*x),w=new Float32Array(v*y*x),C=new Float32Array(g*y*x);for(let L=0;L<x;L++){const D=L%3*2/3-1,V=L>2?0:-1,R=[D,V,0,D+2/3,V,0,D+2/3,V+1,0,D,V,0,D+2/3,V+1,0,D,V+1,0];P.set(R,S*y*L),w.set(p,v*y*L);const T=[L,L,L,L,L,L];C.set(T,g*y*L)}const z=new Is;z.setAttribute("position",new Pr(P,S)),z.setAttribute("uv",new Pr(w,v)),z.setAttribute("faceIndex",new Pr(C,g)),e.push(z),r>Su&&r--}return{lodPlanes:e,sizeLods:t,sigmas:i}}function Bw(n,e,t){const i=new zl(n,e,t);return i.texture.mapping=_0,i.texture.name="PMREM.cubeUv",i.scissorTest=!0,i}function tm(n,e,t,i,r){n.viewport.set(e,t,i,r),n.scissor.set(e,t,i,r)}function YH(n,e,t){const i=new Float32Array(xl),r=new Ee(0,1,0);return new Ao({name:"SphericalGaussianBlur",defines:{n:xl,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${n}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:i},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:r}},vertexShader:Xx(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:vo,depthTest:!1,depthWrite:!1})}function Hw(){return new Ao({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Xx(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:vo,depthTest:!1,depthWrite:!1})}function Vw(){return new Ao({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Xx(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:vo,depthTest:!1,depthWrite:!1})}function Xx(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function KH(n){let e=new WeakMap,t=null;function i(c){if(c&&c.isTexture){const u=c.mapping,d=u===$_||u===X_,h=u===ju||u===Yu;if(d||h){let m=e.get(c);const p=m!==void 0?m.texture.pmremVersion:0;if(c.isRenderTargetTexture&&c.pmremVersion!==p)return t===null&&(t=new zw(n)),m=d?t.fromEquirectangular(c,m):t.fromCubemap(c,m),m.texture.pmremVersion=c.pmremVersion,e.set(c,m),m.texture;if(m!==void 0)return m.texture;{const x=c.image;return d&&x&&x.height>0||h&&x&&r(x)?(t===null&&(t=new zw(n)),m=d?t.fromEquirectangular(c):t.fromCubemap(c),m.texture.pmremVersion=c.pmremVersion,e.set(c,m),c.addEventListener("dispose",s),m.texture):null}}}return c}function r(c){let u=0;const d=6;for(let h=0;h<d;h++)c[h]!==void 0&&u++;return u===d}function s(c){const u=c.target;u.removeEventListener("dispose",s);const d=e.get(u);d!==void 0&&(e.delete(u),d.dispose())}function l(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:i,dispose:l}}function ZH(n){const e={};function t(i){if(e[i]!==void 0)return e[i];let r;switch(i){case"WEBGL_depth_texture":r=n.getExtension("WEBGL_depth_texture")||n.getExtension("MOZ_WEBGL_depth_texture")||n.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=n.getExtension("EXT_texture_filter_anisotropic")||n.getExtension("MOZ_EXT_texture_filter_anisotropic")||n.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=n.getExtension("WEBGL_compressed_texture_s3tc")||n.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=n.getExtension("WEBGL_compressed_texture_pvrtc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=n.getExtension(i)}return e[i]=r,r}return{has:function(i){return t(i)!==null},init:function(){t("EXT_color_buffer_float"),t("WEBGL_clip_cull_distance"),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture"),t("WEBGL_render_shared_exponent")},get:function(i){const r=t(i);return r===null&&w4("THREE.WebGLRenderer: "+i+" extension not supported."),r}}}function QH(n,e,t,i){const r={},s=new WeakMap;function l(m){const p=m.target;p.index!==null&&e.remove(p.index);for(const y in p.attributes)e.remove(p.attributes[y]);for(const y in p.morphAttributes){const S=p.morphAttributes[y];for(let v=0,g=S.length;v<g;v++)e.remove(S[v])}p.removeEventListener("dispose",l),delete r[p.id];const x=s.get(p);x&&(e.remove(x),s.delete(p)),i.releaseStatesOfGeometry(p),p.isInstancedBufferGeometry===!0&&delete p._maxInstanceCount,t.memory.geometries--}function c(m,p){return r[p.id]===!0||(p.addEventListener("dispose",l),r[p.id]=!0,t.memory.geometries++),p}function u(m){const p=m.attributes;for(const y in p)e.update(p[y],n.ARRAY_BUFFER);const x=m.morphAttributes;for(const y in x){const S=x[y];for(let v=0,g=S.length;v<g;v++)e.update(S[v],n.ARRAY_BUFFER)}}function d(m){const p=[],x=m.index,y=m.attributes.position;let S=0;if(x!==null){const P=x.array;S=x.version;for(let w=0,C=P.length;w<C;w+=3){const z=P[w+0],L=P[w+1],D=P[w+2];p.push(z,L,L,D,D,z)}}else if(y!==void 0){const P=y.array;S=y.version;for(let w=0,C=P.length/3-1;w<C;w+=3){const z=w+0,L=w+1,D=w+2;p.push(z,L,L,D,D,z)}}else return;const v=new(E4(p)?L4:P4)(p,1);v.version=S;const g=s.get(m);g&&e.remove(g),s.set(m,v)}function h(m){const p=s.get(m);if(p){const x=m.index;x!==null&&p.version<x.version&&d(m)}else d(m);return s.get(m)}return{get:c,update:u,getWireframeAttribute:h}}function JH(n,e,t){let i;function r(p){i=p}let s,l;function c(p){s=p.type,l=p.bytesPerElement}function u(p,x){n.drawElements(i,x,s,p*l),t.update(x,i,1)}function d(p,x,y){y!==0&&(n.drawElementsInstanced(i,x,s,p*l,y),t.update(x,i,y))}function h(p,x,y){if(y===0)return;const S=e.get("WEBGL_multi_draw");if(S===null)for(let v=0;v<y;v++)this.render(p[v]/l,x[v]);else{S.multiDrawElementsWEBGL(i,x,0,s,p,0,y);let v=0;for(let g=0;g<y;g++)v+=x[g];t.update(v,i,1)}}function m(p,x,y,S){if(y===0)return;const v=e.get("WEBGL_multi_draw");if(v===null)for(let g=0;g<p.length;g++)d(p[g]/l,x[g],S[g]);else{v.multiDrawElementsInstancedWEBGL(i,x,0,s,p,0,S,0,y);let g=0;for(let P=0;P<y;P++)g+=x[P];for(let P=0;P<S.length;P++)t.update(g,i,S[P])}}this.setMode=r,this.setIndex=c,this.render=u,this.renderInstances=d,this.renderMultiDraw=h,this.renderMultiDrawInstances=m}function eV(n){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function i(s,l,c){switch(t.calls++,l){case n.TRIANGLES:t.triangles+=c*(s/3);break;case n.LINES:t.lines+=c*(s/2);break;case n.LINE_STRIP:t.lines+=c*(s-1);break;case n.LINE_LOOP:t.lines+=c*s;break;case n.POINTS:t.points+=c*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",l);break}}function r(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:r,update:i}}function tV(n,e,t){const i=new WeakMap,r=new oi;function s(l,c,u){const d=l.morphTargetInfluences,h=c.morphAttributes.position||c.morphAttributes.normal||c.morphAttributes.color,m=h!==void 0?h.length:0;let p=i.get(c);if(p===void 0||p.count!==m){let R=function(){D.dispose(),i.delete(c),c.removeEventListener("dispose",R)};p!==void 0&&p.texture.dispose();const x=c.morphAttributes.position!==void 0,y=c.morphAttributes.normal!==void 0,S=c.morphAttributes.color!==void 0,v=c.morphAttributes.position||[],g=c.morphAttributes.normal||[],P=c.morphAttributes.color||[];let w=0;x===!0&&(w=1),y===!0&&(w=2),S===!0&&(w=3);let C=c.attributes.position.count*w,z=1;C>e.maxTextureSize&&(z=Math.ceil(C/e.maxTextureSize),C=e.maxTextureSize);const L=new Float32Array(C*z*4*m),D=new A4(L,C,z,m);D.type=fo,D.needsUpdate=!0;const V=w*4;for(let T=0;T<m;T++){const O=v[T],Z=g[T],W=P[T],K=C*z*4*T;for(let ne=0;ne<O.count;ne++){const Q=ne*V;x===!0&&(r.fromBufferAttribute(O,ne),L[K+Q+0]=r.x,L[K+Q+1]=r.y,L[K+Q+2]=r.z,L[K+Q+3]=0),y===!0&&(r.fromBufferAttribute(Z,ne),L[K+Q+4]=r.x,L[K+Q+5]=r.y,L[K+Q+6]=r.z,L[K+Q+7]=0),S===!0&&(r.fromBufferAttribute(W,ne),L[K+Q+8]=r.x,L[K+Q+9]=r.y,L[K+Q+10]=r.z,L[K+Q+11]=W.itemSize===4?r.w:1)}}p={count:m,texture:D,size:new Zt(C,z)},i.set(c,p),c.addEventListener("dispose",R)}if(l.isInstancedMesh===!0&&l.morphTexture!==null)u.getUniforms().setValue(n,"morphTexture",l.morphTexture,t);else{let x=0;for(let S=0;S<d.length;S++)x+=d[S];const y=c.morphTargetsRelative?1:1-x;u.getUniforms().setValue(n,"morphTargetBaseInfluence",y),u.getUniforms().setValue(n,"morphTargetInfluences",d)}u.getUniforms().setValue(n,"morphTargetsTexture",p.texture,t),u.getUniforms().setValue(n,"morphTargetsTextureSize",p.size)}return{update:s}}function nV(n,e,t,i){let r=new WeakMap;function s(u){const d=i.render.frame,h=u.geometry,m=e.get(u,h);if(r.get(m)!==d&&(e.update(m),r.set(m,d)),u.isInstancedMesh&&(u.hasEventListener("dispose",c)===!1&&u.addEventListener("dispose",c),r.get(u)!==d&&(t.update(u.instanceMatrix,n.ARRAY_BUFFER),u.instanceColor!==null&&t.update(u.instanceColor,n.ARRAY_BUFFER),r.set(u,d))),u.isSkinnedMesh){const p=u.skeleton;r.get(p)!==d&&(p.update(),r.set(p,d))}return m}function l(){r=new WeakMap}function c(u){const d=u.target;d.removeEventListener("dispose",c),t.remove(d.instanceMatrix),d.instanceColor!==null&&t.remove(d.instanceColor)}return{update:s,dispose:l}}class F4 extends Wi{constructor(e,t,i,r,s,l,c,u,d,h=Cu){if(h!==Cu&&h!==Qu)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");i===void 0&&h===Cu&&(i=Ku),i===void 0&&h===Qu&&(i=Zu),super(null,r,s,l,c,u,h,i,d),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=c!==void 0?c:Rr,this.minFilter=u!==void 0?u:Rr,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}const k4=new Wi,z4=new F4(1,1);z4.compareFunction=S4;const B4=new A4,H4=new Hk,V4=new N4,Gw=[],Ww=[],$w=new Float32Array(16),Xw=new Float32Array(9),qw=new Float32Array(4);function df(n,e,t){const i=n[0];if(i<=0||i>0)return n;const r=e*t;let s=Gw[r];if(s===void 0&&(s=new Float32Array(r),Gw[r]=s),e!==0){i.toArray(s,0);for(let l=1,c=0;l!==e;++l)c+=t,n[l].toArray(s,c)}return s}function qn(n,e){if(n.length!==e.length)return!1;for(let t=0,i=n.length;t<i;t++)if(n[t]!==e[t])return!1;return!0}function jn(n,e){for(let t=0,i=e.length;t<i;t++)n[t]=e[t]}function M0(n,e){let t=Ww[e];t===void 0&&(t=new Int32Array(e),Ww[e]=t);for(let i=0;i!==e;++i)t[i]=n.allocateTextureUnit();return t}function iV(n,e){const t=this.cache;t[0]!==e&&(n.uniform1f(this.addr,e),t[0]=e)}function rV(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(n.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(qn(t,e))return;n.uniform2fv(this.addr,e),jn(t,e)}}function sV(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(n.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(n.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(qn(t,e))return;n.uniform3fv(this.addr,e),jn(t,e)}}function aV(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(n.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(qn(t,e))return;n.uniform4fv(this.addr,e),jn(t,e)}}function oV(n,e){const t=this.cache,i=e.elements;if(i===void 0){if(qn(t,e))return;n.uniformMatrix2fv(this.addr,!1,e),jn(t,e)}else{if(qn(t,i))return;qw.set(i),n.uniformMatrix2fv(this.addr,!1,qw),jn(t,i)}}function lV(n,e){const t=this.cache,i=e.elements;if(i===void 0){if(qn(t,e))return;n.uniformMatrix3fv(this.addr,!1,e),jn(t,e)}else{if(qn(t,i))return;Xw.set(i),n.uniformMatrix3fv(this.addr,!1,Xw),jn(t,i)}}function cV(n,e){const t=this.cache,i=e.elements;if(i===void 0){if(qn(t,e))return;n.uniformMatrix4fv(this.addr,!1,e),jn(t,e)}else{if(qn(t,i))return;$w.set(i),n.uniformMatrix4fv(this.addr,!1,$w),jn(t,i)}}function uV(n,e){const t=this.cache;t[0]!==e&&(n.uniform1i(this.addr,e),t[0]=e)}function fV(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(n.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(qn(t,e))return;n.uniform2iv(this.addr,e),jn(t,e)}}function dV(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(n.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(qn(t,e))return;n.uniform3iv(this.addr,e),jn(t,e)}}function hV(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(n.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(qn(t,e))return;n.uniform4iv(this.addr,e),jn(t,e)}}function pV(n,e){const t=this.cache;t[0]!==e&&(n.uniform1ui(this.addr,e),t[0]=e)}function mV(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(n.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(qn(t,e))return;n.uniform2uiv(this.addr,e),jn(t,e)}}function gV(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(n.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(qn(t,e))return;n.uniform3uiv(this.addr,e),jn(t,e)}}function vV(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(n.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(qn(t,e))return;n.uniform4uiv(this.addr,e),jn(t,e)}}function _V(n,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(n.uniform1i(this.addr,r),i[0]=r);const s=this.type===n.SAMPLER_2D_SHADOW?z4:k4;t.setTexture2D(e||s,r)}function xV(n,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(n.uniform1i(this.addr,r),i[0]=r),t.setTexture3D(e||H4,r)}function yV(n,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(n.uniform1i(this.addr,r),i[0]=r),t.setTextureCube(e||V4,r)}function SV(n,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(n.uniform1i(this.addr,r),i[0]=r),t.setTexture2DArray(e||B4,r)}function MV(n){switch(n){case 5126:return iV;case 35664:return rV;case 35665:return sV;case 35666:return aV;case 35674:return oV;case 35675:return lV;case 35676:return cV;case 5124:case 35670:return uV;case 35667:case 35671:return fV;case 35668:case 35672:return dV;case 35669:case 35673:return hV;case 5125:return pV;case 36294:return mV;case 36295:return gV;case 36296:return vV;case 35678:case 36198:case 36298:case 36306:case 35682:return _V;case 35679:case 36299:case 36307:return xV;case 35680:case 36300:case 36308:case 36293:return yV;case 36289:case 36303:case 36311:case 36292:return SV}}function EV(n,e){n.uniform1fv(this.addr,e)}function wV(n,e){const t=df(e,this.size,2);n.uniform2fv(this.addr,t)}function TV(n,e){const t=df(e,this.size,3);n.uniform3fv(this.addr,t)}function AV(n,e){const t=df(e,this.size,4);n.uniform4fv(this.addr,t)}function bV(n,e){const t=df(e,this.size,4);n.uniformMatrix2fv(this.addr,!1,t)}function RV(n,e){const t=df(e,this.size,9);n.uniformMatrix3fv(this.addr,!1,t)}function CV(n,e){const t=df(e,this.size,16);n.uniformMatrix4fv(this.addr,!1,t)}function PV(n,e){n.uniform1iv(this.addr,e)}function LV(n,e){n.uniform2iv(this.addr,e)}function IV(n,e){n.uniform3iv(this.addr,e)}function DV(n,e){n.uniform4iv(this.addr,e)}function NV(n,e){n.uniform1uiv(this.addr,e)}function UV(n,e){n.uniform2uiv(this.addr,e)}function OV(n,e){n.uniform3uiv(this.addr,e)}function FV(n,e){n.uniform4uiv(this.addr,e)}function kV(n,e,t){const i=this.cache,r=e.length,s=M0(t,r);qn(i,s)||(n.uniform1iv(this.addr,s),jn(i,s));for(let l=0;l!==r;++l)t.setTexture2D(e[l]||k4,s[l])}function zV(n,e,t){const i=this.cache,r=e.length,s=M0(t,r);qn(i,s)||(n.uniform1iv(this.addr,s),jn(i,s));for(let l=0;l!==r;++l)t.setTexture3D(e[l]||H4,s[l])}function BV(n,e,t){const i=this.cache,r=e.length,s=M0(t,r);qn(i,s)||(n.uniform1iv(this.addr,s),jn(i,s));for(let l=0;l!==r;++l)t.setTextureCube(e[l]||V4,s[l])}function HV(n,e,t){const i=this.cache,r=e.length,s=M0(t,r);qn(i,s)||(n.uniform1iv(this.addr,s),jn(i,s));for(let l=0;l!==r;++l)t.setTexture2DArray(e[l]||B4,s[l])}function VV(n){switch(n){case 5126:return EV;case 35664:return wV;case 35665:return TV;case 35666:return AV;case 35674:return bV;case 35675:return RV;case 35676:return CV;case 5124:case 35670:return PV;case 35667:case 35671:return LV;case 35668:case 35672:return IV;case 35669:case 35673:return DV;case 5125:return NV;case 36294:return UV;case 36295:return OV;case 36296:return FV;case 35678:case 36198:case 36298:case 36306:case 35682:return kV;case 35679:case 36299:case 36307:return zV;case 35680:case 36300:case 36308:case 36293:return BV;case 36289:case 36303:case 36311:case 36292:return HV}}class GV{constructor(e,t,i){this.id=e,this.addr=i,this.cache=[],this.type=t.type,this.setValue=MV(t.type)}}class WV{constructor(e,t,i){this.id=e,this.addr=i,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=VV(t.type)}}class $V{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,i){const r=this.seq;for(let s=0,l=r.length;s!==l;++s){const c=r[s];c.setValue(e,t[c.id],i)}}}const Kv=/(\w+)(\])?(\[|\.)?/g;function jw(n,e){n.seq.push(e),n.map[e.id]=e}function XV(n,e,t){const i=n.name,r=i.length;for(Kv.lastIndex=0;;){const s=Kv.exec(i),l=Kv.lastIndex;let c=s[1];const u=s[2]==="]",d=s[3];if(u&&(c=c|0),d===void 0||d==="["&&l+2===r){jw(t,d===void 0?new GV(c,n,e):new WV(c,n,e));break}else{let m=t.map[c];m===void 0&&(m=new $V(c),jw(t,m)),t=m}}}class _m{constructor(e,t){this.seq=[],this.map={};const i=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let r=0;r<i;++r){const s=e.getActiveUniform(t,r),l=e.getUniformLocation(t,s.name);XV(s,l,this)}}setValue(e,t,i,r){const s=this.map[t];s!==void 0&&s.setValue(e,i,r)}setOptional(e,t,i){const r=t[i];r!==void 0&&this.setValue(e,i,r)}static upload(e,t,i,r){for(let s=0,l=t.length;s!==l;++s){const c=t[s],u=i[c.id];u.needsUpdate!==!1&&c.setValue(e,u.value,r)}}static seqWithValue(e,t){const i=[];for(let r=0,s=e.length;r!==s;++r){const l=e[r];l.id in t&&i.push(l)}return i}}function Yw(n,e,t){const i=n.createShader(e);return n.shaderSource(i,t),n.compileShader(i),i}const qV=37297;let jV=0;function YV(n,e){const t=n.split(`
`),i=[],r=Math.max(e-6,0),s=Math.min(e+6,t.length);for(let l=r;l<s;l++){const c=l+1;i.push(`${c===e?">":" "} ${c}: ${t[l]}`)}return i.join(`
`)}function KV(n){const e=rn.getPrimaries(rn.workingColorSpace),t=rn.getPrimaries(n);let i;switch(e===t?i="":e===Wm&&t===Gm?i="LinearDisplayP3ToLinearSRGB":e===Gm&&t===Wm&&(i="LinearSRGBToLinearDisplayP3"),n){case Co:case y0:return[i,"LinearTransferOETF"];case ms:case Gx:return[i,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space:",n),[i,"LinearTransferOETF"]}}function Kw(n,e,t){const i=n.getShaderParameter(e,n.COMPILE_STATUS),r=n.getShaderInfoLog(e).trim();if(i&&r==="")return"";const s=/ERROR: 0:(\d+)/.exec(r);if(s){const l=parseInt(s[1]);return t.toUpperCase()+`

`+r+`

`+YV(n.getShaderSource(e),l)}else return r}function ZV(n,e){const t=KV(e);return`vec4 ${n}( vec4 value ) { return ${t[0]}( ${t[1]}( value ) ); }`}function QV(n,e){let t;switch(e){case sk:t="Linear";break;case ak:t="Reinhard";break;case ok:t="OptimizedCineon";break;case lk:t="ACESFilmic";break;case uk:t="AgX";break;case fk:t="Neutral";break;case ck:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+n+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function JV(n){return[n.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",n.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(wd).join(`
`)}function eG(n){const e=[];for(const t in n){const i=n[t];i!==!1&&e.push("#define "+t+" "+i)}return e.join(`
`)}function tG(n,e){const t={},i=n.getProgramParameter(e,n.ACTIVE_ATTRIBUTES);for(let r=0;r<i;r++){const s=n.getActiveAttrib(e,r),l=s.name;let c=1;s.type===n.FLOAT_MAT2&&(c=2),s.type===n.FLOAT_MAT3&&(c=3),s.type===n.FLOAT_MAT4&&(c=4),t[l]={type:s.type,location:n.getAttribLocation(e,l),locationSize:c}}return t}function wd(n){return n!==""}function Zw(n,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return n.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Qw(n,e){return n.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const nG=/^[ \t]*#include +<([\w\d./]+)>/gm;function K_(n){return n.replace(nG,rG)}const iG=new Map;function rG(n,e){let t=Ot[e];if(t===void 0){const i=iG.get(e);if(i!==void 0)t=Ot[i],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,i);else throw new Error("Can not resolve #include <"+e+">")}return K_(t)}const sG=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Jw(n){return n.replace(sG,aG)}function aG(n,e,t,i){let r="";for(let s=parseInt(e);s<parseInt(t);s++)r+=i.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return r}function eT(n){let e=`precision ${n.precision} float;
	precision ${n.precision} int;
	precision ${n.precision} sampler2D;
	precision ${n.precision} samplerCube;
	precision ${n.precision} sampler3D;
	precision ${n.precision} sampler2DArray;
	precision ${n.precision} sampler2DShadow;
	precision ${n.precision} samplerCubeShadow;
	precision ${n.precision} sampler2DArrayShadow;
	precision ${n.precision} isampler2D;
	precision ${n.precision} isampler3D;
	precision ${n.precision} isamplerCube;
	precision ${n.precision} isampler2DArray;
	precision ${n.precision} usampler2D;
	precision ${n.precision} usampler3D;
	precision ${n.precision} usamplerCube;
	precision ${n.precision} usampler2DArray;
	`;return n.precision==="highp"?e+=`
#define HIGH_PRECISION`:n.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:n.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function oG(n){let e="SHADOWMAP_TYPE_BASIC";return n.shadowMapType===f4?e="SHADOWMAP_TYPE_PCF":n.shadowMapType===LF?e="SHADOWMAP_TYPE_PCF_SOFT":n.shadowMapType===ta&&(e="SHADOWMAP_TYPE_VSM"),e}function lG(n){let e="ENVMAP_TYPE_CUBE";if(n.envMap)switch(n.envMapMode){case ju:case Yu:e="ENVMAP_TYPE_CUBE";break;case _0:e="ENVMAP_TYPE_CUBE_UV";break}return e}function cG(n){let e="ENVMAP_MODE_REFLECTION";if(n.envMap)switch(n.envMapMode){case Yu:e="ENVMAP_MODE_REFRACTION";break}return e}function uG(n){let e="ENVMAP_BLENDING_NONE";if(n.envMap)switch(n.combine){case d4:e="ENVMAP_BLENDING_MULTIPLY";break;case ik:e="ENVMAP_BLENDING_MIX";break;case rk:e="ENVMAP_BLENDING_ADD";break}return e}function fG(n){const e=n.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,i=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:i,maxMip:t}}function dG(n,e,t,i){const r=n.getContext(),s=t.defines;let l=t.vertexShader,c=t.fragmentShader;const u=oG(t),d=lG(t),h=cG(t),m=uG(t),p=fG(t),x=JV(t),y=eG(s),S=r.createProgram();let v,g,P=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(v=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y].filter(wd).join(`
`),v.length>0&&(v+=`
`),g=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y].filter(wd).join(`
`),g.length>0&&(g+=`
`)):(v=[eT(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y,t.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",t.batching?"#define USE_BATCHING":"",t.batchingColor?"#define USE_BATCHING_COLOR":"",t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.instancingMorph?"#define USE_INSTANCING_MORPH":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(wd).join(`
`),g=[eT(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+d:"",t.envMap?"#define "+h:"",t.envMap?"#define "+m:"",p?"#define CUBEUV_TEXEL_WIDTH "+p.texelWidth:"",p?"#define CUBEUV_TEXEL_HEIGHT "+p.texelHeight:"",p?"#define CUBEUV_MAX_MIP "+p.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.dispersion?"#define USE_DISPERSION":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor||t.batchingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==_o?"#define TONE_MAPPING":"",t.toneMapping!==_o?Ot.tonemapping_pars_fragment:"",t.toneMapping!==_o?QV("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",Ot.colorspace_pars_fragment,ZV("linearToOutputTexel",t.outputColorSpace),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(wd).join(`
`)),l=K_(l),l=Zw(l,t),l=Qw(l,t),c=K_(c),c=Zw(c,t),c=Qw(c,t),l=Jw(l),c=Jw(c),t.isRawShaderMaterial!==!0&&(P=`#version 300 es
`,v=[x,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+v,g=["#define varying in",t.glslVersion===gw?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===gw?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+g);const w=P+v+l,C=P+g+c,z=Yw(r,r.VERTEX_SHADER,w),L=Yw(r,r.FRAGMENT_SHADER,C);r.attachShader(S,z),r.attachShader(S,L),t.index0AttributeName!==void 0?r.bindAttribLocation(S,0,t.index0AttributeName):t.morphTargets===!0&&r.bindAttribLocation(S,0,"position"),r.linkProgram(S);function D(O){if(n.debug.checkShaderErrors){const Z=r.getProgramInfoLog(S).trim(),W=r.getShaderInfoLog(z).trim(),K=r.getShaderInfoLog(L).trim();let ne=!0,Q=!0;if(r.getProgramParameter(S,r.LINK_STATUS)===!1)if(ne=!1,typeof n.debug.onShaderError=="function")n.debug.onShaderError(r,S,z,L);else{const se=Kw(r,z,"vertex"),G=Kw(r,L,"fragment");console.error("THREE.WebGLProgram: Shader Error "+r.getError()+" - VALIDATE_STATUS "+r.getProgramParameter(S,r.VALIDATE_STATUS)+`

Material Name: `+O.name+`
Material Type: `+O.type+`

Program Info Log: `+Z+`
`+se+`
`+G)}else Z!==""?console.warn("THREE.WebGLProgram: Program Info Log:",Z):(W===""||K==="")&&(Q=!1);Q&&(O.diagnostics={runnable:ne,programLog:Z,vertexShader:{log:W,prefix:v},fragmentShader:{log:K,prefix:g}})}r.deleteShader(z),r.deleteShader(L),V=new _m(r,S),R=tG(r,S)}let V;this.getUniforms=function(){return V===void 0&&D(this),V};let R;this.getAttributes=function(){return R===void 0&&D(this),R};let T=t.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return T===!1&&(T=r.getProgramParameter(S,qV)),T},this.destroy=function(){i.releaseStatesOfProgram(this),r.deleteProgram(S),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=jV++,this.cacheKey=e,this.usedTimes=1,this.program=S,this.vertexShader=z,this.fragmentShader=L,this}let hG=0;class pG{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,i=e.fragmentShader,r=this._getShaderStage(t),s=this._getShaderStage(i),l=this._getShaderCacheForMaterial(e);return l.has(r)===!1&&(l.add(r),r.usedTimes++),l.has(s)===!1&&(l.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const i of t)i.usedTimes--,i.usedTimes===0&&this.shaderCache.delete(i.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let i=t.get(e);return i===void 0&&(i=new Set,t.set(e,i)),i}_getShaderStage(e){const t=this.shaderCache;let i=t.get(e);return i===void 0&&(i=new mG(e),t.set(e,i)),i}}class mG{constructor(e){this.id=hG++,this.code=e,this.usedTimes=0}}function gG(n,e,t,i,r,s,l){const c=new $x,u=new pG,d=new Set,h=[],m=r.logarithmicDepthBuffer,p=r.vertexTextures;let x=r.precision;const y={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function S(R){return d.add(R),R===0?"uv":`uv${R}`}function v(R,T,O,Z,W){const K=Z.fog,ne=W.geometry,Q=R.isMeshStandardMaterial?Z.environment:null,se=(R.isMeshStandardMaterial?t:e).get(R.envMap||Q),G=se&&se.mapping===_0?se.image.height:null,de=y[R.type];R.precision!==null&&(x=r.getMaxPrecision(R.precision),x!==R.precision&&console.warn("THREE.WebGLProgram.getParameters:",R.precision,"not supported, using",x,"instead."));const le=ne.morphAttributes.position||ne.morphAttributes.normal||ne.morphAttributes.color,X=le!==void 0?le.length:0;let he=0;ne.morphAttributes.position!==void 0&&(he=1),ne.morphAttributes.normal!==void 0&&(he=2),ne.morphAttributes.color!==void 0&&(he=3);let He,Y,ie,xe;if(de){const xt=xs[de];He=xt.vertexShader,Y=xt.fragmentShader}else He=R.vertexShader,Y=R.fragmentShader,u.update(R),ie=u.getVertexShaderID(R),xe=u.getFragmentShaderID(R);const pe=n.getRenderTarget(),Oe=W.isInstancedMesh===!0,Ne=W.isBatchedMesh===!0,Ye=!!R.map,U=!!R.matcap,Je=!!se,nt=!!R.aoMap,Tt=!!R.lightMap,Ve=!!R.bumpMap,ut=!!R.normalMap,tt=!!R.displacementMap,Ke=!!R.emissiveMap,Lt=!!R.metalnessMap,I=!!R.roughnessMap,E=R.anisotropy>0,j=R.clearcoat>0,ae=R.dispersion>0,ce=R.iridescence>0,ue=R.sheen>0,Fe=R.transmission>0,Me=E&&!!R.anisotropyMap,Se=j&&!!R.clearcoatMap,Ze=j&&!!R.clearcoatNormalMap,me=j&&!!R.clearcoatRoughnessMap,Pe=ce&&!!R.iridescenceMap,it=ce&&!!R.iridescenceThicknessMap,Xe=ue&&!!R.sheenColorMap,Te=ue&&!!R.sheenRoughnessMap,et=!!R.specularMap,rt=!!R.specularColorMap,bt=!!R.specularIntensityMap,N=Fe&&!!R.transmissionMap,Ae=Fe&&!!R.thicknessMap,ee=!!R.gradientMap,te=!!R.alphaMap,ge=R.alphaTest>0,qe=!!R.alphaHash,dt=!!R.extensions;let Pt=_o;R.toneMapped&&(pe===null||pe.isXRRenderTarget===!0)&&(Pt=n.toneMapping);const Nt={shaderID:de,shaderType:R.type,shaderName:R.name,vertexShader:He,fragmentShader:Y,defines:R.defines,customVertexShaderID:ie,customFragmentShaderID:xe,isRawShaderMaterial:R.isRawShaderMaterial===!0,glslVersion:R.glslVersion,precision:x,batching:Ne,batchingColor:Ne&&W._colorsTexture!==null,instancing:Oe,instancingColor:Oe&&W.instanceColor!==null,instancingMorph:Oe&&W.morphTexture!==null,supportsVertexTextures:p,outputColorSpace:pe===null?n.outputColorSpace:pe.isXRRenderTarget===!0?pe.texture.colorSpace:Co,alphaToCoverage:!!R.alphaToCoverage,map:Ye,matcap:U,envMap:Je,envMapMode:Je&&se.mapping,envMapCubeUVHeight:G,aoMap:nt,lightMap:Tt,bumpMap:Ve,normalMap:ut,displacementMap:p&&tt,emissiveMap:Ke,normalMapObjectSpace:ut&&R.normalMapType===Tk,normalMapTangentSpace:ut&&R.normalMapType===y4,metalnessMap:Lt,roughnessMap:I,anisotropy:E,anisotropyMap:Me,clearcoat:j,clearcoatMap:Se,clearcoatNormalMap:Ze,clearcoatRoughnessMap:me,dispersion:ae,iridescence:ce,iridescenceMap:Pe,iridescenceThicknessMap:it,sheen:ue,sheenColorMap:Xe,sheenRoughnessMap:Te,specularMap:et,specularColorMap:rt,specularIntensityMap:bt,transmission:Fe,transmissionMap:N,thicknessMap:Ae,gradientMap:ee,opaque:R.transparent===!1&&R.blending===Ru&&R.alphaToCoverage===!1,alphaMap:te,alphaTest:ge,alphaHash:qe,combine:R.combine,mapUv:Ye&&S(R.map.channel),aoMapUv:nt&&S(R.aoMap.channel),lightMapUv:Tt&&S(R.lightMap.channel),bumpMapUv:Ve&&S(R.bumpMap.channel),normalMapUv:ut&&S(R.normalMap.channel),displacementMapUv:tt&&S(R.displacementMap.channel),emissiveMapUv:Ke&&S(R.emissiveMap.channel),metalnessMapUv:Lt&&S(R.metalnessMap.channel),roughnessMapUv:I&&S(R.roughnessMap.channel),anisotropyMapUv:Me&&S(R.anisotropyMap.channel),clearcoatMapUv:Se&&S(R.clearcoatMap.channel),clearcoatNormalMapUv:Ze&&S(R.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:me&&S(R.clearcoatRoughnessMap.channel),iridescenceMapUv:Pe&&S(R.iridescenceMap.channel),iridescenceThicknessMapUv:it&&S(R.iridescenceThicknessMap.channel),sheenColorMapUv:Xe&&S(R.sheenColorMap.channel),sheenRoughnessMapUv:Te&&S(R.sheenRoughnessMap.channel),specularMapUv:et&&S(R.specularMap.channel),specularColorMapUv:rt&&S(R.specularColorMap.channel),specularIntensityMapUv:bt&&S(R.specularIntensityMap.channel),transmissionMapUv:N&&S(R.transmissionMap.channel),thicknessMapUv:Ae&&S(R.thicknessMap.channel),alphaMapUv:te&&S(R.alphaMap.channel),vertexTangents:!!ne.attributes.tangent&&(ut||E),vertexColors:R.vertexColors,vertexAlphas:R.vertexColors===!0&&!!ne.attributes.color&&ne.attributes.color.itemSize===4,pointsUvs:W.isPoints===!0&&!!ne.attributes.uv&&(Ye||te),fog:!!K,useFog:R.fog===!0,fogExp2:!!K&&K.isFogExp2,flatShading:R.flatShading===!0,sizeAttenuation:R.sizeAttenuation===!0,logarithmicDepthBuffer:m,skinning:W.isSkinnedMesh===!0,morphTargets:ne.morphAttributes.position!==void 0,morphNormals:ne.morphAttributes.normal!==void 0,morphColors:ne.morphAttributes.color!==void 0,morphTargetsCount:X,morphTextureStride:he,numDirLights:T.directional.length,numPointLights:T.point.length,numSpotLights:T.spot.length,numSpotLightMaps:T.spotLightMap.length,numRectAreaLights:T.rectArea.length,numHemiLights:T.hemi.length,numDirLightShadows:T.directionalShadowMap.length,numPointLightShadows:T.pointShadowMap.length,numSpotLightShadows:T.spotShadowMap.length,numSpotLightShadowsWithMaps:T.numSpotLightShadowsWithMaps,numLightProbes:T.numLightProbes,numClippingPlanes:l.numPlanes,numClipIntersection:l.numIntersection,dithering:R.dithering,shadowMapEnabled:n.shadowMap.enabled&&O.length>0,shadowMapType:n.shadowMap.type,toneMapping:Pt,decodeVideoTexture:Ye&&R.map.isVideoTexture===!0&&rn.getTransfer(R.map.colorSpace)===vn,premultipliedAlpha:R.premultipliedAlpha,doubleSided:R.side===aa,flipSided:R.side===Gi,useDepthPacking:R.depthPacking>=0,depthPacking:R.depthPacking||0,index0AttributeName:R.index0AttributeName,extensionClipCullDistance:dt&&R.extensions.clipCullDistance===!0&&i.has("WEBGL_clip_cull_distance"),extensionMultiDraw:dt&&R.extensions.multiDraw===!0&&i.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:i.has("KHR_parallel_shader_compile"),customProgramCacheKey:R.customProgramCacheKey()};return Nt.vertexUv1s=d.has(1),Nt.vertexUv2s=d.has(2),Nt.vertexUv3s=d.has(3),d.clear(),Nt}function g(R){const T=[];if(R.shaderID?T.push(R.shaderID):(T.push(R.customVertexShaderID),T.push(R.customFragmentShaderID)),R.defines!==void 0)for(const O in R.defines)T.push(O),T.push(R.defines[O]);return R.isRawShaderMaterial===!1&&(P(T,R),w(T,R),T.push(n.outputColorSpace)),T.push(R.customProgramCacheKey),T.join()}function P(R,T){R.push(T.precision),R.push(T.outputColorSpace),R.push(T.envMapMode),R.push(T.envMapCubeUVHeight),R.push(T.mapUv),R.push(T.alphaMapUv),R.push(T.lightMapUv),R.push(T.aoMapUv),R.push(T.bumpMapUv),R.push(T.normalMapUv),R.push(T.displacementMapUv),R.push(T.emissiveMapUv),R.push(T.metalnessMapUv),R.push(T.roughnessMapUv),R.push(T.anisotropyMapUv),R.push(T.clearcoatMapUv),R.push(T.clearcoatNormalMapUv),R.push(T.clearcoatRoughnessMapUv),R.push(T.iridescenceMapUv),R.push(T.iridescenceThicknessMapUv),R.push(T.sheenColorMapUv),R.push(T.sheenRoughnessMapUv),R.push(T.specularMapUv),R.push(T.specularColorMapUv),R.push(T.specularIntensityMapUv),R.push(T.transmissionMapUv),R.push(T.thicknessMapUv),R.push(T.combine),R.push(T.fogExp2),R.push(T.sizeAttenuation),R.push(T.morphTargetsCount),R.push(T.morphAttributeCount),R.push(T.numDirLights),R.push(T.numPointLights),R.push(T.numSpotLights),R.push(T.numSpotLightMaps),R.push(T.numHemiLights),R.push(T.numRectAreaLights),R.push(T.numDirLightShadows),R.push(T.numPointLightShadows),R.push(T.numSpotLightShadows),R.push(T.numSpotLightShadowsWithMaps),R.push(T.numLightProbes),R.push(T.shadowMapType),R.push(T.toneMapping),R.push(T.numClippingPlanes),R.push(T.numClipIntersection),R.push(T.depthPacking)}function w(R,T){c.disableAll(),T.supportsVertexTextures&&c.enable(0),T.instancing&&c.enable(1),T.instancingColor&&c.enable(2),T.instancingMorph&&c.enable(3),T.matcap&&c.enable(4),T.envMap&&c.enable(5),T.normalMapObjectSpace&&c.enable(6),T.normalMapTangentSpace&&c.enable(7),T.clearcoat&&c.enable(8),T.iridescence&&c.enable(9),T.alphaTest&&c.enable(10),T.vertexColors&&c.enable(11),T.vertexAlphas&&c.enable(12),T.vertexUv1s&&c.enable(13),T.vertexUv2s&&c.enable(14),T.vertexUv3s&&c.enable(15),T.vertexTangents&&c.enable(16),T.anisotropy&&c.enable(17),T.alphaHash&&c.enable(18),T.batching&&c.enable(19),T.dispersion&&c.enable(20),T.batchingColor&&c.enable(21),R.push(c.mask),c.disableAll(),T.fog&&c.enable(0),T.useFog&&c.enable(1),T.flatShading&&c.enable(2),T.logarithmicDepthBuffer&&c.enable(3),T.skinning&&c.enable(4),T.morphTargets&&c.enable(5),T.morphNormals&&c.enable(6),T.morphColors&&c.enable(7),T.premultipliedAlpha&&c.enable(8),T.shadowMapEnabled&&c.enable(9),T.doubleSided&&c.enable(10),T.flipSided&&c.enable(11),T.useDepthPacking&&c.enable(12),T.dithering&&c.enable(13),T.transmission&&c.enable(14),T.sheen&&c.enable(15),T.opaque&&c.enable(16),T.pointsUvs&&c.enable(17),T.decodeVideoTexture&&c.enable(18),T.alphaToCoverage&&c.enable(19),R.push(c.mask)}function C(R){const T=y[R.type];let O;if(T){const Z=xs[T];O=Jk.clone(Z.uniforms)}else O=R.uniforms;return O}function z(R,T){let O;for(let Z=0,W=h.length;Z<W;Z++){const K=h[Z];if(K.cacheKey===T){O=K,++O.usedTimes;break}}return O===void 0&&(O=new dG(n,T,R,s),h.push(O)),O}function L(R){if(--R.usedTimes===0){const T=h.indexOf(R);h[T]=h[h.length-1],h.pop(),R.destroy()}}function D(R){u.remove(R)}function V(){u.dispose()}return{getParameters:v,getProgramCacheKey:g,getUniforms:C,acquireProgram:z,releaseProgram:L,releaseShaderCache:D,programs:h,dispose:V}}function vG(){let n=new WeakMap;function e(s){let l=n.get(s);return l===void 0&&(l={},n.set(s,l)),l}function t(s){n.delete(s)}function i(s,l,c){n.get(s)[l]=c}function r(){n=new WeakMap}return{get:e,remove:t,update:i,dispose:r}}function _G(n,e){return n.groupOrder!==e.groupOrder?n.groupOrder-e.groupOrder:n.renderOrder!==e.renderOrder?n.renderOrder-e.renderOrder:n.material.id!==e.material.id?n.material.id-e.material.id:n.z!==e.z?n.z-e.z:n.id-e.id}function tT(n,e){return n.groupOrder!==e.groupOrder?n.groupOrder-e.groupOrder:n.renderOrder!==e.renderOrder?n.renderOrder-e.renderOrder:n.z!==e.z?e.z-n.z:n.id-e.id}function nT(){const n=[];let e=0;const t=[],i=[],r=[];function s(){e=0,t.length=0,i.length=0,r.length=0}function l(m,p,x,y,S,v){let g=n[e];return g===void 0?(g={id:m.id,object:m,geometry:p,material:x,groupOrder:y,renderOrder:m.renderOrder,z:S,group:v},n[e]=g):(g.id=m.id,g.object=m,g.geometry=p,g.material=x,g.groupOrder=y,g.renderOrder=m.renderOrder,g.z=S,g.group=v),e++,g}function c(m,p,x,y,S,v){const g=l(m,p,x,y,S,v);x.transmission>0?i.push(g):x.transparent===!0?r.push(g):t.push(g)}function u(m,p,x,y,S,v){const g=l(m,p,x,y,S,v);x.transmission>0?i.unshift(g):x.transparent===!0?r.unshift(g):t.unshift(g)}function d(m,p){t.length>1&&t.sort(m||_G),i.length>1&&i.sort(p||tT),r.length>1&&r.sort(p||tT)}function h(){for(let m=e,p=n.length;m<p;m++){const x=n[m];if(x.id===null)break;x.id=null,x.object=null,x.geometry=null,x.material=null,x.group=null}}return{opaque:t,transmissive:i,transparent:r,init:s,push:c,unshift:u,finish:h,sort:d}}function xG(){let n=new WeakMap;function e(i,r){const s=n.get(i);let l;return s===void 0?(l=new nT,n.set(i,[l])):r>=s.length?(l=new nT,s.push(l)):l=s[r],l}function t(){n=new WeakMap}return{get:e,dispose:t}}function yG(){const n={};return{get:function(e){if(n[e.id]!==void 0)return n[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new Ee,color:new jt};break;case"SpotLight":t={position:new Ee,direction:new Ee,color:new jt,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new Ee,color:new jt,distance:0,decay:0};break;case"HemisphereLight":t={direction:new Ee,skyColor:new jt,groundColor:new jt};break;case"RectAreaLight":t={color:new jt,position:new Ee,halfWidth:new Ee,halfHeight:new Ee};break}return n[e.id]=t,t}}}function SG(){const n={};return{get:function(e){if(n[e.id]!==void 0)return n[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Zt};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Zt};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Zt,shadowCameraNear:1,shadowCameraFar:1e3};break}return n[e.id]=t,t}}}let MG=0;function EG(n,e){return(e.castShadow?2:0)-(n.castShadow?2:0)+(e.map?1:0)-(n.map?1:0)}function wG(n){const e=new yG,t=SG(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let d=0;d<9;d++)i.probe.push(new Ee);const r=new Ee,s=new Ln,l=new Ln;function c(d){let h=0,m=0,p=0;for(let R=0;R<9;R++)i.probe[R].set(0,0,0);let x=0,y=0,S=0,v=0,g=0,P=0,w=0,C=0,z=0,L=0,D=0;d.sort(EG);for(let R=0,T=d.length;R<T;R++){const O=d[R],Z=O.color,W=O.intensity,K=O.distance,ne=O.shadow&&O.shadow.map?O.shadow.map.texture:null;if(O.isAmbientLight)h+=Z.r*W,m+=Z.g*W,p+=Z.b*W;else if(O.isLightProbe){for(let Q=0;Q<9;Q++)i.probe[Q].addScaledVector(O.sh.coefficients[Q],W);D++}else if(O.isDirectionalLight){const Q=e.get(O);if(Q.color.copy(O.color).multiplyScalar(O.intensity),O.castShadow){const se=O.shadow,G=t.get(O);G.shadowBias=se.bias,G.shadowNormalBias=se.normalBias,G.shadowRadius=se.radius,G.shadowMapSize=se.mapSize,i.directionalShadow[x]=G,i.directionalShadowMap[x]=ne,i.directionalShadowMatrix[x]=O.shadow.matrix,P++}i.directional[x]=Q,x++}else if(O.isSpotLight){const Q=e.get(O);Q.position.setFromMatrixPosition(O.matrixWorld),Q.color.copy(Z).multiplyScalar(W),Q.distance=K,Q.coneCos=Math.cos(O.angle),Q.penumbraCos=Math.cos(O.angle*(1-O.penumbra)),Q.decay=O.decay,i.spot[S]=Q;const se=O.shadow;if(O.map&&(i.spotLightMap[z]=O.map,z++,se.updateMatrices(O),O.castShadow&&L++),i.spotLightMatrix[S]=se.matrix,O.castShadow){const G=t.get(O);G.shadowBias=se.bias,G.shadowNormalBias=se.normalBias,G.shadowRadius=se.radius,G.shadowMapSize=se.mapSize,i.spotShadow[S]=G,i.spotShadowMap[S]=ne,C++}S++}else if(O.isRectAreaLight){const Q=e.get(O);Q.color.copy(Z).multiplyScalar(W),Q.halfWidth.set(O.width*.5,0,0),Q.halfHeight.set(0,O.height*.5,0),i.rectArea[v]=Q,v++}else if(O.isPointLight){const Q=e.get(O);if(Q.color.copy(O.color).multiplyScalar(O.intensity),Q.distance=O.distance,Q.decay=O.decay,O.castShadow){const se=O.shadow,G=t.get(O);G.shadowBias=se.bias,G.shadowNormalBias=se.normalBias,G.shadowRadius=se.radius,G.shadowMapSize=se.mapSize,G.shadowCameraNear=se.camera.near,G.shadowCameraFar=se.camera.far,i.pointShadow[y]=G,i.pointShadowMap[y]=ne,i.pointShadowMatrix[y]=O.shadow.matrix,w++}i.point[y]=Q,y++}else if(O.isHemisphereLight){const Q=e.get(O);Q.skyColor.copy(O.color).multiplyScalar(W),Q.groundColor.copy(O.groundColor).multiplyScalar(W),i.hemi[g]=Q,g++}}v>0&&(n.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=at.LTC_FLOAT_1,i.rectAreaLTC2=at.LTC_FLOAT_2):(i.rectAreaLTC1=at.LTC_HALF_1,i.rectAreaLTC2=at.LTC_HALF_2)),i.ambient[0]=h,i.ambient[1]=m,i.ambient[2]=p;const V=i.hash;(V.directionalLength!==x||V.pointLength!==y||V.spotLength!==S||V.rectAreaLength!==v||V.hemiLength!==g||V.numDirectionalShadows!==P||V.numPointShadows!==w||V.numSpotShadows!==C||V.numSpotMaps!==z||V.numLightProbes!==D)&&(i.directional.length=x,i.spot.length=S,i.rectArea.length=v,i.point.length=y,i.hemi.length=g,i.directionalShadow.length=P,i.directionalShadowMap.length=P,i.pointShadow.length=w,i.pointShadowMap.length=w,i.spotShadow.length=C,i.spotShadowMap.length=C,i.directionalShadowMatrix.length=P,i.pointShadowMatrix.length=w,i.spotLightMatrix.length=C+z-L,i.spotLightMap.length=z,i.numSpotLightShadowsWithMaps=L,i.numLightProbes=D,V.directionalLength=x,V.pointLength=y,V.spotLength=S,V.rectAreaLength=v,V.hemiLength=g,V.numDirectionalShadows=P,V.numPointShadows=w,V.numSpotShadows=C,V.numSpotMaps=z,V.numLightProbes=D,i.version=MG++)}function u(d,h){let m=0,p=0,x=0,y=0,S=0;const v=h.matrixWorldInverse;for(let g=0,P=d.length;g<P;g++){const w=d[g];if(w.isDirectionalLight){const C=i.directional[m];C.direction.setFromMatrixPosition(w.matrixWorld),r.setFromMatrixPosition(w.target.matrixWorld),C.direction.sub(r),C.direction.transformDirection(v),m++}else if(w.isSpotLight){const C=i.spot[x];C.position.setFromMatrixPosition(w.matrixWorld),C.position.applyMatrix4(v),C.direction.setFromMatrixPosition(w.matrixWorld),r.setFromMatrixPosition(w.target.matrixWorld),C.direction.sub(r),C.direction.transformDirection(v),x++}else if(w.isRectAreaLight){const C=i.rectArea[y];C.position.setFromMatrixPosition(w.matrixWorld),C.position.applyMatrix4(v),l.identity(),s.copy(w.matrixWorld),s.premultiply(v),l.extractRotation(s),C.halfWidth.set(w.width*.5,0,0),C.halfHeight.set(0,w.height*.5,0),C.halfWidth.applyMatrix4(l),C.halfHeight.applyMatrix4(l),y++}else if(w.isPointLight){const C=i.point[p];C.position.setFromMatrixPosition(w.matrixWorld),C.position.applyMatrix4(v),p++}else if(w.isHemisphereLight){const C=i.hemi[S];C.direction.setFromMatrixPosition(w.matrixWorld),C.direction.transformDirection(v),S++}}}return{setup:c,setupView:u,state:i}}function iT(n){const e=new wG(n),t=[],i=[];function r(h){d.camera=h,t.length=0,i.length=0}function s(h){t.push(h)}function l(h){i.push(h)}function c(){e.setup(t)}function u(h){e.setupView(t,h)}const d={lightsArray:t,shadowsArray:i,camera:null,lights:e,transmissionRenderTarget:{}};return{init:r,state:d,setupLights:c,setupLightsView:u,pushLight:s,pushShadow:l}}function TG(n){let e=new WeakMap;function t(r,s=0){const l=e.get(r);let c;return l===void 0?(c=new iT(n),e.set(r,[c])):s>=l.length?(c=new iT(n),l.push(c)):c=l[s],c}function i(){e=new WeakMap}return{get:t,dispose:i}}class AG extends uf{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=Ek,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class bG extends uf{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const RG=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,CG=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function PG(n,e,t){let i=new U4;const r=new Zt,s=new Zt,l=new oi,c=new AG({depthPacking:wk}),u=new bG,d={},h=t.maxTextureSize,m={[wo]:Gi,[Gi]:wo,[aa]:aa},p=new Ao({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new Zt},radius:{value:4}},vertexShader:RG,fragmentShader:CG}),x=p.clone();x.defines.HORIZONTAL_PASS=1;const y=new Is;y.setAttribute("position",new Pr(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const S=new bs(y,p),v=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=f4;let g=this.type;this.render=function(L,D,V){if(v.enabled===!1||v.autoUpdate===!1&&v.needsUpdate===!1||L.length===0)return;const R=n.getRenderTarget(),T=n.getActiveCubeFace(),O=n.getActiveMipmapLevel(),Z=n.state;Z.setBlending(vo),Z.buffers.color.setClear(1,1,1,1),Z.buffers.depth.setTest(!0),Z.setScissorTest(!1);const W=g!==ta&&this.type===ta,K=g===ta&&this.type!==ta;for(let ne=0,Q=L.length;ne<Q;ne++){const se=L[ne],G=se.shadow;if(G===void 0){console.warn("THREE.WebGLShadowMap:",se,"has no shadow.");continue}if(G.autoUpdate===!1&&G.needsUpdate===!1)continue;r.copy(G.mapSize);const de=G.getFrameExtents();if(r.multiply(de),s.copy(G.mapSize),(r.x>h||r.y>h)&&(r.x>h&&(s.x=Math.floor(h/de.x),r.x=s.x*de.x,G.mapSize.x=s.x),r.y>h&&(s.y=Math.floor(h/de.y),r.y=s.y*de.y,G.mapSize.y=s.y)),G.map===null||W===!0||K===!0){const X=this.type!==ta?{minFilter:Rr,magFilter:Rr}:{};G.map!==null&&G.map.dispose(),G.map=new zl(r.x,r.y,X),G.map.texture.name=se.name+".shadowMap",G.camera.updateProjectionMatrix()}n.setRenderTarget(G.map),n.clear();const le=G.getViewportCount();for(let X=0;X<le;X++){const he=G.getViewport(X);l.set(s.x*he.x,s.y*he.y,s.x*he.z,s.y*he.w),Z.viewport(l),G.updateMatrices(se,X),i=G.getFrustum(),C(D,V,G.camera,se,this.type)}G.isPointLightShadow!==!0&&this.type===ta&&P(G,V),G.needsUpdate=!1}g=this.type,v.needsUpdate=!1,n.setRenderTarget(R,T,O)};function P(L,D){const V=e.update(S);p.defines.VSM_SAMPLES!==L.blurSamples&&(p.defines.VSM_SAMPLES=L.blurSamples,x.defines.VSM_SAMPLES=L.blurSamples,p.needsUpdate=!0,x.needsUpdate=!0),L.mapPass===null&&(L.mapPass=new zl(r.x,r.y)),p.uniforms.shadow_pass.value=L.map.texture,p.uniforms.resolution.value=L.mapSize,p.uniforms.radius.value=L.radius,n.setRenderTarget(L.mapPass),n.clear(),n.renderBufferDirect(D,null,V,p,S,null),x.uniforms.shadow_pass.value=L.mapPass.texture,x.uniforms.resolution.value=L.mapSize,x.uniforms.radius.value=L.radius,n.setRenderTarget(L.map),n.clear(),n.renderBufferDirect(D,null,V,x,S,null)}function w(L,D,V,R){let T=null;const O=V.isPointLight===!0?L.customDistanceMaterial:L.customDepthMaterial;if(O!==void 0)T=O;else if(T=V.isPointLight===!0?u:c,n.localClippingEnabled&&D.clipShadows===!0&&Array.isArray(D.clippingPlanes)&&D.clippingPlanes.length!==0||D.displacementMap&&D.displacementScale!==0||D.alphaMap&&D.alphaTest>0||D.map&&D.alphaTest>0){const Z=T.uuid,W=D.uuid;let K=d[Z];K===void 0&&(K={},d[Z]=K);let ne=K[W];ne===void 0&&(ne=T.clone(),K[W]=ne,D.addEventListener("dispose",z)),T=ne}if(T.visible=D.visible,T.wireframe=D.wireframe,R===ta?T.side=D.shadowSide!==null?D.shadowSide:D.side:T.side=D.shadowSide!==null?D.shadowSide:m[D.side],T.alphaMap=D.alphaMap,T.alphaTest=D.alphaTest,T.map=D.map,T.clipShadows=D.clipShadows,T.clippingPlanes=D.clippingPlanes,T.clipIntersection=D.clipIntersection,T.displacementMap=D.displacementMap,T.displacementScale=D.displacementScale,T.displacementBias=D.displacementBias,T.wireframeLinewidth=D.wireframeLinewidth,T.linewidth=D.linewidth,V.isPointLight===!0&&T.isMeshDistanceMaterial===!0){const Z=n.properties.get(T);Z.light=V}return T}function C(L,D,V,R,T){if(L.visible===!1)return;if(L.layers.test(D.layers)&&(L.isMesh||L.isLine||L.isPoints)&&(L.castShadow||L.receiveShadow&&T===ta)&&(!L.frustumCulled||i.intersectsObject(L))){L.modelViewMatrix.multiplyMatrices(V.matrixWorldInverse,L.matrixWorld);const W=e.update(L),K=L.material;if(Array.isArray(K)){const ne=W.groups;for(let Q=0,se=ne.length;Q<se;Q++){const G=ne[Q],de=K[G.materialIndex];if(de&&de.visible){const le=w(L,de,R,T);L.onBeforeShadow(n,L,D,V,W,le,G),n.renderBufferDirect(V,null,W,le,L,G),L.onAfterShadow(n,L,D,V,W,le,G)}}}else if(K.visible){const ne=w(L,K,R,T);L.onBeforeShadow(n,L,D,V,W,ne,null),n.renderBufferDirect(V,null,W,ne,L,null),L.onAfterShadow(n,L,D,V,W,ne,null)}}const Z=L.children;for(let W=0,K=Z.length;W<K;W++)C(Z[W],D,V,R,T)}function z(L){L.target.removeEventListener("dispose",z);for(const V in d){const R=d[V],T=L.target.uuid;T in R&&(R[T].dispose(),delete R[T])}}}function LG(n){function e(){let N=!1;const Ae=new oi;let ee=null;const te=new oi(0,0,0,0);return{setMask:function(ge){ee!==ge&&!N&&(n.colorMask(ge,ge,ge,ge),ee=ge)},setLocked:function(ge){N=ge},setClear:function(ge,qe,dt,Pt,Nt){Nt===!0&&(ge*=Pt,qe*=Pt,dt*=Pt),Ae.set(ge,qe,dt,Pt),te.equals(Ae)===!1&&(n.clearColor(ge,qe,dt,Pt),te.copy(Ae))},reset:function(){N=!1,ee=null,te.set(-1,0,0,0)}}}function t(){let N=!1,Ae=null,ee=null,te=null;return{setTest:function(ge){ge?xe(n.DEPTH_TEST):pe(n.DEPTH_TEST)},setMask:function(ge){Ae!==ge&&!N&&(n.depthMask(ge),Ae=ge)},setFunc:function(ge){if(ee!==ge){switch(ge){case KF:n.depthFunc(n.NEVER);break;case ZF:n.depthFunc(n.ALWAYS);break;case QF:n.depthFunc(n.LESS);break;case Bm:n.depthFunc(n.LEQUAL);break;case JF:n.depthFunc(n.EQUAL);break;case ek:n.depthFunc(n.GEQUAL);break;case tk:n.depthFunc(n.GREATER);break;case nk:n.depthFunc(n.NOTEQUAL);break;default:n.depthFunc(n.LEQUAL)}ee=ge}},setLocked:function(ge){N=ge},setClear:function(ge){te!==ge&&(n.clearDepth(ge),te=ge)},reset:function(){N=!1,Ae=null,ee=null,te=null}}}function i(){let N=!1,Ae=null,ee=null,te=null,ge=null,qe=null,dt=null,Pt=null,Nt=null;return{setTest:function(xt){N||(xt?xe(n.STENCIL_TEST):pe(n.STENCIL_TEST))},setMask:function(xt){Ae!==xt&&!N&&(n.stencilMask(xt),Ae=xt)},setFunc:function(xt,dn,yn){(ee!==xt||te!==dn||ge!==yn)&&(n.stencilFunc(xt,dn,yn),ee=xt,te=dn,ge=yn)},setOp:function(xt,dn,yn){(qe!==xt||dt!==dn||Pt!==yn)&&(n.stencilOp(xt,dn,yn),qe=xt,dt=dn,Pt=yn)},setLocked:function(xt){N=xt},setClear:function(xt){Nt!==xt&&(n.clearStencil(xt),Nt=xt)},reset:function(){N=!1,Ae=null,ee=null,te=null,ge=null,qe=null,dt=null,Pt=null,Nt=null}}}const r=new e,s=new t,l=new i,c=new WeakMap,u=new WeakMap;let d={},h={},m=new WeakMap,p=[],x=null,y=!1,S=null,v=null,g=null,P=null,w=null,C=null,z=null,L=new jt(0,0,0),D=0,V=!1,R=null,T=null,O=null,Z=null,W=null;const K=n.getParameter(n.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let ne=!1,Q=0;const se=n.getParameter(n.VERSION);se.indexOf("WebGL")!==-1?(Q=parseFloat(/^WebGL (\d)/.exec(se)[1]),ne=Q>=1):se.indexOf("OpenGL ES")!==-1&&(Q=parseFloat(/^OpenGL ES (\d)/.exec(se)[1]),ne=Q>=2);let G=null,de={};const le=n.getParameter(n.SCISSOR_BOX),X=n.getParameter(n.VIEWPORT),he=new oi().fromArray(le),He=new oi().fromArray(X);function Y(N,Ae,ee,te){const ge=new Uint8Array(4),qe=n.createTexture();n.bindTexture(N,qe),n.texParameteri(N,n.TEXTURE_MIN_FILTER,n.NEAREST),n.texParameteri(N,n.TEXTURE_MAG_FILTER,n.NEAREST);for(let dt=0;dt<ee;dt++)N===n.TEXTURE_3D||N===n.TEXTURE_2D_ARRAY?n.texImage3D(Ae,0,n.RGBA,1,1,te,0,n.RGBA,n.UNSIGNED_BYTE,ge):n.texImage2D(Ae+dt,0,n.RGBA,1,1,0,n.RGBA,n.UNSIGNED_BYTE,ge);return qe}const ie={};ie[n.TEXTURE_2D]=Y(n.TEXTURE_2D,n.TEXTURE_2D,1),ie[n.TEXTURE_CUBE_MAP]=Y(n.TEXTURE_CUBE_MAP,n.TEXTURE_CUBE_MAP_POSITIVE_X,6),ie[n.TEXTURE_2D_ARRAY]=Y(n.TEXTURE_2D_ARRAY,n.TEXTURE_2D_ARRAY,1,1),ie[n.TEXTURE_3D]=Y(n.TEXTURE_3D,n.TEXTURE_3D,1,1),r.setClear(0,0,0,1),s.setClear(1),l.setClear(0),xe(n.DEPTH_TEST),s.setFunc(Bm),Ve(!1),ut(k3),xe(n.CULL_FACE),nt(vo);function xe(N){d[N]!==!0&&(n.enable(N),d[N]=!0)}function pe(N){d[N]!==!1&&(n.disable(N),d[N]=!1)}function Oe(N,Ae){return h[N]!==Ae?(n.bindFramebuffer(N,Ae),h[N]=Ae,N===n.DRAW_FRAMEBUFFER&&(h[n.FRAMEBUFFER]=Ae),N===n.FRAMEBUFFER&&(h[n.DRAW_FRAMEBUFFER]=Ae),!0):!1}function Ne(N,Ae){let ee=p,te=!1;if(N){ee=m.get(Ae),ee===void 0&&(ee=[],m.set(Ae,ee));const ge=N.textures;if(ee.length!==ge.length||ee[0]!==n.COLOR_ATTACHMENT0){for(let qe=0,dt=ge.length;qe<dt;qe++)ee[qe]=n.COLOR_ATTACHMENT0+qe;ee.length=ge.length,te=!0}}else ee[0]!==n.BACK&&(ee[0]=n.BACK,te=!0);te&&n.drawBuffers(ee)}function Ye(N){return x!==N?(n.useProgram(N),x=N,!0):!1}const U={[_l]:n.FUNC_ADD,[DF]:n.FUNC_SUBTRACT,[NF]:n.FUNC_REVERSE_SUBTRACT};U[UF]=n.MIN,U[OF]=n.MAX;const Je={[FF]:n.ZERO,[kF]:n.ONE,[zF]:n.SRC_COLOR,[G_]:n.SRC_ALPHA,[$F]:n.SRC_ALPHA_SATURATE,[GF]:n.DST_COLOR,[HF]:n.DST_ALPHA,[BF]:n.ONE_MINUS_SRC_COLOR,[W_]:n.ONE_MINUS_SRC_ALPHA,[WF]:n.ONE_MINUS_DST_COLOR,[VF]:n.ONE_MINUS_DST_ALPHA,[XF]:n.CONSTANT_COLOR,[qF]:n.ONE_MINUS_CONSTANT_COLOR,[jF]:n.CONSTANT_ALPHA,[YF]:n.ONE_MINUS_CONSTANT_ALPHA};function nt(N,Ae,ee,te,ge,qe,dt,Pt,Nt,xt){if(N===vo){y===!0&&(pe(n.BLEND),y=!1);return}if(y===!1&&(xe(n.BLEND),y=!0),N!==IF){if(N!==S||xt!==V){if((v!==_l||w!==_l)&&(n.blendEquation(n.FUNC_ADD),v=_l,w=_l),xt)switch(N){case Ru:n.blendFuncSeparate(n.ONE,n.ONE_MINUS_SRC_ALPHA,n.ONE,n.ONE_MINUS_SRC_ALPHA);break;case z3:n.blendFunc(n.ONE,n.ONE);break;case B3:n.blendFuncSeparate(n.ZERO,n.ONE_MINUS_SRC_COLOR,n.ZERO,n.ONE);break;case H3:n.blendFuncSeparate(n.ZERO,n.SRC_COLOR,n.ZERO,n.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",N);break}else switch(N){case Ru:n.blendFuncSeparate(n.SRC_ALPHA,n.ONE_MINUS_SRC_ALPHA,n.ONE,n.ONE_MINUS_SRC_ALPHA);break;case z3:n.blendFunc(n.SRC_ALPHA,n.ONE);break;case B3:n.blendFuncSeparate(n.ZERO,n.ONE_MINUS_SRC_COLOR,n.ZERO,n.ONE);break;case H3:n.blendFunc(n.ZERO,n.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",N);break}g=null,P=null,C=null,z=null,L.set(0,0,0),D=0,S=N,V=xt}return}ge=ge||Ae,qe=qe||ee,dt=dt||te,(Ae!==v||ge!==w)&&(n.blendEquationSeparate(U[Ae],U[ge]),v=Ae,w=ge),(ee!==g||te!==P||qe!==C||dt!==z)&&(n.blendFuncSeparate(Je[ee],Je[te],Je[qe],Je[dt]),g=ee,P=te,C=qe,z=dt),(Pt.equals(L)===!1||Nt!==D)&&(n.blendColor(Pt.r,Pt.g,Pt.b,Nt),L.copy(Pt),D=Nt),S=N,V=!1}function Tt(N,Ae){N.side===aa?pe(n.CULL_FACE):xe(n.CULL_FACE);let ee=N.side===Gi;Ae&&(ee=!ee),Ve(ee),N.blending===Ru&&N.transparent===!1?nt(vo):nt(N.blending,N.blendEquation,N.blendSrc,N.blendDst,N.blendEquationAlpha,N.blendSrcAlpha,N.blendDstAlpha,N.blendColor,N.blendAlpha,N.premultipliedAlpha),s.setFunc(N.depthFunc),s.setTest(N.depthTest),s.setMask(N.depthWrite),r.setMask(N.colorWrite);const te=N.stencilWrite;l.setTest(te),te&&(l.setMask(N.stencilWriteMask),l.setFunc(N.stencilFunc,N.stencilRef,N.stencilFuncMask),l.setOp(N.stencilFail,N.stencilZFail,N.stencilZPass)),Ke(N.polygonOffset,N.polygonOffsetFactor,N.polygonOffsetUnits),N.alphaToCoverage===!0?xe(n.SAMPLE_ALPHA_TO_COVERAGE):pe(n.SAMPLE_ALPHA_TO_COVERAGE)}function Ve(N){R!==N&&(N?n.frontFace(n.CW):n.frontFace(n.CCW),R=N)}function ut(N){N!==CF?(xe(n.CULL_FACE),N!==T&&(N===k3?n.cullFace(n.BACK):N===PF?n.cullFace(n.FRONT):n.cullFace(n.FRONT_AND_BACK))):pe(n.CULL_FACE),T=N}function tt(N){N!==O&&(ne&&n.lineWidth(N),O=N)}function Ke(N,Ae,ee){N?(xe(n.POLYGON_OFFSET_FILL),(Z!==Ae||W!==ee)&&(n.polygonOffset(Ae,ee),Z=Ae,W=ee)):pe(n.POLYGON_OFFSET_FILL)}function Lt(N){N?xe(n.SCISSOR_TEST):pe(n.SCISSOR_TEST)}function I(N){N===void 0&&(N=n.TEXTURE0+K-1),G!==N&&(n.activeTexture(N),G=N)}function E(N,Ae,ee){ee===void 0&&(G===null?ee=n.TEXTURE0+K-1:ee=G);let te=de[ee];te===void 0&&(te={type:void 0,texture:void 0},de[ee]=te),(te.type!==N||te.texture!==Ae)&&(G!==ee&&(n.activeTexture(ee),G=ee),n.bindTexture(N,Ae||ie[N]),te.type=N,te.texture=Ae)}function j(){const N=de[G];N!==void 0&&N.type!==void 0&&(n.bindTexture(N.type,null),N.type=void 0,N.texture=void 0)}function ae(){try{n.compressedTexImage2D.apply(n,arguments)}catch(N){console.error("THREE.WebGLState:",N)}}function ce(){try{n.compressedTexImage3D.apply(n,arguments)}catch(N){console.error("THREE.WebGLState:",N)}}function ue(){try{n.texSubImage2D.apply(n,arguments)}catch(N){console.error("THREE.WebGLState:",N)}}function Fe(){try{n.texSubImage3D.apply(n,arguments)}catch(N){console.error("THREE.WebGLState:",N)}}function Me(){try{n.compressedTexSubImage2D.apply(n,arguments)}catch(N){console.error("THREE.WebGLState:",N)}}function Se(){try{n.compressedTexSubImage3D.apply(n,arguments)}catch(N){console.error("THREE.WebGLState:",N)}}function Ze(){try{n.texStorage2D.apply(n,arguments)}catch(N){console.error("THREE.WebGLState:",N)}}function me(){try{n.texStorage3D.apply(n,arguments)}catch(N){console.error("THREE.WebGLState:",N)}}function Pe(){try{n.texImage2D.apply(n,arguments)}catch(N){console.error("THREE.WebGLState:",N)}}function it(){try{n.texImage3D.apply(n,arguments)}catch(N){console.error("THREE.WebGLState:",N)}}function Xe(N){he.equals(N)===!1&&(n.scissor(N.x,N.y,N.z,N.w),he.copy(N))}function Te(N){He.equals(N)===!1&&(n.viewport(N.x,N.y,N.z,N.w),He.copy(N))}function et(N,Ae){let ee=u.get(Ae);ee===void 0&&(ee=new WeakMap,u.set(Ae,ee));let te=ee.get(N);te===void 0&&(te=n.getUniformBlockIndex(Ae,N.name),ee.set(N,te))}function rt(N,Ae){const te=u.get(Ae).get(N);c.get(Ae)!==te&&(n.uniformBlockBinding(Ae,te,N.__bindingPointIndex),c.set(Ae,te))}function bt(){n.disable(n.BLEND),n.disable(n.CULL_FACE),n.disable(n.DEPTH_TEST),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SCISSOR_TEST),n.disable(n.STENCIL_TEST),n.disable(n.SAMPLE_ALPHA_TO_COVERAGE),n.blendEquation(n.FUNC_ADD),n.blendFunc(n.ONE,n.ZERO),n.blendFuncSeparate(n.ONE,n.ZERO,n.ONE,n.ZERO),n.blendColor(0,0,0,0),n.colorMask(!0,!0,!0,!0),n.clearColor(0,0,0,0),n.depthMask(!0),n.depthFunc(n.LESS),n.clearDepth(1),n.stencilMask(4294967295),n.stencilFunc(n.ALWAYS,0,4294967295),n.stencilOp(n.KEEP,n.KEEP,n.KEEP),n.clearStencil(0),n.cullFace(n.BACK),n.frontFace(n.CCW),n.polygonOffset(0,0),n.activeTexture(n.TEXTURE0),n.bindFramebuffer(n.FRAMEBUFFER,null),n.bindFramebuffer(n.DRAW_FRAMEBUFFER,null),n.bindFramebuffer(n.READ_FRAMEBUFFER,null),n.useProgram(null),n.lineWidth(1),n.scissor(0,0,n.canvas.width,n.canvas.height),n.viewport(0,0,n.canvas.width,n.canvas.height),d={},G=null,de={},h={},m=new WeakMap,p=[],x=null,y=!1,S=null,v=null,g=null,P=null,w=null,C=null,z=null,L=new jt(0,0,0),D=0,V=!1,R=null,T=null,O=null,Z=null,W=null,he.set(0,0,n.canvas.width,n.canvas.height),He.set(0,0,n.canvas.width,n.canvas.height),r.reset(),s.reset(),l.reset()}return{buffers:{color:r,depth:s,stencil:l},enable:xe,disable:pe,bindFramebuffer:Oe,drawBuffers:Ne,useProgram:Ye,setBlending:nt,setMaterial:Tt,setFlipSided:Ve,setCullFace:ut,setLineWidth:tt,setPolygonOffset:Ke,setScissorTest:Lt,activeTexture:I,bindTexture:E,unbindTexture:j,compressedTexImage2D:ae,compressedTexImage3D:ce,texImage2D:Pe,texImage3D:it,updateUBOMapping:et,uniformBlockBinding:rt,texStorage2D:Ze,texStorage3D:me,texSubImage2D:ue,texSubImage3D:Fe,compressedTexSubImage2D:Me,compressedTexSubImage3D:Se,scissor:Xe,viewport:Te,reset:bt}}function IG(n,e,t,i,r,s,l){const c=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,u=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),d=new Zt,h=new WeakMap;let m;const p=new WeakMap;let x=!1;try{x=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function y(I,E){return x?new OffscreenCanvas(I,E):Xm("canvas")}function S(I,E,j){let ae=1;const ce=Lt(I);if((ce.width>j||ce.height>j)&&(ae=j/Math.max(ce.width,ce.height)),ae<1)if(typeof HTMLImageElement<"u"&&I instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&I instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&I instanceof ImageBitmap||typeof VideoFrame<"u"&&I instanceof VideoFrame){const ue=Math.floor(ae*ce.width),Fe=Math.floor(ae*ce.height);m===void 0&&(m=y(ue,Fe));const Me=E?y(ue,Fe):m;return Me.width=ue,Me.height=Fe,Me.getContext("2d").drawImage(I,0,0,ue,Fe),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+ce.width+"x"+ce.height+") to ("+ue+"x"+Fe+")."),Me}else return"data"in I&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+ce.width+"x"+ce.height+")."),I;return I}function v(I){return I.generateMipmaps&&I.minFilter!==Rr&&I.minFilter!==Jr}function g(I){n.generateMipmap(I)}function P(I,E,j,ae,ce=!1){if(I!==null){if(n[I]!==void 0)return n[I];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+I+"'")}let ue=E;if(E===n.RED&&(j===n.FLOAT&&(ue=n.R32F),j===n.HALF_FLOAT&&(ue=n.R16F),j===n.UNSIGNED_BYTE&&(ue=n.R8)),E===n.RED_INTEGER&&(j===n.UNSIGNED_BYTE&&(ue=n.R8UI),j===n.UNSIGNED_SHORT&&(ue=n.R16UI),j===n.UNSIGNED_INT&&(ue=n.R32UI),j===n.BYTE&&(ue=n.R8I),j===n.SHORT&&(ue=n.R16I),j===n.INT&&(ue=n.R32I)),E===n.RG&&(j===n.FLOAT&&(ue=n.RG32F),j===n.HALF_FLOAT&&(ue=n.RG16F),j===n.UNSIGNED_BYTE&&(ue=n.RG8)),E===n.RG_INTEGER&&(j===n.UNSIGNED_BYTE&&(ue=n.RG8UI),j===n.UNSIGNED_SHORT&&(ue=n.RG16UI),j===n.UNSIGNED_INT&&(ue=n.RG32UI),j===n.BYTE&&(ue=n.RG8I),j===n.SHORT&&(ue=n.RG16I),j===n.INT&&(ue=n.RG32I)),E===n.RGB&&j===n.UNSIGNED_INT_5_9_9_9_REV&&(ue=n.RGB9_E5),E===n.RGBA){const Fe=ce?Vm:rn.getTransfer(ae);j===n.FLOAT&&(ue=n.RGBA32F),j===n.HALF_FLOAT&&(ue=n.RGBA16F),j===n.UNSIGNED_BYTE&&(ue=Fe===vn?n.SRGB8_ALPHA8:n.RGBA8),j===n.UNSIGNED_SHORT_4_4_4_4&&(ue=n.RGBA4),j===n.UNSIGNED_SHORT_5_5_5_1&&(ue=n.RGB5_A1)}return(ue===n.R16F||ue===n.R32F||ue===n.RG16F||ue===n.RG32F||ue===n.RGBA16F||ue===n.RGBA32F)&&e.get("EXT_color_buffer_float"),ue}function w(I,E){let j;return I?E===null||E===Ku||E===Zu?j=n.DEPTH24_STENCIL8:E===fo?j=n.DEPTH32F_STENCIL8:E===Hm&&(j=n.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):E===null||E===Ku||E===Zu?j=n.DEPTH_COMPONENT24:E===fo?j=n.DEPTH_COMPONENT32F:E===Hm&&(j=n.DEPTH_COMPONENT16),j}function C(I,E){return v(I)===!0||I.isFramebufferTexture&&I.minFilter!==Rr&&I.minFilter!==Jr?Math.log2(Math.max(E.width,E.height))+1:I.mipmaps!==void 0&&I.mipmaps.length>0?I.mipmaps.length:I.isCompressedTexture&&Array.isArray(I.image)?E.mipmaps.length:1}function z(I){const E=I.target;E.removeEventListener("dispose",z),D(E),E.isVideoTexture&&h.delete(E)}function L(I){const E=I.target;E.removeEventListener("dispose",L),R(E)}function D(I){const E=i.get(I);if(E.__webglInit===void 0)return;const j=I.source,ae=p.get(j);if(ae){const ce=ae[E.__cacheKey];ce.usedTimes--,ce.usedTimes===0&&V(I),Object.keys(ae).length===0&&p.delete(j)}i.remove(I)}function V(I){const E=i.get(I);n.deleteTexture(E.__webglTexture);const j=I.source,ae=p.get(j);delete ae[E.__cacheKey],l.memory.textures--}function R(I){const E=i.get(I);if(I.depthTexture&&I.depthTexture.dispose(),I.isWebGLCubeRenderTarget)for(let ae=0;ae<6;ae++){if(Array.isArray(E.__webglFramebuffer[ae]))for(let ce=0;ce<E.__webglFramebuffer[ae].length;ce++)n.deleteFramebuffer(E.__webglFramebuffer[ae][ce]);else n.deleteFramebuffer(E.__webglFramebuffer[ae]);E.__webglDepthbuffer&&n.deleteRenderbuffer(E.__webglDepthbuffer[ae])}else{if(Array.isArray(E.__webglFramebuffer))for(let ae=0;ae<E.__webglFramebuffer.length;ae++)n.deleteFramebuffer(E.__webglFramebuffer[ae]);else n.deleteFramebuffer(E.__webglFramebuffer);if(E.__webglDepthbuffer&&n.deleteRenderbuffer(E.__webglDepthbuffer),E.__webglMultisampledFramebuffer&&n.deleteFramebuffer(E.__webglMultisampledFramebuffer),E.__webglColorRenderbuffer)for(let ae=0;ae<E.__webglColorRenderbuffer.length;ae++)E.__webglColorRenderbuffer[ae]&&n.deleteRenderbuffer(E.__webglColorRenderbuffer[ae]);E.__webglDepthRenderbuffer&&n.deleteRenderbuffer(E.__webglDepthRenderbuffer)}const j=I.textures;for(let ae=0,ce=j.length;ae<ce;ae++){const ue=i.get(j[ae]);ue.__webglTexture&&(n.deleteTexture(ue.__webglTexture),l.memory.textures--),i.remove(j[ae])}i.remove(I)}let T=0;function O(){T=0}function Z(){const I=T;return I>=r.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+I+" texture units while this GPU supports only "+r.maxTextures),T+=1,I}function W(I){const E=[];return E.push(I.wrapS),E.push(I.wrapT),E.push(I.wrapR||0),E.push(I.magFilter),E.push(I.minFilter),E.push(I.anisotropy),E.push(I.internalFormat),E.push(I.format),E.push(I.type),E.push(I.generateMipmaps),E.push(I.premultiplyAlpha),E.push(I.flipY),E.push(I.unpackAlignment),E.push(I.colorSpace),E.join()}function K(I,E){const j=i.get(I);if(I.isVideoTexture&&tt(I),I.isRenderTargetTexture===!1&&I.version>0&&j.__version!==I.version){const ae=I.image;if(ae===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(ae.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{He(j,I,E);return}}t.bindTexture(n.TEXTURE_2D,j.__webglTexture,n.TEXTURE0+E)}function ne(I,E){const j=i.get(I);if(I.version>0&&j.__version!==I.version){He(j,I,E);return}t.bindTexture(n.TEXTURE_2D_ARRAY,j.__webglTexture,n.TEXTURE0+E)}function Q(I,E){const j=i.get(I);if(I.version>0&&j.__version!==I.version){He(j,I,E);return}t.bindTexture(n.TEXTURE_3D,j.__webglTexture,n.TEXTURE0+E)}function se(I,E){const j=i.get(I);if(I.version>0&&j.__version!==I.version){Y(j,I,E);return}t.bindTexture(n.TEXTURE_CUBE_MAP,j.__webglTexture,n.TEXTURE0+E)}const G={[q_]:n.REPEAT,[El]:n.CLAMP_TO_EDGE,[j_]:n.MIRRORED_REPEAT},de={[Rr]:n.NEAREST,[dk]:n.NEAREST_MIPMAP_NEAREST,[Np]:n.NEAREST_MIPMAP_LINEAR,[Jr]:n.LINEAR,[xv]:n.LINEAR_MIPMAP_NEAREST,[wl]:n.LINEAR_MIPMAP_LINEAR},le={[Ak]:n.NEVER,[Ik]:n.ALWAYS,[bk]:n.LESS,[S4]:n.LEQUAL,[Rk]:n.EQUAL,[Lk]:n.GEQUAL,[Ck]:n.GREATER,[Pk]:n.NOTEQUAL};function X(I,E){if(E.type===fo&&e.has("OES_texture_float_linear")===!1&&(E.magFilter===Jr||E.magFilter===xv||E.magFilter===Np||E.magFilter===wl||E.minFilter===Jr||E.minFilter===xv||E.minFilter===Np||E.minFilter===wl)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),n.texParameteri(I,n.TEXTURE_WRAP_S,G[E.wrapS]),n.texParameteri(I,n.TEXTURE_WRAP_T,G[E.wrapT]),(I===n.TEXTURE_3D||I===n.TEXTURE_2D_ARRAY)&&n.texParameteri(I,n.TEXTURE_WRAP_R,G[E.wrapR]),n.texParameteri(I,n.TEXTURE_MAG_FILTER,de[E.magFilter]),n.texParameteri(I,n.TEXTURE_MIN_FILTER,de[E.minFilter]),E.compareFunction&&(n.texParameteri(I,n.TEXTURE_COMPARE_MODE,n.COMPARE_REF_TO_TEXTURE),n.texParameteri(I,n.TEXTURE_COMPARE_FUNC,le[E.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){if(E.magFilter===Rr||E.minFilter!==Np&&E.minFilter!==wl||E.type===fo&&e.has("OES_texture_float_linear")===!1)return;if(E.anisotropy>1||i.get(E).__currentAnisotropy){const j=e.get("EXT_texture_filter_anisotropic");n.texParameterf(I,j.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(E.anisotropy,r.getMaxAnisotropy())),i.get(E).__currentAnisotropy=E.anisotropy}}}function he(I,E){let j=!1;I.__webglInit===void 0&&(I.__webglInit=!0,E.addEventListener("dispose",z));const ae=E.source;let ce=p.get(ae);ce===void 0&&(ce={},p.set(ae,ce));const ue=W(E);if(ue!==I.__cacheKey){ce[ue]===void 0&&(ce[ue]={texture:n.createTexture(),usedTimes:0},l.memory.textures++,j=!0),ce[ue].usedTimes++;const Fe=ce[I.__cacheKey];Fe!==void 0&&(ce[I.__cacheKey].usedTimes--,Fe.usedTimes===0&&V(E)),I.__cacheKey=ue,I.__webglTexture=ce[ue].texture}return j}function He(I,E,j){let ae=n.TEXTURE_2D;(E.isDataArrayTexture||E.isCompressedArrayTexture)&&(ae=n.TEXTURE_2D_ARRAY),E.isData3DTexture&&(ae=n.TEXTURE_3D);const ce=he(I,E),ue=E.source;t.bindTexture(ae,I.__webglTexture,n.TEXTURE0+j);const Fe=i.get(ue);if(ue.version!==Fe.__version||ce===!0){t.activeTexture(n.TEXTURE0+j);const Me=rn.getPrimaries(rn.workingColorSpace),Se=E.colorSpace===lo?null:rn.getPrimaries(E.colorSpace),Ze=E.colorSpace===lo||Me===Se?n.NONE:n.BROWSER_DEFAULT_WEBGL;n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,E.flipY),n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,E.premultiplyAlpha),n.pixelStorei(n.UNPACK_ALIGNMENT,E.unpackAlignment),n.pixelStorei(n.UNPACK_COLORSPACE_CONVERSION_WEBGL,Ze);let me=S(E.image,!1,r.maxTextureSize);me=Ke(E,me);const Pe=s.convert(E.format,E.colorSpace),it=s.convert(E.type);let Xe=P(E.internalFormat,Pe,it,E.colorSpace,E.isVideoTexture);X(ae,E);let Te;const et=E.mipmaps,rt=E.isVideoTexture!==!0,bt=Fe.__version===void 0||ce===!0,N=ue.dataReady,Ae=C(E,me);if(E.isDepthTexture)Xe=w(E.format===Qu,E.type),bt&&(rt?t.texStorage2D(n.TEXTURE_2D,1,Xe,me.width,me.height):t.texImage2D(n.TEXTURE_2D,0,Xe,me.width,me.height,0,Pe,it,null));else if(E.isDataTexture)if(et.length>0){rt&&bt&&t.texStorage2D(n.TEXTURE_2D,Ae,Xe,et[0].width,et[0].height);for(let ee=0,te=et.length;ee<te;ee++)Te=et[ee],rt?N&&t.texSubImage2D(n.TEXTURE_2D,ee,0,0,Te.width,Te.height,Pe,it,Te.data):t.texImage2D(n.TEXTURE_2D,ee,Xe,Te.width,Te.height,0,Pe,it,Te.data);E.generateMipmaps=!1}else rt?(bt&&t.texStorage2D(n.TEXTURE_2D,Ae,Xe,me.width,me.height),N&&t.texSubImage2D(n.TEXTURE_2D,0,0,0,me.width,me.height,Pe,it,me.data)):t.texImage2D(n.TEXTURE_2D,0,Xe,me.width,me.height,0,Pe,it,me.data);else if(E.isCompressedTexture)if(E.isCompressedArrayTexture){rt&&bt&&t.texStorage3D(n.TEXTURE_2D_ARRAY,Ae,Xe,et[0].width,et[0].height,me.depth);for(let ee=0,te=et.length;ee<te;ee++)if(Te=et[ee],E.format!==As)if(Pe!==null)if(rt){if(N)if(E.layerUpdates.size>0){for(const ge of E.layerUpdates){const qe=Te.width*Te.height;t.compressedTexSubImage3D(n.TEXTURE_2D_ARRAY,ee,0,0,ge,Te.width,Te.height,1,Pe,Te.data.slice(qe*ge,qe*(ge+1)),0,0)}E.clearLayerUpdates()}else t.compressedTexSubImage3D(n.TEXTURE_2D_ARRAY,ee,0,0,0,Te.width,Te.height,me.depth,Pe,Te.data,0,0)}else t.compressedTexImage3D(n.TEXTURE_2D_ARRAY,ee,Xe,Te.width,Te.height,me.depth,0,Te.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else rt?N&&t.texSubImage3D(n.TEXTURE_2D_ARRAY,ee,0,0,0,Te.width,Te.height,me.depth,Pe,it,Te.data):t.texImage3D(n.TEXTURE_2D_ARRAY,ee,Xe,Te.width,Te.height,me.depth,0,Pe,it,Te.data)}else{rt&&bt&&t.texStorage2D(n.TEXTURE_2D,Ae,Xe,et[0].width,et[0].height);for(let ee=0,te=et.length;ee<te;ee++)Te=et[ee],E.format!==As?Pe!==null?rt?N&&t.compressedTexSubImage2D(n.TEXTURE_2D,ee,0,0,Te.width,Te.height,Pe,Te.data):t.compressedTexImage2D(n.TEXTURE_2D,ee,Xe,Te.width,Te.height,0,Te.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):rt?N&&t.texSubImage2D(n.TEXTURE_2D,ee,0,0,Te.width,Te.height,Pe,it,Te.data):t.texImage2D(n.TEXTURE_2D,ee,Xe,Te.width,Te.height,0,Pe,it,Te.data)}else if(E.isDataArrayTexture)if(rt){if(bt&&t.texStorage3D(n.TEXTURE_2D_ARRAY,Ae,Xe,me.width,me.height,me.depth),N)if(E.layerUpdates.size>0){let ee;switch(it){case n.UNSIGNED_BYTE:switch(Pe){case n.ALPHA:ee=1;break;case n.LUMINANCE:ee=1;break;case n.LUMINANCE_ALPHA:ee=2;break;case n.RGB:ee=3;break;case n.RGBA:ee=4;break;default:throw new Error(`Unknown texel size for format ${Pe}.`)}break;case n.UNSIGNED_SHORT_4_4_4_4:case n.UNSIGNED_SHORT_5_5_5_1:case n.UNSIGNED_SHORT_5_6_5:ee=1;break;default:throw new Error(`Unknown texel size for type ${it}.`)}const te=me.width*me.height*ee;for(const ge of E.layerUpdates)t.texSubImage3D(n.TEXTURE_2D_ARRAY,0,0,0,ge,me.width,me.height,1,Pe,it,me.data.slice(te*ge,te*(ge+1)));E.clearLayerUpdates()}else t.texSubImage3D(n.TEXTURE_2D_ARRAY,0,0,0,0,me.width,me.height,me.depth,Pe,it,me.data)}else t.texImage3D(n.TEXTURE_2D_ARRAY,0,Xe,me.width,me.height,me.depth,0,Pe,it,me.data);else if(E.isData3DTexture)rt?(bt&&t.texStorage3D(n.TEXTURE_3D,Ae,Xe,me.width,me.height,me.depth),N&&t.texSubImage3D(n.TEXTURE_3D,0,0,0,0,me.width,me.height,me.depth,Pe,it,me.data)):t.texImage3D(n.TEXTURE_3D,0,Xe,me.width,me.height,me.depth,0,Pe,it,me.data);else if(E.isFramebufferTexture){if(bt)if(rt)t.texStorage2D(n.TEXTURE_2D,Ae,Xe,me.width,me.height);else{let ee=me.width,te=me.height;for(let ge=0;ge<Ae;ge++)t.texImage2D(n.TEXTURE_2D,ge,Xe,ee,te,0,Pe,it,null),ee>>=1,te>>=1}}else if(et.length>0){if(rt&&bt){const ee=Lt(et[0]);t.texStorage2D(n.TEXTURE_2D,Ae,Xe,ee.width,ee.height)}for(let ee=0,te=et.length;ee<te;ee++)Te=et[ee],rt?N&&t.texSubImage2D(n.TEXTURE_2D,ee,0,0,Pe,it,Te):t.texImage2D(n.TEXTURE_2D,ee,Xe,Pe,it,Te);E.generateMipmaps=!1}else if(rt){if(bt){const ee=Lt(me);t.texStorage2D(n.TEXTURE_2D,Ae,Xe,ee.width,ee.height)}N&&t.texSubImage2D(n.TEXTURE_2D,0,0,0,Pe,it,me)}else t.texImage2D(n.TEXTURE_2D,0,Xe,Pe,it,me);v(E)&&g(ae),Fe.__version=ue.version,E.onUpdate&&E.onUpdate(E)}I.__version=E.version}function Y(I,E,j){if(E.image.length!==6)return;const ae=he(I,E),ce=E.source;t.bindTexture(n.TEXTURE_CUBE_MAP,I.__webglTexture,n.TEXTURE0+j);const ue=i.get(ce);if(ce.version!==ue.__version||ae===!0){t.activeTexture(n.TEXTURE0+j);const Fe=rn.getPrimaries(rn.workingColorSpace),Me=E.colorSpace===lo?null:rn.getPrimaries(E.colorSpace),Se=E.colorSpace===lo||Fe===Me?n.NONE:n.BROWSER_DEFAULT_WEBGL;n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,E.flipY),n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,E.premultiplyAlpha),n.pixelStorei(n.UNPACK_ALIGNMENT,E.unpackAlignment),n.pixelStorei(n.UNPACK_COLORSPACE_CONVERSION_WEBGL,Se);const Ze=E.isCompressedTexture||E.image[0].isCompressedTexture,me=E.image[0]&&E.image[0].isDataTexture,Pe=[];for(let te=0;te<6;te++)!Ze&&!me?Pe[te]=S(E.image[te],!0,r.maxCubemapSize):Pe[te]=me?E.image[te].image:E.image[te],Pe[te]=Ke(E,Pe[te]);const it=Pe[0],Xe=s.convert(E.format,E.colorSpace),Te=s.convert(E.type),et=P(E.internalFormat,Xe,Te,E.colorSpace),rt=E.isVideoTexture!==!0,bt=ue.__version===void 0||ae===!0,N=ce.dataReady;let Ae=C(E,it);X(n.TEXTURE_CUBE_MAP,E);let ee;if(Ze){rt&&bt&&t.texStorage2D(n.TEXTURE_CUBE_MAP,Ae,et,it.width,it.height);for(let te=0;te<6;te++){ee=Pe[te].mipmaps;for(let ge=0;ge<ee.length;ge++){const qe=ee[ge];E.format!==As?Xe!==null?rt?N&&t.compressedTexSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+te,ge,0,0,qe.width,qe.height,Xe,qe.data):t.compressedTexImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+te,ge,et,qe.width,qe.height,0,qe.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):rt?N&&t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+te,ge,0,0,qe.width,qe.height,Xe,Te,qe.data):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+te,ge,et,qe.width,qe.height,0,Xe,Te,qe.data)}}}else{if(ee=E.mipmaps,rt&&bt){ee.length>0&&Ae++;const te=Lt(Pe[0]);t.texStorage2D(n.TEXTURE_CUBE_MAP,Ae,et,te.width,te.height)}for(let te=0;te<6;te++)if(me){rt?N&&t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+te,0,0,0,Pe[te].width,Pe[te].height,Xe,Te,Pe[te].data):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+te,0,et,Pe[te].width,Pe[te].height,0,Xe,Te,Pe[te].data);for(let ge=0;ge<ee.length;ge++){const dt=ee[ge].image[te].image;rt?N&&t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+te,ge+1,0,0,dt.width,dt.height,Xe,Te,dt.data):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+te,ge+1,et,dt.width,dt.height,0,Xe,Te,dt.data)}}else{rt?N&&t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+te,0,0,0,Xe,Te,Pe[te]):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+te,0,et,Xe,Te,Pe[te]);for(let ge=0;ge<ee.length;ge++){const qe=ee[ge];rt?N&&t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+te,ge+1,0,0,Xe,Te,qe.image[te]):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+te,ge+1,et,Xe,Te,qe.image[te])}}}v(E)&&g(n.TEXTURE_CUBE_MAP),ue.__version=ce.version,E.onUpdate&&E.onUpdate(E)}I.__version=E.version}function ie(I,E,j,ae,ce,ue){const Fe=s.convert(j.format,j.colorSpace),Me=s.convert(j.type),Se=P(j.internalFormat,Fe,Me,j.colorSpace);if(!i.get(E).__hasExternalTextures){const me=Math.max(1,E.width>>ue),Pe=Math.max(1,E.height>>ue);ce===n.TEXTURE_3D||ce===n.TEXTURE_2D_ARRAY?t.texImage3D(ce,ue,Se,me,Pe,E.depth,0,Fe,Me,null):t.texImage2D(ce,ue,Se,me,Pe,0,Fe,Me,null)}t.bindFramebuffer(n.FRAMEBUFFER,I),ut(E)?c.framebufferTexture2DMultisampleEXT(n.FRAMEBUFFER,ae,ce,i.get(j).__webglTexture,0,Ve(E)):(ce===n.TEXTURE_2D||ce>=n.TEXTURE_CUBE_MAP_POSITIVE_X&&ce<=n.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&n.framebufferTexture2D(n.FRAMEBUFFER,ae,ce,i.get(j).__webglTexture,ue),t.bindFramebuffer(n.FRAMEBUFFER,null)}function xe(I,E,j){if(n.bindRenderbuffer(n.RENDERBUFFER,I),E.depthBuffer){const ae=E.depthTexture,ce=ae&&ae.isDepthTexture?ae.type:null,ue=w(E.stencilBuffer,ce),Fe=E.stencilBuffer?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT,Me=Ve(E);ut(E)?c.renderbufferStorageMultisampleEXT(n.RENDERBUFFER,Me,ue,E.width,E.height):j?n.renderbufferStorageMultisample(n.RENDERBUFFER,Me,ue,E.width,E.height):n.renderbufferStorage(n.RENDERBUFFER,ue,E.width,E.height),n.framebufferRenderbuffer(n.FRAMEBUFFER,Fe,n.RENDERBUFFER,I)}else{const ae=E.textures;for(let ce=0;ce<ae.length;ce++){const ue=ae[ce],Fe=s.convert(ue.format,ue.colorSpace),Me=s.convert(ue.type),Se=P(ue.internalFormat,Fe,Me,ue.colorSpace),Ze=Ve(E);j&&ut(E)===!1?n.renderbufferStorageMultisample(n.RENDERBUFFER,Ze,Se,E.width,E.height):ut(E)?c.renderbufferStorageMultisampleEXT(n.RENDERBUFFER,Ze,Se,E.width,E.height):n.renderbufferStorage(n.RENDERBUFFER,Se,E.width,E.height)}}n.bindRenderbuffer(n.RENDERBUFFER,null)}function pe(I,E){if(E&&E.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(n.FRAMEBUFFER,I),!(E.depthTexture&&E.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!i.get(E.depthTexture).__webglTexture||E.depthTexture.image.width!==E.width||E.depthTexture.image.height!==E.height)&&(E.depthTexture.image.width=E.width,E.depthTexture.image.height=E.height,E.depthTexture.needsUpdate=!0),K(E.depthTexture,0);const ae=i.get(E.depthTexture).__webglTexture,ce=Ve(E);if(E.depthTexture.format===Cu)ut(E)?c.framebufferTexture2DMultisampleEXT(n.FRAMEBUFFER,n.DEPTH_ATTACHMENT,n.TEXTURE_2D,ae,0,ce):n.framebufferTexture2D(n.FRAMEBUFFER,n.DEPTH_ATTACHMENT,n.TEXTURE_2D,ae,0);else if(E.depthTexture.format===Qu)ut(E)?c.framebufferTexture2DMultisampleEXT(n.FRAMEBUFFER,n.DEPTH_STENCIL_ATTACHMENT,n.TEXTURE_2D,ae,0,ce):n.framebufferTexture2D(n.FRAMEBUFFER,n.DEPTH_STENCIL_ATTACHMENT,n.TEXTURE_2D,ae,0);else throw new Error("Unknown depthTexture format")}function Oe(I){const E=i.get(I),j=I.isWebGLCubeRenderTarget===!0;if(I.depthTexture&&!E.__autoAllocateDepthBuffer){if(j)throw new Error("target.depthTexture not supported in Cube render targets");pe(E.__webglFramebuffer,I)}else if(j){E.__webglDepthbuffer=[];for(let ae=0;ae<6;ae++)t.bindFramebuffer(n.FRAMEBUFFER,E.__webglFramebuffer[ae]),E.__webglDepthbuffer[ae]=n.createRenderbuffer(),xe(E.__webglDepthbuffer[ae],I,!1)}else t.bindFramebuffer(n.FRAMEBUFFER,E.__webglFramebuffer),E.__webglDepthbuffer=n.createRenderbuffer(),xe(E.__webglDepthbuffer,I,!1);t.bindFramebuffer(n.FRAMEBUFFER,null)}function Ne(I,E,j){const ae=i.get(I);E!==void 0&&ie(ae.__webglFramebuffer,I,I.texture,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,0),j!==void 0&&Oe(I)}function Ye(I){const E=I.texture,j=i.get(I),ae=i.get(E);I.addEventListener("dispose",L);const ce=I.textures,ue=I.isWebGLCubeRenderTarget===!0,Fe=ce.length>1;if(Fe||(ae.__webglTexture===void 0&&(ae.__webglTexture=n.createTexture()),ae.__version=E.version,l.memory.textures++),ue){j.__webglFramebuffer=[];for(let Me=0;Me<6;Me++)if(E.mipmaps&&E.mipmaps.length>0){j.__webglFramebuffer[Me]=[];for(let Se=0;Se<E.mipmaps.length;Se++)j.__webglFramebuffer[Me][Se]=n.createFramebuffer()}else j.__webglFramebuffer[Me]=n.createFramebuffer()}else{if(E.mipmaps&&E.mipmaps.length>0){j.__webglFramebuffer=[];for(let Me=0;Me<E.mipmaps.length;Me++)j.__webglFramebuffer[Me]=n.createFramebuffer()}else j.__webglFramebuffer=n.createFramebuffer();if(Fe)for(let Me=0,Se=ce.length;Me<Se;Me++){const Ze=i.get(ce[Me]);Ze.__webglTexture===void 0&&(Ze.__webglTexture=n.createTexture(),l.memory.textures++)}if(I.samples>0&&ut(I)===!1){j.__webglMultisampledFramebuffer=n.createFramebuffer(),j.__webglColorRenderbuffer=[],t.bindFramebuffer(n.FRAMEBUFFER,j.__webglMultisampledFramebuffer);for(let Me=0;Me<ce.length;Me++){const Se=ce[Me];j.__webglColorRenderbuffer[Me]=n.createRenderbuffer(),n.bindRenderbuffer(n.RENDERBUFFER,j.__webglColorRenderbuffer[Me]);const Ze=s.convert(Se.format,Se.colorSpace),me=s.convert(Se.type),Pe=P(Se.internalFormat,Ze,me,Se.colorSpace,I.isXRRenderTarget===!0),it=Ve(I);n.renderbufferStorageMultisample(n.RENDERBUFFER,it,Pe,I.width,I.height),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0+Me,n.RENDERBUFFER,j.__webglColorRenderbuffer[Me])}n.bindRenderbuffer(n.RENDERBUFFER,null),I.depthBuffer&&(j.__webglDepthRenderbuffer=n.createRenderbuffer(),xe(j.__webglDepthRenderbuffer,I,!0)),t.bindFramebuffer(n.FRAMEBUFFER,null)}}if(ue){t.bindTexture(n.TEXTURE_CUBE_MAP,ae.__webglTexture),X(n.TEXTURE_CUBE_MAP,E);for(let Me=0;Me<6;Me++)if(E.mipmaps&&E.mipmaps.length>0)for(let Se=0;Se<E.mipmaps.length;Se++)ie(j.__webglFramebuffer[Me][Se],I,E,n.COLOR_ATTACHMENT0,n.TEXTURE_CUBE_MAP_POSITIVE_X+Me,Se);else ie(j.__webglFramebuffer[Me],I,E,n.COLOR_ATTACHMENT0,n.TEXTURE_CUBE_MAP_POSITIVE_X+Me,0);v(E)&&g(n.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(Fe){for(let Me=0,Se=ce.length;Me<Se;Me++){const Ze=ce[Me],me=i.get(Ze);t.bindTexture(n.TEXTURE_2D,me.__webglTexture),X(n.TEXTURE_2D,Ze),ie(j.__webglFramebuffer,I,Ze,n.COLOR_ATTACHMENT0+Me,n.TEXTURE_2D,0),v(Ze)&&g(n.TEXTURE_2D)}t.unbindTexture()}else{let Me=n.TEXTURE_2D;if((I.isWebGL3DRenderTarget||I.isWebGLArrayRenderTarget)&&(Me=I.isWebGL3DRenderTarget?n.TEXTURE_3D:n.TEXTURE_2D_ARRAY),t.bindTexture(Me,ae.__webglTexture),X(Me,E),E.mipmaps&&E.mipmaps.length>0)for(let Se=0;Se<E.mipmaps.length;Se++)ie(j.__webglFramebuffer[Se],I,E,n.COLOR_ATTACHMENT0,Me,Se);else ie(j.__webglFramebuffer,I,E,n.COLOR_ATTACHMENT0,Me,0);v(E)&&g(Me),t.unbindTexture()}I.depthBuffer&&Oe(I)}function U(I){const E=I.textures;for(let j=0,ae=E.length;j<ae;j++){const ce=E[j];if(v(ce)){const ue=I.isWebGLCubeRenderTarget?n.TEXTURE_CUBE_MAP:n.TEXTURE_2D,Fe=i.get(ce).__webglTexture;t.bindTexture(ue,Fe),g(ue),t.unbindTexture()}}}const Je=[],nt=[];function Tt(I){if(I.samples>0){if(ut(I)===!1){const E=I.textures,j=I.width,ae=I.height;let ce=n.COLOR_BUFFER_BIT;const ue=I.stencilBuffer?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT,Fe=i.get(I),Me=E.length>1;if(Me)for(let Se=0;Se<E.length;Se++)t.bindFramebuffer(n.FRAMEBUFFER,Fe.__webglMultisampledFramebuffer),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0+Se,n.RENDERBUFFER,null),t.bindFramebuffer(n.FRAMEBUFFER,Fe.__webglFramebuffer),n.framebufferTexture2D(n.DRAW_FRAMEBUFFER,n.COLOR_ATTACHMENT0+Se,n.TEXTURE_2D,null,0);t.bindFramebuffer(n.READ_FRAMEBUFFER,Fe.__webglMultisampledFramebuffer),t.bindFramebuffer(n.DRAW_FRAMEBUFFER,Fe.__webglFramebuffer);for(let Se=0;Se<E.length;Se++){if(I.resolveDepthBuffer&&(I.depthBuffer&&(ce|=n.DEPTH_BUFFER_BIT),I.stencilBuffer&&I.resolveStencilBuffer&&(ce|=n.STENCIL_BUFFER_BIT)),Me){n.framebufferRenderbuffer(n.READ_FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.RENDERBUFFER,Fe.__webglColorRenderbuffer[Se]);const Ze=i.get(E[Se]).__webglTexture;n.framebufferTexture2D(n.DRAW_FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,Ze,0)}n.blitFramebuffer(0,0,j,ae,0,0,j,ae,ce,n.NEAREST),u===!0&&(Je.length=0,nt.length=0,Je.push(n.COLOR_ATTACHMENT0+Se),I.depthBuffer&&I.resolveDepthBuffer===!1&&(Je.push(ue),nt.push(ue),n.invalidateFramebuffer(n.DRAW_FRAMEBUFFER,nt)),n.invalidateFramebuffer(n.READ_FRAMEBUFFER,Je))}if(t.bindFramebuffer(n.READ_FRAMEBUFFER,null),t.bindFramebuffer(n.DRAW_FRAMEBUFFER,null),Me)for(let Se=0;Se<E.length;Se++){t.bindFramebuffer(n.FRAMEBUFFER,Fe.__webglMultisampledFramebuffer),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0+Se,n.RENDERBUFFER,Fe.__webglColorRenderbuffer[Se]);const Ze=i.get(E[Se]).__webglTexture;t.bindFramebuffer(n.FRAMEBUFFER,Fe.__webglFramebuffer),n.framebufferTexture2D(n.DRAW_FRAMEBUFFER,n.COLOR_ATTACHMENT0+Se,n.TEXTURE_2D,Ze,0)}t.bindFramebuffer(n.DRAW_FRAMEBUFFER,Fe.__webglMultisampledFramebuffer)}else if(I.depthBuffer&&I.resolveDepthBuffer===!1&&u){const E=I.stencilBuffer?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT;n.invalidateFramebuffer(n.DRAW_FRAMEBUFFER,[E])}}}function Ve(I){return Math.min(r.maxSamples,I.samples)}function ut(I){const E=i.get(I);return I.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&E.__useRenderToTexture!==!1}function tt(I){const E=l.render.frame;h.get(I)!==E&&(h.set(I,E),I.update())}function Ke(I,E){const j=I.colorSpace,ae=I.format,ce=I.type;return I.isCompressedTexture===!0||I.isVideoTexture===!0||j!==Co&&j!==lo&&(rn.getTransfer(j)===vn?(ae!==As||ce!==To)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",j)),E}function Lt(I){return typeof HTMLImageElement<"u"&&I instanceof HTMLImageElement?(d.width=I.naturalWidth||I.width,d.height=I.naturalHeight||I.height):typeof VideoFrame<"u"&&I instanceof VideoFrame?(d.width=I.displayWidth,d.height=I.displayHeight):(d.width=I.width,d.height=I.height),d}this.allocateTextureUnit=Z,this.resetTextureUnits=O,this.setTexture2D=K,this.setTexture2DArray=ne,this.setTexture3D=Q,this.setTextureCube=se,this.rebindTextures=Ne,this.setupRenderTarget=Ye,this.updateRenderTargetMipmap=U,this.updateMultisampleRenderTarget=Tt,this.setupDepthRenderbuffer=Oe,this.setupFrameBufferTexture=ie,this.useMultisampledRTT=ut}function DG(n,e){function t(i,r=lo){let s;const l=rn.getTransfer(r);if(i===To)return n.UNSIGNED_BYTE;if(i===m4)return n.UNSIGNED_SHORT_4_4_4_4;if(i===g4)return n.UNSIGNED_SHORT_5_5_5_1;if(i===mk)return n.UNSIGNED_INT_5_9_9_9_REV;if(i===hk)return n.BYTE;if(i===pk)return n.SHORT;if(i===Hm)return n.UNSIGNED_SHORT;if(i===p4)return n.INT;if(i===Ku)return n.UNSIGNED_INT;if(i===fo)return n.FLOAT;if(i===x0)return n.HALF_FLOAT;if(i===gk)return n.ALPHA;if(i===vk)return n.RGB;if(i===As)return n.RGBA;if(i===_k)return n.LUMINANCE;if(i===xk)return n.LUMINANCE_ALPHA;if(i===Cu)return n.DEPTH_COMPONENT;if(i===Qu)return n.DEPTH_STENCIL;if(i===yk)return n.RED;if(i===v4)return n.RED_INTEGER;if(i===Sk)return n.RG;if(i===_4)return n.RG_INTEGER;if(i===x4)return n.RGBA_INTEGER;if(i===yv||i===Sv||i===Mv||i===Ev)if(l===vn)if(s=e.get("WEBGL_compressed_texture_s3tc_srgb"),s!==null){if(i===yv)return s.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(i===Sv)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(i===Mv)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(i===Ev)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(s=e.get("WEBGL_compressed_texture_s3tc"),s!==null){if(i===yv)return s.COMPRESSED_RGB_S3TC_DXT1_EXT;if(i===Sv)return s.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(i===Mv)return s.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(i===Ev)return s.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(i===V3||i===G3||i===W3||i===$3)if(s=e.get("WEBGL_compressed_texture_pvrtc"),s!==null){if(i===V3)return s.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(i===G3)return s.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(i===W3)return s.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(i===$3)return s.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(i===X3||i===q3||i===j3)if(s=e.get("WEBGL_compressed_texture_etc"),s!==null){if(i===X3||i===q3)return l===vn?s.COMPRESSED_SRGB8_ETC2:s.COMPRESSED_RGB8_ETC2;if(i===j3)return l===vn?s.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:s.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(i===Y3||i===K3||i===Z3||i===Q3||i===J3||i===ew||i===tw||i===nw||i===iw||i===rw||i===sw||i===aw||i===ow||i===lw)if(s=e.get("WEBGL_compressed_texture_astc"),s!==null){if(i===Y3)return l===vn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:s.COMPRESSED_RGBA_ASTC_4x4_KHR;if(i===K3)return l===vn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:s.COMPRESSED_RGBA_ASTC_5x4_KHR;if(i===Z3)return l===vn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:s.COMPRESSED_RGBA_ASTC_5x5_KHR;if(i===Q3)return l===vn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:s.COMPRESSED_RGBA_ASTC_6x5_KHR;if(i===J3)return l===vn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:s.COMPRESSED_RGBA_ASTC_6x6_KHR;if(i===ew)return l===vn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:s.COMPRESSED_RGBA_ASTC_8x5_KHR;if(i===tw)return l===vn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:s.COMPRESSED_RGBA_ASTC_8x6_KHR;if(i===nw)return l===vn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:s.COMPRESSED_RGBA_ASTC_8x8_KHR;if(i===iw)return l===vn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:s.COMPRESSED_RGBA_ASTC_10x5_KHR;if(i===rw)return l===vn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:s.COMPRESSED_RGBA_ASTC_10x6_KHR;if(i===sw)return l===vn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:s.COMPRESSED_RGBA_ASTC_10x8_KHR;if(i===aw)return l===vn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:s.COMPRESSED_RGBA_ASTC_10x10_KHR;if(i===ow)return l===vn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:s.COMPRESSED_RGBA_ASTC_12x10_KHR;if(i===lw)return l===vn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:s.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(i===wv||i===cw||i===uw)if(s=e.get("EXT_texture_compression_bptc"),s!==null){if(i===wv)return l===vn?s.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:s.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(i===cw)return s.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(i===uw)return s.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(i===Mk||i===fw||i===dw||i===hw)if(s=e.get("EXT_texture_compression_rgtc"),s!==null){if(i===wv)return s.COMPRESSED_RED_RGTC1_EXT;if(i===fw)return s.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(i===dw)return s.COMPRESSED_RED_GREEN_RGTC2_EXT;if(i===hw)return s.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return i===Zu?n.UNSIGNED_INT_24_8:n[i]!==void 0?n[i]:null}return{convert:t}}class NG extends Ar{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class ho extends Ci{constructor(){super(),this.isGroup=!0,this.type="Group"}}const UG={type:"move"};class Zv{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new ho,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new ho,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new Ee,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new Ee),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new ho,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new Ee,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new Ee),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const i of e.hand.values())this._getHandJoint(t,i)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,i){let r=null,s=null,l=null;const c=this._targetRay,u=this._grip,d=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(d&&e.hand){l=!0;for(const S of e.hand.values()){const v=t.getJointPose(S,i),g=this._getHandJoint(d,S);v!==null&&(g.matrix.fromArray(v.transform.matrix),g.matrix.decompose(g.position,g.rotation,g.scale),g.matrixWorldNeedsUpdate=!0,g.jointRadius=v.radius),g.visible=v!==null}const h=d.joints["index-finger-tip"],m=d.joints["thumb-tip"],p=h.position.distanceTo(m.position),x=.02,y=.005;d.inputState.pinching&&p>x+y?(d.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!d.inputState.pinching&&p<=x-y&&(d.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else u!==null&&e.gripSpace&&(s=t.getPose(e.gripSpace,i),s!==null&&(u.matrix.fromArray(s.transform.matrix),u.matrix.decompose(u.position,u.rotation,u.scale),u.matrixWorldNeedsUpdate=!0,s.linearVelocity?(u.hasLinearVelocity=!0,u.linearVelocity.copy(s.linearVelocity)):u.hasLinearVelocity=!1,s.angularVelocity?(u.hasAngularVelocity=!0,u.angularVelocity.copy(s.angularVelocity)):u.hasAngularVelocity=!1));c!==null&&(r=t.getPose(e.targetRaySpace,i),r===null&&s!==null&&(r=s),r!==null&&(c.matrix.fromArray(r.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),c.matrixWorldNeedsUpdate=!0,r.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(r.linearVelocity)):c.hasLinearVelocity=!1,r.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(r.angularVelocity)):c.hasAngularVelocity=!1,this.dispatchEvent(UG)))}return c!==null&&(c.visible=r!==null),u!==null&&(u.visible=s!==null),d!==null&&(d.visible=l!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const i=new ho;i.matrixAutoUpdate=!1,i.visible=!1,e.joints[t.jointName]=i,e.add(i)}return e.joints[t.jointName]}}const OG=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,FG=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class kG{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(e,t,i){if(this.texture===null){const r=new Wi,s=e.properties.get(r);s.__webglTexture=t.texture,(t.depthNear!=i.depthNear||t.depthFar!=i.depthFar)&&(this.depthNear=t.depthNear,this.depthFar=t.depthFar),this.texture=r}}getMesh(e){if(this.texture!==null&&this.mesh===null){const t=e.cameras[0].viewport,i=new Ao({vertexShader:OG,fragmentShader:FG,uniforms:{depthColor:{value:this.texture},depthWidth:{value:t.z},depthHeight:{value:t.w}}});this.mesh=new bs(new Kd(20,20),i)}return this.mesh}reset(){this.texture=null,this.mesh=null}}class zG extends lf{constructor(e,t){super();const i=this;let r=null,s=1,l=null,c="local-floor",u=1,d=null,h=null,m=null,p=null,x=null,y=null;const S=new kG,v=t.getContextAttributes();let g=null,P=null;const w=[],C=[],z=new Zt;let L=null;const D=new Ar;D.layers.enable(1),D.viewport=new oi;const V=new Ar;V.layers.enable(2),V.viewport=new oi;const R=[D,V],T=new NG;T.layers.enable(1),T.layers.enable(2);let O=null,Z=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(Y){let ie=w[Y];return ie===void 0&&(ie=new Zv,w[Y]=ie),ie.getTargetRaySpace()},this.getControllerGrip=function(Y){let ie=w[Y];return ie===void 0&&(ie=new Zv,w[Y]=ie),ie.getGripSpace()},this.getHand=function(Y){let ie=w[Y];return ie===void 0&&(ie=new Zv,w[Y]=ie),ie.getHandSpace()};function W(Y){const ie=C.indexOf(Y.inputSource);if(ie===-1)return;const xe=w[ie];xe!==void 0&&(xe.update(Y.inputSource,Y.frame,d||l),xe.dispatchEvent({type:Y.type,data:Y.inputSource}))}function K(){r.removeEventListener("select",W),r.removeEventListener("selectstart",W),r.removeEventListener("selectend",W),r.removeEventListener("squeeze",W),r.removeEventListener("squeezestart",W),r.removeEventListener("squeezeend",W),r.removeEventListener("end",K),r.removeEventListener("inputsourceschange",ne);for(let Y=0;Y<w.length;Y++){const ie=C[Y];ie!==null&&(C[Y]=null,w[Y].disconnect(ie))}O=null,Z=null,S.reset(),e.setRenderTarget(g),x=null,p=null,m=null,r=null,P=null,He.stop(),i.isPresenting=!1,e.setPixelRatio(L),e.setSize(z.width,z.height,!1),i.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(Y){s=Y,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(Y){c=Y,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return d||l},this.setReferenceSpace=function(Y){d=Y},this.getBaseLayer=function(){return p!==null?p:x},this.getBinding=function(){return m},this.getFrame=function(){return y},this.getSession=function(){return r},this.setSession=async function(Y){if(r=Y,r!==null){if(g=e.getRenderTarget(),r.addEventListener("select",W),r.addEventListener("selectstart",W),r.addEventListener("selectend",W),r.addEventListener("squeeze",W),r.addEventListener("squeezestart",W),r.addEventListener("squeezeend",W),r.addEventListener("end",K),r.addEventListener("inputsourceschange",ne),v.xrCompatible!==!0&&await t.makeXRCompatible(),L=e.getPixelRatio(),e.getSize(z),r.renderState.layers===void 0){const ie={antialias:v.antialias,alpha:!0,depth:v.depth,stencil:v.stencil,framebufferScaleFactor:s};x=new XRWebGLLayer(r,t,ie),r.updateRenderState({baseLayer:x}),e.setPixelRatio(1),e.setSize(x.framebufferWidth,x.framebufferHeight,!1),P=new zl(x.framebufferWidth,x.framebufferHeight,{format:As,type:To,colorSpace:e.outputColorSpace,stencilBuffer:v.stencil})}else{let ie=null,xe=null,pe=null;v.depth&&(pe=v.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,ie=v.stencil?Qu:Cu,xe=v.stencil?Zu:Ku);const Oe={colorFormat:t.RGBA8,depthFormat:pe,scaleFactor:s};m=new XRWebGLBinding(r,t),p=m.createProjectionLayer(Oe),r.updateRenderState({layers:[p]}),e.setPixelRatio(1),e.setSize(p.textureWidth,p.textureHeight,!1),P=new zl(p.textureWidth,p.textureHeight,{format:As,type:To,depthTexture:new F4(p.textureWidth,p.textureHeight,xe,void 0,void 0,void 0,void 0,void 0,void 0,ie),stencilBuffer:v.stencil,colorSpace:e.outputColorSpace,samples:v.antialias?4:0,resolveDepthBuffer:p.ignoreDepthValues===!1})}P.isXRRenderTarget=!0,this.setFoveation(u),d=null,l=await r.requestReferenceSpace(c),He.setContext(r),He.start(),i.isPresenting=!0,i.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(r!==null)return r.environmentBlendMode};function ne(Y){for(let ie=0;ie<Y.removed.length;ie++){const xe=Y.removed[ie],pe=C.indexOf(xe);pe>=0&&(C[pe]=null,w[pe].disconnect(xe))}for(let ie=0;ie<Y.added.length;ie++){const xe=Y.added[ie];let pe=C.indexOf(xe);if(pe===-1){for(let Ne=0;Ne<w.length;Ne++)if(Ne>=C.length){C.push(xe),pe=Ne;break}else if(C[Ne]===null){C[Ne]=xe,pe=Ne;break}if(pe===-1)break}const Oe=w[pe];Oe&&Oe.connect(xe)}}const Q=new Ee,se=new Ee;function G(Y,ie,xe){Q.setFromMatrixPosition(ie.matrixWorld),se.setFromMatrixPosition(xe.matrixWorld);const pe=Q.distanceTo(se),Oe=ie.projectionMatrix.elements,Ne=xe.projectionMatrix.elements,Ye=Oe[14]/(Oe[10]-1),U=Oe[14]/(Oe[10]+1),Je=(Oe[9]+1)/Oe[5],nt=(Oe[9]-1)/Oe[5],Tt=(Oe[8]-1)/Oe[0],Ve=(Ne[8]+1)/Ne[0],ut=Ye*Tt,tt=Ye*Ve,Ke=pe/(-Tt+Ve),Lt=Ke*-Tt;ie.matrixWorld.decompose(Y.position,Y.quaternion,Y.scale),Y.translateX(Lt),Y.translateZ(Ke),Y.matrixWorld.compose(Y.position,Y.quaternion,Y.scale),Y.matrixWorldInverse.copy(Y.matrixWorld).invert();const I=Ye+Ke,E=U+Ke,j=ut-Lt,ae=tt+(pe-Lt),ce=Je*U/E*I,ue=nt*U/E*I;Y.projectionMatrix.makePerspective(j,ae,ce,ue,I,E),Y.projectionMatrixInverse.copy(Y.projectionMatrix).invert()}function de(Y,ie){ie===null?Y.matrixWorld.copy(Y.matrix):Y.matrixWorld.multiplyMatrices(ie.matrixWorld,Y.matrix),Y.matrixWorldInverse.copy(Y.matrixWorld).invert()}this.updateCamera=function(Y){if(r===null)return;S.texture!==null&&(Y.near=S.depthNear,Y.far=S.depthFar),T.near=V.near=D.near=Y.near,T.far=V.far=D.far=Y.far,(O!==T.near||Z!==T.far)&&(r.updateRenderState({depthNear:T.near,depthFar:T.far}),O=T.near,Z=T.far,D.near=O,D.far=Z,V.near=O,V.far=Z,D.updateProjectionMatrix(),V.updateProjectionMatrix(),Y.updateProjectionMatrix());const ie=Y.parent,xe=T.cameras;de(T,ie);for(let pe=0;pe<xe.length;pe++)de(xe[pe],ie);xe.length===2?G(T,D,V):T.projectionMatrix.copy(D.projectionMatrix),le(Y,T,ie)};function le(Y,ie,xe){xe===null?Y.matrix.copy(ie.matrixWorld):(Y.matrix.copy(xe.matrixWorld),Y.matrix.invert(),Y.matrix.multiply(ie.matrixWorld)),Y.matrix.decompose(Y.position,Y.quaternion,Y.scale),Y.updateMatrixWorld(!0),Y.projectionMatrix.copy(ie.projectionMatrix),Y.projectionMatrixInverse.copy(ie.projectionMatrixInverse),Y.isPerspectiveCamera&&(Y.fov=Y_*2*Math.atan(1/Y.projectionMatrix.elements[5]),Y.zoom=1)}this.getCamera=function(){return T},this.getFoveation=function(){if(!(p===null&&x===null))return u},this.setFoveation=function(Y){u=Y,p!==null&&(p.fixedFoveation=Y),x!==null&&x.fixedFoveation!==void 0&&(x.fixedFoveation=Y)},this.hasDepthSensing=function(){return S.texture!==null},this.getDepthSensingMesh=function(){return S.getMesh(T)};let X=null;function he(Y,ie){if(h=ie.getViewerPose(d||l),y=ie,h!==null){const xe=h.views;x!==null&&(e.setRenderTargetFramebuffer(P,x.framebuffer),e.setRenderTarget(P));let pe=!1;xe.length!==T.cameras.length&&(T.cameras.length=0,pe=!0);for(let Ne=0;Ne<xe.length;Ne++){const Ye=xe[Ne];let U=null;if(x!==null)U=x.getViewport(Ye);else{const nt=m.getViewSubImage(p,Ye);U=nt.viewport,Ne===0&&(e.setRenderTargetTextures(P,nt.colorTexture,p.ignoreDepthValues?void 0:nt.depthStencilTexture),e.setRenderTarget(P))}let Je=R[Ne];Je===void 0&&(Je=new Ar,Je.layers.enable(Ne),Je.viewport=new oi,R[Ne]=Je),Je.matrix.fromArray(Ye.transform.matrix),Je.matrix.decompose(Je.position,Je.quaternion,Je.scale),Je.projectionMatrix.fromArray(Ye.projectionMatrix),Je.projectionMatrixInverse.copy(Je.projectionMatrix).invert(),Je.viewport.set(U.x,U.y,U.width,U.height),Ne===0&&(T.matrix.copy(Je.matrix),T.matrix.decompose(T.position,T.quaternion,T.scale)),pe===!0&&T.cameras.push(Je)}const Oe=r.enabledFeatures;if(Oe&&Oe.includes("depth-sensing")){const Ne=m.getDepthInformation(xe[0]);Ne&&Ne.isValid&&Ne.texture&&S.init(e,Ne,r.renderState)}}for(let xe=0;xe<w.length;xe++){const pe=C[xe],Oe=w[xe];pe!==null&&Oe!==void 0&&Oe.update(pe,ie,d||l)}X&&X(Y,ie),ie.detectedPlanes&&i.dispatchEvent({type:"planesdetected",data:ie}),y=null}const He=new O4;He.setAnimationLoop(he),this.setAnimationLoop=function(Y){X=Y},this.dispose=function(){}}}const ll=new ha,BG=new Ln;function HG(n,e){function t(v,g){v.matrixAutoUpdate===!0&&v.updateMatrix(),g.value.copy(v.matrix)}function i(v,g){g.color.getRGB(v.fogColor.value,I4(n)),g.isFog?(v.fogNear.value=g.near,v.fogFar.value=g.far):g.isFogExp2&&(v.fogDensity.value=g.density)}function r(v,g,P,w,C){g.isMeshBasicMaterial||g.isMeshLambertMaterial?s(v,g):g.isMeshToonMaterial?(s(v,g),m(v,g)):g.isMeshPhongMaterial?(s(v,g),h(v,g)):g.isMeshStandardMaterial?(s(v,g),p(v,g),g.isMeshPhysicalMaterial&&x(v,g,C)):g.isMeshMatcapMaterial?(s(v,g),y(v,g)):g.isMeshDepthMaterial?s(v,g):g.isMeshDistanceMaterial?(s(v,g),S(v,g)):g.isMeshNormalMaterial?s(v,g):g.isLineBasicMaterial?(l(v,g),g.isLineDashedMaterial&&c(v,g)):g.isPointsMaterial?u(v,g,P,w):g.isSpriteMaterial?d(v,g):g.isShadowMaterial?(v.color.value.copy(g.color),v.opacity.value=g.opacity):g.isShaderMaterial&&(g.uniformsNeedUpdate=!1)}function s(v,g){v.opacity.value=g.opacity,g.color&&v.diffuse.value.copy(g.color),g.emissive&&v.emissive.value.copy(g.emissive).multiplyScalar(g.emissiveIntensity),g.map&&(v.map.value=g.map,t(g.map,v.mapTransform)),g.alphaMap&&(v.alphaMap.value=g.alphaMap,t(g.alphaMap,v.alphaMapTransform)),g.bumpMap&&(v.bumpMap.value=g.bumpMap,t(g.bumpMap,v.bumpMapTransform),v.bumpScale.value=g.bumpScale,g.side===Gi&&(v.bumpScale.value*=-1)),g.normalMap&&(v.normalMap.value=g.normalMap,t(g.normalMap,v.normalMapTransform),v.normalScale.value.copy(g.normalScale),g.side===Gi&&v.normalScale.value.negate()),g.displacementMap&&(v.displacementMap.value=g.displacementMap,t(g.displacementMap,v.displacementMapTransform),v.displacementScale.value=g.displacementScale,v.displacementBias.value=g.displacementBias),g.emissiveMap&&(v.emissiveMap.value=g.emissiveMap,t(g.emissiveMap,v.emissiveMapTransform)),g.specularMap&&(v.specularMap.value=g.specularMap,t(g.specularMap,v.specularMapTransform)),g.alphaTest>0&&(v.alphaTest.value=g.alphaTest);const P=e.get(g),w=P.envMap,C=P.envMapRotation;w&&(v.envMap.value=w,ll.copy(C),ll.x*=-1,ll.y*=-1,ll.z*=-1,w.isCubeTexture&&w.isRenderTargetTexture===!1&&(ll.y*=-1,ll.z*=-1),v.envMapRotation.value.setFromMatrix4(BG.makeRotationFromEuler(ll)),v.flipEnvMap.value=w.isCubeTexture&&w.isRenderTargetTexture===!1?-1:1,v.reflectivity.value=g.reflectivity,v.ior.value=g.ior,v.refractionRatio.value=g.refractionRatio),g.lightMap&&(v.lightMap.value=g.lightMap,v.lightMapIntensity.value=g.lightMapIntensity,t(g.lightMap,v.lightMapTransform)),g.aoMap&&(v.aoMap.value=g.aoMap,v.aoMapIntensity.value=g.aoMapIntensity,t(g.aoMap,v.aoMapTransform))}function l(v,g){v.diffuse.value.copy(g.color),v.opacity.value=g.opacity,g.map&&(v.map.value=g.map,t(g.map,v.mapTransform))}function c(v,g){v.dashSize.value=g.dashSize,v.totalSize.value=g.dashSize+g.gapSize,v.scale.value=g.scale}function u(v,g,P,w){v.diffuse.value.copy(g.color),v.opacity.value=g.opacity,v.size.value=g.size*P,v.scale.value=w*.5,g.map&&(v.map.value=g.map,t(g.map,v.uvTransform)),g.alphaMap&&(v.alphaMap.value=g.alphaMap,t(g.alphaMap,v.alphaMapTransform)),g.alphaTest>0&&(v.alphaTest.value=g.alphaTest)}function d(v,g){v.diffuse.value.copy(g.color),v.opacity.value=g.opacity,v.rotation.value=g.rotation,g.map&&(v.map.value=g.map,t(g.map,v.mapTransform)),g.alphaMap&&(v.alphaMap.value=g.alphaMap,t(g.alphaMap,v.alphaMapTransform)),g.alphaTest>0&&(v.alphaTest.value=g.alphaTest)}function h(v,g){v.specular.value.copy(g.specular),v.shininess.value=Math.max(g.shininess,1e-4)}function m(v,g){g.gradientMap&&(v.gradientMap.value=g.gradientMap)}function p(v,g){v.metalness.value=g.metalness,g.metalnessMap&&(v.metalnessMap.value=g.metalnessMap,t(g.metalnessMap,v.metalnessMapTransform)),v.roughness.value=g.roughness,g.roughnessMap&&(v.roughnessMap.value=g.roughnessMap,t(g.roughnessMap,v.roughnessMapTransform)),g.envMap&&(v.envMapIntensity.value=g.envMapIntensity)}function x(v,g,P){v.ior.value=g.ior,g.sheen>0&&(v.sheenColor.value.copy(g.sheenColor).multiplyScalar(g.sheen),v.sheenRoughness.value=g.sheenRoughness,g.sheenColorMap&&(v.sheenColorMap.value=g.sheenColorMap,t(g.sheenColorMap,v.sheenColorMapTransform)),g.sheenRoughnessMap&&(v.sheenRoughnessMap.value=g.sheenRoughnessMap,t(g.sheenRoughnessMap,v.sheenRoughnessMapTransform))),g.clearcoat>0&&(v.clearcoat.value=g.clearcoat,v.clearcoatRoughness.value=g.clearcoatRoughness,g.clearcoatMap&&(v.clearcoatMap.value=g.clearcoatMap,t(g.clearcoatMap,v.clearcoatMapTransform)),g.clearcoatRoughnessMap&&(v.clearcoatRoughnessMap.value=g.clearcoatRoughnessMap,t(g.clearcoatRoughnessMap,v.clearcoatRoughnessMapTransform)),g.clearcoatNormalMap&&(v.clearcoatNormalMap.value=g.clearcoatNormalMap,t(g.clearcoatNormalMap,v.clearcoatNormalMapTransform),v.clearcoatNormalScale.value.copy(g.clearcoatNormalScale),g.side===Gi&&v.clearcoatNormalScale.value.negate())),g.dispersion>0&&(v.dispersion.value=g.dispersion),g.iridescence>0&&(v.iridescence.value=g.iridescence,v.iridescenceIOR.value=g.iridescenceIOR,v.iridescenceThicknessMinimum.value=g.iridescenceThicknessRange[0],v.iridescenceThicknessMaximum.value=g.iridescenceThicknessRange[1],g.iridescenceMap&&(v.iridescenceMap.value=g.iridescenceMap,t(g.iridescenceMap,v.iridescenceMapTransform)),g.iridescenceThicknessMap&&(v.iridescenceThicknessMap.value=g.iridescenceThicknessMap,t(g.iridescenceThicknessMap,v.iridescenceThicknessMapTransform))),g.transmission>0&&(v.transmission.value=g.transmission,v.transmissionSamplerMap.value=P.texture,v.transmissionSamplerSize.value.set(P.width,P.height),g.transmissionMap&&(v.transmissionMap.value=g.transmissionMap,t(g.transmissionMap,v.transmissionMapTransform)),v.thickness.value=g.thickness,g.thicknessMap&&(v.thicknessMap.value=g.thicknessMap,t(g.thicknessMap,v.thicknessMapTransform)),v.attenuationDistance.value=g.attenuationDistance,v.attenuationColor.value.copy(g.attenuationColor)),g.anisotropy>0&&(v.anisotropyVector.value.set(g.anisotropy*Math.cos(g.anisotropyRotation),g.anisotropy*Math.sin(g.anisotropyRotation)),g.anisotropyMap&&(v.anisotropyMap.value=g.anisotropyMap,t(g.anisotropyMap,v.anisotropyMapTransform))),v.specularIntensity.value=g.specularIntensity,v.specularColor.value.copy(g.specularColor),g.specularColorMap&&(v.specularColorMap.value=g.specularColorMap,t(g.specularColorMap,v.specularColorMapTransform)),g.specularIntensityMap&&(v.specularIntensityMap.value=g.specularIntensityMap,t(g.specularIntensityMap,v.specularIntensityMapTransform))}function y(v,g){g.matcap&&(v.matcap.value=g.matcap)}function S(v,g){const P=e.get(g).light;v.referencePosition.value.setFromMatrixPosition(P.matrixWorld),v.nearDistance.value=P.shadow.camera.near,v.farDistance.value=P.shadow.camera.far}return{refreshFogUniforms:i,refreshMaterialUniforms:r}}function VG(n,e,t,i){let r={},s={},l=[];const c=n.getParameter(n.MAX_UNIFORM_BUFFER_BINDINGS);function u(P,w){const C=w.program;i.uniformBlockBinding(P,C)}function d(P,w){let C=r[P.id];C===void 0&&(y(P),C=h(P),r[P.id]=C,P.addEventListener("dispose",v));const z=w.program;i.updateUBOMapping(P,z);const L=e.render.frame;s[P.id]!==L&&(p(P),s[P.id]=L)}function h(P){const w=m();P.__bindingPointIndex=w;const C=n.createBuffer(),z=P.__size,L=P.usage;return n.bindBuffer(n.UNIFORM_BUFFER,C),n.bufferData(n.UNIFORM_BUFFER,z,L),n.bindBuffer(n.UNIFORM_BUFFER,null),n.bindBufferBase(n.UNIFORM_BUFFER,w,C),C}function m(){for(let P=0;P<c;P++)if(l.indexOf(P)===-1)return l.push(P),P;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function p(P){const w=r[P.id],C=P.uniforms,z=P.__cache;n.bindBuffer(n.UNIFORM_BUFFER,w);for(let L=0,D=C.length;L<D;L++){const V=Array.isArray(C[L])?C[L]:[C[L]];for(let R=0,T=V.length;R<T;R++){const O=V[R];if(x(O,L,R,z)===!0){const Z=O.__offset,W=Array.isArray(O.value)?O.value:[O.value];let K=0;for(let ne=0;ne<W.length;ne++){const Q=W[ne],se=S(Q);typeof Q=="number"||typeof Q=="boolean"?(O.__data[0]=Q,n.bufferSubData(n.UNIFORM_BUFFER,Z+K,O.__data)):Q.isMatrix3?(O.__data[0]=Q.elements[0],O.__data[1]=Q.elements[1],O.__data[2]=Q.elements[2],O.__data[3]=0,O.__data[4]=Q.elements[3],O.__data[5]=Q.elements[4],O.__data[6]=Q.elements[5],O.__data[7]=0,O.__data[8]=Q.elements[6],O.__data[9]=Q.elements[7],O.__data[10]=Q.elements[8],O.__data[11]=0):(Q.toArray(O.__data,K),K+=se.storage/Float32Array.BYTES_PER_ELEMENT)}n.bufferSubData(n.UNIFORM_BUFFER,Z,O.__data)}}}n.bindBuffer(n.UNIFORM_BUFFER,null)}function x(P,w,C,z){const L=P.value,D=w+"_"+C;if(z[D]===void 0)return typeof L=="number"||typeof L=="boolean"?z[D]=L:z[D]=L.clone(),!0;{const V=z[D];if(typeof L=="number"||typeof L=="boolean"){if(V!==L)return z[D]=L,!0}else if(V.equals(L)===!1)return V.copy(L),!0}return!1}function y(P){const w=P.uniforms;let C=0;const z=16;for(let D=0,V=w.length;D<V;D++){const R=Array.isArray(w[D])?w[D]:[w[D]];for(let T=0,O=R.length;T<O;T++){const Z=R[T],W=Array.isArray(Z.value)?Z.value:[Z.value];for(let K=0,ne=W.length;K<ne;K++){const Q=W[K],se=S(Q),G=C%z;G!==0&&z-G<se.boundary&&(C+=z-G),Z.__data=new Float32Array(se.storage/Float32Array.BYTES_PER_ELEMENT),Z.__offset=C,C+=se.storage}}}const L=C%z;return L>0&&(C+=z-L),P.__size=C,P.__cache={},this}function S(P){const w={boundary:0,storage:0};return typeof P=="number"||typeof P=="boolean"?(w.boundary=4,w.storage=4):P.isVector2?(w.boundary=8,w.storage=8):P.isVector3||P.isColor?(w.boundary=16,w.storage=12):P.isVector4?(w.boundary=16,w.storage=16):P.isMatrix3?(w.boundary=48,w.storage=48):P.isMatrix4?(w.boundary=64,w.storage=64):P.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",P),w}function v(P){const w=P.target;w.removeEventListener("dispose",v);const C=l.indexOf(w.__bindingPointIndex);l.splice(C,1),n.deleteBuffer(r[w.id]),delete r[w.id],delete s[w.id]}function g(){for(const P in r)n.deleteBuffer(r[P]);l=[],r={},s={}}return{bind:u,update:d,dispose:g}}class GG{constructor(e={}){const{canvas:t=Nk(),context:i=null,depth:r=!0,stencil:s=!1,alpha:l=!1,antialias:c=!1,premultipliedAlpha:u=!0,preserveDrawingBuffer:d=!1,powerPreference:h="default",failIfMajorPerformanceCaveat:m=!1}=e;this.isWebGLRenderer=!0;let p;if(i!==null){if(typeof WebGLRenderingContext<"u"&&i instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");p=i.getContextAttributes().alpha}else p=l;const x=new Uint32Array(4),y=new Int32Array(4);let S=null,v=null;const g=[],P=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this._outputColorSpace=ms,this.toneMapping=_o,this.toneMappingExposure=1;const w=this;let C=!1,z=0,L=0,D=null,V=-1,R=null;const T=new oi,O=new oi;let Z=null;const W=new jt(0);let K=0,ne=t.width,Q=t.height,se=1,G=null,de=null;const le=new oi(0,0,ne,Q),X=new oi(0,0,ne,Q);let he=!1;const He=new U4;let Y=!1,ie=!1;const xe=new Ln,pe=new Ee,Oe={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let Ne=!1;function Ye(){return D===null?se:1}let U=i;function Je(A,k){return t.getContext(A,k)}try{const A={alpha:!0,depth:r,stencil:s,antialias:c,premultipliedAlpha:u,preserveDrawingBuffer:d,powerPreference:h,failIfMajorPerformanceCaveat:m};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${Vx}`),t.addEventListener("webglcontextlost",Ae,!1),t.addEventListener("webglcontextrestored",ee,!1),t.addEventListener("webglcontextcreationerror",te,!1),U===null){const k="webgl2";if(U=Je(k,A),U===null)throw Je(k)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(A){throw console.error("THREE.WebGLRenderer: "+A.message),A}let nt,Tt,Ve,ut,tt,Ke,Lt,I,E,j,ae,ce,ue,Fe,Me,Se,Ze,me,Pe,it,Xe,Te,et,rt;function bt(){nt=new ZH(U),nt.init(),Te=new DG(U,nt),Tt=new WH(U,nt,e,Te),Ve=new LG(U),ut=new eV(U),tt=new vG,Ke=new IG(U,nt,Ve,tt,Tt,Te,ut),Lt=new XH(w),I=new KH(w),E=new az(U),et=new VH(U,E),j=new QH(U,E,ut,et),ae=new nV(U,j,E,ut),Pe=new tV(U,Tt,Ke),Se=new $H(tt),ce=new gG(w,Lt,I,nt,Tt,et,Se),ue=new HG(w,tt),Fe=new xG,Me=new TG(nt),me=new HH(w,Lt,I,Ve,ae,p,u),Ze=new PG(w,ae,Tt),rt=new VG(U,ut,Tt,Ve),it=new GH(U,nt,ut),Xe=new JH(U,nt,ut),ut.programs=ce.programs,w.capabilities=Tt,w.extensions=nt,w.properties=tt,w.renderLists=Fe,w.shadowMap=Ze,w.state=Ve,w.info=ut}bt();const N=new zG(w,U);this.xr=N,this.getContext=function(){return U},this.getContextAttributes=function(){return U.getContextAttributes()},this.forceContextLoss=function(){const A=nt.get("WEBGL_lose_context");A&&A.loseContext()},this.forceContextRestore=function(){const A=nt.get("WEBGL_lose_context");A&&A.restoreContext()},this.getPixelRatio=function(){return se},this.setPixelRatio=function(A){A!==void 0&&(se=A,this.setSize(ne,Q,!1))},this.getSize=function(A){return A.set(ne,Q)},this.setSize=function(A,k,$=!0){if(N.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}ne=A,Q=k,t.width=Math.floor(A*se),t.height=Math.floor(k*se),$===!0&&(t.style.width=A+"px",t.style.height=k+"px"),this.setViewport(0,0,A,k)},this.getDrawingBufferSize=function(A){return A.set(ne*se,Q*se).floor()},this.setDrawingBufferSize=function(A,k,$){ne=A,Q=k,se=$,t.width=Math.floor(A*$),t.height=Math.floor(k*$),this.setViewport(0,0,A,k)},this.getCurrentViewport=function(A){return A.copy(T)},this.getViewport=function(A){return A.copy(le)},this.setViewport=function(A,k,$,q){A.isVector4?le.set(A.x,A.y,A.z,A.w):le.set(A,k,$,q),Ve.viewport(T.copy(le).multiplyScalar(se).round())},this.getScissor=function(A){return A.copy(X)},this.setScissor=function(A,k,$,q){A.isVector4?X.set(A.x,A.y,A.z,A.w):X.set(A,k,$,q),Ve.scissor(O.copy(X).multiplyScalar(se).round())},this.getScissorTest=function(){return he},this.setScissorTest=function(A){Ve.setScissorTest(he=A)},this.setOpaqueSort=function(A){G=A},this.setTransparentSort=function(A){de=A},this.getClearColor=function(A){return A.copy(me.getClearColor())},this.setClearColor=function(){me.setClearColor.apply(me,arguments)},this.getClearAlpha=function(){return me.getClearAlpha()},this.setClearAlpha=function(){me.setClearAlpha.apply(me,arguments)},this.clear=function(A=!0,k=!0,$=!0){let q=0;if(A){let H=!1;if(D!==null){const ve=D.texture.format;H=ve===x4||ve===_4||ve===v4}if(H){const ve=D.texture.type,be=ve===To||ve===Ku||ve===Hm||ve===Zu||ve===m4||ve===g4,Ce=me.getClearColor(),Le=me.getClearAlpha(),De=Ce.r,$e=Ce.g,ke=Ce.b;be?(x[0]=De,x[1]=$e,x[2]=ke,x[3]=Le,U.clearBufferuiv(U.COLOR,0,x)):(y[0]=De,y[1]=$e,y[2]=ke,y[3]=Le,U.clearBufferiv(U.COLOR,0,y))}else q|=U.COLOR_BUFFER_BIT}k&&(q|=U.DEPTH_BUFFER_BIT),$&&(q|=U.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),U.clear(q)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",Ae,!1),t.removeEventListener("webglcontextrestored",ee,!1),t.removeEventListener("webglcontextcreationerror",te,!1),Fe.dispose(),Me.dispose(),tt.dispose(),Lt.dispose(),I.dispose(),ae.dispose(),et.dispose(),rt.dispose(),ce.dispose(),N.dispose(),N.removeEventListener("sessionstart",dn),N.removeEventListener("sessionend",yn),In.stop()};function Ae(A){A.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),C=!0}function ee(){console.log("THREE.WebGLRenderer: Context Restored."),C=!1;const A=ut.autoReset,k=Ze.enabled,$=Ze.autoUpdate,q=Ze.needsUpdate,H=Ze.type;bt(),ut.autoReset=A,Ze.enabled=k,Ze.autoUpdate=$,Ze.needsUpdate=q,Ze.type=H}function te(A){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",A.statusMessage)}function ge(A){const k=A.target;k.removeEventListener("dispose",ge),qe(k)}function qe(A){dt(A),tt.remove(A)}function dt(A){const k=tt.get(A).programs;k!==void 0&&(k.forEach(function($){ce.releaseProgram($)}),A.isShaderMaterial&&ce.releaseShaderCache(A))}this.renderBufferDirect=function(A,k,$,q,H,ve){k===null&&(k=Oe);const be=H.isMesh&&H.matrixWorld.determinant()<0,Ce=hf(A,k,$,q,H);Ve.setMaterial(q,be);let Le=$.index,De=1;if(q.wireframe===!0){if(Le=j.getWireframeAttribute($),Le===void 0)return;De=2}const $e=$.drawRange,ke=$.attributes.position;let pt=$e.start*De,At=($e.start+$e.count)*De;ve!==null&&(pt=Math.max(pt,ve.start*De),At=Math.min(At,(ve.start+ve.count)*De)),Le!==null?(pt=Math.max(pt,0),At=Math.min(At,Le.count)):ke!=null&&(pt=Math.max(pt,0),At=Math.min(At,ke.count));const Rt=At-pt;if(Rt<0||Rt===1/0)return;et.setup(H,q,Ce,$,Le);let Qt,mt=it;if(Le!==null&&(Qt=E.get(Le),mt=Xe,mt.setIndex(Qt)),H.isMesh)q.wireframe===!0?(Ve.setLineWidth(q.wireframeLinewidth*Ye()),mt.setMode(U.LINES)):mt.setMode(U.TRIANGLES);else if(H.isLine){let Ie=q.linewidth;Ie===void 0&&(Ie=1),Ve.setLineWidth(Ie*Ye()),H.isLineSegments?mt.setMode(U.LINES):H.isLineLoop?mt.setMode(U.LINE_LOOP):mt.setMode(U.LINE_STRIP)}else H.isPoints?mt.setMode(U.POINTS):H.isSprite&&mt.setMode(U.TRIANGLES);if(H.isBatchedMesh)H._multiDrawInstances!==null?mt.renderMultiDrawInstances(H._multiDrawStarts,H._multiDrawCounts,H._multiDrawCount,H._multiDrawInstances):mt.renderMultiDraw(H._multiDrawStarts,H._multiDrawCounts,H._multiDrawCount);else if(H.isInstancedMesh)mt.renderInstances(pt,Rt,H.count);else if($.isInstancedBufferGeometry){const Ie=$._maxInstanceCount!==void 0?$._maxInstanceCount:1/0,$t=Math.min($.instanceCount,Ie);mt.renderInstances(pt,Rt,$t)}else mt.render(pt,Rt)};function Pt(A,k,$){A.transparent===!0&&A.side===aa&&A.forceSinglePass===!1?(A.side=Gi,A.needsUpdate=!0,Pi(A,k,$),A.side=wo,A.needsUpdate=!0,Pi(A,k,$),A.side=aa):Pi(A,k,$)}this.compile=function(A,k,$=null){$===null&&($=A),v=Me.get($),v.init(k),P.push(v),$.traverseVisible(function(H){H.isLight&&H.layers.test(k.layers)&&(v.pushLight(H),H.castShadow&&v.pushShadow(H))}),A!==$&&A.traverseVisible(function(H){H.isLight&&H.layers.test(k.layers)&&(v.pushLight(H),H.castShadow&&v.pushShadow(H))}),v.setupLights();const q=new Set;return A.traverse(function(H){const ve=H.material;if(ve)if(Array.isArray(ve))for(let be=0;be<ve.length;be++){const Ce=ve[be];Pt(Ce,$,H),q.add(Ce)}else Pt(ve,$,H),q.add(ve)}),P.pop(),v=null,q},this.compileAsync=function(A,k,$=null){const q=this.compile(A,k,$);return new Promise(H=>{function ve(){if(q.forEach(function(be){tt.get(be).currentProgram.isReady()&&q.delete(be)}),q.size===0){H(A);return}setTimeout(ve,10)}nt.get("KHR_parallel_shader_compile")!==null?ve():setTimeout(ve,10)})};let Nt=null;function xt(A){Nt&&Nt(A)}function dn(){In.stop()}function yn(){In.start()}const In=new O4;In.setAnimationLoop(xt),typeof self<"u"&&In.setContext(self),this.setAnimationLoop=function(A){Nt=A,N.setAnimationLoop(A),A===null?In.stop():In.start()},N.addEventListener("sessionstart",dn),N.addEventListener("sessionend",yn),this.render=function(A,k){if(k!==void 0&&k.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(C===!0)return;if(A.matrixWorldAutoUpdate===!0&&A.updateMatrixWorld(),k.parent===null&&k.matrixWorldAutoUpdate===!0&&k.updateMatrixWorld(),N.enabled===!0&&N.isPresenting===!0&&(N.cameraAutoUpdate===!0&&N.updateCamera(k),k=N.getCamera()),A.isScene===!0&&A.onBeforeRender(w,A,k,D),v=Me.get(A,P.length),v.init(k),P.push(v),xe.multiplyMatrices(k.projectionMatrix,k.matrixWorldInverse),He.setFromProjectionMatrix(xe),ie=this.localClippingEnabled,Y=Se.init(this.clippingPlanes,ie),S=Fe.get(A,g.length),S.init(),g.push(S),N.enabled===!0&&N.isPresenting===!0){const ve=w.xr.getDepthSensingMesh();ve!==null&&Ir(ve,k,-1/0,w.sortObjects)}Ir(A,k,0,w.sortObjects),S.finish(),w.sortObjects===!0&&S.sort(G,de),Ne=N.enabled===!1||N.isPresenting===!1||N.hasDepthSensing()===!1,Ne&&me.addToRenderList(S,A),this.info.render.frame++,Y===!0&&Se.beginShadows();const $=v.state.shadowsArray;Ze.render($,A,k),Y===!0&&Se.endShadows(),this.info.autoReset===!0&&this.info.reset();const q=S.opaque,H=S.transmissive;if(v.setupLights(),k.isArrayCamera){const ve=k.cameras;if(H.length>0)for(let be=0,Ce=ve.length;be<Ce;be++){const Le=ve[be];Po(q,H,A,Le)}Ne&&me.render(A);for(let be=0,Ce=ve.length;be<Ce;be++){const Le=ve[be];Dr(S,A,Le,Le.viewport)}}else H.length>0&&Po(q,H,A,k),Ne&&me.render(A),Dr(S,A,k);D!==null&&(Ke.updateMultisampleRenderTarget(D),Ke.updateRenderTargetMipmap(D)),A.isScene===!0&&A.onAfterRender(w,A,k),et.resetDefaultState(),V=-1,R=null,P.pop(),P.length>0?(v=P[P.length-1],Y===!0&&Se.setGlobalState(w.clippingPlanes,v.state.camera)):v=null,g.pop(),g.length>0?S=g[g.length-1]:S=null};function Ir(A,k,$,q){if(A.visible===!1)return;if(A.layers.test(k.layers)){if(A.isGroup)$=A.renderOrder;else if(A.isLOD)A.autoUpdate===!0&&A.update(k);else if(A.isLight)v.pushLight(A),A.castShadow&&v.pushShadow(A);else if(A.isSprite){if(!A.frustumCulled||He.intersectsSprite(A)){q&&pe.setFromMatrixPosition(A.matrixWorld).applyMatrix4(xe);const be=ae.update(A),Ce=A.material;Ce.visible&&S.push(A,be,Ce,$,pe.z,null)}}else if((A.isMesh||A.isLine||A.isPoints)&&(!A.frustumCulled||He.intersectsObject(A))){const be=ae.update(A),Ce=A.material;if(q&&(A.boundingSphere!==void 0?(A.boundingSphere===null&&A.computeBoundingSphere(),pe.copy(A.boundingSphere.center)):(be.boundingSphere===null&&be.computeBoundingSphere(),pe.copy(be.boundingSphere.center)),pe.applyMatrix4(A.matrixWorld).applyMatrix4(xe)),Array.isArray(Ce)){const Le=be.groups;for(let De=0,$e=Le.length;De<$e;De++){const ke=Le[De],pt=Ce[ke.materialIndex];pt&&pt.visible&&S.push(A,be,pt,$,pe.z,ke)}}else Ce.visible&&S.push(A,be,Ce,$,pe.z,null)}}const ve=A.children;for(let be=0,Ce=ve.length;be<Ce;be++)Ir(ve[be],k,$,q)}function Dr(A,k,$,q){const H=A.opaque,ve=A.transmissive,be=A.transparent;v.setupLightsView($),Y===!0&&Se.setGlobalState(w.clippingPlanes,$),q&&Ve.viewport(T.copy(q)),H.length>0&&yi(H,k,$),ve.length>0&&yi(ve,k,$),be.length>0&&yi(be,k,$),Ve.buffers.depth.setTest(!0),Ve.buffers.depth.setMask(!0),Ve.buffers.color.setMask(!0),Ve.setPolygonOffset(!1)}function Po(A,k,$,q){if(($.isScene===!0?$.overrideMaterial:null)!==null)return;v.state.transmissionRenderTarget[q.id]===void 0&&(v.state.transmissionRenderTarget[q.id]=new zl(1,1,{generateMipmaps:!0,type:nt.has("EXT_color_buffer_half_float")||nt.has("EXT_color_buffer_float")?x0:To,minFilter:wl,samples:4,stencilBuffer:s,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:rn.workingColorSpace}));const ve=v.state.transmissionRenderTarget[q.id],be=q.viewport||T;ve.setSize(be.z,be.w);const Ce=w.getRenderTarget();w.setRenderTarget(ve),w.getClearColor(W),K=w.getClearAlpha(),K<1&&w.setClearColor(16777215,.5),Ne?me.render($):w.clear();const Le=w.toneMapping;w.toneMapping=_o;const De=q.viewport;if(q.viewport!==void 0&&(q.viewport=void 0),v.setupLightsView(q),Y===!0&&Se.setGlobalState(w.clippingPlanes,q),yi(A,$,q),Ke.updateMultisampleRenderTarget(ve),Ke.updateRenderTargetMipmap(ve),nt.has("WEBGL_multisampled_render_to_texture")===!1){let $e=!1;for(let ke=0,pt=k.length;ke<pt;ke++){const At=k[ke],Rt=At.object,Qt=At.geometry,mt=At.material,Ie=At.group;if(mt.side===aa&&Rt.layers.test(q.layers)){const $t=mt.side;mt.side=Gi,mt.needsUpdate=!0,ls(Rt,$,q,Qt,mt,Ie),mt.side=$t,mt.needsUpdate=!0,$e=!0}}$e===!0&&(Ke.updateMultisampleRenderTarget(ve),Ke.updateRenderTargetMipmap(ve))}w.setRenderTarget(Ce),w.setClearColor(W,K),De!==void 0&&(q.viewport=De),w.toneMapping=Le}function yi(A,k,$){const q=k.isScene===!0?k.overrideMaterial:null;for(let H=0,ve=A.length;H<ve;H++){const be=A[H],Ce=be.object,Le=be.geometry,De=q===null?be.material:q,$e=be.group;Ce.layers.test($.layers)&&ls(Ce,k,$,Le,De,$e)}}function ls(A,k,$,q,H,ve){A.onBeforeRender(w,k,$,q,H,ve),A.modelViewMatrix.multiplyMatrices($.matrixWorldInverse,A.matrixWorld),A.normalMatrix.getNormalMatrix(A.modelViewMatrix),H.onBeforeRender(w,k,$,q,A,ve),H.transparent===!0&&H.side===aa&&H.forceSinglePass===!1?(H.side=Gi,H.needsUpdate=!0,w.renderBufferDirect($,k,q,H,A,ve),H.side=wo,H.needsUpdate=!0,w.renderBufferDirect($,k,q,H,A,ve),H.side=aa):w.renderBufferDirect($,k,q,H,A,ve),A.onAfterRender(w,k,$,q,H,ve)}function Pi(A,k,$){k.isScene!==!0&&(k=Oe);const q=tt.get(A),H=v.state.lights,ve=v.state.shadowsArray,be=H.state.version,Ce=ce.getParameters(A,H.state,ve,k,$),Le=ce.getProgramCacheKey(Ce);let De=q.programs;q.environment=A.isMeshStandardMaterial?k.environment:null,q.fog=k.fog,q.envMap=(A.isMeshStandardMaterial?I:Lt).get(A.envMap||q.environment),q.envMapRotation=q.environment!==null&&A.envMap===null?k.environmentRotation:A.envMapRotation,De===void 0&&(A.addEventListener("dispose",ge),De=new Map,q.programs=De);let $e=De.get(Le);if($e!==void 0){if(q.currentProgram===$e&&q.lightsStateVersion===be)return Lo(A,Ce),$e}else Ce.uniforms=ce.getUniforms(A),A.onBuild($,Ce,w),A.onBeforeCompile(Ce,w),$e=ce.acquireProgram(Ce,Le),De.set(Le,$e),q.uniforms=Ce.uniforms;const ke=q.uniforms;return(!A.isShaderMaterial&&!A.isRawShaderMaterial||A.clipping===!0)&&(ke.clippingPlanes=Se.uniform),Lo(A,Ce),q.needsLights=Nr(A),q.lightsStateVersion=be,q.needsLights&&(ke.ambientLightColor.value=H.state.ambient,ke.lightProbe.value=H.state.probe,ke.directionalLights.value=H.state.directional,ke.directionalLightShadows.value=H.state.directionalShadow,ke.spotLights.value=H.state.spot,ke.spotLightShadows.value=H.state.spotShadow,ke.rectAreaLights.value=H.state.rectArea,ke.ltc_1.value=H.state.rectAreaLTC1,ke.ltc_2.value=H.state.rectAreaLTC2,ke.pointLights.value=H.state.point,ke.pointLightShadows.value=H.state.pointShadow,ke.hemisphereLights.value=H.state.hemi,ke.directionalShadowMap.value=H.state.directionalShadowMap,ke.directionalShadowMatrix.value=H.state.directionalShadowMatrix,ke.spotShadowMap.value=H.state.spotShadowMap,ke.spotLightMatrix.value=H.state.spotLightMatrix,ke.spotLightMap.value=H.state.spotLightMap,ke.pointShadowMap.value=H.state.pointShadowMap,ke.pointShadowMatrix.value=H.state.pointShadowMatrix),q.currentProgram=$e,q.uniformsList=null,$e}function Ds(A){if(A.uniformsList===null){const k=A.currentProgram.getUniforms();A.uniformsList=_m.seqWithValue(k.seq,A.uniforms)}return A.uniformsList}function Lo(A,k){const $=tt.get(A);$.outputColorSpace=k.outputColorSpace,$.batching=k.batching,$.batchingColor=k.batchingColor,$.instancing=k.instancing,$.instancingColor=k.instancingColor,$.instancingMorph=k.instancingMorph,$.skinning=k.skinning,$.morphTargets=k.morphTargets,$.morphNormals=k.morphNormals,$.morphColors=k.morphColors,$.morphTargetsCount=k.morphTargetsCount,$.numClippingPlanes=k.numClippingPlanes,$.numIntersection=k.numClipIntersection,$.vertexAlphas=k.vertexAlphas,$.vertexTangents=k.vertexTangents,$.toneMapping=k.toneMapping}function hf(A,k,$,q,H){k.isScene!==!0&&(k=Oe),Ke.resetTextureUnits();const ve=k.fog,be=q.isMeshStandardMaterial?k.environment:null,Ce=D===null?w.outputColorSpace:D.isXRRenderTarget===!0?D.texture.colorSpace:Co,Le=(q.isMeshStandardMaterial?I:Lt).get(q.envMap||be),De=q.vertexColors===!0&&!!$.attributes.color&&$.attributes.color.itemSize===4,$e=!!$.attributes.tangent&&(!!q.normalMap||q.anisotropy>0),ke=!!$.morphAttributes.position,pt=!!$.morphAttributes.normal,At=!!$.morphAttributes.color;let Rt=_o;q.toneMapped&&(D===null||D.isXRRenderTarget===!0)&&(Rt=w.toneMapping);const Qt=$.morphAttributes.position||$.morphAttributes.normal||$.morphAttributes.color,mt=Qt!==void 0?Qt.length:0,Ie=tt.get(q),$t=v.state.lights;if(Y===!0&&(ie===!0||A!==R)){const ln=A===R&&q.id===V;Se.setState(q,A,ln)}let ct=!1;q.version===Ie.__version?(Ie.needsLights&&Ie.lightsStateVersion!==$t.state.version||Ie.outputColorSpace!==Ce||H.isBatchedMesh&&Ie.batching===!1||!H.isBatchedMesh&&Ie.batching===!0||H.isBatchedMesh&&Ie.batchingColor===!0&&H.colorTexture===null||H.isBatchedMesh&&Ie.batchingColor===!1&&H.colorTexture!==null||H.isInstancedMesh&&Ie.instancing===!1||!H.isInstancedMesh&&Ie.instancing===!0||H.isSkinnedMesh&&Ie.skinning===!1||!H.isSkinnedMesh&&Ie.skinning===!0||H.isInstancedMesh&&Ie.instancingColor===!0&&H.instanceColor===null||H.isInstancedMesh&&Ie.instancingColor===!1&&H.instanceColor!==null||H.isInstancedMesh&&Ie.instancingMorph===!0&&H.morphTexture===null||H.isInstancedMesh&&Ie.instancingMorph===!1&&H.morphTexture!==null||Ie.envMap!==Le||q.fog===!0&&Ie.fog!==ve||Ie.numClippingPlanes!==void 0&&(Ie.numClippingPlanes!==Se.numPlanes||Ie.numIntersection!==Se.numIntersection)||Ie.vertexAlphas!==De||Ie.vertexTangents!==$e||Ie.morphTargets!==ke||Ie.morphNormals!==pt||Ie.morphColors!==At||Ie.toneMapping!==Rt||Ie.morphTargetsCount!==mt)&&(ct=!0):(ct=!0,Ie.__version=q.version);let Dn=Ie.currentProgram;ct===!0&&(Dn=Pi(q,k,H));let Ur=!1,ri=!1,ur=!1;const It=Dn.getUniforms(),En=Ie.uniforms;if(Ve.useProgram(Dn.program)&&(Ur=!0,ri=!0,ur=!0),q.id!==V&&(V=q.id,ri=!0),Ur||R!==A){It.setValue(U,"projectionMatrix",A.projectionMatrix),It.setValue(U,"viewMatrix",A.matrixWorldInverse);const ln=It.map.cameraPosition;ln!==void 0&&ln.setValue(U,pe.setFromMatrixPosition(A.matrixWorld)),Tt.logarithmicDepthBuffer&&It.setValue(U,"logDepthBufFC",2/(Math.log(A.far+1)/Math.LN2)),(q.isMeshPhongMaterial||q.isMeshToonMaterial||q.isMeshLambertMaterial||q.isMeshBasicMaterial||q.isMeshStandardMaterial||q.isShaderMaterial)&&It.setValue(U,"isOrthographic",A.isOrthographicCamera===!0),R!==A&&(R=A,ri=!0,ur=!0)}if(H.isSkinnedMesh){It.setOptional(U,H,"bindMatrix"),It.setOptional(U,H,"bindMatrixInverse");const ln=H.skeleton;ln&&(ln.boneTexture===null&&ln.computeBoneTexture(),It.setValue(U,"boneTexture",ln.boneTexture,Ke))}H.isBatchedMesh&&(It.setOptional(U,H,"batchingTexture"),It.setValue(U,"batchingTexture",H._matricesTexture,Ke),It.setOptional(U,H,"batchingColorTexture"),H._colorsTexture!==null&&It.setValue(U,"batchingColorTexture",H._colorsTexture,Ke));const fr=$.morphAttributes;if((fr.position!==void 0||fr.normal!==void 0||fr.color!==void 0)&&Pe.update(H,$,Dn),(ri||Ie.receiveShadow!==H.receiveShadow)&&(Ie.receiveShadow=H.receiveShadow,It.setValue(U,"receiveShadow",H.receiveShadow)),q.isMeshGouraudMaterial&&q.envMap!==null&&(En.envMap.value=Le,En.flipEnvMap.value=Le.isCubeTexture&&Le.isRenderTargetTexture===!1?-1:1),q.isMeshStandardMaterial&&q.envMap===null&&k.environment!==null&&(En.envMapIntensity.value=k.environmentIntensity),ri&&(It.setValue(U,"toneMappingExposure",w.toneMappingExposure),Ie.needsLights&&pf(En,ur),ve&&q.fog===!0&&ue.refreshFogUniforms(En,ve),ue.refreshMaterialUniforms(En,q,se,Q,v.state.transmissionRenderTarget[A.id]),_m.upload(U,Ds(Ie),En,Ke)),q.isShaderMaterial&&q.uniformsNeedUpdate===!0&&(_m.upload(U,Ds(Ie),En,Ke),q.uniformsNeedUpdate=!1),q.isSpriteMaterial&&It.setValue(U,"center",H.center),It.setValue(U,"modelViewMatrix",H.modelViewMatrix),It.setValue(U,"normalMatrix",H.normalMatrix),It.setValue(U,"modelMatrix",H.matrixWorld),q.isShaderMaterial||q.isRawShaderMaterial){const ln=q.uniformsGroups;for(let Ns=0,Io=ln.length;Ns<Io;Ns++){const _a=ln[Ns];rt.update(_a,Dn),rt.bind(_a,Dn)}}return Dn}function pf(A,k){A.ambientLightColor.needsUpdate=k,A.lightProbe.needsUpdate=k,A.directionalLights.needsUpdate=k,A.directionalLightShadows.needsUpdate=k,A.pointLights.needsUpdate=k,A.pointLightShadows.needsUpdate=k,A.spotLights.needsUpdate=k,A.spotLightShadows.needsUpdate=k,A.rectAreaLights.needsUpdate=k,A.hemisphereLights.needsUpdate=k}function Nr(A){return A.isMeshLambertMaterial||A.isMeshToonMaterial||A.isMeshPhongMaterial||A.isMeshStandardMaterial||A.isShadowMaterial||A.isShaderMaterial&&A.lights===!0}this.getActiveCubeFace=function(){return z},this.getActiveMipmapLevel=function(){return L},this.getRenderTarget=function(){return D},this.setRenderTargetTextures=function(A,k,$){tt.get(A.texture).__webglTexture=k,tt.get(A.depthTexture).__webglTexture=$;const q=tt.get(A);q.__hasExternalTextures=!0,q.__autoAllocateDepthBuffer=$===void 0,q.__autoAllocateDepthBuffer||nt.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),q.__useRenderToTexture=!1)},this.setRenderTargetFramebuffer=function(A,k){const $=tt.get(A);$.__webglFramebuffer=k,$.__useDefaultFramebuffer=k===void 0},this.setRenderTarget=function(A,k=0,$=0){D=A,z=k,L=$;let q=!0,H=null,ve=!1,be=!1;if(A){const Le=tt.get(A);Le.__useDefaultFramebuffer!==void 0?(Ve.bindFramebuffer(U.FRAMEBUFFER,null),q=!1):Le.__webglFramebuffer===void 0?Ke.setupRenderTarget(A):Le.__hasExternalTextures&&Ke.rebindTextures(A,tt.get(A.texture).__webglTexture,tt.get(A.depthTexture).__webglTexture);const De=A.texture;(De.isData3DTexture||De.isDataArrayTexture||De.isCompressedArrayTexture)&&(be=!0);const $e=tt.get(A).__webglFramebuffer;A.isWebGLCubeRenderTarget?(Array.isArray($e[k])?H=$e[k][$]:H=$e[k],ve=!0):A.samples>0&&Ke.useMultisampledRTT(A)===!1?H=tt.get(A).__webglMultisampledFramebuffer:Array.isArray($e)?H=$e[$]:H=$e,T.copy(A.viewport),O.copy(A.scissor),Z=A.scissorTest}else T.copy(le).multiplyScalar(se).floor(),O.copy(X).multiplyScalar(se).floor(),Z=he;if(Ve.bindFramebuffer(U.FRAMEBUFFER,H)&&q&&Ve.drawBuffers(A,H),Ve.viewport(T),Ve.scissor(O),Ve.setScissorTest(Z),ve){const Le=tt.get(A.texture);U.framebufferTexture2D(U.FRAMEBUFFER,U.COLOR_ATTACHMENT0,U.TEXTURE_CUBE_MAP_POSITIVE_X+k,Le.__webglTexture,$)}else if(be){const Le=tt.get(A.texture),De=k||0;U.framebufferTextureLayer(U.FRAMEBUFFER,U.COLOR_ATTACHMENT0,Le.__webglTexture,$||0,De)}V=-1},this.readRenderTargetPixels=function(A,k,$,q,H,ve,be){if(!(A&&A.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Ce=tt.get(A).__webglFramebuffer;if(A.isWebGLCubeRenderTarget&&be!==void 0&&(Ce=Ce[be]),Ce){Ve.bindFramebuffer(U.FRAMEBUFFER,Ce);try{const Le=A.texture,De=Le.format,$e=Le.type;if(!Tt.textureFormatReadable(De)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(!Tt.textureTypeReadable($e)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}k>=0&&k<=A.width-q&&$>=0&&$<=A.height-H&&U.readPixels(k,$,q,H,Te.convert(De),Te.convert($e),ve)}finally{const Le=D!==null?tt.get(D).__webglFramebuffer:null;Ve.bindFramebuffer(U.FRAMEBUFFER,Le)}}},this.readRenderTargetPixelsAsync=async function(A,k,$,q,H,ve,be){if(!(A&&A.isWebGLRenderTarget))throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let Ce=tt.get(A).__webglFramebuffer;if(A.isWebGLCubeRenderTarget&&be!==void 0&&(Ce=Ce[be]),Ce){Ve.bindFramebuffer(U.FRAMEBUFFER,Ce);try{const Le=A.texture,De=Le.format,$e=Le.type;if(!Tt.textureFormatReadable(De))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!Tt.textureTypeReadable($e))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");if(k>=0&&k<=A.width-q&&$>=0&&$<=A.height-H){const ke=U.createBuffer();U.bindBuffer(U.PIXEL_PACK_BUFFER,ke),U.bufferData(U.PIXEL_PACK_BUFFER,ve.byteLength,U.STREAM_READ),U.readPixels(k,$,q,H,Te.convert(De),Te.convert($e),0),U.flush();const pt=U.fenceSync(U.SYNC_GPU_COMMANDS_COMPLETE,0);await Uk(U,pt,4);try{U.bindBuffer(U.PIXEL_PACK_BUFFER,ke),U.getBufferSubData(U.PIXEL_PACK_BUFFER,0,ve)}finally{U.deleteBuffer(ke),U.deleteSync(pt)}return ve}}finally{const Le=D!==null?tt.get(D).__webglFramebuffer:null;Ve.bindFramebuffer(U.FRAMEBUFFER,Le)}}},this.copyFramebufferToTexture=function(A,k=null,$=0){A.isTexture!==!0&&(console.warn("WebGLRenderer: copyFramebufferToTexture function signature has changed."),k=arguments[0]||null,A=arguments[1]);const q=Math.pow(2,-$),H=Math.floor(A.image.width*q),ve=Math.floor(A.image.height*q),be=k!==null?k.x:0,Ce=k!==null?k.y:0;Ke.setTexture2D(A,0),U.copyTexSubImage2D(U.TEXTURE_2D,$,0,0,be,Ce,H,ve),Ve.unbindTexture()},this.copyTextureToTexture=function(A,k,$=null,q=null,H=0){A.isTexture!==!0&&(console.warn("WebGLRenderer: copyTextureToTexture function signature has changed."),q=arguments[0]||null,A=arguments[1],k=arguments[2],H=arguments[3]||0,$=null);let ve,be,Ce,Le,De,$e;$!==null?(ve=$.max.x-$.min.x,be=$.max.y-$.min.y,Ce=$.min.x,Le=$.min.y):(ve=A.image.width,be=A.image.height,Ce=0,Le=0),q!==null?(De=q.x,$e=q.y):(De=0,$e=0);const ke=Te.convert(k.format),pt=Te.convert(k.type);Ke.setTexture2D(k,0),U.pixelStorei(U.UNPACK_FLIP_Y_WEBGL,k.flipY),U.pixelStorei(U.UNPACK_PREMULTIPLY_ALPHA_WEBGL,k.premultiplyAlpha),U.pixelStorei(U.UNPACK_ALIGNMENT,k.unpackAlignment);const At=U.getParameter(U.UNPACK_ROW_LENGTH),Rt=U.getParameter(U.UNPACK_IMAGE_HEIGHT),Qt=U.getParameter(U.UNPACK_SKIP_PIXELS),mt=U.getParameter(U.UNPACK_SKIP_ROWS),Ie=U.getParameter(U.UNPACK_SKIP_IMAGES),$t=A.isCompressedTexture?A.mipmaps[H]:A.image;U.pixelStorei(U.UNPACK_ROW_LENGTH,$t.width),U.pixelStorei(U.UNPACK_IMAGE_HEIGHT,$t.height),U.pixelStorei(U.UNPACK_SKIP_PIXELS,Ce),U.pixelStorei(U.UNPACK_SKIP_ROWS,Le),A.isDataTexture?U.texSubImage2D(U.TEXTURE_2D,H,De,$e,ve,be,ke,pt,$t.data):A.isCompressedTexture?U.compressedTexSubImage2D(U.TEXTURE_2D,H,De,$e,$t.width,$t.height,ke,$t.data):U.texSubImage2D(U.TEXTURE_2D,H,De,$e,ke,pt,$t),U.pixelStorei(U.UNPACK_ROW_LENGTH,At),U.pixelStorei(U.UNPACK_IMAGE_HEIGHT,Rt),U.pixelStorei(U.UNPACK_SKIP_PIXELS,Qt),U.pixelStorei(U.UNPACK_SKIP_ROWS,mt),U.pixelStorei(U.UNPACK_SKIP_IMAGES,Ie),H===0&&k.generateMipmaps&&U.generateMipmap(U.TEXTURE_2D),Ve.unbindTexture()},this.copyTextureToTexture3D=function(A,k,$=null,q=null,H=0){A.isTexture!==!0&&(console.warn("WebGLRenderer: copyTextureToTexture3D function signature has changed."),$=arguments[0]||null,q=arguments[1]||null,A=arguments[2],k=arguments[3],H=arguments[4]||0);let ve,be,Ce,Le,De,$e,ke,pt,At;const Rt=A.isCompressedTexture?A.mipmaps[H]:A.image;$!==null?(ve=$.max.x-$.min.x,be=$.max.y-$.min.y,Ce=$.max.z-$.min.z,Le=$.min.x,De=$.min.y,$e=$.min.z):(ve=Rt.width,be=Rt.height,Ce=Rt.depth,Le=0,De=0,$e=0),q!==null?(ke=q.x,pt=q.y,At=q.z):(ke=0,pt=0,At=0);const Qt=Te.convert(k.format),mt=Te.convert(k.type);let Ie;if(k.isData3DTexture)Ke.setTexture3D(k,0),Ie=U.TEXTURE_3D;else if(k.isDataArrayTexture||k.isCompressedArrayTexture)Ke.setTexture2DArray(k,0),Ie=U.TEXTURE_2D_ARRAY;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}U.pixelStorei(U.UNPACK_FLIP_Y_WEBGL,k.flipY),U.pixelStorei(U.UNPACK_PREMULTIPLY_ALPHA_WEBGL,k.premultiplyAlpha),U.pixelStorei(U.UNPACK_ALIGNMENT,k.unpackAlignment);const $t=U.getParameter(U.UNPACK_ROW_LENGTH),ct=U.getParameter(U.UNPACK_IMAGE_HEIGHT),Dn=U.getParameter(U.UNPACK_SKIP_PIXELS),Ur=U.getParameter(U.UNPACK_SKIP_ROWS),ri=U.getParameter(U.UNPACK_SKIP_IMAGES);U.pixelStorei(U.UNPACK_ROW_LENGTH,Rt.width),U.pixelStorei(U.UNPACK_IMAGE_HEIGHT,Rt.height),U.pixelStorei(U.UNPACK_SKIP_PIXELS,Le),U.pixelStorei(U.UNPACK_SKIP_ROWS,De),U.pixelStorei(U.UNPACK_SKIP_IMAGES,$e),A.isDataTexture||A.isData3DTexture?U.texSubImage3D(Ie,H,ke,pt,At,ve,be,Ce,Qt,mt,Rt.data):k.isCompressedArrayTexture?U.compressedTexSubImage3D(Ie,H,ke,pt,At,ve,be,Ce,Qt,Rt.data):U.texSubImage3D(Ie,H,ke,pt,At,ve,be,Ce,Qt,mt,Rt),U.pixelStorei(U.UNPACK_ROW_LENGTH,$t),U.pixelStorei(U.UNPACK_IMAGE_HEIGHT,ct),U.pixelStorei(U.UNPACK_SKIP_PIXELS,Dn),U.pixelStorei(U.UNPACK_SKIP_ROWS,Ur),U.pixelStorei(U.UNPACK_SKIP_IMAGES,ri),H===0&&k.generateMipmaps&&U.generateMipmap(Ie),Ve.unbindTexture()},this.initRenderTarget=function(A){tt.get(A).__webglFramebuffer===void 0&&Ke.setupRenderTarget(A)},this.initTexture=function(A){A.isCubeTexture?Ke.setTextureCube(A,0):A.isData3DTexture?Ke.setTexture3D(A,0):A.isDataArrayTexture||A.isCompressedArrayTexture?Ke.setTexture2DArray(A,0):Ke.setTexture2D(A,0),Ve.unbindTexture()},this.resetState=function(){z=0,L=0,D=null,Ve.reset(),et.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return la}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorSpace=e===Gx?"display-p3":"srgb",t.unpackColorSpace=rn.workingColorSpace===y0?"display-p3":"srgb"}}class WG extends Ci{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new ha,this.environmentIntensity=1,this.environmentRotation=new ha,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentIntensity=e.environmentIntensity,this.environmentRotation.copy(e.environmentRotation),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(t.object.environmentIntensity=this.environmentIntensity),t.object.environmentRotation=this.environmentRotation.toArray(),t}}class G4 extends uf{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new jt(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const qm=new Ee,jm=new Ee,rT=new Ln,vd=new Wx,nm=new S0,Qv=new Ee,sT=new Ee;class $G extends Ci{constructor(e=new Is,t=new G4){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,i=[0];for(let r=1,s=t.count;r<s;r++)qm.fromBufferAttribute(t,r-1),jm.fromBufferAttribute(t,r),i[r]=i[r-1],i[r]+=qm.distanceTo(jm);e.setAttribute("lineDistance",new rs(i,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const i=this.geometry,r=this.matrixWorld,s=e.params.Line.threshold,l=i.drawRange;if(i.boundingSphere===null&&i.computeBoundingSphere(),nm.copy(i.boundingSphere),nm.applyMatrix4(r),nm.radius+=s,e.ray.intersectsSphere(nm)===!1)return;rT.copy(r).invert(),vd.copy(e.ray).applyMatrix4(rT);const c=s/((this.scale.x+this.scale.y+this.scale.z)/3),u=c*c,d=this.isLineSegments?2:1,h=i.index,p=i.attributes.position;if(h!==null){const x=Math.max(0,l.start),y=Math.min(h.count,l.start+l.count);for(let S=x,v=y-1;S<v;S+=d){const g=h.getX(S),P=h.getX(S+1),w=im(this,e,vd,u,g,P);w&&t.push(w)}if(this.isLineLoop){const S=h.getX(y-1),v=h.getX(x),g=im(this,e,vd,u,S,v);g&&t.push(g)}}else{const x=Math.max(0,l.start),y=Math.min(p.count,l.start+l.count);for(let S=x,v=y-1;S<v;S+=d){const g=im(this,e,vd,u,S,S+1);g&&t.push(g)}if(this.isLineLoop){const S=im(this,e,vd,u,y-1,x);S&&t.push(S)}}}updateMorphTargets(){const t=this.geometry.morphAttributes,i=Object.keys(t);if(i.length>0){const r=t[i[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,l=r.length;s<l;s++){const c=r[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}}function im(n,e,t,i,r,s){const l=n.geometry.attributes.position;if(qm.fromBufferAttribute(l,r),jm.fromBufferAttribute(l,s),t.distanceSqToSegment(qm,jm,Qv,sT)>i)return;Qv.applyMatrix4(n.matrixWorld);const u=e.ray.origin.distanceTo(Qv);if(!(u<e.near||u>e.far))return{distance:u,point:sT.clone().applyMatrix4(n.matrixWorld),index:r,face:null,faceIndex:null,object:n}}const aT=new Ee,oT=new Ee;class XG extends $G{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,i=[];for(let r=0,s=t.count;r<s;r+=2)aT.fromBufferAttribute(t,r),oT.fromBufferAttribute(t,r+1),i[r]=r===0?0:i[r-1],i[r+1]=i[r]+aT.distanceTo(oT);e.setAttribute("lineDistance",new rs(i,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class qG extends uf{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new jt(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=y4,this.normalScale=new Zt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}const lT=new Ln;class jG{constructor(e,t,i=0,r=1/0){this.ray=new Wx(e,t),this.near=i,this.far=r,this.camera=null,this.layers=new $x,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}setFromXRController(e){return lT.identity().extractRotation(e.matrixWorld),this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(lT),this}intersectObject(e,t=!0,i=[]){return Z_(e,this,i,t),i.sort(cT),i}intersectObjects(e,t=!0,i=[]){for(let r=0,s=e.length;r<s;r++)Z_(e[r],this,i,t);return i.sort(cT),i}}function cT(n,e){return n.distance-e.distance}function Z_(n,e,t,i){let r=!0;if(n.layers.test(e.layers)&&n.raycast(e,t)===!1&&(r=!1),r===!0&&i===!0){const s=n.children;for(let l=0,c=s.length;l<c;l++)Z_(s[l],e,t,!0)}}class YG extends XG{constructor(e=10,t=10,i=4473924,r=8947848){i=new jt(i),r=new jt(r);const s=t/2,l=e/t,c=e/2,u=[],d=[];for(let p=0,x=0,y=-c;p<=t;p++,y+=l){u.push(-c,0,y,c,0,y),u.push(y,0,-c,y,0,c);const S=p===s?i:r;S.toArray(d,x),x+=3,S.toArray(d,x),x+=3,S.toArray(d,x),x+=3,S.toArray(d,x),x+=3}const h=new Is;h.setAttribute("position",new rs(u,3)),h.setAttribute("color",new rs(d,3));const m=new G4({vertexColors:!0,toneMapped:!1});super(h,m),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Vx}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Vx);function KG(){let n=0,e=0;for(let i=0;i<28;i+=7){let r=this.buf[this.pos++];if(n|=(r&127)<<i,(r&128)==0)return this.assertBounds(),[n,e]}let t=this.buf[this.pos++];if(n|=(t&15)<<28,e=(t&112)>>4,(t&128)==0)return this.assertBounds(),[n,e];for(let i=3;i<=31;i+=7){let r=this.buf[this.pos++];if(e|=(r&127)<<i,(r&128)==0)return this.assertBounds(),[n,e]}throw new Error("invalid varint")}function Jv(n,e,t){for(let s=0;s<28;s=s+7){const l=n>>>s,c=!(!(l>>>7)&&e==0),u=(c?l|128:l)&255;if(t.push(u),!c)return}const i=n>>>28&15|(e&7)<<4,r=e>>3!=0;if(t.push((r?i|128:i)&255),!!r){for(let s=3;s<31;s=s+7){const l=e>>>s,c=!!(l>>>7),u=(c?l|128:l)&255;if(t.push(u),!c)return}t.push(e>>>31&1)}}const xm=4294967296;function uT(n){const e=n[0]==="-";e&&(n=n.slice(1));const t=1e6;let i=0,r=0;function s(l,c){const u=Number(n.slice(l,c));r*=t,i=i*t+u,i>=xm&&(r=r+(i/xm|0),i=i%xm)}return s(-24,-18),s(-18,-12),s(-12,-6),s(-6),e?$4(i,r):qx(i,r)}function ZG(n,e){let t=qx(n,e);const i=t.hi&2147483648;i&&(t=$4(t.lo,t.hi));const r=W4(t.lo,t.hi);return i?"-"+r:r}function W4(n,e){if({lo:n,hi:e}=QG(n,e),e<=2097151)return String(xm*e+n);const t=n&16777215,i=(n>>>24|e<<8)&16777215,r=e>>16&65535;let s=t+i*6777216+r*6710656,l=i+r*8147497,c=r*2;const u=1e7;return s>=u&&(l+=Math.floor(s/u),s%=u),l>=u&&(c+=Math.floor(l/u),l%=u),c.toString()+fT(l)+fT(s)}function QG(n,e){return{lo:n>>>0,hi:e>>>0}}function qx(n,e){return{lo:n|0,hi:e|0}}function $4(n,e){return e=~e,n?n=~n+1:e+=1,qx(n,e)}const fT=n=>{const e=String(n);return"0000000".slice(e.length)+e};function dT(n,e){if(n>=0){for(;n>127;)e.push(n&127|128),n=n>>>7;e.push(n)}else{for(let t=0;t<9;t++)e.push(n&127|128),n=n>>7;e.push(1)}}function JG(){let n=this.buf[this.pos++],e=n&127;if((n&128)==0)return this.assertBounds(),e;if(n=this.buf[this.pos++],e|=(n&127)<<7,(n&128)==0)return this.assertBounds(),e;if(n=this.buf[this.pos++],e|=(n&127)<<14,(n&128)==0)return this.assertBounds(),e;if(n=this.buf[this.pos++],e|=(n&127)<<21,(n&128)==0)return this.assertBounds(),e;n=this.buf[this.pos++],e|=(n&15)<<28;for(let t=5;(n&128)!==0&&t<10;t++)n=this.buf[this.pos++];if((n&128)!=0)throw new Error("invalid varint");return this.assertBounds(),e>>>0}var hT={};const Ss=eW();function eW(){const n=new DataView(new ArrayBuffer(8));if(typeof BigInt=="function"&&typeof n.getBigInt64=="function"&&typeof n.getBigUint64=="function"&&typeof n.setBigInt64=="function"&&typeof n.setBigUint64=="function"&&(typeof process!="object"||typeof hT!="object"||hT.BUF_BIGINT_DISABLE!=="1")){const t=BigInt("-9223372036854775808"),i=BigInt("9223372036854775807"),r=BigInt("0"),s=BigInt("18446744073709551615");return{zero:BigInt(0),supported:!0,parse(l){const c=typeof l=="bigint"?l:BigInt(l);if(c>i||c<t)throw new Error(`invalid int64: ${l}`);return c},uParse(l){const c=typeof l=="bigint"?l:BigInt(l);if(c>s||c<r)throw new Error(`invalid uint64: ${l}`);return c},enc(l){return n.setBigInt64(0,this.parse(l),!0),{lo:n.getInt32(0,!0),hi:n.getInt32(4,!0)}},uEnc(l){return n.setBigInt64(0,this.uParse(l),!0),{lo:n.getInt32(0,!0),hi:n.getInt32(4,!0)}},dec(l,c){return n.setInt32(0,l,!0),n.setInt32(4,c,!0),n.getBigInt64(0,!0)},uDec(l,c){return n.setInt32(0,l,!0),n.setInt32(4,c,!0),n.getBigUint64(0,!0)}}}return{zero:"0",supported:!1,parse(t){return typeof t!="string"&&(t=t.toString()),pT(t),t},uParse(t){return typeof t!="string"&&(t=t.toString()),mT(t),t},enc(t){return typeof t!="string"&&(t=t.toString()),pT(t),uT(t)},uEnc(t){return typeof t!="string"&&(t=t.toString()),mT(t),uT(t)},dec(t,i){return ZG(t,i)},uDec(t,i){return W4(t,i)}}}function pT(n){if(!/^-?[0-9]+$/.test(n))throw new Error("invalid int64: "+n)}function mT(n){if(!/^[0-9]+$/.test(n))throw new Error("invalid uint64: "+n)}const e_=Symbol.for("@bufbuild/protobuf/text-encoding");function X4(){if(globalThis[e_]==null){const n=new globalThis.TextEncoder,e=new globalThis.TextDecoder;globalThis[e_]={encodeUtf8(t){return n.encode(t)},decodeUtf8(t){return e.decode(t)},checkUtf8(t){try{return encodeURIComponent(t),!0}catch{return!1}}}}return globalThis[e_]}var ao;(function(n){n[n.Varint=0]="Varint",n[n.Bit64=1]="Bit64",n[n.LengthDelimited=2]="LengthDelimited",n[n.StartGroup=3]="StartGroup",n[n.EndGroup=4]="EndGroup",n[n.Bit32=5]="Bit32"})(ao||(ao={}));const tW=34028234663852886e22,nW=-34028234663852886e22,iW=4294967295,rW=2147483647,sW=-2147483648;class qi{constructor(e=X4().encodeUtf8){this.encodeUtf8=e,this.stack=[],this.chunks=[],this.buf=[]}finish(){this.buf.length&&(this.chunks.push(new Uint8Array(this.buf)),this.buf=[]);let e=0;for(let r=0;r<this.chunks.length;r++)e+=this.chunks[r].length;let t=new Uint8Array(e),i=0;for(let r=0;r<this.chunks.length;r++)t.set(this.chunks[r],i),i+=this.chunks[r].length;return this.chunks=[],t}fork(){return this.stack.push({chunks:this.chunks,buf:this.buf}),this.chunks=[],this.buf=[],this}join(){let e=this.finish(),t=this.stack.pop();if(!t)throw new Error("invalid state, fork stack empty");return this.chunks=t.chunks,this.buf=t.buf,this.uint32(e.byteLength),this.raw(e)}tag(e,t){return this.uint32((e<<3|t)>>>0)}raw(e){return this.buf.length&&(this.chunks.push(new Uint8Array(this.buf)),this.buf=[]),this.chunks.push(e),this}uint32(e){for(gT(e);e>127;)this.buf.push(e&127|128),e=e>>>7;return this.buf.push(e),this}int32(e){return t_(e),dT(e,this.buf),this}bool(e){return this.buf.push(e?1:0),this}bytes(e){return this.uint32(e.byteLength),this.raw(e)}string(e){let t=this.encodeUtf8(e);return this.uint32(t.byteLength),this.raw(t)}float(e){aW(e);let t=new Uint8Array(4);return new DataView(t.buffer).setFloat32(0,e,!0),this.raw(t)}double(e){let t=new Uint8Array(8);return new DataView(t.buffer).setFloat64(0,e,!0),this.raw(t)}fixed32(e){gT(e);let t=new Uint8Array(4);return new DataView(t.buffer).setUint32(0,e,!0),this.raw(t)}sfixed32(e){t_(e);let t=new Uint8Array(4);return new DataView(t.buffer).setInt32(0,e,!0),this.raw(t)}sint32(e){return t_(e),e=(e<<1^e>>31)>>>0,dT(e,this.buf),this}sfixed64(e){let t=new Uint8Array(8),i=new DataView(t.buffer),r=Ss.enc(e);return i.setInt32(0,r.lo,!0),i.setInt32(4,r.hi,!0),this.raw(t)}fixed64(e){let t=new Uint8Array(8),i=new DataView(t.buffer),r=Ss.uEnc(e);return i.setInt32(0,r.lo,!0),i.setInt32(4,r.hi,!0),this.raw(t)}int64(e){let t=Ss.enc(e);return Jv(t.lo,t.hi,this.buf),this}sint64(e){let t=Ss.enc(e),i=t.hi>>31,r=t.lo<<1^i,s=(t.hi<<1|t.lo>>>31)^i;return Jv(r,s,this.buf),this}uint64(e){let t=Ss.uEnc(e);return Jv(t.lo,t.hi,this.buf),this}}class on{constructor(e,t=X4().decodeUtf8){this.decodeUtf8=t,this.varint64=KG,this.uint32=JG,this.buf=e,this.len=e.length,this.pos=0,this.view=new DataView(e.buffer,e.byteOffset,e.byteLength)}tag(){let e=this.uint32(),t=e>>>3,i=e&7;if(t<=0||i<0||i>5)throw new Error("illegal tag: field no "+t+" wire type "+i);return[t,i]}skip(e,t){let i=this.pos;switch(e){case ao.Varint:for(;this.buf[this.pos++]&128;);break;case ao.Bit64:this.pos+=4;case ao.Bit32:this.pos+=4;break;case ao.LengthDelimited:let r=this.uint32();this.pos+=r;break;case ao.StartGroup:for(;;){const[s,l]=this.tag();if(l===ao.EndGroup){if(t!==void 0&&s!==t)throw new Error("invalid end group tag");break}this.skip(l,s)}break;default:throw new Error("cant skip wire type "+e)}return this.assertBounds(),this.buf.subarray(i,this.pos)}assertBounds(){if(this.pos>this.len)throw new RangeError("premature EOF")}int32(){return this.uint32()|0}sint32(){let e=this.uint32();return e>>>1^-(e&1)}int64(){return Ss.dec(...this.varint64())}uint64(){return Ss.uDec(...this.varint64())}sint64(){let[e,t]=this.varint64(),i=-(e&1);return e=(e>>>1|(t&1)<<31)^i,t=t>>>1^i,Ss.dec(e,t)}bool(){let[e,t]=this.varint64();return e!==0||t!==0}fixed32(){return this.view.getUint32((this.pos+=4)-4,!0)}sfixed32(){return this.view.getInt32((this.pos+=4)-4,!0)}fixed64(){return Ss.uDec(this.sfixed32(),this.sfixed32())}sfixed64(){return Ss.dec(this.sfixed32(),this.sfixed32())}float(){return this.view.getFloat32((this.pos+=4)-4,!0)}double(){return this.view.getFloat64((this.pos+=8)-8,!0)}bytes(){let e=this.uint32(),t=this.pos;return this.pos+=e,this.assertBounds(),this.buf.subarray(t,t+e)}string(){return this.decodeUtf8(this.bytes())}}function t_(n){if(typeof n=="string")n=Number(n);else if(typeof n!="number")throw new Error("invalid int32: "+typeof n);if(!Number.isInteger(n)||n>rW||n<sW)throw new Error("invalid int32: "+n)}function gT(n){if(typeof n=="string")n=Number(n);else if(typeof n!="number")throw new Error("invalid uint32: "+typeof n);if(!Number.isInteger(n)||n>iW||n<0)throw new Error("invalid uint32: "+n)}function aW(n){if(typeof n=="string"){const e=n;if(n=Number(n),isNaN(n)&&e!=="NaN")throw new Error("invalid float32: "+e)}else if(typeof n!="number")throw new Error("invalid float32: "+typeof n);if(Number.isFinite(n)&&(n>tW||n<nW))throw new Error("invalid float32: "+n)}function vT(){return{x:0,y:0}}const ru={encode(n,e=new qi){return n.x!==0&&e.uint32(13).float(n.x),n.y!==0&&e.uint32(21).float(n.y),e},decode(n,e){const t=n instanceof on?n:new on(n);let i=e===void 0?t.len:t.pos+e;const r=vT();for(;t.pos<i;){const s=t.uint32();switch(s>>>3){case 1:{if(s!==13)break;r.x=t.float();continue}case 2:{if(s!==21)break;r.y=t.float();continue}}if((s&7)===4||s===0)break;t.skip(s&7)}return r},fromJSON(n){return{x:Bn(n.x)?globalThis.Number(n.x):0,y:Bn(n.y)?globalThis.Number(n.y):0}},toJSON(n){const e={};return n.x!==0&&(e.x=n.x),n.y!==0&&(e.y=n.y),e},create(n){return ru.fromPartial(n??{})},fromPartial(n){var e,t;const i=vT();return i.x=(e=n.x)!==null&&e!==void 0?e:0,i.y=(t=n.y)!==null&&t!==void 0?t:0,i}};function _T(){return{width:0,height:0}}const su={encode(n,e=new qi){return n.width!==0&&e.uint32(13).float(n.width),n.height!==0&&e.uint32(21).float(n.height),e},decode(n,e){const t=n instanceof on?n:new on(n);let i=e===void 0?t.len:t.pos+e;const r=_T();for(;t.pos<i;){const s=t.uint32();switch(s>>>3){case 1:{if(s!==13)break;r.width=t.float();continue}case 2:{if(s!==21)break;r.height=t.float();continue}}if((s&7)===4||s===0)break;t.skip(s&7)}return r},fromJSON(n){return{width:Bn(n.width)?globalThis.Number(n.width):0,height:Bn(n.height)?globalThis.Number(n.height):0}},toJSON(n){const e={};return n.width!==0&&(e.width=n.width),n.height!==0&&(e.height=n.height),e},create(n){return su.fromPartial(n??{})},fromPartial(n){var e,t;const i=_T();return i.width=(e=n.width)!==null&&e!==void 0?e:0,i.height=(t=n.height)!==null&&t!==void 0?t:0,i}};function xT(){return{x:0,y:0,z:0}}const es={encode(n,e=new qi){return n.x!==0&&e.uint32(13).float(n.x),n.y!==0&&e.uint32(21).float(n.y),n.z!==0&&e.uint32(29).float(n.z),e},decode(n,e){const t=n instanceof on?n:new on(n);let i=e===void 0?t.len:t.pos+e;const r=xT();for(;t.pos<i;){const s=t.uint32();switch(s>>>3){case 1:{if(s!==13)break;r.x=t.float();continue}case 2:{if(s!==21)break;r.y=t.float();continue}case 3:{if(s!==29)break;r.z=t.float();continue}}if((s&7)===4||s===0)break;t.skip(s&7)}return r},fromJSON(n){return{x:Bn(n.x)?globalThis.Number(n.x):0,y:Bn(n.y)?globalThis.Number(n.y):0,z:Bn(n.z)?globalThis.Number(n.z):0}},toJSON(n){const e={};return n.x!==0&&(e.x=n.x),n.y!==0&&(e.y=n.y),n.z!==0&&(e.z=n.z),e},create(n){return es.fromPartial(n??{})},fromPartial(n){var e,t,i;const r=xT();return r.x=(e=n.x)!==null&&e!==void 0?e:0,r.y=(t=n.y)!==null&&t!==void 0?t:0,r.z=(i=n.z)!==null&&i!==void 0?i:0,r}};function yT(){return{width:0,height:0,depth:0}}const au={encode(n,e=new qi){return n.width!==0&&e.uint32(13).float(n.width),n.height!==0&&e.uint32(21).float(n.height),n.depth!==0&&e.uint32(29).float(n.depth),e},decode(n,e){const t=n instanceof on?n:new on(n);let i=e===void 0?t.len:t.pos+e;const r=yT();for(;t.pos<i;){const s=t.uint32();switch(s>>>3){case 1:{if(s!==13)break;r.width=t.float();continue}case 2:{if(s!==21)break;r.height=t.float();continue}case 3:{if(s!==29)break;r.depth=t.float();continue}}if((s&7)===4||s===0)break;t.skip(s&7)}return r},fromJSON(n){return{width:Bn(n.width)?globalThis.Number(n.width):0,height:Bn(n.height)?globalThis.Number(n.height):0,depth:Bn(n.depth)?globalThis.Number(n.depth):0}},toJSON(n){const e={};return n.width!==0&&(e.width=n.width),n.height!==0&&(e.height=n.height),n.depth!==0&&(e.depth=n.depth),e},create(n){return au.fromPartial(n??{})},fromPartial(n){var e,t,i;const r=yT();return r.width=(e=n.width)!==null&&e!==void 0?e:0,r.height=(t=n.height)!==null&&t!==void 0?t:0,r.depth=(i=n.depth)!==null&&i!==void 0?i:0,r}};function ST(){return{x:0,y:0,z:0,w:0}}const ou={encode(n,e=new qi){return n.x!==0&&e.uint32(13).float(n.x),n.y!==0&&e.uint32(21).float(n.y),n.z!==0&&e.uint32(29).float(n.z),n.w!==0&&e.uint32(37).float(n.w),e},decode(n,e){const t=n instanceof on?n:new on(n);let i=e===void 0?t.len:t.pos+e;const r=ST();for(;t.pos<i;){const s=t.uint32();switch(s>>>3){case 1:{if(s!==13)break;r.x=t.float();continue}case 2:{if(s!==21)break;r.y=t.float();continue}case 3:{if(s!==29)break;r.z=t.float();continue}case 4:{if(s!==37)break;r.w=t.float();continue}}if((s&7)===4||s===0)break;t.skip(s&7)}return r},fromJSON(n){return{x:Bn(n.x)?globalThis.Number(n.x):0,y:Bn(n.y)?globalThis.Number(n.y):0,z:Bn(n.z)?globalThis.Number(n.z):0,w:Bn(n.w)?globalThis.Number(n.w):0}},toJSON(n){const e={};return n.x!==0&&(e.x=n.x),n.y!==0&&(e.y=n.y),n.z!==0&&(e.z=n.z),n.w!==0&&(e.w=n.w),e},create(n){return ou.fromPartial(n??{})},fromPartial(n){var e,t,i,r;const s=ST();return s.x=(e=n.x)!==null&&e!==void 0?e:0,s.y=(t=n.y)!==null&&t!==void 0?t:0,s.z=(i=n.z)!==null&&i!==void 0?i:0,s.w=(r=n.w)!==null&&r!==void 0?r:0,s}};function MT(){return{offset:void 0,extent:void 0}}const lu={encode(n,e=new qi){return n.offset!==void 0&&ru.encode(n.offset,e.uint32(10).fork()).join(),n.extent!==void 0&&su.encode(n.extent,e.uint32(18).fork()).join(),e},decode(n,e){const t=n instanceof on?n:new on(n);let i=e===void 0?t.len:t.pos+e;const r=MT();for(;t.pos<i;){const s=t.uint32();switch(s>>>3){case 1:{if(s!==10)break;r.offset=ru.decode(t,t.uint32());continue}case 2:{if(s!==18)break;r.extent=su.decode(t,t.uint32());continue}}if((s&7)===4||s===0)break;t.skip(s&7)}return r},fromJSON(n){return{offset:Bn(n.offset)?ru.fromJSON(n.offset):void 0,extent:Bn(n.extent)?su.fromJSON(n.extent):void 0}},toJSON(n){const e={};return n.offset!==void 0&&(e.offset=ru.toJSON(n.offset)),n.extent!==void 0&&(e.extent=su.toJSON(n.extent)),e},create(n){return lu.fromPartial(n??{})},fromPartial(n){const e=MT();return e.offset=n.offset!==void 0&&n.offset!==null?ru.fromPartial(n.offset):void 0,e.extent=n.extent!==void 0&&n.extent!==null?su.fromPartial(n.extent):void 0,e}};function ET(){return{offset:void 0,extent:void 0}}const cu={encode(n,e=new qi){return n.offset!==void 0&&es.encode(n.offset,e.uint32(10).fork()).join(),n.extent!==void 0&&au.encode(n.extent,e.uint32(18).fork()).join(),e},decode(n,e){const t=n instanceof on?n:new on(n);let i=e===void 0?t.len:t.pos+e;const r=ET();for(;t.pos<i;){const s=t.uint32();switch(s>>>3){case 1:{if(s!==10)break;r.offset=es.decode(t,t.uint32());continue}case 2:{if(s!==18)break;r.extent=au.decode(t,t.uint32());continue}}if((s&7)===4||s===0)break;t.skip(s&7)}return r},fromJSON(n){return{offset:Bn(n.offset)?es.fromJSON(n.offset):void 0,extent:Bn(n.extent)?au.fromJSON(n.extent):void 0}},toJSON(n){const e={};return n.offset!==void 0&&(e.offset=es.toJSON(n.offset)),n.extent!==void 0&&(e.extent=au.toJSON(n.extent)),e},create(n){return cu.fromPartial(n??{})},fromPartial(n){const e=ET();return e.offset=n.offset!==void 0&&n.offset!==null?es.fromPartial(n.offset):void 0,e.extent=n.extent!==void 0&&n.extent!==null?au.fromPartial(n.extent):void 0,e}};function wT(){return{orientation:void 0,position:void 0}}const uu={encode(n,e=new qi){return n.orientation!==void 0&&ou.encode(n.orientation,e.uint32(10).fork()).join(),n.position!==void 0&&es.encode(n.position,e.uint32(18).fork()).join(),e},decode(n,e){const t=n instanceof on?n:new on(n);let i=e===void 0?t.len:t.pos+e;const r=wT();for(;t.pos<i;){const s=t.uint32();switch(s>>>3){case 1:{if(s!==10)break;r.orientation=ou.decode(t,t.uint32());continue}case 2:{if(s!==18)break;r.position=es.decode(t,t.uint32());continue}}if((s&7)===4||s===0)break;t.skip(s&7)}return r},fromJSON(n){return{orientation:Bn(n.orientation)?ou.fromJSON(n.orientation):void 0,position:Bn(n.position)?es.fromJSON(n.position):void 0}},toJSON(n){const e={};return n.orientation!==void 0&&(e.orientation=ou.toJSON(n.orientation)),n.position!==void 0&&(e.position=es.toJSON(n.position)),e},create(n){return uu.fromPartial(n??{})},fromPartial(n){const e=wT();return e.orientation=n.orientation!==void 0&&n.orientation!==null?ou.fromPartial(n.orientation):void 0,e.position=n.position!==void 0&&n.position!==null?es.fromPartial(n.position):void 0,e}};function Bn(n){return n!=null}var ef;(function(n){n[n.Keyboard=0]="Keyboard",n[n.UNRECOGNIZED=-1]="UNRECOGNIZED"})(ef||(ef={}));function oW(n){switch(n){case 0:case"Keyboard":return ef.Keyboard;case-1:case"UNRECOGNIZED":default:return ef.UNRECOGNIZED}}function lW(n){switch(n){case ef.Keyboard:return"Keyboard";case ef.UNRECOGNIZED:default:return"UNRECOGNIZED"}}var lt;(function(n){n[n.UNKNOWN=0]="UNKNOWN",n[n.FLOOR=1]="FLOOR",n[n.CEILING=2]="CEILING",n[n.WALL_FACE=3]="WALL_FACE",n[n.TABLE=4]="TABLE",n[n.COUCH=5]="COUCH",n[n.DOOR_FRAME=6]="DOOR_FRAME",n[n.WINDOW_FRAME=7]="WINDOW_FRAME",n[n.OTHER=8]="OTHER",n[n.STORAGE=9]="STORAGE",n[n.BED=10]="BED",n[n.SCREEN=11]="SCREEN",n[n.LAMP=12]="LAMP",n[n.PLANT=13]="PLANT",n[n.WALL_ART=14]="WALL_ART",n[n.GLOBAL_MESH=15]="GLOBAL_MESH",n[n.INVISIBLE_WALL_FACE=16]="INVISIBLE_WALL_FACE",n[n.CHAIR=17]="CHAIR",n[n.INNER_WALL_FACE=18]="INNER_WALL_FACE",n[n.OTHER_ROOM_FACE=19]="OTHER_ROOM_FACE",n[n.OPENING=20]="OPENING",n[n.UNRECOGNIZED=-1]="UNRECOGNIZED"})(lt||(lt={}));function cW(n){switch(n){case 0:case"UNKNOWN":return lt.UNKNOWN;case 1:case"FLOOR":return lt.FLOOR;case 2:case"CEILING":return lt.CEILING;case 3:case"WALL_FACE":return lt.WALL_FACE;case 4:case"TABLE":return lt.TABLE;case 5:case"COUCH":return lt.COUCH;case 6:case"DOOR_FRAME":return lt.DOOR_FRAME;case 7:case"WINDOW_FRAME":return lt.WINDOW_FRAME;case 8:case"OTHER":return lt.OTHER;case 9:case"STORAGE":return lt.STORAGE;case 10:case"BED":return lt.BED;case 11:case"SCREEN":return lt.SCREEN;case 12:case"LAMP":return lt.LAMP;case 13:case"PLANT":return lt.PLANT;case 14:case"WALL_ART":return lt.WALL_ART;case 15:case"GLOBAL_MESH":return lt.GLOBAL_MESH;case 16:case"INVISIBLE_WALL_FACE":return lt.INVISIBLE_WALL_FACE;case 17:case"CHAIR":return lt.CHAIR;case 18:case"INNER_WALL_FACE":return lt.INNER_WALL_FACE;case 19:case"OTHER_ROOM_FACE":return lt.OTHER_ROOM_FACE;case 20:case"OPENING":return lt.OPENING;case-1:case"UNRECOGNIZED":default:return lt.UNRECOGNIZED}}function Q_(n){switch(n){case lt.UNKNOWN:return"UNKNOWN";case lt.FLOOR:return"FLOOR";case lt.CEILING:return"CEILING";case lt.WALL_FACE:return"WALL_FACE";case lt.TABLE:return"TABLE";case lt.COUCH:return"COUCH";case lt.DOOR_FRAME:return"DOOR_FRAME";case lt.WINDOW_FRAME:return"WINDOW_FRAME";case lt.OTHER:return"OTHER";case lt.STORAGE:return"STORAGE";case lt.BED:return"BED";case lt.SCREEN:return"SCREEN";case lt.LAMP:return"LAMP";case lt.PLANT:return"PLANT";case lt.WALL_ART:return"WALL_ART";case lt.GLOBAL_MESH:return"GLOBAL_MESH";case lt.INVISIBLE_WALL_FACE:return"INVISIBLE_WALL_FACE";case lt.CHAIR:return"CHAIR";case lt.INNER_WALL_FACE:return"INNER_WALL_FACE";case lt.OTHER_ROOM_FACE:return"OTHER_ROOM_FACE";case lt.OPENING:return"OPENING";case lt.UNRECOGNIZED:default:return"UNRECOGNIZED"}}function TT(){return{floorUuid:"",ceilingUuid:"",wallUuids:[]}}const fu={encode(n,e=new qi){n.floorUuid!==""&&e.uint32(10).string(n.floorUuid),n.ceilingUuid!==""&&e.uint32(18).string(n.ceilingUuid);for(const t of n.wallUuids)e.uint32(26).string(t);return e},decode(n,e){const t=n instanceof on?n:new on(n);let i=e===void 0?t.len:t.pos+e;const r=TT();for(;t.pos<i;){const s=t.uint32();switch(s>>>3){case 1:{if(s!==10)break;r.floorUuid=t.string();continue}case 2:{if(s!==18)break;r.ceilingUuid=t.string();continue}case 3:{if(s!==26)break;r.wallUuids.push(t.string());continue}}if((s&7)===4||s===0)break;t.skip(s&7)}return r},fromJSON(n){return{floorUuid:_i(n.floorUuid)?globalThis.String(n.floorUuid):"",ceilingUuid:_i(n.ceilingUuid)?globalThis.String(n.ceilingUuid):"",wallUuids:globalThis.Array.isArray(n==null?void 0:n.wallUuids)?n.wallUuids.map(e=>globalThis.String(e)):[]}},toJSON(n){var e;const t={};return n.floorUuid!==""&&(t.floorUuid=n.floorUuid),n.ceilingUuid!==""&&(t.ceilingUuid=n.ceilingUuid),!((e=n.wallUuids)===null||e===void 0)&&e.length&&(t.wallUuids=n.wallUuids),t},create(n){return fu.fromPartial(n??{})},fromPartial(n){var e,t,i;const r=TT();return r.floorUuid=(e=n.floorUuid)!==null&&e!==void 0?e:"",r.ceilingUuid=(t=n.ceilingUuid)!==null&&t!==void 0?t:"",r.wallUuids=((i=n.wallUuids)===null||i===void 0?void 0:i.map(s=>s))||[],r}};function AT(){return{uuids:[]}}const du={encode(n,e=new qi){for(const t of n.uuids)e.uint32(10).string(t);return e},decode(n,e){const t=n instanceof on?n:new on(n);let i=e===void 0?t.len:t.pos+e;const r=AT();for(;t.pos<i;){const s=t.uint32();switch(s>>>3){case 1:{if(s!==10)break;r.uuids.push(t.string());continue}}if((s&7)===4||s===0)break;t.skip(s&7)}return r},fromJSON(n){return{uuids:globalThis.Array.isArray(n==null?void 0:n.uuids)?n.uuids.map(e=>globalThis.String(e)):[]}},toJSON(n){var e;const t={};return!((e=n.uuids)===null||e===void 0)&&e.length&&(t.uuids=n.uuids),t},create(n){return du.fromPartial(n??{})},fromPartial(n){var e;const t=AT();return t.uuids=((e=n.uuids)===null||e===void 0?void 0:e.map(i=>i))||[],t}};function bT(){return{vertices:new Uint8Array(0)}}const hu={encode(n,e=new qi){return n.vertices.length!==0&&e.uint32(10).bytes(n.vertices),e},decode(n,e){const t=n instanceof on?n:new on(n);let i=e===void 0?t.len:t.pos+e;const r=bT();for(;t.pos<i;){const s=t.uint32();switch(s>>>3){case 1:{if(s!==10)break;r.vertices=t.bytes();continue}}if((s&7)===4||s===0)break;t.skip(s&7)}return r},fromJSON(n){return{vertices:_i(n.vertices)?J_(n.vertices):new Uint8Array(0)}},toJSON(n){const e={};return n.vertices.length!==0&&(e.vertices=ex(n.vertices)),e},create(n){return hu.fromPartial(n??{})},fromPartial(n){var e;const t=bT();return t.vertices=(e=n.vertices)!==null&&e!==void 0?e:new Uint8Array(0),t}};function RT(){return{vertices:new Uint8Array(0),indices:new Uint8Array(0)}}const pu={encode(n,e=new qi){return n.vertices.length!==0&&e.uint32(10).bytes(n.vertices),n.indices.length!==0&&e.uint32(18).bytes(n.indices),e},decode(n,e){const t=n instanceof on?n:new on(n);let i=e===void 0?t.len:t.pos+e;const r=RT();for(;t.pos<i;){const s=t.uint32();switch(s>>>3){case 1:{if(s!==10)break;r.vertices=t.bytes();continue}case 2:{if(s!==18)break;r.indices=t.bytes();continue}}if((s&7)===4||s===0)break;t.skip(s&7)}return r},fromJSON(n){return{vertices:_i(n.vertices)?J_(n.vertices):new Uint8Array(0),indices:_i(n.indices)?J_(n.indices):new Uint8Array(0)}},toJSON(n){const e={};return n.vertices.length!==0&&(e.vertices=ex(n.vertices)),n.indices.length!==0&&(e.indices=ex(n.indices)),e},create(n){return pu.fromPartial(n??{})},fromPartial(n){var e,t;const i=RT();return i.vertices=(e=n.vertices)!==null&&e!==void 0?e:new Uint8Array(0),i.indices=(t=n.indices)!==null&&t!==void 0?t:new Uint8Array(0),i}};function CT(){return{classType:0}}const mu={encode(n,e=new qi){return n.classType!==0&&e.uint32(8).int32(n.classType),e},decode(n,e){const t=n instanceof on?n:new on(n);let i=e===void 0?t.len:t.pos+e;const r=CT();for(;t.pos<i;){const s=t.uint32();switch(s>>>3){case 1:{if(s!==8)break;r.classType=t.int32();continue}}if((s&7)===4||s===0)break;t.skip(s&7)}return r},fromJSON(n){return{classType:_i(n.classType)?oW(n.classType):0}},toJSON(n){const e={};return n.classType!==0&&(e.classType=lW(n.classType)),e},create(n){return mu.fromPartial(n??{})},fromPartial(n){var e;const t=CT();return t.classType=(e=n.classType)!==null&&e!==void 0?e:0,t}};function PT(){return{uuid:"",semanticLabel_META:void 0,locatable_META:void 0,boundary2D_META:void 0,bounded2D_META:void 0,bounded3D_META:void 0,roomLayout_META:void 0,spaceContainer_META:void 0,triangleMesh_META:void 0,dynamicObject_META:void 0}}const q4={encode(n,e=new qi){return n.uuid!==""&&e.uint32(10).string(n.uuid),n.semanticLabel_META!==void 0&&e.uint32(16).int32(n.semanticLabel_META),n.locatable_META!==void 0&&uu.encode(n.locatable_META,e.uint32(26).fork()).join(),n.boundary2D_META!==void 0&&hu.encode(n.boundary2D_META,e.uint32(34).fork()).join(),n.bounded2D_META!==void 0&&lu.encode(n.bounded2D_META,e.uint32(42).fork()).join(),n.bounded3D_META!==void 0&&cu.encode(n.bounded3D_META,e.uint32(50).fork()).join(),n.roomLayout_META!==void 0&&fu.encode(n.roomLayout_META,e.uint32(58).fork()).join(),n.spaceContainer_META!==void 0&&du.encode(n.spaceContainer_META,e.uint32(66).fork()).join(),n.triangleMesh_META!==void 0&&pu.encode(n.triangleMesh_META,e.uint32(74).fork()).join(),n.dynamicObject_META!==void 0&&mu.encode(n.dynamicObject_META,e.uint32(82).fork()).join(),e},decode(n,e){const t=n instanceof on?n:new on(n);let i=e===void 0?t.len:t.pos+e;const r=PT();for(;t.pos<i;){const s=t.uint32();switch(s>>>3){case 1:{if(s!==10)break;r.uuid=t.string();continue}case 2:{if(s!==16)break;r.semanticLabel_META=t.int32();continue}case 3:{if(s!==26)break;r.locatable_META=uu.decode(t,t.uint32());continue}case 4:{if(s!==34)break;r.boundary2D_META=hu.decode(t,t.uint32());continue}case 5:{if(s!==42)break;r.bounded2D_META=lu.decode(t,t.uint32());continue}case 6:{if(s!==50)break;r.bounded3D_META=cu.decode(t,t.uint32());continue}case 7:{if(s!==58)break;r.roomLayout_META=fu.decode(t,t.uint32());continue}case 8:{if(s!==66)break;r.spaceContainer_META=du.decode(t,t.uint32());continue}case 9:{if(s!==74)break;r.triangleMesh_META=pu.decode(t,t.uint32());continue}case 10:{if(s!==82)break;r.dynamicObject_META=mu.decode(t,t.uint32());continue}}if((s&7)===4||s===0)break;t.skip(s&7)}return r},fromJSON(n){return{uuid:_i(n.uuid)?globalThis.String(n.uuid):"",semanticLabel_META:_i(n.semanticLabel_META)?cW(n.semanticLabel_META):void 0,locatable_META:_i(n.locatable_META)?uu.fromJSON(n.locatable_META):void 0,boundary2D_META:_i(n.boundary2D_META)?hu.fromJSON(n.boundary2D_META):void 0,bounded2D_META:_i(n.bounded2D_META)?lu.fromJSON(n.bounded2D_META):void 0,bounded3D_META:_i(n.bounded3D_META)?cu.fromJSON(n.bounded3D_META):void 0,roomLayout_META:_i(n.roomLayout_META)?fu.fromJSON(n.roomLayout_META):void 0,spaceContainer_META:_i(n.spaceContainer_META)?du.fromJSON(n.spaceContainer_META):void 0,triangleMesh_META:_i(n.triangleMesh_META)?pu.fromJSON(n.triangleMesh_META):void 0,dynamicObject_META:_i(n.dynamicObject_META)?mu.fromJSON(n.dynamicObject_META):void 0}},toJSON(n){const e={};return n.uuid!==""&&(e.uuid=n.uuid),n.semanticLabel_META!==void 0&&(e.semanticLabel_META=Q_(n.semanticLabel_META)),n.locatable_META!==void 0&&(e.locatable_META=uu.toJSON(n.locatable_META)),n.boundary2D_META!==void 0&&(e.boundary2D_META=hu.toJSON(n.boundary2D_META)),n.bounded2D_META!==void 0&&(e.bounded2D_META=lu.toJSON(n.bounded2D_META)),n.bounded3D_META!==void 0&&(e.bounded3D_META=cu.toJSON(n.bounded3D_META)),n.roomLayout_META!==void 0&&(e.roomLayout_META=fu.toJSON(n.roomLayout_META)),n.spaceContainer_META!==void 0&&(e.spaceContainer_META=du.toJSON(n.spaceContainer_META)),n.triangleMesh_META!==void 0&&(e.triangleMesh_META=pu.toJSON(n.triangleMesh_META)),n.dynamicObject_META!==void 0&&(e.dynamicObject_META=mu.toJSON(n.dynamicObject_META)),e},create(n){return q4.fromPartial(n??{})},fromPartial(n){var e,t;const i=PT();return i.uuid=(e=n.uuid)!==null&&e!==void 0?e:"",i.semanticLabel_META=(t=n.semanticLabel_META)!==null&&t!==void 0?t:void 0,i.locatable_META=n.locatable_META!==void 0&&n.locatable_META!==null?uu.fromPartial(n.locatable_META):void 0,i.boundary2D_META=n.boundary2D_META!==void 0&&n.boundary2D_META!==null?hu.fromPartial(n.boundary2D_META):void 0,i.bounded2D_META=n.bounded2D_META!==void 0&&n.bounded2D_META!==null?lu.fromPartial(n.bounded2D_META):void 0,i.bounded3D_META=n.bounded3D_META!==void 0&&n.bounded3D_META!==null?cu.fromPartial(n.bounded3D_META):void 0,i.roomLayout_META=n.roomLayout_META!==void 0&&n.roomLayout_META!==null?fu.fromPartial(n.roomLayout_META):void 0,i.spaceContainer_META=n.spaceContainer_META!==void 0&&n.spaceContainer_META!==null?du.fromPartial(n.spaceContainer_META):void 0,i.triangleMesh_META=n.triangleMesh_META!==void 0&&n.triangleMesh_META!==null?pu.fromPartial(n.triangleMesh_META):void 0,i.dynamicObject_META=n.dynamicObject_META!==void 0&&n.dynamicObject_META!==null?mu.fromPartial(n.dynamicObject_META):void 0,i}};function J_(n){if(globalThis.Buffer)return Uint8Array.from(globalThis.Buffer.from(n,"base64"));{const e=globalThis.atob(n),t=new Uint8Array(e.length);for(let i=0;i<e.length;++i)t[i]=e.charCodeAt(i);return t}}function ex(n){if(globalThis.Buffer)return globalThis.Buffer.from(n).toString("base64");{const e=[];return n.forEach(t=>{e.push(globalThis.String.fromCharCode(t))}),globalThis.btoa(e.join(""))}}function _i(n){return n!=null}var cn;(function(n){n.Locatable="locatable",n.Bounded3D="bounded3D",n.Bounded2D="bounded2D",n.TriangleMesh="triangleMesh",n.SemanticLabel="semanticLabel"})(cn||(cn={}));class Zd extends EventTarget{constructor(e){super(),this._spatialEntity=e}}class uW extends Zd{constructor(e,t){super(e),this._offset=new Zt,this._extent=new Zt,this.type=cn.Bounded2D;const{offset:i,extent:r}=t;this._offset.set(i.x,i.y),this._extent.set(r.width,r.height),this.buildGeometry()}buildGeometry(){var e;const t=new Kd(this._extent.x,this._extent.y);t.translate(this._offset.x+this._extent.x/2,this._offset.y+this._extent.y/2,0),t.rotateX(Math.PI/2),(e=this._spatialEntity.geometry)===null||e===void 0||e.dispose(),this._spatialEntity.geometry=t}get offset(){return this._offset}get extent(){return this._extent}get initData(){return{offset:this.offset,extent:this.extent}}get pbData(){return{offset:{x:this._offset.x,y:this._offset.y},extent:{width:this._extent.x,height:this._extent.y}}}}class fW extends Zd{constructor(e,t){super(e),this._offset=new Ee,this._extent=new Ee,this.type=cn.Bounded3D;const{offset:i,extent:r}=t;this._offset.set(i.x,i.y,i.z),this._extent.set(r.width,r.height,r.depth),this.buildGeometry()}buildGeometry(){var e;const t=new ff(this._extent.x,this._extent.y,this._extent.z);t.translate(this._offset.x+this._extent.x/2,this._offset.y+this._extent.y/2,this._offset.z+this._extent.z/2),(e=this._spatialEntity.geometry)===null||e===void 0||e.dispose(),this._spatialEntity.geometry=t}get offset(){return this._offset}get extent(){return this._extent}get initData(){return{offset:this.offset,extent:this.extent}}get pbData(){return{offset:{x:this._offset.x,y:this._offset.y,z:this._offset.z},extent:{width:this._extent.x,height:this._extent.y,depth:this._extent.z}}}}class dW extends Zd{constructor(e,t){super(e),this.type=cn.Locatable,t.position&&this.position.copy(t.position),t.orientation&&this.orientation.copy(t.orientation)}get position(){return this._spatialEntity.position}get rotation(){return this._spatialEntity.rotation}get orientation(){return this._spatialEntity.quaternion}get initData(){return{position:{x:this.position.x,y:this.position.y,z:this.position.z},orientation:{x:this.orientation.x,y:this.orientation.y,z:this.orientation.z,w:this.orientation.w}}}get pbData(){return{position:{x:this._spatialEntity.position.x,y:this._spatialEntity.position.y,z:this._spatialEntity.position.z},orientation:{x:this._spatialEntity.quaternion.x,y:this._spatialEntity.quaternion.y,z:this._spatialEntity.quaternion.z,w:this._spatialEntity.quaternion.w}}}}function LT(n){return n.toLowerCase().replace(/_/g," ").trim()}class hW extends Zd{constructor(e,t){super(e),this._semanticLabel=t,this.type=cn.SemanticLabel,this._spatialEntity.name=LT(Q_(t))}get semanticLabel(){return this._semanticLabel}set semanticLabel(e){Object.values(lt).includes(e)?this._semanticLabel=e:this._semanticLabel=lt.UNRECOGNIZED,this._spatialEntity.name=LT(Q_(this._semanticLabel))}get initData(){return this._semanticLabel}get pbData(){return this._semanticLabel}}function IT(n){const e=new Float32Array(n.length*3);let t=0;for(const i of n)e[t++]=i.x,e[t++]=i.y,e[t++]=i.z;return e}class pW extends Zd{constructor(e,t){super(e),this._polygonCount=0,this._vertexCount=0,this._dimensions={x:0,y:0,z:0},this.type=cn.TriangleMesh;const{vertices:i,indices:r}=t,s=new Float32Array(i.buffer),l=new Uint32Array(r.buffer),c=[];for(let d=0;d<s.length/3;d++)c.push({x:s[3*d],y:s[3*d+1],z:s[3*d+2]});this._vertices=c,this._indices=[...l],this.buildGeometry();const u=e.material;u.polygonOffset=!0,u.polygonOffsetFactor=1,u.polygonOffsetUnits=.005,u.color.setHex(13948116),e.renderOrder=999}buildGeometry(){var e;const t=new Is,i=IT(this._vertices);t.setAttribute("position",new Pr(i,3)),t.setIndex(new Pr(new Uint16Array(this._indices),1)),(e=this._spatialEntity.geometry)===null||e===void 0||e.dispose(),this._spatialEntity.geometry=t,t.computeVertexNormals(),this._vertexCount=t.attributes.position.count,this._polygonCount=t.index?t.index.count/3:this._vertexCount/3,t.computeBoundingBox();const r=t.boundingBox;this._dimensions={x:r.max.x-r.min.x,y:r.max.y-r.min.y,z:r.max.z-r.min.z}}get vertexCount(){return this._vertexCount}get polygonCount(){return this._polygonCount}get dimensions(){return this._dimensions}get initData(){return{vertices:this._vertices,indices:this._indices}}get pbData(){const e=IT(this._vertices),t=new Uint32Array(this._indices);return{vertices:new Uint8Array(e.buffer),indices:new Uint8Array(t.buffer)}}}const gi=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];function mW(){const n=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(gi[n&255]+gi[n>>8&255]+gi[n>>16&255]+gi[n>>24&255]+"-"+gi[e&255]+gi[e>>8&255]+"-"+gi[e>>16&15|64]+gi[e>>24&255]+"-"+gi[t&63|128]+gi[t>>8&255]+"-"+gi[t>>16&255]+gi[t>>24&255]+gi[i&255]+gi[i>>8&255]+gi[i>>16&255]+gi[i>>24&255]).toLowerCase()}var Kr;(function(n){n.Plane="plane",n.Box="box",n.Mesh="mesh"})(Kr||(Kr={}));const gW={[lt.OTHER]:Ht.Other,[lt.TABLE]:Ht.Table,[lt.COUCH]:Ht.Couch,[lt.FLOOR]:Ht.Floor,[lt.CEILING]:Ht.Ceiling,[lt.WALL_FACE]:Ht.Wall,[lt.INVISIBLE_WALL_FACE]:Ht.Window,[lt.INNER_WALL_FACE]:Ht.Wall,[lt.DOOR_FRAME]:Ht.Door,[lt.WINDOW_FRAME]:Ht.Window,[lt.WALL_ART]:Ht.WallArt,[lt.STORAGE]:Ht.Shelf,[lt.BED]:Ht.Bed,[lt.LAMP]:Ht.Lamp,[lt.SCREEN]:Ht.Screen,[lt.PLANT]:Ht.Plant,[lt.GLOBAL_MESH]:Ht.GlobalMesh,[lt.CHAIR]:Ht.Couch,[lt.UNKNOWN]:Ht.Other,[lt.OTHER_ROOM_FACE]:Ht.Other,[lt.OPENING]:Ht.Other,[lt.UNRECOGNIZED]:Ht.Other};class Ym extends bs{constructor(e=mW()){super(void 0,new qG({color:16777215*Math.random(),flatShading:!0})),this.name="generic spatial entity",this.isSpatialEntity=!0,this._componentMap=new Map,this._spatialUUID=e}get spatialUUID(){return this._spatialUUID}updateMatrixWorld(e){super.updateMatrixWorld(e)}addComponent(e,t){let i=null;switch(e){case cn.Locatable:i=new dW(this,t);break;case cn.Bounded3D:i=new fW(this,t);break;case cn.Bounded2D:i=new uW(this,t);break;case cn.TriangleMesh:i=new pW(this,t);break;case cn.SemanticLabel:i=new hW(this,t);break}i&&this._componentMap.set(e,i)}getComponent(e){return this._componentMap.get(e)}duplicate(){const e=new Ym;return this._componentMap.forEach((t,i,r)=>{e.addComponent(t.type,t.initData)}),e}get nativeEntity(){if(!this._nativeEntity){const e=new Hl({x:this.position.x,y:this.position.y,z:this.position.z,w:1},{x:this.quaternion.x,y:this.quaternion.y,z:this.quaternion.z,w:this.quaternion.w}),t=gW[this.getComponent(cn.SemanticLabel).semanticLabel];if(this.entityType===Kr.Plane){const{offset:i,extent:r}=this.getComponent(cn.Bounded2D),s=[new DOMPointReadOnly(i.x,0,i.y),new DOMPointReadOnly(i.x+r.x,0,i.y),new DOMPointReadOnly(i.x+r.x,0,i.y+r.y),new DOMPointReadOnly(i.x,0,i.y+r.y),new DOMPointReadOnly(i.x,0,i.y)];this._nativeEntity=new h5(e,s,t)}else if(this.entityType===Kr.Box||this.entityType===Kr.Mesh){const i=this.geometry.getAttribute("position").array,r=new Uint32Array(this.geometry.index.array);this._nativeEntity=new c5(e,i,r,t)}}return this._nativeEntity}static fromPBJSON(e){const t=q4.fromJSON(e);if(t.locatable_META){const i=new Ym(t.uuid);return i.addComponent(cn.Locatable,t.locatable_META),t.semanticLabel_META&&i.addComponent(cn.SemanticLabel,t.semanticLabel_META),t.bounded2D_META?i.addComponent(cn.Bounded2D,t.bounded2D_META):t.bounded3D_META?i.addComponent(cn.Bounded3D,t.bounded3D_META):t.triangleMesh_META&&i.addComponent(cn.TriangleMesh,t.triangleMesh_META),i}}get entityType(){if(this.getComponent(cn.Bounded2D))return Kr.Plane;if(this.getComponent(cn.Bounded3D))return Kr.Box;if(this.getComponent(cn.TriangleMesh))return Kr.Mesh}static toPBJSON(e){var t,i,r,s,l;return{uuid:e.spatialUUID,locatable_META:(t=e.getComponent(cn.Locatable))===null||t===void 0?void 0:t.pbData,boundary2D_META:void 0,bounded2D_META:(i=e.getComponent(cn.Bounded2D))===null||i===void 0?void 0:i.pbData,bounded3D_META:(r=e.getComponent(cn.Bounded3D))===null||r===void 0?void 0:r.pbData,semanticLabel_META:(s=e.getComponent(cn.SemanticLabel))===null||s===void 0?void 0:s.pbData,roomLayout_META:void 0,spaceContainer_META:void 0,triangleMesh_META:(l=e.getComponent(cn.TriangleMesh))===null||l===void 0?void 0:l.pbData,dynamicObject_META:void 0}}}const vW={living_room:()=>qf(()=>import("./living_room-CVCYIB7e.js"),[]),meeting_room:()=>qf(()=>import("./meeting_room-COtFIOij.js"),[]),music_room:()=>qf(()=>import("./music_room-DAOruTFO.js"),[]),office_large:()=>qf(()=>import("./office_large-DoJFWIAy.js"),[]),office_small:()=>qf(()=>import("./office_small-BStFvcdU.js"),[])},DT="0.2.4",_W=new Ee(0,0,-1);class xW extends EventTarget{constructor(e){super(),this.xrDevice=e,this.trackedPlanes=new Set,this.trackedMeshes=new Set,this.version=DT,this.objectMap=new Map,this.planes=new ho,this.boxes=new ho,this.meshes=new ho,this.tempPosition=new Ee,this.tempQuaternion=new cf,this.tempDirection=new Ee,this.tempScale=new Ee,this.tempMatrix=new Ln,this.raycaster=new jG,this.hitTestTarget=new ho,this.hitTestMarker=new Ci,this.worldNormal=new Ee,this.normalMatrix=new Dt,this.scene=new WG,this.scene.background=new jt(4079166),this.camera=new Ar(50,window.innerWidth/window.innerHeight,.1,40),this.camera.position.set(0,1.6,5);const t=new YG(50,50);this.scene.add(t),this.scene.add(this.planes,this.boxes,this.meshes),this.planes.renderOrder=1,this.boxes.renderOrder=2,this.meshes.renderOrder=3,this.planes.visible=!1,this.boxes.visible=!1,this.renderer=new GG({antialias:!0,alpha:!0}),this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.setSize(window.innerWidth,window.innerHeight),this.renderer.domElement.style.position="fixed",this.renderer.domElement.style.top="50vh",this.renderer.domElement.style.left="50vw",this.renderer.domElement.style.transform="translate(-50%, -50%)",this.hitTestTarget.add(this.hitTestMarker),this.hitTestMarker.rotateX(Math.PI/2)}get environmentCanvas(){return this.renderer.domElement}get planesVisible(){return this.planes.visible}set planesVisible(e){this.planes.visible=e}get boundingBoxesVisible(){return this.boxes.visible}set boundingBoxesVisible(e){this.boxes.visible=e}get meshesVisible(){return this.meshes.visible}set meshesVisible(e){this.meshes.visible=e}render(){this.camera.position.copy(this.xrDevice.position),this.camera.quaternion.copy(this.xrDevice.quaternion);const e=this.xrDevice.fovy/Math.PI*180;let t=!1;this.camera.fov!==e&&(this.camera.fov=e,t=!0);const i=this.xrDevice.canvasDimensions;if(i){const r=this.renderer.domElement;(r.width!==i.width||r.height!==i.height)&&(this.camera.aspect=i.width/i.height,this.renderer.setSize(i.width,i.height),t=!0)}t&&this.camera.updateProjectionMatrix(),this.renderer.render(this.scene,this.camera)}deleteAll(){[...this.objectMap.values()].forEach(e=>{e.removeFromParent()}),this.objectMap.clear(),this.trackedMeshes.clear(),this.trackedPlanes.clear()}loadEnvironment(e){this.deleteAll(),e.spatialEntities.forEach(t=>{const i=Ym.fromPBJSON(t);if(i){switch(i.entityType){case Kr.Box:this.boxes.add(i),this.trackedMeshes.add(i.nativeEntity);break;case Kr.Plane:this.planes.add(i),this.trackedPlanes.add(i.nativeEntity);break;case Kr.Mesh:this.meshes.add(i),this.trackedMeshes.add(i.nativeEntity);break}const r=this.objectMap.get(t.uuid);r&&r.removeFromParent(),this.objectMap.set(t.uuid,i)}})}loadDefaultEnvironment(e){if(typeof __IS_UMD__<"u"&&__IS_UMD__){const t=`https://www.unpkg.com/@iwer/sem@${DT}/captures/${e}.json`;fetch(t).then(i=>{if(!i.ok)throw new Error(`Network response was not ok: ${i.statusText}`);return i.json()}).then(i=>{this.loadEnvironment(i)}).catch(i=>{console.error(`Error loading environment ${e} from CDN`,i)})}else{const t=vW[e];if(!t){console.error(`Requested environment ${e} does not exist`);return}t().then(i=>{const r=i.default;this.loadEnvironment(r)}).catch(i=>{console.error(`Error loading environment ${e} locally`,i)})}}computeHitTestResults(e){return this.tempMatrix.fromArray(e),this.tempMatrix.decompose(this.tempPosition,this.tempQuaternion,this.tempScale),this.tempDirection.copy(_W).applyQuaternion(this.tempQuaternion).normalize(),this.raycaster.set(this.tempPosition,this.tempDirection),this.raycaster.intersectObject(this.meshes,!0).map(r=>{var s;const l=r.point;if(this.hitTestTarget.position.copy(l),!((s=r.face)===null||s===void 0)&&s.normal){this.worldNormal.copy(r.face.normal);const c=r.object;this.worldNormal.applyMatrix3(this.normalMatrix.getNormalMatrix(c.matrixWorld)).normalize(),this.hitTestTarget.lookAt(this.tempPosition.addVectors(l,this.worldNormal))}else this.hitTestTarget.quaternion.set(0,0,0,1);return this.hitTestTarget.updateMatrixWorld(!0),this.hitTestMarker.matrixWorld.toArray()})}}const yW={metaQuest3:k5,metaQuest2:O5,metaQuestPro:F5,oculusQuest1:U5},NT=["office_small","meeting_room","living_room","music_room","office_large"],SW=["left","none","right"];function y$(n){var r,s,l;const e=typeof n=="string"?n:n.type??"metaQuest3",t=new P5(yW[e],typeof n=="string"?void 0:n);typeof n!="string"&&(j4(t,n.headset),OT(t.hands,n.hand),OT(t.controllers,n.controller),t.primaryInputMode=n.primaryInputMode??"controller"),t.ipd=typeof n=="string"?0:n.ipd??0,t.installRuntime(),t.installDevUI(AF);const i=typeof n=="string"?!0:n.syntheticEnvironment;return i===!1||(t.installSEM(xW),i===null)?t:typeof i=="string"&&NT.includes(i)?((r=t.sem)==null||r.loadDefaultEnvironment(i),t):i===!0||i===void 0?((s=t.sem)==null||s.loadDefaultEnvironment(NT[0]),t):typeof i=="object"?((l=t.sem)==null||l.loadEnvironment(i),t):(fetch(i).then(c=>c.json()).then(c=>{var u;return(u=t.sem)==null?void 0:u.loadEnvironment(c)}).catch(console.error),t)}const UT=new Rn,MW=new un;function OT(n,e){if(e!=null)for(const t of SW)j4(n[t],e[t])}function j4(n,e){n==null||e==null||(FT(n.position,e.position),FT(UT,e.rotation),kT(n.quaternion,MW.setFromEuler(UT)),kT(n.quaternion,e.quaternion))}function FT(n,e){if(e!=null){if(e instanceof Rn&&n instanceof Rn&&n.copy(e),Array.isArray(e)){n.x=e[0],n.y=e[1],n.z=e[2];return}n.x=e.x,n.y=e.y,n.z=e.z}}function kT(n,e){if(e!=null){if(Array.isArray(e)){n.x=e[0],n.y=e[1],n.z=e[2],n.w=e[3];return}n.x=e.x,n.y=e.y,n.z=e.z,n.w=e.w}}export{y$ as emulate};
